

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Oct 14 15:27:11 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,space=0,delta=2
    63                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    75                           	dabs	1,0x7E,2
    76     0000                     
    77                           ; Version 2.20
    78                           ; Generated 12/02/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F1936 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111     0008                     bsr             equ	8
   112     0005                     fsr0h           equ	5
   113     0004                     fsr0l           equ	4
   114     0007                     fsr1h           equ	7
   115     0006                     fsr1l           equ	6
   116     0000                     indf            equ	0
   117     0000                     indf0           equ	0
   118     0001                     indf1           equ	1
   119     000B                     intcon          equ	11
   120     0002                     pc              equ	2
   121     0002                     pcl             equ	2
   122     000A                     pclath          equ	10
   123     0003                     status          equ	3
   124     0009                     wreg            equ	9
   125     0000                     INDF0           equ	0	;# 
   126     0001                     INDF1           equ	1	;# 
   127     0002                     PCL             equ	2	;# 
   128     0003                     STATUS          equ	3	;# 
   129     0004                     FSR0L           equ	4	;# 
   130     0005                     FSR0H           equ	5	;# 
   131     0006                     FSR1L           equ	6	;# 
   132     0007                     FSR1H           equ	7	;# 
   133     0008                     BSR             equ	8	;# 
   134     0009                     WREG            equ	9	;# 
   135     000A                     PCLATH          equ	10	;# 
   136     000B                     INTCON          equ	11	;# 
   137     000C                     PORTA           equ	12	;# 
   138     000D                     PORTB           equ	13	;# 
   139     000E                     PORTC           equ	14	;# 
   140     0010                     PORTE           equ	16	;# 
   141     0011                     PIR1            equ	17	;# 
   142     0012                     PIR2            equ	18	;# 
   143     0013                     PIR3            equ	19	;# 
   144     0015                     TMR0            equ	21	;# 
   145     0016                     TMR1            equ	22	;# 
   146     0016                     TMR1L           equ	22	;# 
   147     0017                     TMR1H           equ	23	;# 
   148     0018                     T1CON           equ	24	;# 
   149     0019                     T1GCON          equ	25	;# 
   150     001A                     TMR2            equ	26	;# 
   151     001B                     PR2             equ	27	;# 
   152     001C                     T2CON           equ	28	;# 
   153     001E                     CPSCON0         equ	30	;# 
   154     001F                     CPSCON1         equ	31	;# 
   155     008C                     TRISA           equ	140	;# 
   156     008D                     TRISB           equ	141	;# 
   157     008E                     TRISC           equ	142	;# 
   158     0090                     TRISE           equ	144	;# 
   159     0091                     PIE1            equ	145	;# 
   160     0092                     PIE2            equ	146	;# 
   161     0093                     PIE3            equ	147	;# 
   162     0095                     OPTION_REG      equ	149	;# 
   163     0096                     PCON            equ	150	;# 
   164     0097                     WDTCON          equ	151	;# 
   165     0098                     OSCTUNE         equ	152	;# 
   166     0099                     OSCCON          equ	153	;# 
   167     009A                     OSCSTAT         equ	154	;# 
   168     009B                     ADRES           equ	155	;# 
   169     009B                     ADRESL          equ	155	;# 
   170     009C                     ADRESH          equ	156	;# 
   171     009D                     ADCON0          equ	157	;# 
   172     009E                     ADCON1          equ	158	;# 
   173     010C                     LATA            equ	268	;# 
   174     010D                     LATB            equ	269	;# 
   175     010E                     LATC            equ	270	;# 
   176     0110                     LATE            equ	272	;# 
   177     0111                     CM1CON0         equ	273	;# 
   178     0112                     CM1CON1         equ	274	;# 
   179     0113                     CM2CON0         equ	275	;# 
   180     0114                     CM2CON1         equ	276	;# 
   181     0115                     CMOUT           equ	277	;# 
   182     0116                     BORCON          equ	278	;# 
   183     0117                     FVRCON          equ	279	;# 
   184     0118                     DACCON0         equ	280	;# 
   185     0119                     DACCON1         equ	281	;# 
   186     011A                     SRCON0          equ	282	;# 
   187     011B                     SRCON1          equ	283	;# 
   188     011D                     APFCON          equ	285	;# 
   189     018C                     ANSELA          equ	396	;# 
   190     018D                     ANSELB          equ	397	;# 
   191     0191                     EEADR           equ	401	;# 
   192     0191                     EEADRL          equ	401	;# 
   193     0192                     EEADRH          equ	402	;# 
   194     0193                     EEDAT           equ	403	;# 
   195     0193                     EEDATL          equ	403	;# 
   196     0193                     EEDATA          equ	403	;# 
   197     0194                     EEDATH          equ	404	;# 
   198     0195                     EECON1          equ	405	;# 
   199     0196                     EECON2          equ	406	;# 
   200     0199                     RCREG           equ	409	;# 
   201     019A                     TXREG           equ	410	;# 
   202     019B                     SP1BRG          equ	411	;# 
   203     019B                     SP1BRGL         equ	411	;# 
   204     019B                     SPBRG           equ	411	;# 
   205     019B                     SPBRGL          equ	411	;# 
   206     019C                     SP1BRGH         equ	412	;# 
   207     019C                     SPBRGH          equ	412	;# 
   208     019D                     RCSTA           equ	413	;# 
   209     019E                     TXSTA           equ	414	;# 
   210     019F                     BAUDCON         equ	415	;# 
   211     020D                     WPUB            equ	525	;# 
   212     0210                     WPUE            equ	528	;# 
   213     0211                     SSPBUF          equ	529	;# 
   214     0212                     SSPADD          equ	530	;# 
   215     0213                     SSPMSK          equ	531	;# 
   216     0214                     SSPSTAT         equ	532	;# 
   217     0215                     SSPCON1         equ	533	;# 
   218     0215                     SSPCON          equ	533	;# 
   219     0216                     SSPCON2         equ	534	;# 
   220     0217                     SSPCON3         equ	535	;# 
   221     0291                     CCPR1           equ	657	;# 
   222     0291                     CCPR1L          equ	657	;# 
   223     0292                     CCPR1H          equ	658	;# 
   224     0293                     CCP1CON         equ	659	;# 
   225     0294                     PWM1CON         equ	660	;# 
   226     0295                     CCP1AS          equ	661	;# 
   227     0295                     ECCP1AS         equ	661	;# 
   228     0296                     PSTR1CON        equ	662	;# 
   229     0298                     CCPR2           equ	664	;# 
   230     0298                     CCPR2L          equ	664	;# 
   231     0299                     CCPR2H          equ	665	;# 
   232     029A                     CCP2CON         equ	666	;# 
   233     029B                     PWM2CON         equ	667	;# 
   234     029C                     CCP2AS          equ	668	;# 
   235     029C                     ECCP2AS         equ	668	;# 
   236     029D                     PSTR2CON        equ	669	;# 
   237     029E                     CCPTMRS0        equ	670	;# 
   238     029F                     CCPTMRS1        equ	671	;# 
   239     0311                     CCPR3           equ	785	;# 
   240     0311                     CCPR3L          equ	785	;# 
   241     0312                     CCPR3H          equ	786	;# 
   242     0313                     CCP3CON         equ	787	;# 
   243     0314                     PWM3CON         equ	788	;# 
   244     0315                     CCP3AS          equ	789	;# 
   245     0315                     ECCP3AS         equ	789	;# 
   246     0316                     PSTR3CON        equ	790	;# 
   247     0318                     CCPR4           equ	792	;# 
   248     0318                     CCPR4L          equ	792	;# 
   249     0319                     CCPR4H          equ	793	;# 
   250     031A                     CCP4CON         equ	794	;# 
   251     031C                     CCPR5           equ	796	;# 
   252     031C                     CCPR5L          equ	796	;# 
   253     031D                     CCPR5H          equ	797	;# 
   254     031E                     CCP5CON         equ	798	;# 
   255     0394                     IOCBP           equ	916	;# 
   256     0395                     IOCBN           equ	917	;# 
   257     0396                     IOCBF           equ	918	;# 
   258     0415                     TMR4            equ	1045	;# 
   259     0416                     PR4             equ	1046	;# 
   260     0417                     T4CON           equ	1047	;# 
   261     041C                     TMR6            equ	1052	;# 
   262     041D                     PR6             equ	1053	;# 
   263     041E                     T6CON           equ	1054	;# 
   264     0791                     LCDCON          equ	1937	;# 
   265     0792                     LCDPS           equ	1938	;# 
   266     0793                     LCDREF          equ	1939	;# 
   267     0794                     LCDCST          equ	1940	;# 
   268     0795                     LCDRL           equ	1941	;# 
   269     0798                     LCDSE0          equ	1944	;# 
   270     0799                     LCDSE1          equ	1945	;# 
   271     07A0                     LCDDATA0        equ	1952	;# 
   272     07A1                     LCDDATA1        equ	1953	;# 
   273     07A3                     LCDDATA3        equ	1955	;# 
   274     07A4                     LCDDATA4        equ	1956	;# 
   275     07A6                     LCDDATA6        equ	1958	;# 
   276     07A7                     LCDDATA7        equ	1959	;# 
   277     07A9                     LCDDATA9        equ	1961	;# 
   278     07AA                     LCDDATA10       equ	1962	;# 
   279     0FE4                     STATUS_SHAD     equ	4068	;# 
   280     0FE5                     WREG_SHAD       equ	4069	;# 
   281     0FE6                     BSR_SHAD        equ	4070	;# 
   282     0FE7                     PCLATH_SHAD     equ	4071	;# 
   283     0FE8                     FSR0L_SHAD      equ	4072	;# 
   284     0FE9                     FSR0H_SHAD      equ	4073	;# 
   285     0FEA                     FSR1L_SHAD      equ	4074	;# 
   286     0FEB                     FSR1H_SHAD      equ	4075	;# 
   287     0FED                     STKPTR          equ	4077	;# 
   288     0FEE                     TOSL            equ	4078	;# 
   289     0FEF                     TOSH            equ	4079	;# 
   290     0000                     INDF0           equ	0	;# 
   291     0001                     INDF1           equ	1	;# 
   292     0002                     PCL             equ	2	;# 
   293     0003                     STATUS          equ	3	;# 
   294     0004                     FSR0L           equ	4	;# 
   295     0005                     FSR0H           equ	5	;# 
   296     0006                     FSR1L           equ	6	;# 
   297     0007                     FSR1H           equ	7	;# 
   298     0008                     BSR             equ	8	;# 
   299     0009                     WREG            equ	9	;# 
   300     000A                     PCLATH          equ	10	;# 
   301     000B                     INTCON          equ	11	;# 
   302     000C                     PORTA           equ	12	;# 
   303     000D                     PORTB           equ	13	;# 
   304     000E                     PORTC           equ	14	;# 
   305     0010                     PORTE           equ	16	;# 
   306     0011                     PIR1            equ	17	;# 
   307     0012                     PIR2            equ	18	;# 
   308     0013                     PIR3            equ	19	;# 
   309     0015                     TMR0            equ	21	;# 
   310     0016                     TMR1            equ	22	;# 
   311     0016                     TMR1L           equ	22	;# 
   312     0017                     TMR1H           equ	23	;# 
   313     0018                     T1CON           equ	24	;# 
   314     0019                     T1GCON          equ	25	;# 
   315     001A                     TMR2            equ	26	;# 
   316     001B                     PR2             equ	27	;# 
   317     001C                     T2CON           equ	28	;# 
   318     001E                     CPSCON0         equ	30	;# 
   319     001F                     CPSCON1         equ	31	;# 
   320     008C                     TRISA           equ	140	;# 
   321     008D                     TRISB           equ	141	;# 
   322     008E                     TRISC           equ	142	;# 
   323     0090                     TRISE           equ	144	;# 
   324     0091                     PIE1            equ	145	;# 
   325     0092                     PIE2            equ	146	;# 
   326     0093                     PIE3            equ	147	;# 
   327     0095                     OPTION_REG      equ	149	;# 
   328     0096                     PCON            equ	150	;# 
   329     0097                     WDTCON          equ	151	;# 
   330     0098                     OSCTUNE         equ	152	;# 
   331     0099                     OSCCON          equ	153	;# 
   332     009A                     OSCSTAT         equ	154	;# 
   333     009B                     ADRES           equ	155	;# 
   334     009B                     ADRESL          equ	155	;# 
   335     009C                     ADRESH          equ	156	;# 
   336     009D                     ADCON0          equ	157	;# 
   337     009E                     ADCON1          equ	158	;# 
   338     010C                     LATA            equ	268	;# 
   339     010D                     LATB            equ	269	;# 
   340     010E                     LATC            equ	270	;# 
   341     0110                     LATE            equ	272	;# 
   342     0111                     CM1CON0         equ	273	;# 
   343     0112                     CM1CON1         equ	274	;# 
   344     0113                     CM2CON0         equ	275	;# 
   345     0114                     CM2CON1         equ	276	;# 
   346     0115                     CMOUT           equ	277	;# 
   347     0116                     BORCON          equ	278	;# 
   348     0117                     FVRCON          equ	279	;# 
   349     0118                     DACCON0         equ	280	;# 
   350     0119                     DACCON1         equ	281	;# 
   351     011A                     SRCON0          equ	282	;# 
   352     011B                     SRCON1          equ	283	;# 
   353     011D                     APFCON          equ	285	;# 
   354     018C                     ANSELA          equ	396	;# 
   355     018D                     ANSELB          equ	397	;# 
   356     0191                     EEADR           equ	401	;# 
   357     0191                     EEADRL          equ	401	;# 
   358     0192                     EEADRH          equ	402	;# 
   359     0193                     EEDAT           equ	403	;# 
   360     0193                     EEDATL          equ	403	;# 
   361     0193                     EEDATA          equ	403	;# 
   362     0194                     EEDATH          equ	404	;# 
   363     0195                     EECON1          equ	405	;# 
   364     0196                     EECON2          equ	406	;# 
   365     0199                     RCREG           equ	409	;# 
   366     019A                     TXREG           equ	410	;# 
   367     019B                     SP1BRG          equ	411	;# 
   368     019B                     SP1BRGL         equ	411	;# 
   369     019B                     SPBRG           equ	411	;# 
   370     019B                     SPBRGL          equ	411	;# 
   371     019C                     SP1BRGH         equ	412	;# 
   372     019C                     SPBRGH          equ	412	;# 
   373     019D                     RCSTA           equ	413	;# 
   374     019E                     TXSTA           equ	414	;# 
   375     019F                     BAUDCON         equ	415	;# 
   376     020D                     WPUB            equ	525	;# 
   377     0210                     WPUE            equ	528	;# 
   378     0211                     SSPBUF          equ	529	;# 
   379     0212                     SSPADD          equ	530	;# 
   380     0213                     SSPMSK          equ	531	;# 
   381     0214                     SSPSTAT         equ	532	;# 
   382     0215                     SSPCON1         equ	533	;# 
   383     0215                     SSPCON          equ	533	;# 
   384     0216                     SSPCON2         equ	534	;# 
   385     0217                     SSPCON3         equ	535	;# 
   386     0291                     CCPR1           equ	657	;# 
   387     0291                     CCPR1L          equ	657	;# 
   388     0292                     CCPR1H          equ	658	;# 
   389     0293                     CCP1CON         equ	659	;# 
   390     0294                     PWM1CON         equ	660	;# 
   391     0295                     CCP1AS          equ	661	;# 
   392     0295                     ECCP1AS         equ	661	;# 
   393     0296                     PSTR1CON        equ	662	;# 
   394     0298                     CCPR2           equ	664	;# 
   395     0298                     CCPR2L          equ	664	;# 
   396     0299                     CCPR2H          equ	665	;# 
   397     029A                     CCP2CON         equ	666	;# 
   398     029B                     PWM2CON         equ	667	;# 
   399     029C                     CCP2AS          equ	668	;# 
   400     029C                     ECCP2AS         equ	668	;# 
   401     029D                     PSTR2CON        equ	669	;# 
   402     029E                     CCPTMRS0        equ	670	;# 
   403     029F                     CCPTMRS1        equ	671	;# 
   404     0311                     CCPR3           equ	785	;# 
   405     0311                     CCPR3L          equ	785	;# 
   406     0312                     CCPR3H          equ	786	;# 
   407     0313                     CCP3CON         equ	787	;# 
   408     0314                     PWM3CON         equ	788	;# 
   409     0315                     CCP3AS          equ	789	;# 
   410     0315                     ECCP3AS         equ	789	;# 
   411     0316                     PSTR3CON        equ	790	;# 
   412     0318                     CCPR4           equ	792	;# 
   413     0318                     CCPR4L          equ	792	;# 
   414     0319                     CCPR4H          equ	793	;# 
   415     031A                     CCP4CON         equ	794	;# 
   416     031C                     CCPR5           equ	796	;# 
   417     031C                     CCPR5L          equ	796	;# 
   418     031D                     CCPR5H          equ	797	;# 
   419     031E                     CCP5CON         equ	798	;# 
   420     0394                     IOCBP           equ	916	;# 
   421     0395                     IOCBN           equ	917	;# 
   422     0396                     IOCBF           equ	918	;# 
   423     0415                     TMR4            equ	1045	;# 
   424     0416                     PR4             equ	1046	;# 
   425     0417                     T4CON           equ	1047	;# 
   426     041C                     TMR6            equ	1052	;# 
   427     041D                     PR6             equ	1053	;# 
   428     041E                     T6CON           equ	1054	;# 
   429     0791                     LCDCON          equ	1937	;# 
   430     0792                     LCDPS           equ	1938	;# 
   431     0793                     LCDREF          equ	1939	;# 
   432     0794                     LCDCST          equ	1940	;# 
   433     0795                     LCDRL           equ	1941	;# 
   434     0798                     LCDSE0          equ	1944	;# 
   435     0799                     LCDSE1          equ	1945	;# 
   436     07A0                     LCDDATA0        equ	1952	;# 
   437     07A1                     LCDDATA1        equ	1953	;# 
   438     07A3                     LCDDATA3        equ	1955	;# 
   439     07A4                     LCDDATA4        equ	1956	;# 
   440     07A6                     LCDDATA6        equ	1958	;# 
   441     07A7                     LCDDATA7        equ	1959	;# 
   442     07A9                     LCDDATA9        equ	1961	;# 
   443     07AA                     LCDDATA10       equ	1962	;# 
   444     0FE4                     STATUS_SHAD     equ	4068	;# 
   445     0FE5                     WREG_SHAD       equ	4069	;# 
   446     0FE6                     BSR_SHAD        equ	4070	;# 
   447     0FE7                     PCLATH_SHAD     equ	4071	;# 
   448     0FE8                     FSR0L_SHAD      equ	4072	;# 
   449     0FE9                     FSR0H_SHAD      equ	4073	;# 
   450     0FEA                     FSR1L_SHAD      equ	4074	;# 
   451     0FEB                     FSR1H_SHAD      equ	4075	;# 
   452     0FED                     STKPTR          equ	4077	;# 
   453     0FEE                     TOSL            equ	4078	;# 
   454     0FEF                     TOSH            equ	4079	;# 
   455     0000                     INDF0           equ	0	;# 
   456     0001                     INDF1           equ	1	;# 
   457     0002                     PCL             equ	2	;# 
   458     0003                     STATUS          equ	3	;# 
   459     0004                     FSR0L           equ	4	;# 
   460     0005                     FSR0H           equ	5	;# 
   461     0006                     FSR1L           equ	6	;# 
   462     0007                     FSR1H           equ	7	;# 
   463     0008                     BSR             equ	8	;# 
   464     0009                     WREG            equ	9	;# 
   465     000A                     PCLATH          equ	10	;# 
   466     000B                     INTCON          equ	11	;# 
   467     000C                     PORTA           equ	12	;# 
   468     000D                     PORTB           equ	13	;# 
   469     000E                     PORTC           equ	14	;# 
   470     0010                     PORTE           equ	16	;# 
   471     0011                     PIR1            equ	17	;# 
   472     0012                     PIR2            equ	18	;# 
   473     0013                     PIR3            equ	19	;# 
   474     0015                     TMR0            equ	21	;# 
   475     0016                     TMR1            equ	22	;# 
   476     0016                     TMR1L           equ	22	;# 
   477     0017                     TMR1H           equ	23	;# 
   478     0018                     T1CON           equ	24	;# 
   479     0019                     T1GCON          equ	25	;# 
   480     001A                     TMR2            equ	26	;# 
   481     001B                     PR2             equ	27	;# 
   482     001C                     T2CON           equ	28	;# 
   483     001E                     CPSCON0         equ	30	;# 
   484     001F                     CPSCON1         equ	31	;# 
   485     008C                     TRISA           equ	140	;# 
   486     008D                     TRISB           equ	141	;# 
   487     008E                     TRISC           equ	142	;# 
   488     0090                     TRISE           equ	144	;# 
   489     0091                     PIE1            equ	145	;# 
   490     0092                     PIE2            equ	146	;# 
   491     0093                     PIE3            equ	147	;# 
   492     0095                     OPTION_REG      equ	149	;# 
   493     0096                     PCON            equ	150	;# 
   494     0097                     WDTCON          equ	151	;# 
   495     0098                     OSCTUNE         equ	152	;# 
   496     0099                     OSCCON          equ	153	;# 
   497     009A                     OSCSTAT         equ	154	;# 
   498     009B                     ADRES           equ	155	;# 
   499     009B                     ADRESL          equ	155	;# 
   500     009C                     ADRESH          equ	156	;# 
   501     009D                     ADCON0          equ	157	;# 
   502     009E                     ADCON1          equ	158	;# 
   503     010C                     LATA            equ	268	;# 
   504     010D                     LATB            equ	269	;# 
   505     010E                     LATC            equ	270	;# 
   506     0110                     LATE            equ	272	;# 
   507     0111                     CM1CON0         equ	273	;# 
   508     0112                     CM1CON1         equ	274	;# 
   509     0113                     CM2CON0         equ	275	;# 
   510     0114                     CM2CON1         equ	276	;# 
   511     0115                     CMOUT           equ	277	;# 
   512     0116                     BORCON          equ	278	;# 
   513     0117                     FVRCON          equ	279	;# 
   514     0118                     DACCON0         equ	280	;# 
   515     0119                     DACCON1         equ	281	;# 
   516     011A                     SRCON0          equ	282	;# 
   517     011B                     SRCON1          equ	283	;# 
   518     011D                     APFCON          equ	285	;# 
   519     018C                     ANSELA          equ	396	;# 
   520     018D                     ANSELB          equ	397	;# 
   521     0191                     EEADR           equ	401	;# 
   522     0191                     EEADRL          equ	401	;# 
   523     0192                     EEADRH          equ	402	;# 
   524     0193                     EEDAT           equ	403	;# 
   525     0193                     EEDATL          equ	403	;# 
   526     0193                     EEDATA          equ	403	;# 
   527     0194                     EEDATH          equ	404	;# 
   528     0195                     EECON1          equ	405	;# 
   529     0196                     EECON2          equ	406	;# 
   530     0199                     RCREG           equ	409	;# 
   531     019A                     TXREG           equ	410	;# 
   532     019B                     SP1BRG          equ	411	;# 
   533     019B                     SP1BRGL         equ	411	;# 
   534     019B                     SPBRG           equ	411	;# 
   535     019B                     SPBRGL          equ	411	;# 
   536     019C                     SP1BRGH         equ	412	;# 
   537     019C                     SPBRGH          equ	412	;# 
   538     019D                     RCSTA           equ	413	;# 
   539     019E                     TXSTA           equ	414	;# 
   540     019F                     BAUDCON         equ	415	;# 
   541     020D                     WPUB            equ	525	;# 
   542     0210                     WPUE            equ	528	;# 
   543     0211                     SSPBUF          equ	529	;# 
   544     0212                     SSPADD          equ	530	;# 
   545     0213                     SSPMSK          equ	531	;# 
   546     0214                     SSPSTAT         equ	532	;# 
   547     0215                     SSPCON1         equ	533	;# 
   548     0215                     SSPCON          equ	533	;# 
   549     0216                     SSPCON2         equ	534	;# 
   550     0217                     SSPCON3         equ	535	;# 
   551     0291                     CCPR1           equ	657	;# 
   552     0291                     CCPR1L          equ	657	;# 
   553     0292                     CCPR1H          equ	658	;# 
   554     0293                     CCP1CON         equ	659	;# 
   555     0294                     PWM1CON         equ	660	;# 
   556     0295                     CCP1AS          equ	661	;# 
   557     0295                     ECCP1AS         equ	661	;# 
   558     0296                     PSTR1CON        equ	662	;# 
   559     0298                     CCPR2           equ	664	;# 
   560     0298                     CCPR2L          equ	664	;# 
   561     0299                     CCPR2H          equ	665	;# 
   562     029A                     CCP2CON         equ	666	;# 
   563     029B                     PWM2CON         equ	667	;# 
   564     029C                     CCP2AS          equ	668	;# 
   565     029C                     ECCP2AS         equ	668	;# 
   566     029D                     PSTR2CON        equ	669	;# 
   567     029E                     CCPTMRS0        equ	670	;# 
   568     029F                     CCPTMRS1        equ	671	;# 
   569     0311                     CCPR3           equ	785	;# 
   570     0311                     CCPR3L          equ	785	;# 
   571     0312                     CCPR3H          equ	786	;# 
   572     0313                     CCP3CON         equ	787	;# 
   573     0314                     PWM3CON         equ	788	;# 
   574     0315                     CCP3AS          equ	789	;# 
   575     0315                     ECCP3AS         equ	789	;# 
   576     0316                     PSTR3CON        equ	790	;# 
   577     0318                     CCPR4           equ	792	;# 
   578     0318                     CCPR4L          equ	792	;# 
   579     0319                     CCPR4H          equ	793	;# 
   580     031A                     CCP4CON         equ	794	;# 
   581     031C                     CCPR5           equ	796	;# 
   582     031C                     CCPR5L          equ	796	;# 
   583     031D                     CCPR5H          equ	797	;# 
   584     031E                     CCP5CON         equ	798	;# 
   585     0394                     IOCBP           equ	916	;# 
   586     0395                     IOCBN           equ	917	;# 
   587     0396                     IOCBF           equ	918	;# 
   588     0415                     TMR4            equ	1045	;# 
   589     0416                     PR4             equ	1046	;# 
   590     0417                     T4CON           equ	1047	;# 
   591     041C                     TMR6            equ	1052	;# 
   592     041D                     PR6             equ	1053	;# 
   593     041E                     T6CON           equ	1054	;# 
   594     0791                     LCDCON          equ	1937	;# 
   595     0792                     LCDPS           equ	1938	;# 
   596     0793                     LCDREF          equ	1939	;# 
   597     0794                     LCDCST          equ	1940	;# 
   598     0795                     LCDRL           equ	1941	;# 
   599     0798                     LCDSE0          equ	1944	;# 
   600     0799                     LCDSE1          equ	1945	;# 
   601     07A0                     LCDDATA0        equ	1952	;# 
   602     07A1                     LCDDATA1        equ	1953	;# 
   603     07A3                     LCDDATA3        equ	1955	;# 
   604     07A4                     LCDDATA4        equ	1956	;# 
   605     07A6                     LCDDATA6        equ	1958	;# 
   606     07A7                     LCDDATA7        equ	1959	;# 
   607     07A9                     LCDDATA9        equ	1961	;# 
   608     07AA                     LCDDATA10       equ	1962	;# 
   609     0FE4                     STATUS_SHAD     equ	4068	;# 
   610     0FE5                     WREG_SHAD       equ	4069	;# 
   611     0FE6                     BSR_SHAD        equ	4070	;# 
   612     0FE7                     PCLATH_SHAD     equ	4071	;# 
   613     0FE8                     FSR0L_SHAD      equ	4072	;# 
   614     0FE9                     FSR0H_SHAD      equ	4073	;# 
   615     0FEA                     FSR1L_SHAD      equ	4074	;# 
   616     0FEB                     FSR1H_SHAD      equ	4075	;# 
   617     0FED                     STKPTR          equ	4077	;# 
   618     0FEE                     TOSL            equ	4078	;# 
   619     0FEF                     TOSH            equ	4079	;# 
   620     0000                     INDF0           equ	0	;# 
   621     0001                     INDF1           equ	1	;# 
   622     0002                     PCL             equ	2	;# 
   623     0003                     STATUS          equ	3	;# 
   624     0004                     FSR0L           equ	4	;# 
   625     0005                     FSR0H           equ	5	;# 
   626     0006                     FSR1L           equ	6	;# 
   627     0007                     FSR1H           equ	7	;# 
   628     0008                     BSR             equ	8	;# 
   629     0009                     WREG            equ	9	;# 
   630     000A                     PCLATH          equ	10	;# 
   631     000B                     INTCON          equ	11	;# 
   632     000C                     PORTA           equ	12	;# 
   633     000D                     PORTB           equ	13	;# 
   634     000E                     PORTC           equ	14	;# 
   635     0010                     PORTE           equ	16	;# 
   636     0011                     PIR1            equ	17	;# 
   637     0012                     PIR2            equ	18	;# 
   638     0013                     PIR3            equ	19	;# 
   639     0015                     TMR0            equ	21	;# 
   640     0016                     TMR1            equ	22	;# 
   641     0016                     TMR1L           equ	22	;# 
   642     0017                     TMR1H           equ	23	;# 
   643     0018                     T1CON           equ	24	;# 
   644     0019                     T1GCON          equ	25	;# 
   645     001A                     TMR2            equ	26	;# 
   646     001B                     PR2             equ	27	;# 
   647     001C                     T2CON           equ	28	;# 
   648     001E                     CPSCON0         equ	30	;# 
   649     001F                     CPSCON1         equ	31	;# 
   650     008C                     TRISA           equ	140	;# 
   651     008D                     TRISB           equ	141	;# 
   652     008E                     TRISC           equ	142	;# 
   653     0090                     TRISE           equ	144	;# 
   654     0091                     PIE1            equ	145	;# 
   655     0092                     PIE2            equ	146	;# 
   656     0093                     PIE3            equ	147	;# 
   657     0095                     OPTION_REG      equ	149	;# 
   658     0096                     PCON            equ	150	;# 
   659     0097                     WDTCON          equ	151	;# 
   660     0098                     OSCTUNE         equ	152	;# 
   661     0099                     OSCCON          equ	153	;# 
   662     009A                     OSCSTAT         equ	154	;# 
   663     009B                     ADRES           equ	155	;# 
   664     009B                     ADRESL          equ	155	;# 
   665     009C                     ADRESH          equ	156	;# 
   666     009D                     ADCON0          equ	157	;# 
   667     009E                     ADCON1          equ	158	;# 
   668     010C                     LATA            equ	268	;# 
   669     010D                     LATB            equ	269	;# 
   670     010E                     LATC            equ	270	;# 
   671     0110                     LATE            equ	272	;# 
   672     0111                     CM1CON0         equ	273	;# 
   673     0112                     CM1CON1         equ	274	;# 
   674     0113                     CM2CON0         equ	275	;# 
   675     0114                     CM2CON1         equ	276	;# 
   676     0115                     CMOUT           equ	277	;# 
   677     0116                     BORCON          equ	278	;# 
   678     0117                     FVRCON          equ	279	;# 
   679     0118                     DACCON0         equ	280	;# 
   680     0119                     DACCON1         equ	281	;# 
   681     011A                     SRCON0          equ	282	;# 
   682     011B                     SRCON1          equ	283	;# 
   683     011D                     APFCON          equ	285	;# 
   684     018C                     ANSELA          equ	396	;# 
   685     018D                     ANSELB          equ	397	;# 
   686     0191                     EEADR           equ	401	;# 
   687     0191                     EEADRL          equ	401	;# 
   688     0192                     EEADRH          equ	402	;# 
   689     0193                     EEDAT           equ	403	;# 
   690     0193                     EEDATL          equ	403	;# 
   691     0193                     EEDATA          equ	403	;# 
   692     0194                     EEDATH          equ	404	;# 
   693     0195                     EECON1          equ	405	;# 
   694     0196                     EECON2          equ	406	;# 
   695     0199                     RCREG           equ	409	;# 
   696     019A                     TXREG           equ	410	;# 
   697     019B                     SP1BRG          equ	411	;# 
   698     019B                     SP1BRGL         equ	411	;# 
   699     019B                     SPBRG           equ	411	;# 
   700     019B                     SPBRGL          equ	411	;# 
   701     019C                     SP1BRGH         equ	412	;# 
   702     019C                     SPBRGH          equ	412	;# 
   703     019D                     RCSTA           equ	413	;# 
   704     019E                     TXSTA           equ	414	;# 
   705     019F                     BAUDCON         equ	415	;# 
   706     020D                     WPUB            equ	525	;# 
   707     0210                     WPUE            equ	528	;# 
   708     0211                     SSPBUF          equ	529	;# 
   709     0212                     SSPADD          equ	530	;# 
   710     0213                     SSPMSK          equ	531	;# 
   711     0214                     SSPSTAT         equ	532	;# 
   712     0215                     SSPCON1         equ	533	;# 
   713     0215                     SSPCON          equ	533	;# 
   714     0216                     SSPCON2         equ	534	;# 
   715     0217                     SSPCON3         equ	535	;# 
   716     0291                     CCPR1           equ	657	;# 
   717     0291                     CCPR1L          equ	657	;# 
   718     0292                     CCPR1H          equ	658	;# 
   719     0293                     CCP1CON         equ	659	;# 
   720     0294                     PWM1CON         equ	660	;# 
   721     0295                     CCP1AS          equ	661	;# 
   722     0295                     ECCP1AS         equ	661	;# 
   723     0296                     PSTR1CON        equ	662	;# 
   724     0298                     CCPR2           equ	664	;# 
   725     0298                     CCPR2L          equ	664	;# 
   726     0299                     CCPR2H          equ	665	;# 
   727     029A                     CCP2CON         equ	666	;# 
   728     029B                     PWM2CON         equ	667	;# 
   729     029C                     CCP2AS          equ	668	;# 
   730     029C                     ECCP2AS         equ	668	;# 
   731     029D                     PSTR2CON        equ	669	;# 
   732     029E                     CCPTMRS0        equ	670	;# 
   733     029F                     CCPTMRS1        equ	671	;# 
   734     0311                     CCPR3           equ	785	;# 
   735     0311                     CCPR3L          equ	785	;# 
   736     0312                     CCPR3H          equ	786	;# 
   737     0313                     CCP3CON         equ	787	;# 
   738     0314                     PWM3CON         equ	788	;# 
   739     0315                     CCP3AS          equ	789	;# 
   740     0315                     ECCP3AS         equ	789	;# 
   741     0316                     PSTR3CON        equ	790	;# 
   742     0318                     CCPR4           equ	792	;# 
   743     0318                     CCPR4L          equ	792	;# 
   744     0319                     CCPR4H          equ	793	;# 
   745     031A                     CCP4CON         equ	794	;# 
   746     031C                     CCPR5           equ	796	;# 
   747     031C                     CCPR5L          equ	796	;# 
   748     031D                     CCPR5H          equ	797	;# 
   749     031E                     CCP5CON         equ	798	;# 
   750     0394                     IOCBP           equ	916	;# 
   751     0395                     IOCBN           equ	917	;# 
   752     0396                     IOCBF           equ	918	;# 
   753     0415                     TMR4            equ	1045	;# 
   754     0416                     PR4             equ	1046	;# 
   755     0417                     T4CON           equ	1047	;# 
   756     041C                     TMR6            equ	1052	;# 
   757     041D                     PR6             equ	1053	;# 
   758     041E                     T6CON           equ	1054	;# 
   759     0791                     LCDCON          equ	1937	;# 
   760     0792                     LCDPS           equ	1938	;# 
   761     0793                     LCDREF          equ	1939	;# 
   762     0794                     LCDCST          equ	1940	;# 
   763     0795                     LCDRL           equ	1941	;# 
   764     0798                     LCDSE0          equ	1944	;# 
   765     0799                     LCDSE1          equ	1945	;# 
   766     07A0                     LCDDATA0        equ	1952	;# 
   767     07A1                     LCDDATA1        equ	1953	;# 
   768     07A3                     LCDDATA3        equ	1955	;# 
   769     07A4                     LCDDATA4        equ	1956	;# 
   770     07A6                     LCDDATA6        equ	1958	;# 
   771     07A7                     LCDDATA7        equ	1959	;# 
   772     07A9                     LCDDATA9        equ	1961	;# 
   773     07AA                     LCDDATA10       equ	1962	;# 
   774     0FE4                     STATUS_SHAD     equ	4068	;# 
   775     0FE5                     WREG_SHAD       equ	4069	;# 
   776     0FE6                     BSR_SHAD        equ	4070	;# 
   777     0FE7                     PCLATH_SHAD     equ	4071	;# 
   778     0FE8                     FSR0L_SHAD      equ	4072	;# 
   779     0FE9                     FSR0H_SHAD      equ	4073	;# 
   780     0FEA                     FSR1L_SHAD      equ	4074	;# 
   781     0FEB                     FSR1H_SHAD      equ	4075	;# 
   782     0FED                     STKPTR          equ	4077	;# 
   783     0FEE                     TOSL            equ	4078	;# 
   784     0FEF                     TOSH            equ	4079	;# 
   785     0000                     INDF0           equ	0	;# 
   786     0001                     INDF1           equ	1	;# 
   787     0002                     PCL             equ	2	;# 
   788     0003                     STATUS          equ	3	;# 
   789     0004                     FSR0L           equ	4	;# 
   790     0005                     FSR0H           equ	5	;# 
   791     0006                     FSR1L           equ	6	;# 
   792     0007                     FSR1H           equ	7	;# 
   793     0008                     BSR             equ	8	;# 
   794     0009                     WREG            equ	9	;# 
   795     000A                     PCLATH          equ	10	;# 
   796     000B                     INTCON          equ	11	;# 
   797     000C                     PORTA           equ	12	;# 
   798     000D                     PORTB           equ	13	;# 
   799     000E                     PORTC           equ	14	;# 
   800     0010                     PORTE           equ	16	;# 
   801     0011                     PIR1            equ	17	;# 
   802     0012                     PIR2            equ	18	;# 
   803     0013                     PIR3            equ	19	;# 
   804     0015                     TMR0            equ	21	;# 
   805     0016                     TMR1            equ	22	;# 
   806     0016                     TMR1L           equ	22	;# 
   807     0017                     TMR1H           equ	23	;# 
   808     0018                     T1CON           equ	24	;# 
   809     0019                     T1GCON          equ	25	;# 
   810     001A                     TMR2            equ	26	;# 
   811     001B                     PR2             equ	27	;# 
   812     001C                     T2CON           equ	28	;# 
   813     001E                     CPSCON0         equ	30	;# 
   814     001F                     CPSCON1         equ	31	;# 
   815     008C                     TRISA           equ	140	;# 
   816     008D                     TRISB           equ	141	;# 
   817     008E                     TRISC           equ	142	;# 
   818     0090                     TRISE           equ	144	;# 
   819     0091                     PIE1            equ	145	;# 
   820     0092                     PIE2            equ	146	;# 
   821     0093                     PIE3            equ	147	;# 
   822     0095                     OPTION_REG      equ	149	;# 
   823     0096                     PCON            equ	150	;# 
   824     0097                     WDTCON          equ	151	;# 
   825     0098                     OSCTUNE         equ	152	;# 
   826     0099                     OSCCON          equ	153	;# 
   827     009A                     OSCSTAT         equ	154	;# 
   828     009B                     ADRES           equ	155	;# 
   829     009B                     ADRESL          equ	155	;# 
   830     009C                     ADRESH          equ	156	;# 
   831     009D                     ADCON0          equ	157	;# 
   832     009E                     ADCON1          equ	158	;# 
   833     010C                     LATA            equ	268	;# 
   834     010D                     LATB            equ	269	;# 
   835     010E                     LATC            equ	270	;# 
   836     0110                     LATE            equ	272	;# 
   837     0111                     CM1CON0         equ	273	;# 
   838     0112                     CM1CON1         equ	274	;# 
   839     0113                     CM2CON0         equ	275	;# 
   840     0114                     CM2CON1         equ	276	;# 
   841     0115                     CMOUT           equ	277	;# 
   842     0116                     BORCON          equ	278	;# 
   843     0117                     FVRCON          equ	279	;# 
   844     0118                     DACCON0         equ	280	;# 
   845     0119                     DACCON1         equ	281	;# 
   846     011A                     SRCON0          equ	282	;# 
   847     011B                     SRCON1          equ	283	;# 
   848     011D                     APFCON          equ	285	;# 
   849     018C                     ANSELA          equ	396	;# 
   850     018D                     ANSELB          equ	397	;# 
   851     0191                     EEADR           equ	401	;# 
   852     0191                     EEADRL          equ	401	;# 
   853     0192                     EEADRH          equ	402	;# 
   854     0193                     EEDAT           equ	403	;# 
   855     0193                     EEDATL          equ	403	;# 
   856     0193                     EEDATA          equ	403	;# 
   857     0194                     EEDATH          equ	404	;# 
   858     0195                     EECON1          equ	405	;# 
   859     0196                     EECON2          equ	406	;# 
   860     0199                     RCREG           equ	409	;# 
   861     019A                     TXREG           equ	410	;# 
   862     019B                     SP1BRG          equ	411	;# 
   863     019B                     SP1BRGL         equ	411	;# 
   864     019B                     SPBRG           equ	411	;# 
   865     019B                     SPBRGL          equ	411	;# 
   866     019C                     SP1BRGH         equ	412	;# 
   867     019C                     SPBRGH          equ	412	;# 
   868     019D                     RCSTA           equ	413	;# 
   869     019E                     TXSTA           equ	414	;# 
   870     019F                     BAUDCON         equ	415	;# 
   871     020D                     WPUB            equ	525	;# 
   872     0210                     WPUE            equ	528	;# 
   873     0211                     SSPBUF          equ	529	;# 
   874     0212                     SSPADD          equ	530	;# 
   875     0213                     SSPMSK          equ	531	;# 
   876     0214                     SSPSTAT         equ	532	;# 
   877     0215                     SSPCON1         equ	533	;# 
   878     0215                     SSPCON          equ	533	;# 
   879     0216                     SSPCON2         equ	534	;# 
   880     0217                     SSPCON3         equ	535	;# 
   881     0291                     CCPR1           equ	657	;# 
   882     0291                     CCPR1L          equ	657	;# 
   883     0292                     CCPR1H          equ	658	;# 
   884     0293                     CCP1CON         equ	659	;# 
   885     0294                     PWM1CON         equ	660	;# 
   886     0295                     CCP1AS          equ	661	;# 
   887     0295                     ECCP1AS         equ	661	;# 
   888     0296                     PSTR1CON        equ	662	;# 
   889     0298                     CCPR2           equ	664	;# 
   890     0298                     CCPR2L          equ	664	;# 
   891     0299                     CCPR2H          equ	665	;# 
   892     029A                     CCP2CON         equ	666	;# 
   893     029B                     PWM2CON         equ	667	;# 
   894     029C                     CCP2AS          equ	668	;# 
   895     029C                     ECCP2AS         equ	668	;# 
   896     029D                     PSTR2CON        equ	669	;# 
   897     029E                     CCPTMRS0        equ	670	;# 
   898     029F                     CCPTMRS1        equ	671	;# 
   899     0311                     CCPR3           equ	785	;# 
   900     0311                     CCPR3L          equ	785	;# 
   901     0312                     CCPR3H          equ	786	;# 
   902     0313                     CCP3CON         equ	787	;# 
   903     0314                     PWM3CON         equ	788	;# 
   904     0315                     CCP3AS          equ	789	;# 
   905     0315                     ECCP3AS         equ	789	;# 
   906     0316                     PSTR3CON        equ	790	;# 
   907     0318                     CCPR4           equ	792	;# 
   908     0318                     CCPR4L          equ	792	;# 
   909     0319                     CCPR4H          equ	793	;# 
   910     031A                     CCP4CON         equ	794	;# 
   911     031C                     CCPR5           equ	796	;# 
   912     031C                     CCPR5L          equ	796	;# 
   913     031D                     CCPR5H          equ	797	;# 
   914     031E                     CCP5CON         equ	798	;# 
   915     0394                     IOCBP           equ	916	;# 
   916     0395                     IOCBN           equ	917	;# 
   917     0396                     IOCBF           equ	918	;# 
   918     0415                     TMR4            equ	1045	;# 
   919     0416                     PR4             equ	1046	;# 
   920     0417                     T4CON           equ	1047	;# 
   921     041C                     TMR6            equ	1052	;# 
   922     041D                     PR6             equ	1053	;# 
   923     041E                     T6CON           equ	1054	;# 
   924     0791                     LCDCON          equ	1937	;# 
   925     0792                     LCDPS           equ	1938	;# 
   926     0793                     LCDREF          equ	1939	;# 
   927     0794                     LCDCST          equ	1940	;# 
   928     0795                     LCDRL           equ	1941	;# 
   929     0798                     LCDSE0          equ	1944	;# 
   930     0799                     LCDSE1          equ	1945	;# 
   931     07A0                     LCDDATA0        equ	1952	;# 
   932     07A1                     LCDDATA1        equ	1953	;# 
   933     07A3                     LCDDATA3        equ	1955	;# 
   934     07A4                     LCDDATA4        equ	1956	;# 
   935     07A6                     LCDDATA6        equ	1958	;# 
   936     07A7                     LCDDATA7        equ	1959	;# 
   937     07A9                     LCDDATA9        equ	1961	;# 
   938     07AA                     LCDDATA10       equ	1962	;# 
   939     0FE4                     STATUS_SHAD     equ	4068	;# 
   940     0FE5                     WREG_SHAD       equ	4069	;# 
   941     0FE6                     BSR_SHAD        equ	4070	;# 
   942     0FE7                     PCLATH_SHAD     equ	4071	;# 
   943     0FE8                     FSR0L_SHAD      equ	4072	;# 
   944     0FE9                     FSR0H_SHAD      equ	4073	;# 
   945     0FEA                     FSR1L_SHAD      equ	4074	;# 
   946     0FEB                     FSR1H_SHAD      equ	4075	;# 
   947     0FED                     STKPTR          equ	4077	;# 
   948     0FEE                     TOSL            equ	4078	;# 
   949     0FEF                     TOSH            equ	4079	;# 
   950     0000                     INDF0           equ	0	;# 
   951     0001                     INDF1           equ	1	;# 
   952     0002                     PCL             equ	2	;# 
   953     0003                     STATUS          equ	3	;# 
   954     0004                     FSR0L           equ	4	;# 
   955     0005                     FSR0H           equ	5	;# 
   956     0006                     FSR1L           equ	6	;# 
   957     0007                     FSR1H           equ	7	;# 
   958     0008                     BSR             equ	8	;# 
   959     0009                     WREG            equ	9	;# 
   960     000A                     PCLATH          equ	10	;# 
   961     000B                     INTCON          equ	11	;# 
   962     000C                     PORTA           equ	12	;# 
   963     000D                     PORTB           equ	13	;# 
   964     000E                     PORTC           equ	14	;# 
   965     0010                     PORTE           equ	16	;# 
   966     0011                     PIR1            equ	17	;# 
   967     0012                     PIR2            equ	18	;# 
   968     0013                     PIR3            equ	19	;# 
   969     0015                     TMR0            equ	21	;# 
   970     0016                     TMR1            equ	22	;# 
   971     0016                     TMR1L           equ	22	;# 
   972     0017                     TMR1H           equ	23	;# 
   973     0018                     T1CON           equ	24	;# 
   974     0019                     T1GCON          equ	25	;# 
   975     001A                     TMR2            equ	26	;# 
   976     001B                     PR2             equ	27	;# 
   977     001C                     T2CON           equ	28	;# 
   978     001E                     CPSCON0         equ	30	;# 
   979     001F                     CPSCON1         equ	31	;# 
   980     008C                     TRISA           equ	140	;# 
   981     008D                     TRISB           equ	141	;# 
   982     008E                     TRISC           equ	142	;# 
   983     0090                     TRISE           equ	144	;# 
   984     0091                     PIE1            equ	145	;# 
   985     0092                     PIE2            equ	146	;# 
   986     0093                     PIE3            equ	147	;# 
   987     0095                     OPTION_REG      equ	149	;# 
   988     0096                     PCON            equ	150	;# 
   989     0097                     WDTCON          equ	151	;# 
   990     0098                     OSCTUNE         equ	152	;# 
   991     0099                     OSCCON          equ	153	;# 
   992     009A                     OSCSTAT         equ	154	;# 
   993     009B                     ADRES           equ	155	;# 
   994     009B                     ADRESL          equ	155	;# 
   995     009C                     ADRESH          equ	156	;# 
   996     009D                     ADCON0          equ	157	;# 
   997     009E                     ADCON1          equ	158	;# 
   998     010C                     LATA            equ	268	;# 
   999     010D                     LATB            equ	269	;# 
  1000     010E                     LATC            equ	270	;# 
  1001     0110                     LATE            equ	272	;# 
  1002     0111                     CM1CON0         equ	273	;# 
  1003     0112                     CM1CON1         equ	274	;# 
  1004     0113                     CM2CON0         equ	275	;# 
  1005     0114                     CM2CON1         equ	276	;# 
  1006     0115                     CMOUT           equ	277	;# 
  1007     0116                     BORCON          equ	278	;# 
  1008     0117                     FVRCON          equ	279	;# 
  1009     0118                     DACCON0         equ	280	;# 
  1010     0119                     DACCON1         equ	281	;# 
  1011     011A                     SRCON0          equ	282	;# 
  1012     011B                     SRCON1          equ	283	;# 
  1013     011D                     APFCON          equ	285	;# 
  1014     018C                     ANSELA          equ	396	;# 
  1015     018D                     ANSELB          equ	397	;# 
  1016     0191                     EEADR           equ	401	;# 
  1017     0191                     EEADRL          equ	401	;# 
  1018     0192                     EEADRH          equ	402	;# 
  1019     0193                     EEDAT           equ	403	;# 
  1020     0193                     EEDATL          equ	403	;# 
  1021     0193                     EEDATA          equ	403	;# 
  1022     0194                     EEDATH          equ	404	;# 
  1023     0195                     EECON1          equ	405	;# 
  1024     0196                     EECON2          equ	406	;# 
  1025     0199                     RCREG           equ	409	;# 
  1026     019A                     TXREG           equ	410	;# 
  1027     019B                     SP1BRG          equ	411	;# 
  1028     019B                     SP1BRGL         equ	411	;# 
  1029     019B                     SPBRG           equ	411	;# 
  1030     019B                     SPBRGL          equ	411	;# 
  1031     019C                     SP1BRGH         equ	412	;# 
  1032     019C                     SPBRGH          equ	412	;# 
  1033     019D                     RCSTA           equ	413	;# 
  1034     019E                     TXSTA           equ	414	;# 
  1035     019F                     BAUDCON         equ	415	;# 
  1036     020D                     WPUB            equ	525	;# 
  1037     0210                     WPUE            equ	528	;# 
  1038     0211                     SSPBUF          equ	529	;# 
  1039     0212                     SSPADD          equ	530	;# 
  1040     0213                     SSPMSK          equ	531	;# 
  1041     0214                     SSPSTAT         equ	532	;# 
  1042     0215                     SSPCON1         equ	533	;# 
  1043     0215                     SSPCON          equ	533	;# 
  1044     0216                     SSPCON2         equ	534	;# 
  1045     0217                     SSPCON3         equ	535	;# 
  1046     0291                     CCPR1           equ	657	;# 
  1047     0291                     CCPR1L          equ	657	;# 
  1048     0292                     CCPR1H          equ	658	;# 
  1049     0293                     CCP1CON         equ	659	;# 
  1050     0294                     PWM1CON         equ	660	;# 
  1051     0295                     CCP1AS          equ	661	;# 
  1052     0295                     ECCP1AS         equ	661	;# 
  1053     0296                     PSTR1CON        equ	662	;# 
  1054     0298                     CCPR2           equ	664	;# 
  1055     0298                     CCPR2L          equ	664	;# 
  1056     0299                     CCPR2H          equ	665	;# 
  1057     029A                     CCP2CON         equ	666	;# 
  1058     029B                     PWM2CON         equ	667	;# 
  1059     029C                     CCP2AS          equ	668	;# 
  1060     029C                     ECCP2AS         equ	668	;# 
  1061     029D                     PSTR2CON        equ	669	;# 
  1062     029E                     CCPTMRS0        equ	670	;# 
  1063     029F                     CCPTMRS1        equ	671	;# 
  1064     0311                     CCPR3           equ	785	;# 
  1065     0311                     CCPR3L          equ	785	;# 
  1066     0312                     CCPR3H          equ	786	;# 
  1067     0313                     CCP3CON         equ	787	;# 
  1068     0314                     PWM3CON         equ	788	;# 
  1069     0315                     CCP3AS          equ	789	;# 
  1070     0315                     ECCP3AS         equ	789	;# 
  1071     0316                     PSTR3CON        equ	790	;# 
  1072     0318                     CCPR4           equ	792	;# 
  1073     0318                     CCPR4L          equ	792	;# 
  1074     0319                     CCPR4H          equ	793	;# 
  1075     031A                     CCP4CON         equ	794	;# 
  1076     031C                     CCPR5           equ	796	;# 
  1077     031C                     CCPR5L          equ	796	;# 
  1078     031D                     CCPR5H          equ	797	;# 
  1079     031E                     CCP5CON         equ	798	;# 
  1080     0394                     IOCBP           equ	916	;# 
  1081     0395                     IOCBN           equ	917	;# 
  1082     0396                     IOCBF           equ	918	;# 
  1083     0415                     TMR4            equ	1045	;# 
  1084     0416                     PR4             equ	1046	;# 
  1085     0417                     T4CON           equ	1047	;# 
  1086     041C                     TMR6            equ	1052	;# 
  1087     041D                     PR6             equ	1053	;# 
  1088     041E                     T6CON           equ	1054	;# 
  1089     0791                     LCDCON          equ	1937	;# 
  1090     0792                     LCDPS           equ	1938	;# 
  1091     0793                     LCDREF          equ	1939	;# 
  1092     0794                     LCDCST          equ	1940	;# 
  1093     0795                     LCDRL           equ	1941	;# 
  1094     0798                     LCDSE0          equ	1944	;# 
  1095     0799                     LCDSE1          equ	1945	;# 
  1096     07A0                     LCDDATA0        equ	1952	;# 
  1097     07A1                     LCDDATA1        equ	1953	;# 
  1098     07A3                     LCDDATA3        equ	1955	;# 
  1099     07A4                     LCDDATA4        equ	1956	;# 
  1100     07A6                     LCDDATA6        equ	1958	;# 
  1101     07A7                     LCDDATA7        equ	1959	;# 
  1102     07A9                     LCDDATA9        equ	1961	;# 
  1103     07AA                     LCDDATA10       equ	1962	;# 
  1104     0FE4                     STATUS_SHAD     equ	4068	;# 
  1105     0FE5                     WREG_SHAD       equ	4069	;# 
  1106     0FE6                     BSR_SHAD        equ	4070	;# 
  1107     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1108     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1109     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1110     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1111     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1112     0FED                     STKPTR          equ	4077	;# 
  1113     0FEE                     TOSL            equ	4078	;# 
  1114     0FEF                     TOSH            equ	4079	;# 
  1115     0000                     INDF0           equ	0	;# 
  1116     0001                     INDF1           equ	1	;# 
  1117     0002                     PCL             equ	2	;# 
  1118     0003                     STATUS          equ	3	;# 
  1119     0004                     FSR0L           equ	4	;# 
  1120     0005                     FSR0H           equ	5	;# 
  1121     0006                     FSR1L           equ	6	;# 
  1122     0007                     FSR1H           equ	7	;# 
  1123     0008                     BSR             equ	8	;# 
  1124     0009                     WREG            equ	9	;# 
  1125     000A                     PCLATH          equ	10	;# 
  1126     000B                     INTCON          equ	11	;# 
  1127     000C                     PORTA           equ	12	;# 
  1128     000D                     PORTB           equ	13	;# 
  1129     000E                     PORTC           equ	14	;# 
  1130     0010                     PORTE           equ	16	;# 
  1131     0011                     PIR1            equ	17	;# 
  1132     0012                     PIR2            equ	18	;# 
  1133     0013                     PIR3            equ	19	;# 
  1134     0015                     TMR0            equ	21	;# 
  1135     0016                     TMR1            equ	22	;# 
  1136     0016                     TMR1L           equ	22	;# 
  1137     0017                     TMR1H           equ	23	;# 
  1138     0018                     T1CON           equ	24	;# 
  1139     0019                     T1GCON          equ	25	;# 
  1140     001A                     TMR2            equ	26	;# 
  1141     001B                     PR2             equ	27	;# 
  1142     001C                     T2CON           equ	28	;# 
  1143     001E                     CPSCON0         equ	30	;# 
  1144     001F                     CPSCON1         equ	31	;# 
  1145     008C                     TRISA           equ	140	;# 
  1146     008D                     TRISB           equ	141	;# 
  1147     008E                     TRISC           equ	142	;# 
  1148     0090                     TRISE           equ	144	;# 
  1149     0091                     PIE1            equ	145	;# 
  1150     0092                     PIE2            equ	146	;# 
  1151     0093                     PIE3            equ	147	;# 
  1152     0095                     OPTION_REG      equ	149	;# 
  1153     0096                     PCON            equ	150	;# 
  1154     0097                     WDTCON          equ	151	;# 
  1155     0098                     OSCTUNE         equ	152	;# 
  1156     0099                     OSCCON          equ	153	;# 
  1157     009A                     OSCSTAT         equ	154	;# 
  1158     009B                     ADRES           equ	155	;# 
  1159     009B                     ADRESL          equ	155	;# 
  1160     009C                     ADRESH          equ	156	;# 
  1161     009D                     ADCON0          equ	157	;# 
  1162     009E                     ADCON1          equ	158	;# 
  1163     010C                     LATA            equ	268	;# 
  1164     010D                     LATB            equ	269	;# 
  1165     010E                     LATC            equ	270	;# 
  1166     0110                     LATE            equ	272	;# 
  1167     0111                     CM1CON0         equ	273	;# 
  1168     0112                     CM1CON1         equ	274	;# 
  1169     0113                     CM2CON0         equ	275	;# 
  1170     0114                     CM2CON1         equ	276	;# 
  1171     0115                     CMOUT           equ	277	;# 
  1172     0116                     BORCON          equ	278	;# 
  1173     0117                     FVRCON          equ	279	;# 
  1174     0118                     DACCON0         equ	280	;# 
  1175     0119                     DACCON1         equ	281	;# 
  1176     011A                     SRCON0          equ	282	;# 
  1177     011B                     SRCON1          equ	283	;# 
  1178     011D                     APFCON          equ	285	;# 
  1179     018C                     ANSELA          equ	396	;# 
  1180     018D                     ANSELB          equ	397	;# 
  1181     0191                     EEADR           equ	401	;# 
  1182     0191                     EEADRL          equ	401	;# 
  1183     0192                     EEADRH          equ	402	;# 
  1184     0193                     EEDAT           equ	403	;# 
  1185     0193                     EEDATL          equ	403	;# 
  1186     0193                     EEDATA          equ	403	;# 
  1187     0194                     EEDATH          equ	404	;# 
  1188     0195                     EECON1          equ	405	;# 
  1189     0196                     EECON2          equ	406	;# 
  1190     0199                     RCREG           equ	409	;# 
  1191     019A                     TXREG           equ	410	;# 
  1192     019B                     SP1BRG          equ	411	;# 
  1193     019B                     SP1BRGL         equ	411	;# 
  1194     019B                     SPBRG           equ	411	;# 
  1195     019B                     SPBRGL          equ	411	;# 
  1196     019C                     SP1BRGH         equ	412	;# 
  1197     019C                     SPBRGH          equ	412	;# 
  1198     019D                     RCSTA           equ	413	;# 
  1199     019E                     TXSTA           equ	414	;# 
  1200     019F                     BAUDCON         equ	415	;# 
  1201     020D                     WPUB            equ	525	;# 
  1202     0210                     WPUE            equ	528	;# 
  1203     0211                     SSPBUF          equ	529	;# 
  1204     0212                     SSPADD          equ	530	;# 
  1205     0213                     SSPMSK          equ	531	;# 
  1206     0214                     SSPSTAT         equ	532	;# 
  1207     0215                     SSPCON1         equ	533	;# 
  1208     0215                     SSPCON          equ	533	;# 
  1209     0216                     SSPCON2         equ	534	;# 
  1210     0217                     SSPCON3         equ	535	;# 
  1211     0291                     CCPR1           equ	657	;# 
  1212     0291                     CCPR1L          equ	657	;# 
  1213     0292                     CCPR1H          equ	658	;# 
  1214     0293                     CCP1CON         equ	659	;# 
  1215     0294                     PWM1CON         equ	660	;# 
  1216     0295                     CCP1AS          equ	661	;# 
  1217     0295                     ECCP1AS         equ	661	;# 
  1218     0296                     PSTR1CON        equ	662	;# 
  1219     0298                     CCPR2           equ	664	;# 
  1220     0298                     CCPR2L          equ	664	;# 
  1221     0299                     CCPR2H          equ	665	;# 
  1222     029A                     CCP2CON         equ	666	;# 
  1223     029B                     PWM2CON         equ	667	;# 
  1224     029C                     CCP2AS          equ	668	;# 
  1225     029C                     ECCP2AS         equ	668	;# 
  1226     029D                     PSTR2CON        equ	669	;# 
  1227     029E                     CCPTMRS0        equ	670	;# 
  1228     029F                     CCPTMRS1        equ	671	;# 
  1229     0311                     CCPR3           equ	785	;# 
  1230     0311                     CCPR3L          equ	785	;# 
  1231     0312                     CCPR3H          equ	786	;# 
  1232     0313                     CCP3CON         equ	787	;# 
  1233     0314                     PWM3CON         equ	788	;# 
  1234     0315                     CCP3AS          equ	789	;# 
  1235     0315                     ECCP3AS         equ	789	;# 
  1236     0316                     PSTR3CON        equ	790	;# 
  1237     0318                     CCPR4           equ	792	;# 
  1238     0318                     CCPR4L          equ	792	;# 
  1239     0319                     CCPR4H          equ	793	;# 
  1240     031A                     CCP4CON         equ	794	;# 
  1241     031C                     CCPR5           equ	796	;# 
  1242     031C                     CCPR5L          equ	796	;# 
  1243     031D                     CCPR5H          equ	797	;# 
  1244     031E                     CCP5CON         equ	798	;# 
  1245     0394                     IOCBP           equ	916	;# 
  1246     0395                     IOCBN           equ	917	;# 
  1247     0396                     IOCBF           equ	918	;# 
  1248     0415                     TMR4            equ	1045	;# 
  1249     0416                     PR4             equ	1046	;# 
  1250     0417                     T4CON           equ	1047	;# 
  1251     041C                     TMR6            equ	1052	;# 
  1252     041D                     PR6             equ	1053	;# 
  1253     041E                     T6CON           equ	1054	;# 
  1254     0791                     LCDCON          equ	1937	;# 
  1255     0792                     LCDPS           equ	1938	;# 
  1256     0793                     LCDREF          equ	1939	;# 
  1257     0794                     LCDCST          equ	1940	;# 
  1258     0795                     LCDRL           equ	1941	;# 
  1259     0798                     LCDSE0          equ	1944	;# 
  1260     0799                     LCDSE1          equ	1945	;# 
  1261     07A0                     LCDDATA0        equ	1952	;# 
  1262     07A1                     LCDDATA1        equ	1953	;# 
  1263     07A3                     LCDDATA3        equ	1955	;# 
  1264     07A4                     LCDDATA4        equ	1956	;# 
  1265     07A6                     LCDDATA6        equ	1958	;# 
  1266     07A7                     LCDDATA7        equ	1959	;# 
  1267     07A9                     LCDDATA9        equ	1961	;# 
  1268     07AA                     LCDDATA10       equ	1962	;# 
  1269     0FE4                     STATUS_SHAD     equ	4068	;# 
  1270     0FE5                     WREG_SHAD       equ	4069	;# 
  1271     0FE6                     BSR_SHAD        equ	4070	;# 
  1272     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1273     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1274     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1275     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1276     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1277     0FED                     STKPTR          equ	4077	;# 
  1278     0FEE                     TOSL            equ	4078	;# 
  1279     0FEF                     TOSH            equ	4079	;# 
  1280     0000                     INDF0           equ	0	;# 
  1281     0001                     INDF1           equ	1	;# 
  1282     0002                     PCL             equ	2	;# 
  1283     0003                     STATUS          equ	3	;# 
  1284     0004                     FSR0L           equ	4	;# 
  1285     0005                     FSR0H           equ	5	;# 
  1286     0006                     FSR1L           equ	6	;# 
  1287     0007                     FSR1H           equ	7	;# 
  1288     0008                     BSR             equ	8	;# 
  1289     0009                     WREG            equ	9	;# 
  1290     000A                     PCLATH          equ	10	;# 
  1291     000B                     INTCON          equ	11	;# 
  1292     000C                     PORTA           equ	12	;# 
  1293     000D                     PORTB           equ	13	;# 
  1294     000E                     PORTC           equ	14	;# 
  1295     0010                     PORTE           equ	16	;# 
  1296     0011                     PIR1            equ	17	;# 
  1297     0012                     PIR2            equ	18	;# 
  1298     0013                     PIR3            equ	19	;# 
  1299     0015                     TMR0            equ	21	;# 
  1300     0016                     TMR1            equ	22	;# 
  1301     0016                     TMR1L           equ	22	;# 
  1302     0017                     TMR1H           equ	23	;# 
  1303     0018                     T1CON           equ	24	;# 
  1304     0019                     T1GCON          equ	25	;# 
  1305     001A                     TMR2            equ	26	;# 
  1306     001B                     PR2             equ	27	;# 
  1307     001C                     T2CON           equ	28	;# 
  1308     001E                     CPSCON0         equ	30	;# 
  1309     001F                     CPSCON1         equ	31	;# 
  1310     008C                     TRISA           equ	140	;# 
  1311     008D                     TRISB           equ	141	;# 
  1312     008E                     TRISC           equ	142	;# 
  1313     0090                     TRISE           equ	144	;# 
  1314     0091                     PIE1            equ	145	;# 
  1315     0092                     PIE2            equ	146	;# 
  1316     0093                     PIE3            equ	147	;# 
  1317     0095                     OPTION_REG      equ	149	;# 
  1318     0096                     PCON            equ	150	;# 
  1319     0097                     WDTCON          equ	151	;# 
  1320     0098                     OSCTUNE         equ	152	;# 
  1321     0099                     OSCCON          equ	153	;# 
  1322     009A                     OSCSTAT         equ	154	;# 
  1323     009B                     ADRES           equ	155	;# 
  1324     009B                     ADRESL          equ	155	;# 
  1325     009C                     ADRESH          equ	156	;# 
  1326     009D                     ADCON0          equ	157	;# 
  1327     009E                     ADCON1          equ	158	;# 
  1328     010C                     LATA            equ	268	;# 
  1329     010D                     LATB            equ	269	;# 
  1330     010E                     LATC            equ	270	;# 
  1331     0110                     LATE            equ	272	;# 
  1332     0111                     CM1CON0         equ	273	;# 
  1333     0112                     CM1CON1         equ	274	;# 
  1334     0113                     CM2CON0         equ	275	;# 
  1335     0114                     CM2CON1         equ	276	;# 
  1336     0115                     CMOUT           equ	277	;# 
  1337     0116                     BORCON          equ	278	;# 
  1338     0117                     FVRCON          equ	279	;# 
  1339     0118                     DACCON0         equ	280	;# 
  1340     0119                     DACCON1         equ	281	;# 
  1341     011A                     SRCON0          equ	282	;# 
  1342     011B                     SRCON1          equ	283	;# 
  1343     011D                     APFCON          equ	285	;# 
  1344     018C                     ANSELA          equ	396	;# 
  1345     018D                     ANSELB          equ	397	;# 
  1346     0191                     EEADR           equ	401	;# 
  1347     0191                     EEADRL          equ	401	;# 
  1348     0192                     EEADRH          equ	402	;# 
  1349     0193                     EEDAT           equ	403	;# 
  1350     0193                     EEDATL          equ	403	;# 
  1351     0193                     EEDATA          equ	403	;# 
  1352     0194                     EEDATH          equ	404	;# 
  1353     0195                     EECON1          equ	405	;# 
  1354     0196                     EECON2          equ	406	;# 
  1355     0199                     RCREG           equ	409	;# 
  1356     019A                     TXREG           equ	410	;# 
  1357     019B                     SP1BRG          equ	411	;# 
  1358     019B                     SP1BRGL         equ	411	;# 
  1359     019B                     SPBRG           equ	411	;# 
  1360     019B                     SPBRGL          equ	411	;# 
  1361     019C                     SP1BRGH         equ	412	;# 
  1362     019C                     SPBRGH          equ	412	;# 
  1363     019D                     RCSTA           equ	413	;# 
  1364     019E                     TXSTA           equ	414	;# 
  1365     019F                     BAUDCON         equ	415	;# 
  1366     020D                     WPUB            equ	525	;# 
  1367     0210                     WPUE            equ	528	;# 
  1368     0211                     SSPBUF          equ	529	;# 
  1369     0212                     SSPADD          equ	530	;# 
  1370     0213                     SSPMSK          equ	531	;# 
  1371     0214                     SSPSTAT         equ	532	;# 
  1372     0215                     SSPCON1         equ	533	;# 
  1373     0215                     SSPCON          equ	533	;# 
  1374     0216                     SSPCON2         equ	534	;# 
  1375     0217                     SSPCON3         equ	535	;# 
  1376     0291                     CCPR1           equ	657	;# 
  1377     0291                     CCPR1L          equ	657	;# 
  1378     0292                     CCPR1H          equ	658	;# 
  1379     0293                     CCP1CON         equ	659	;# 
  1380     0294                     PWM1CON         equ	660	;# 
  1381     0295                     CCP1AS          equ	661	;# 
  1382     0295                     ECCP1AS         equ	661	;# 
  1383     0296                     PSTR1CON        equ	662	;# 
  1384     0298                     CCPR2           equ	664	;# 
  1385     0298                     CCPR2L          equ	664	;# 
  1386     0299                     CCPR2H          equ	665	;# 
  1387     029A                     CCP2CON         equ	666	;# 
  1388     029B                     PWM2CON         equ	667	;# 
  1389     029C                     CCP2AS          equ	668	;# 
  1390     029C                     ECCP2AS         equ	668	;# 
  1391     029D                     PSTR2CON        equ	669	;# 
  1392     029E                     CCPTMRS0        equ	670	;# 
  1393     029F                     CCPTMRS1        equ	671	;# 
  1394     0311                     CCPR3           equ	785	;# 
  1395     0311                     CCPR3L          equ	785	;# 
  1396     0312                     CCPR3H          equ	786	;# 
  1397     0313                     CCP3CON         equ	787	;# 
  1398     0314                     PWM3CON         equ	788	;# 
  1399     0315                     CCP3AS          equ	789	;# 
  1400     0315                     ECCP3AS         equ	789	;# 
  1401     0316                     PSTR3CON        equ	790	;# 
  1402     0318                     CCPR4           equ	792	;# 
  1403     0318                     CCPR4L          equ	792	;# 
  1404     0319                     CCPR4H          equ	793	;# 
  1405     031A                     CCP4CON         equ	794	;# 
  1406     031C                     CCPR5           equ	796	;# 
  1407     031C                     CCPR5L          equ	796	;# 
  1408     031D                     CCPR5H          equ	797	;# 
  1409     031E                     CCP5CON         equ	798	;# 
  1410     0394                     IOCBP           equ	916	;# 
  1411     0395                     IOCBN           equ	917	;# 
  1412     0396                     IOCBF           equ	918	;# 
  1413     0415                     TMR4            equ	1045	;# 
  1414     0416                     PR4             equ	1046	;# 
  1415     0417                     T4CON           equ	1047	;# 
  1416     041C                     TMR6            equ	1052	;# 
  1417     041D                     PR6             equ	1053	;# 
  1418     041E                     T6CON           equ	1054	;# 
  1419     0791                     LCDCON          equ	1937	;# 
  1420     0792                     LCDPS           equ	1938	;# 
  1421     0793                     LCDREF          equ	1939	;# 
  1422     0794                     LCDCST          equ	1940	;# 
  1423     0795                     LCDRL           equ	1941	;# 
  1424     0798                     LCDSE0          equ	1944	;# 
  1425     0799                     LCDSE1          equ	1945	;# 
  1426     07A0                     LCDDATA0        equ	1952	;# 
  1427     07A1                     LCDDATA1        equ	1953	;# 
  1428     07A3                     LCDDATA3        equ	1955	;# 
  1429     07A4                     LCDDATA4        equ	1956	;# 
  1430     07A6                     LCDDATA6        equ	1958	;# 
  1431     07A7                     LCDDATA7        equ	1959	;# 
  1432     07A9                     LCDDATA9        equ	1961	;# 
  1433     07AA                     LCDDATA10       equ	1962	;# 
  1434     0FE4                     STATUS_SHAD     equ	4068	;# 
  1435     0FE5                     WREG_SHAD       equ	4069	;# 
  1436     0FE6                     BSR_SHAD        equ	4070	;# 
  1437     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1438     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1439     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1440     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1441     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1442     0FED                     STKPTR          equ	4077	;# 
  1443     0FEE                     TOSL            equ	4078	;# 
  1444     0FEF                     TOSH            equ	4079	;# 
  1445     0000                     INDF0           equ	0	;# 
  1446     0001                     INDF1           equ	1	;# 
  1447     0002                     PCL             equ	2	;# 
  1448     0003                     STATUS          equ	3	;# 
  1449     0004                     FSR0L           equ	4	;# 
  1450     0005                     FSR0H           equ	5	;# 
  1451     0006                     FSR1L           equ	6	;# 
  1452     0007                     FSR1H           equ	7	;# 
  1453     0008                     BSR             equ	8	;# 
  1454     0009                     WREG            equ	9	;# 
  1455     000A                     PCLATH          equ	10	;# 
  1456     000B                     INTCON          equ	11	;# 
  1457     000C                     PORTA           equ	12	;# 
  1458     000D                     PORTB           equ	13	;# 
  1459     000E                     PORTC           equ	14	;# 
  1460     0010                     PORTE           equ	16	;# 
  1461     0011                     PIR1            equ	17	;# 
  1462     0012                     PIR2            equ	18	;# 
  1463     0013                     PIR3            equ	19	;# 
  1464     0015                     TMR0            equ	21	;# 
  1465     0016                     TMR1            equ	22	;# 
  1466     0016                     TMR1L           equ	22	;# 
  1467     0017                     TMR1H           equ	23	;# 
  1468     0018                     T1CON           equ	24	;# 
  1469     0019                     T1GCON          equ	25	;# 
  1470     001A                     TMR2            equ	26	;# 
  1471     001B                     PR2             equ	27	;# 
  1472     001C                     T2CON           equ	28	;# 
  1473     001E                     CPSCON0         equ	30	;# 
  1474     001F                     CPSCON1         equ	31	;# 
  1475     008C                     TRISA           equ	140	;# 
  1476     008D                     TRISB           equ	141	;# 
  1477     008E                     TRISC           equ	142	;# 
  1478     0090                     TRISE           equ	144	;# 
  1479     0091                     PIE1            equ	145	;# 
  1480     0092                     PIE2            equ	146	;# 
  1481     0093                     PIE3            equ	147	;# 
  1482     0095                     OPTION_REG      equ	149	;# 
  1483     0096                     PCON            equ	150	;# 
  1484     0097                     WDTCON          equ	151	;# 
  1485     0098                     OSCTUNE         equ	152	;# 
  1486     0099                     OSCCON          equ	153	;# 
  1487     009A                     OSCSTAT         equ	154	;# 
  1488     009B                     ADRES           equ	155	;# 
  1489     009B                     ADRESL          equ	155	;# 
  1490     009C                     ADRESH          equ	156	;# 
  1491     009D                     ADCON0          equ	157	;# 
  1492     009E                     ADCON1          equ	158	;# 
  1493     010C                     LATA            equ	268	;# 
  1494     010D                     LATB            equ	269	;# 
  1495     010E                     LATC            equ	270	;# 
  1496     0110                     LATE            equ	272	;# 
  1497     0111                     CM1CON0         equ	273	;# 
  1498     0112                     CM1CON1         equ	274	;# 
  1499     0113                     CM2CON0         equ	275	;# 
  1500     0114                     CM2CON1         equ	276	;# 
  1501     0115                     CMOUT           equ	277	;# 
  1502     0116                     BORCON          equ	278	;# 
  1503     0117                     FVRCON          equ	279	;# 
  1504     0118                     DACCON0         equ	280	;# 
  1505     0119                     DACCON1         equ	281	;# 
  1506     011A                     SRCON0          equ	282	;# 
  1507     011B                     SRCON1          equ	283	;# 
  1508     011D                     APFCON          equ	285	;# 
  1509     018C                     ANSELA          equ	396	;# 
  1510     018D                     ANSELB          equ	397	;# 
  1511     0191                     EEADR           equ	401	;# 
  1512     0191                     EEADRL          equ	401	;# 
  1513     0192                     EEADRH          equ	402	;# 
  1514     0193                     EEDAT           equ	403	;# 
  1515     0193                     EEDATL          equ	403	;# 
  1516     0193                     EEDATA          equ	403	;# 
  1517     0194                     EEDATH          equ	404	;# 
  1518     0195                     EECON1          equ	405	;# 
  1519     0196                     EECON2          equ	406	;# 
  1520     0199                     RCREG           equ	409	;# 
  1521     019A                     TXREG           equ	410	;# 
  1522     019B                     SP1BRG          equ	411	;# 
  1523     019B                     SP1BRGL         equ	411	;# 
  1524     019B                     SPBRG           equ	411	;# 
  1525     019B                     SPBRGL          equ	411	;# 
  1526     019C                     SP1BRGH         equ	412	;# 
  1527     019C                     SPBRGH          equ	412	;# 
  1528     019D                     RCSTA           equ	413	;# 
  1529     019E                     TXSTA           equ	414	;# 
  1530     019F                     BAUDCON         equ	415	;# 
  1531     020D                     WPUB            equ	525	;# 
  1532     0210                     WPUE            equ	528	;# 
  1533     0211                     SSPBUF          equ	529	;# 
  1534     0212                     SSPADD          equ	530	;# 
  1535     0213                     SSPMSK          equ	531	;# 
  1536     0214                     SSPSTAT         equ	532	;# 
  1537     0215                     SSPCON1         equ	533	;# 
  1538     0215                     SSPCON          equ	533	;# 
  1539     0216                     SSPCON2         equ	534	;# 
  1540     0217                     SSPCON3         equ	535	;# 
  1541     0291                     CCPR1           equ	657	;# 
  1542     0291                     CCPR1L          equ	657	;# 
  1543     0292                     CCPR1H          equ	658	;# 
  1544     0293                     CCP1CON         equ	659	;# 
  1545     0294                     PWM1CON         equ	660	;# 
  1546     0295                     CCP1AS          equ	661	;# 
  1547     0295                     ECCP1AS         equ	661	;# 
  1548     0296                     PSTR1CON        equ	662	;# 
  1549     0298                     CCPR2           equ	664	;# 
  1550     0298                     CCPR2L          equ	664	;# 
  1551     0299                     CCPR2H          equ	665	;# 
  1552     029A                     CCP2CON         equ	666	;# 
  1553     029B                     PWM2CON         equ	667	;# 
  1554     029C                     CCP2AS          equ	668	;# 
  1555     029C                     ECCP2AS         equ	668	;# 
  1556     029D                     PSTR2CON        equ	669	;# 
  1557     029E                     CCPTMRS0        equ	670	;# 
  1558     029F                     CCPTMRS1        equ	671	;# 
  1559     0311                     CCPR3           equ	785	;# 
  1560     0311                     CCPR3L          equ	785	;# 
  1561     0312                     CCPR3H          equ	786	;# 
  1562     0313                     CCP3CON         equ	787	;# 
  1563     0314                     PWM3CON         equ	788	;# 
  1564     0315                     CCP3AS          equ	789	;# 
  1565     0315                     ECCP3AS         equ	789	;# 
  1566     0316                     PSTR3CON        equ	790	;# 
  1567     0318                     CCPR4           equ	792	;# 
  1568     0318                     CCPR4L          equ	792	;# 
  1569     0319                     CCPR4H          equ	793	;# 
  1570     031A                     CCP4CON         equ	794	;# 
  1571     031C                     CCPR5           equ	796	;# 
  1572     031C                     CCPR5L          equ	796	;# 
  1573     031D                     CCPR5H          equ	797	;# 
  1574     031E                     CCP5CON         equ	798	;# 
  1575     0394                     IOCBP           equ	916	;# 
  1576     0395                     IOCBN           equ	917	;# 
  1577     0396                     IOCBF           equ	918	;# 
  1578     0415                     TMR4            equ	1045	;# 
  1579     0416                     PR4             equ	1046	;# 
  1580     0417                     T4CON           equ	1047	;# 
  1581     041C                     TMR6            equ	1052	;# 
  1582     041D                     PR6             equ	1053	;# 
  1583     041E                     T6CON           equ	1054	;# 
  1584     0791                     LCDCON          equ	1937	;# 
  1585     0792                     LCDPS           equ	1938	;# 
  1586     0793                     LCDREF          equ	1939	;# 
  1587     0794                     LCDCST          equ	1940	;# 
  1588     0795                     LCDRL           equ	1941	;# 
  1589     0798                     LCDSE0          equ	1944	;# 
  1590     0799                     LCDSE1          equ	1945	;# 
  1591     07A0                     LCDDATA0        equ	1952	;# 
  1592     07A1                     LCDDATA1        equ	1953	;# 
  1593     07A3                     LCDDATA3        equ	1955	;# 
  1594     07A4                     LCDDATA4        equ	1956	;# 
  1595     07A6                     LCDDATA6        equ	1958	;# 
  1596     07A7                     LCDDATA7        equ	1959	;# 
  1597     07A9                     LCDDATA9        equ	1961	;# 
  1598     07AA                     LCDDATA10       equ	1962	;# 
  1599     0FE4                     STATUS_SHAD     equ	4068	;# 
  1600     0FE5                     WREG_SHAD       equ	4069	;# 
  1601     0FE6                     BSR_SHAD        equ	4070	;# 
  1602     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1603     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1604     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1605     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1606     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1607     0FED                     STKPTR          equ	4077	;# 
  1608     0FEE                     TOSL            equ	4078	;# 
  1609     0FEF                     TOSH            equ	4079	;# 
  1610                           
  1611                           	psect	idataBANK0
  1612     067C                     __pidataBANK0:
  1613                           
  1614                           ;initializer for _LIN_timeout
  1615     067C  340A               	retlw	10
  1616                           
  1617                           	psect	stringtext1
  1618     0629                     __pstringtext1:
  1619     0629                     _scheduleTable:
  1620     0629  3401               	retlw	1
  1621     062A  3401               	retlw	1
  1622     062B  3408               	retlw	8
  1623     062C  34A0               	retlw	low (_SW_STATE_Data| 0)
  1624     062D  3400               	retlw	high (_SW_STATE_Data| 0)
  1625     062E                     __end_of_scheduleTable:
  1626     0011                     _PIR1bits       set	17
  1627     000B                     _INTCONbits     set	11
  1628     0015                     _TMR0           set	21
  1629     0097                     _WDTCON         set	151
  1630     0098                     _OSCTUNE        set	152
  1631     0099                     _OSCCON         set	153
  1632     0095                     _OPTION_REG     set	149
  1633     0095                     _OPTION_REGbits set	149
  1634     008E                     _TRISC          set	142
  1635     008D                     _TRISB          set	141
  1636     008C                     _TRISA          set	140
  1637     0090                     _TRISE          set	144
  1638     0091                     _PIE1bits       set	145
  1639     04D6                     _PLLR           set	1238
  1640     0116                     _BORCON         set	278
  1641     011D                     _APFCON         set	285
  1642     010E                     _LATC           set	270
  1643     010D                     _LATB           set	269
  1644     010C                     _LATA           set	268
  1645     0110                     _LATE           set	272
  1646     010D                     _LATBbits       set	269
  1647     019A                     _TXREG          set	410
  1648     019E                     _TXSTA          set	414
  1649     019D                     _RCSTA          set	413
  1650     019F                     _BAUDCON        set	415
  1651     018C                     _ANSELA         set	396
  1652     018D                     _ANSELB         set	397
  1653     019D                     _RCSTAbits      set	413
  1654     019E                     _TXSTAbits      set	414
  1655     0199                     _RCREG          set	409
  1656     019F                     _BAUDCONbits    set	415
  1657     020D                     _WPUB           set	525
  1658     0210                     _WPUE           set	528
  1659                           
  1660                           	psect	cinit
  1661     003A                     start_initialization:	
  1662                           ; #config settings
  1663                           
  1664     003A                     __initialization:
  1665                           
  1666                           ; Initialize objects allocated to BANK0
  1667     003A  3186  267C  3180   	fcall	__pidataBANK0	;fetch initializer
  1668     003D  00EF               	movwf	__pdataBANK0& (0+127)
  1669                           
  1670                           ; Clear objects allocated to BANK0
  1671     003E  3020               	movlw	low __pbssBANK0
  1672     003F  0084               	movwf	4
  1673     0040  3000               	movlw	high __pbssBANK0
  1674     0041  0085               	movwf	5
  1675     0042  3046               	movlw	70
  1676     0043  3185  25FF  3180   	fcall	clear_ram0
  1677                           
  1678                           ; Clear objects allocated to BANK1
  1679     0046  30A0               	movlw	low __pbssBANK1
  1680     0047  0084               	movwf	4
  1681     0048  3000               	movlw	high __pbssBANK1
  1682     0049  0085               	movwf	5
  1683     004A  3008               	movlw	8
  1684     004B  3185  25FF  3180   	fcall	clear_ram0
  1685     004E                     end_of_initialization:	
  1686                           ;End of C runtime variable initialization code
  1687                           
  1688     004E                     __end_of__initialization:
  1689     004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1690     004F  0020               	movlb	0
  1691     0050  3185  2DE3         	ljmp	_main	;jump to C main() function
  1692                           
  1693                           	psect	bssBANK0
  1694     0020                     __pbssBANK0:
  1695     0020                     _eusartRxStatusBuffer:
  1696     0020                     	ds	8
  1697     0028                     _eusartRxBuffer:
  1698     0028                     	ds	8
  1699     0030                     _eusartTxBuffer:
  1700     0030                     	ds	8
  1701     0038                     _TMR0_InterruptHandler:
  1702     0038                     	ds	2
  1703     003A                     _EUSART_ErrorHandler:
  1704     003A                     	ds	2
  1705     003C                     _EUSART_OverrunErrorHandler:
  1706     003C                     	ds	2
  1707     003E                     _EUSART_FramingErrorHandler:
  1708     003E                     	ds	2
  1709     0040                     _EUSART_RxDefaultInterruptHandler:
  1710     0040                     	ds	2
  1711     0042                     _EUSART_TxDefaultInterruptHandler:
  1712     0042                     	ds	2
  1713     0044                     _LIN_rxCommand:
  1714     0044                     	ds	2
  1715     0046                     _LIN_processData:
  1716     0046                     	ds	2
  1717     0048                     _timer0ReloadVal:
  1718     0048                     	ds	1
  1719     0049                     _eusartRxLastError:
  1720     0049                     	ds	1
  1721     004A                     _eusartRxCount:
  1722     004A                     	ds	1
  1723     004B                     _eusartRxTail:
  1724     004B                     	ds	1
  1725     004C                     _eusartRxHead:
  1726     004C                     	ds	1
  1727     004D                     _eusartTxBufferRemaining:
  1728     004D                     	ds	1
  1729     004E                     _eusartTxTail:
  1730     004E                     	ds	1
  1731     004F                     _eusartTxHead:
  1732     004F                     	ds	1
  1733     0050                     LIN_handler@rxDataIndex:
  1734     0050                     	ds	1
  1735     0051                     LIN_handler@LIN_rxState:
  1736     0051                     	ds	1
  1737     0052                     _CountCallBack:
  1738     0052                     	ds	1
  1739     0053                     _LIN_timerRunning:
  1740     0053                     	ds	1
  1741     0054                     _LIN_rxCommandLength:
  1742     0054                     	ds	1
  1743     0055                     _LIN_rxInProgress:
  1744     0055                     	ds	1
  1745     0056                     _lampFlags:
  1746     0056                     	ds	1
  1747     0057                     _fLock:
  1748     0057                     	ds	1
  1749     0058                     _lampState:
  1750     0058                     	ds	1
  1751     0059                     _LIN_packet:
  1752     0059                     	ds	13
  1753                           
  1754                           	psect	dataBANK0
  1755     006F                     __pdataBANK0:
  1756     006F                     _LIN_timeout:
  1757     006F                     	ds	1
  1758                           
  1759                           	psect	bssBANK1
  1760     00A0                     __pbssBANK1:
  1761     00A0                     _SW_STATE_Data:
  1762     00A0                     	ds	8
  1763                           
  1764                           	psect	clrtext
  1765     05FF                     clear_ram0:	
  1766                           ;	Called with FSR0 containing the base address, and
  1767                           ;	WREG with the size to clear
  1768                           
  1769     05FF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1770     0600                     clrloop0:
  1771     0600  0180               	clrf	0	;clear RAM location pointed to by FSR
  1772     0601  3101               	addfsr 0,1
  1773     0602  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1774     0603  2E00               	goto	clrloop0	;have we reached the end yet?
  1775     0604  3400               	retlw	0	;all done for this memory range, return
  1776                           
  1777                           	psect	cstackBANK1
  1778     00A8                     __pcstackBANK1:
  1779     00A8                     ??_LIN_handler:
  1780                           
  1781                           ; 1 bytes @ 0x0
  1782     00A8                     	ds	5
  1783                           
  1784                           	psect	cstackCOMMON
  1785     0070                     __pcstackCOMMON:
  1786     0070                     ?_processLIN:
  1787     0070                     ?_LIN_stopTimer:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790     0070                     ?_LIN_enableRx:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793     0070                     ?_LIN_setTimerHandler:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796     0070                     ?_LIN_getChecksum:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799     0070                     ?_LIN_startTimer:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802     0070                     ?_LIN_disableRx:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805     0070                     ?_EUSART_Initialize:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808     0070                     ?_EUSART_is_rx_ready:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811     0070                     ?_EUSART_Read:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814     0070                     ?_LIN_checkPID:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817     0070                     ?_LIN_getFromTable:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820     0070                     ?_EUSART_Write:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823     0070                     ?_LIN_calcParity:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826     0070                     ?_TMR0_WriteTimer:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829     0070                     ?_TMR0_SetInterruptHandler:	
  1830                           ; 1 bytes @ 0x0
  1831                           
  1832     0070                     ?_EUSART_SetRxInterruptHandler:	
  1833                           ; 1 bytes @ 0x0
  1834                           
  1835     0070                     ?_EUSART_Receive_ISR:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838     0070                     ?_EUSART_SetTxInterruptHandler:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841     0070                     ?_EUSART_Transmit_ISR:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844     0070                     ?_EUSART_SetFramingErrorHandler:	
  1845                           ; 1 bytes @ 0x0
  1846                           
  1847     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1848                           ; 1 bytes @ 0x0
  1849                           
  1850     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856     0070                     ?_EUSART_SetErrorHandler:	
  1857                           ; 1 bytes @ 0x0
  1858                           
  1859     0070                     ?_EUSART_DefaultErrorHandler:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862     0070                     ?_EUSART_RxDataHandler:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865     0070                     ?_TMR0_DefaultInterruptHandler:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868     0070                     ?_OSCILLATOR_Initialize:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871     0070                     ?_WDT_Initialize:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874     0070                     ?_POS_ON:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877     0070                     ?_POS_OFF:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880     0070                     ?_DRL_ON:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883     0070                     ?_DRL_OFF:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886     0070                     ?_LOBEAM_ON:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889     0070                     ?_LOBEAM_OFF:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892     0070                     ?_HIBEAM_ON:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895     0070                     ?_HIBEAM_OFF:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898     0070                     ?_LEFT_ON:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901     0070                     ?_LEFT_OFF:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904     0070                     ?_RIGHT_ON:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907     0070                     ?_RIGHT_OFF:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910     0070                     ?_LIN_Slave_Initialize:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913     0070                     ?_LIN_queuePacket:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0070                     ?_AutoBaud_Detect_ON:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919     0070                     ?_LIN_handler:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922     0070                     ?_LIN_timerHandler:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925     0070                     ?_PIN_MANAGER_Initialize:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928     0070                     ?_TMR0_Initialize:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931     0070                     ?_TMR0_ISR:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934     0070                     ?_INTERRUPT_InterruptManager:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937     0070                     ?_SYSTEM_Initialize:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940     0070                     ?_main:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943     0070                     ?i1_LIN_stopTimer:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946     0070                     ?_memcpy:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949     0070                     ?_memset:	
  1950                           ; 2 bytes @ 0x0
  1951                           
  1952     0070                     LIN_getFromTable@param:	
  1953                           ; 2 bytes @ 0x0
  1954                           
  1955     0070                     LIN_getChecksum@pid:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958     0070                     EUSART_Read@readValue:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961     0070                     EUSART_Write@txData:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964     0070                     TMR0_WriteTimer@timerVal:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1971                           ; 2 bytes @ 0x0
  1972                           
  1973     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1974                           ; 2 bytes @ 0x0
  1975                           
  1976     0070                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1977                           ; 2 bytes @ 0x0
  1978                           
  1979     0070                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1980                           ; 2 bytes @ 0x0
  1981                           
  1982     0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  1983                           ; 2 bytes @ 0x0
  1984                           
  1985     0070                     memcpy@d1:	
  1986                           ; 2 bytes @ 0x0
  1987                           
  1988     0070                     memset@dest:	
  1989                           ; 2 bytes @ 0x0
  1990                           
  1991     0070                     ??_LIN_stopTimer:	
  1992                           ; 2 bytes @ 0x0
  1993                           
  1994     0070                     ??_LIN_enableRx:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997     0070                     ??_LIN_disableRx:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000     0070                     ??_EUSART_is_rx_ready:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003     0070                     ??_EUSART_Read:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006     0070                     ??_EUSART_Write:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009     0070                     ??_LIN_calcParity:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012     0070                     ??_TMR0_WriteTimer:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015     0070                     ??_EUSART_Receive_ISR:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018     0070                     ??_EUSART_Transmit_ISR:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027     0070                     ??_EUSART_DefaultErrorHandler:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030     0070                     ??_EUSART_RxDataHandler:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033     0070                     ??_TMR0_DefaultInterruptHandler:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036     0070                     ??_OSCILLATOR_Initialize:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039     0070                     ??_WDT_Initialize:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042     0070                     ??_POS_ON:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045     0070                     ??_POS_OFF:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048     0070                     ??_DRL_ON:	
  2049                           ; 1 bytes @ 0x0
  2050                           
  2051     0070                     ??_DRL_OFF:	
  2052                           ; 1 bytes @ 0x0
  2053                           
  2054     0070                     ??_LOBEAM_ON:	
  2055                           ; 1 bytes @ 0x0
  2056                           
  2057     0070                     ??_LOBEAM_OFF:	
  2058                           ; 1 bytes @ 0x0
  2059                           
  2060     0070                     ??_HIBEAM_ON:	
  2061                           ; 1 bytes @ 0x0
  2062                           
  2063     0070                     ??_HIBEAM_OFF:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066     0070                     ??_LEFT_ON:	
  2067                           ; 1 bytes @ 0x0
  2068                           
  2069     0070                     ??_LEFT_OFF:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072     0070                     ??_RIGHT_ON:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075     0070                     ??_RIGHT_OFF:	
  2076                           ; 1 bytes @ 0x0
  2077                           
  2078     0070                     ??_AutoBaud_Detect_ON:	
  2079                           ; 1 bytes @ 0x0
  2080                           
  2081     0070                     ??_LIN_timerHandler:	
  2082                           ; 1 bytes @ 0x0
  2083                           
  2084     0070                     ??_PIN_MANAGER_Initialize:	
  2085                           ; 1 bytes @ 0x0
  2086                           
  2087     0070                     ??_TMR0_ISR:	
  2088                           ; 1 bytes @ 0x0
  2089                           
  2090     0070                     ??_INTERRUPT_InterruptManager:	
  2091                           ; 1 bytes @ 0x0
  2092                           
  2093     0070                     ??i1_LIN_stopTimer:	
  2094                           ; 1 bytes @ 0x0
  2095                           
  2096                           
  2097                           ; 1 bytes @ 0x0
  2098     0070                     	ds	1
  2099     0071                     LIN_calcParity@CMD:
  2100     0071                     LIN_startTimer@timeout:	
  2101                           ; 1 bytes @ 0x1
  2102                           
  2103     0071                     LIN_getChecksum@data:	
  2104                           ; 1 bytes @ 0x1
  2105                           
  2106     0071                     ??_LIN_startTimer:	
  2107                           ; 2 bytes @ 0x1
  2108                           
  2109     0071                     ??_LIN_getFromTable:	
  2110                           ; 1 bytes @ 0x1
  2111                           
  2112                           
  2113                           ; 1 bytes @ 0x1
  2114     0071                     	ds	1
  2115     0072                     ?_LIN_init:
  2116     0072                     LIN_calcParity@PID:	
  2117                           ; 1 bytes @ 0x2
  2118                           
  2119     0072                     LIN_init@command:	
  2120                           ; 1 bytes @ 0x2
  2121                           
  2122     0072                     memcpy@s1:	
  2123                           ; 2 bytes @ 0x2
  2124                           
  2125     0072                     memset@c:	
  2126                           ; 2 bytes @ 0x2
  2127                           
  2128     0072                     ??_LIN_setTimerHandler:	
  2129                           ; 2 bytes @ 0x2
  2130                           
  2131     0072                     ??_EUSART_Initialize:	
  2132                           ; 1 bytes @ 0x2
  2133                           
  2134     0072                     ??_TMR0_SetInterruptHandler:	
  2135                           ; 1 bytes @ 0x2
  2136                           
  2137     0072                     ??_EUSART_SetRxInterruptHandler:	
  2138                           ; 1 bytes @ 0x2
  2139                           
  2140     0072                     ??_EUSART_SetTxInterruptHandler:	
  2141                           ; 1 bytes @ 0x2
  2142                           
  2143     0072                     ??_EUSART_SetFramingErrorHandler:	
  2144                           ; 1 bytes @ 0x2
  2145                           
  2146     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2147                           ; 1 bytes @ 0x2
  2148                           
  2149     0072                     ??_EUSART_SetErrorHandler:	
  2150                           ; 1 bytes @ 0x2
  2151                           
  2152     0072                     ??_TMR0_Initialize:	
  2153                           ; 1 bytes @ 0x2
  2154                           
  2155                           
  2156                           ; 1 bytes @ 0x2
  2157     0072                     	ds	1
  2158     0073                     LIN_getFromTable@cmd:
  2159     0073                     ??_LIN_getChecksum:	
  2160                           ; 1 bytes @ 0x3
  2161                           
  2162                           
  2163                           ; 1 bytes @ 0x3
  2164     0073                     	ds	1
  2165     0074                     LIN_getFromTable@length:
  2166     0074                     LIN_init@processData:	
  2167                           ; 1 bytes @ 0x4
  2168                           
  2169     0074                     memcpy@n:	
  2170                           ; 2 bytes @ 0x4
  2171                           
  2172     0074                     memset@n:	
  2173                           ; 2 bytes @ 0x4
  2174                           
  2175                           
  2176                           ; 2 bytes @ 0x4
  2177     0074                     	ds	1
  2178     0075                     LIN_getChecksum@length:
  2179     0075                     LIN_getFromTable@rxCommand:	
  2180                           ; 1 bytes @ 0x5
  2181                           
  2182                           
  2183                           ; 2 bytes @ 0x5
  2184     0075                     	ds	1
  2185     0076                     LIN_init@tableLength:
  2186     0076                     LIN_getChecksum@i:	
  2187                           ; 1 bytes @ 0x6
  2188                           
  2189     0076                     memcpy@tmp:	
  2190                           ; 1 bytes @ 0x6
  2191                           
  2192     0076                     memset@p:	
  2193                           ; 1 bytes @ 0x6
  2194                           
  2195     0076                     ??_LIN_init:	
  2196                           ; 1 bytes @ 0x6
  2197                           
  2198     0076                     ??_memcpy:	
  2199                           ; 1 bytes @ 0x6
  2200                           
  2201     0076                     ??_memset:	
  2202                           ; 1 bytes @ 0x6
  2203                           
  2204                           
  2205                           ; 1 bytes @ 0x6
  2206     0076                     	ds	1
  2207     0077                     LIN_checkPID@pid:
  2208     0077                     memcpy@d:	
  2209                           ; 1 bytes @ 0x7
  2210                           
  2211     0077                     LIN_getChecksum@checksum:	
  2212                           ; 1 bytes @ 0x7
  2213                           
  2214     0077                     ??_LIN_checkPID:	
  2215                           ; 2 bytes @ 0x7
  2216                           
  2217     0077                     ??_LIN_Slave_Initialize:	
  2218                           ; 1 bytes @ 0x7
  2219                           
  2220     0077                     ??_SYSTEM_Initialize:	
  2221                           ; 1 bytes @ 0x7
  2222                           
  2223                           
  2224                           ; 1 bytes @ 0x7
  2225     0077                     	ds	1
  2226     0078                     memcpy@s:
  2227                           
  2228                           ; 1 bytes @ 0x8
  2229     0078                     	ds	1
  2230     0079                     ?_LIN_getPacket:
  2231     0079                     ?_LIN_sendPacket:	
  2232                           ; 1 bytes @ 0x9
  2233                           
  2234     0079                     LIN_sendPacket@pid:	
  2235                           ; 1 bytes @ 0x9
  2236                           
  2237     0079                     LIN_getPacket@data:	
  2238                           ; 1 bytes @ 0x9
  2239                           
  2240                           
  2241                           ; 1 bytes @ 0x9
  2242     0079                     	ds	1
  2243     007A                     LIN_getPacket@cmd:
  2244     007A                     LIN_sendPacket@data:	
  2245                           ; 1 bytes @ 0xA
  2246                           
  2247     007A                     ??_LIN_getPacket:	
  2248                           ; 2 bytes @ 0xA
  2249                           
  2250                           
  2251                           ; 1 bytes @ 0xA
  2252     007A                     	ds	1
  2253     007B                     ??_processLIN:
  2254                           
  2255                           ; 1 bytes @ 0xB
  2256     007B                     	ds	1
  2257     007C                     LIN_sendPacket@length:
  2258     007C                     ??_LIN_sendPacket:	
  2259                           ; 1 bytes @ 0xC
  2260                           
  2261                           
  2262                           ; 1 bytes @ 0xC
  2263     007C                     	ds	1
  2264     007D                     LIN_sendPacket@i:
  2265                           
  2266                           ; 1 bytes @ 0xD
  2267     007D                     	ds	1
  2268     007E                     ??_main:
  2269                           
  2270                           	psect	cstackBANK0
  2271     0066                     __pcstackBANK0:	
  2272                           ; 1 bytes @ 0xE
  2273                           
  2274     0066                     processLIN@cmd:
  2275     0066                     ??_LIN_queuePacket:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278                           
  2279                           ; 1 bytes @ 0x0
  2280     0066                     	ds	1
  2281     0067                     LIN_queuePacket@cmd:
  2282     0067                     processLIN@tempRxData:	
  2283                           ; 1 bytes @ 0x1
  2284                           
  2285                           
  2286                           ; 8 bytes @ 0x1
  2287     0067                     	ds	1
  2288     0068                     LIN_queuePacket@i:
  2289                           
  2290                           ; 1 bytes @ 0x2
  2291     0068                     	ds	1
  2292     0069                     LIN_queuePacket@tempSchedule:
  2293                           
  2294                           ; 2 bytes @ 0x3
  2295     0069                     	ds	6
  2296                           
  2297                           	psect	maintext
  2298     05E3                     __pmaintext:	
  2299 ;;
  2300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2301 ;;
  2302 ;; *************** function _main *****************
  2303 ;; Defined at:
  2304 ;;		line 125 in file "main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : B1F/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2318 ;;      Params:         0       0       0       0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels required when called: 9
  2324 ;; This function calls:
  2325 ;;		_LIN_handler
  2326 ;;		_SYSTEM_Initialize
  2327 ;; This function is called by:
  2328 ;;		Startup code after reset
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332     05E3                     _main:	
  2333                           ;psect for function _main
  2334                           
  2335     05E3                     l2607:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2338                           
  2339                           
  2340                           ;main.c: 127:   SYSTEM_Initialize();
  2341     05E3  3185  258D  3185   	fcall	_SYSTEM_Initialize
  2342     05E6                     l2609:
  2343                           
  2344                           ;main.c: 133:   (INTCONbits.GIE = 1);
  2345     05E6  178B               	bsf	11,7	;volatile
  2346     05E7                     l2611:
  2347                           
  2348                           ;main.c: 136:   (INTCONbits.PEIE = 1);
  2349     05E7  170B               	bsf	11,6	;volatile
  2350     05E8                     l2613:
  2351                           
  2352                           ;main.c: 146:     LIN_handler();
  2353     05E8  3180  2052  3185   	fcall	_LIN_handler
  2354     05EB  2DE8               	goto	l2613
  2355     05EC  3180  2838         	ljmp	start
  2356     05EE                     __end_of_main:
  2357                           
  2358                           	psect	text1
  2359     058D                     __ptext1:	
  2360 ;; *************** function _SYSTEM_Initialize *****************
  2361 ;; Defined at:
  2362 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2376 ;;      Params:         0       0       0       0       0       0       0       0
  2377 ;;      Locals:         0       0       0       0       0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0       0       0       0
  2379 ;;      Totals:         0       0       0       0       0       0       0       0
  2380 ;;Total ram usage:        0 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 8
  2383 ;; This function calls:
  2384 ;;		_EUSART_Initialize
  2385 ;;		_LIN_Slave_Initialize
  2386 ;;		_OSCILLATOR_Initialize
  2387 ;;		_PIN_MANAGER_Initialize
  2388 ;;		_TMR0_Initialize
  2389 ;;		_WDT_Initialize
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395     058D                     _SYSTEM_Initialize:	
  2396                           ;psect for function _SYSTEM_Initialize
  2397                           
  2398     058D                     l2389:	
  2399                           ;incstack = 0
  2400                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2401                           
  2402                           
  2403                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2404     058D  3185  2503  3185   	fcall	_PIN_MANAGER_Initialize
  2405                           
  2406                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2407     0590  3185  25D7  3185   	fcall	_OSCILLATOR_Initialize
  2408                           
  2409                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2410     0593  3186  264C  3185   	fcall	_WDT_Initialize
  2411     0596                     l2391:
  2412                           
  2413                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2414     0596  3185  2579  3185   	fcall	_TMR0_Initialize
  2415     0599                     l2393:
  2416                           
  2417                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2418     0599  3183  2388  3185   	fcall	_EUSART_Initialize
  2419     059C                     l2395:
  2420                           
  2421                           ;mcc_generated_files/mcc.c: 58:     LIN_Slave_Initialize();
  2422     059C  3185  25B0  3185   	fcall	_LIN_Slave_Initialize
  2423     059F                     l566:
  2424     059F  0008               	return
  2425     05A0                     __end_of_SYSTEM_Initialize:
  2426                           
  2427                           	psect	text2
  2428     064C                     __ptext2:	
  2429 ;; *************** function _WDT_Initialize *****************
  2430 ;; Defined at:
  2431 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		None
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2445 ;;      Params:         0       0       0       0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0
  2448 ;;      Totals:         0       0       0       0       0       0       0       0
  2449 ;;Total ram usage:        0 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 4
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_SYSTEM_Initialize
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459     064C                     _WDT_Initialize:	
  2460                           ;psect for function _WDT_Initialize
  2461                           
  2462     064C                     l1633:	
  2463                           ;incstack = 0
  2464                           ; Regs used in _WDT_Initialize: []
  2465                           
  2466                           
  2467                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  2468     064C  3016               	movlw	22
  2469     064D  0021               	movlb	1	; select bank1
  2470     064E  0097               	movwf	23	;volatile
  2471     064F                     l575:
  2472     064F  0008               	return
  2473     0650                     __end_of_WDT_Initialize:
  2474                           
  2475                           	psect	text3
  2476     0579                     __ptext3:	
  2477 ;; *************** function _TMR0_Initialize *****************
  2478 ;; Defined at:
  2479 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2493 ;;      Params:         0       0       0       0       0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0
  2496 ;;      Totals:         0       0       0       0       0       0       0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 5
  2500 ;; This function calls:
  2501 ;;		_TMR0_SetInterruptHandler
  2502 ;; This function is called by:
  2503 ;;		_SYSTEM_Initialize
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507     0579                     _TMR0_Initialize:	
  2508                           ;psect for function _TMR0_Initialize
  2509                           
  2510     0579                     l2249:	
  2511                           ;incstack = 0
  2512                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2513                           
  2514                           
  2515                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  2516     0579  0021               	movlb	1	; select bank1
  2517     057A  0815               	movf	21,w	;volatile
  2518     057B  39C0               	andlw	192
  2519     057C  3814               	iorlw	20
  2520     057D  0095               	movwf	21	;volatile
  2521     057E                     l2251:
  2522                           
  2523                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  2524     057E  3006               	movlw	6
  2525     057F  0020               	movlb	0	; select bank0
  2526     0580  0095               	movwf	21	;volatile
  2527     0581                     l2253:
  2528                           
  2529                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  2530     0581  3006               	movlw	6
  2531     0582  00C8               	movwf	_timer0ReloadVal	;volatile
  2532     0583                     l2255:
  2533                           
  2534                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2535     0583  110B               	bcf	11,2	;volatile
  2536     0584                     l2257:
  2537                           
  2538                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2539     0584  168B               	bsf	11,5	;volatile
  2540     0585                     l2259:
  2541                           
  2542                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2543     0585  307D               	movlw	low _TMR0_DefaultInterruptHandler
  2544     0586  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2545     0587  3006               	movlw	high _TMR0_DefaultInterruptHandler
  2546     0588  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2547     0589  3186  2605  3185   	fcall	_TMR0_SetInterruptHandler
  2548     058C                     l489:
  2549     058C  0008               	return
  2550     058D                     __end_of_TMR0_Initialize:
  2551                           
  2552                           	psect	text4
  2553     0503                     __ptext4:	
  2554 ;; *************** function _PIN_MANAGER_Initialize *****************
  2555 ;; Defined at:
  2556 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		status,2
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2570 ;;      Params:         0       0       0       0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0
  2573 ;;      Totals:         0       0       0       0       0       0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 4
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_SYSTEM_Initialize
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584     0503                     _PIN_MANAGER_Initialize:	
  2585                           ;psect for function _PIN_MANAGER_Initialize
  2586                           
  2587     0503                     l1599:	
  2588                           ;incstack = 0
  2589                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2590                           
  2591                           
  2592                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2593     0503  0022               	movlb	2	; select bank2
  2594     0504  0190               	clrf	16	;volatile
  2595                           
  2596                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2597     0505  018C               	clrf	12	;volatile
  2598                           
  2599                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2600     0506  018D               	clrf	13	;volatile
  2601                           
  2602                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  2603     0507  018E               	clrf	14	;volatile
  2604     0508                     l1601:
  2605                           
  2606                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2607     0508  3008               	movlw	8
  2608     0509  0021               	movlb	1	; select bank1
  2609     050A  0090               	movwf	16	;volatile
  2610     050B                     l1603:
  2611                           
  2612                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2613     050B  30FF               	movlw	255
  2614     050C  008C               	movwf	12	;volatile
  2615     050D                     l1605:
  2616                           
  2617                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
  2618     050D  30C0               	movlw	192
  2619     050E  008D               	movwf	13	;volatile
  2620     050F                     l1607:
  2621                           
  2622                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xBF;
  2623     050F  30BF               	movlw	191
  2624     0510  008E               	movwf	14	;volatile
  2625                           
  2626                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  2627     0511  0023               	movlb	3	; select bank3
  2628     0512  018D               	clrf	13	;volatile
  2629     0513                     l1609:
  2630                           
  2631                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  2632     0513  303F               	movlw	63
  2633     0514  008C               	movwf	12	;volatile
  2634                           
  2635                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2636     0515  0024               	movlb	4	; select bank4
  2637     0516  0190               	clrf	16	;volatile
  2638                           
  2639                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2640     0517  018D               	clrf	13	;volatile
  2641     0518                     l1611:
  2642                           
  2643                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2644     0518  0021               	movlb	1	; select bank1
  2645     0519  1795               	bsf	21,7	;volatile
  2646                           
  2647                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2648     051A  0022               	movlb	2	; select bank2
  2649     051B  019D               	clrf	29	;volatile
  2650     051C                     l329:
  2651     051C  0008               	return
  2652     051D                     __end_of_PIN_MANAGER_Initialize:
  2653                           
  2654                           	psect	text5
  2655     05D7                     __ptext5:	
  2656 ;; *************** function _OSCILLATOR_Initialize *****************
  2657 ;; Defined at:
  2658 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		status,2
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2672 ;;      Params:         0       0       0       0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0
  2675 ;;      Totals:         0       0       0       0       0       0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 4
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_SYSTEM_Initialize
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686     05D7                     _OSCILLATOR_Initialize:	
  2687                           ;psect for function _OSCILLATOR_Initialize
  2688                           
  2689     05D7                     l1629:	
  2690                           ;incstack = 0
  2691                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2692                           
  2693                           
  2694                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2695     05D7  3070               	movlw	112
  2696     05D8  0021               	movlb	1	; select bank1
  2697     05D9  0099               	movwf	25	;volatile
  2698     05DA                     l1631:
  2699                           
  2700                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2701     05DA  0198               	clrf	24	;volatile
  2702                           
  2703                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2704     05DB  0022               	movlb	2	; select bank2
  2705     05DC  0196               	clrf	22	;volatile
  2706     05DD                     l569:	
  2707                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2708                           
  2709                           
  2710                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2711     05DD  0021               	movlb	1	; select bank1
  2712     05DE  1F1A               	btfss	26,6	;volatile
  2713     05DF  2DE1               	goto	u701
  2714     05E0  2DE2               	goto	u700
  2715     05E1                     u701:
  2716     05E1  2DDD               	goto	l569
  2717     05E2                     u700:
  2718     05E2                     l572:
  2719     05E2  0008               	return
  2720     05E3                     __end_of_OSCILLATOR_Initialize:
  2721                           
  2722                           	psect	text6
  2723     05B0                     __ptext6:	
  2724 ;; *************** function _LIN_Slave_Initialize *****************
  2725 ;; Defined at:
  2726 ;;		line 146 in file "LINDrivers/lin_app.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2740 ;;      Params:         0       0       0       0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0       0
  2743 ;;      Totals:         0       0       0       0       0       0       0       0
  2744 ;;Total ram usage:        0 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 7
  2747 ;; This function calls:
  2748 ;;		_LIN_init
  2749 ;; This function is called by:
  2750 ;;		_SYSTEM_Initialize
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754     05B0                     _LIN_Slave_Initialize:	
  2755                           ;psect for function _LIN_Slave_Initialize
  2756                           
  2757     05B0                     l2033:	
  2758                           ;incstack = 0
  2759                           ; Regs used in _LIN_Slave_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2760                           
  2761                           
  2762                           ;LINDrivers/lin_app.c: 148:   LIN_init((sizeof(scheduleTable)/sizeof(lin_rx_cmd_t)), sch
      +                          eduleTable, processLIN);
  2763     05B0  3029               	movlw	low (_scheduleTable| (0+32768))
  2764     05B1  00F2               	movwf	LIN_init@command
  2765     05B2  3086               	movlw	high (_scheduleTable| (0+32768))
  2766     05B3  00F3               	movwf	LIN_init@command+1
  2767     05B4  3072               	movlw	low _processLIN
  2768     05B5  00F4               	movwf	LIN_init@processData
  2769     05B6  3001               	movlw	high _processLIN
  2770     05B7  00F5               	movwf	LIN_init@processData+1
  2771     05B8  3001               	movlw	1
  2772     05B9  3185  254E  3185   	fcall	_LIN_init
  2773     05BC                     l81:
  2774     05BC  0008               	return
  2775     05BD                     __end_of_LIN_Slave_Initialize:
  2776                           
  2777                           	psect	text7
  2778     054E                     __ptext7:	
  2779 ;; *************** function _LIN_init *****************
  2780 ;; Defined at:
  2781 ;;		line 58 in file "LINDrivers/lin_slave.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  tableLength     1    wreg     unsigned char 
  2784 ;;  command         2    2[COMMON] const PTR const struct .
  2785 ;;		 -> scheduleTable(5), 
  2786 ;;  processData     2    4[COMMON] PTR FTN()void 
  2787 ;;		 -> processLIN(1), 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  tableLength     1    6[COMMON] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2799 ;;      Params:         4       0       0       0       0       0       0       0
  2800 ;;      Locals:         1       0       0       0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0
  2802 ;;      Totals:         5       0       0       0       0       0       0       0
  2803 ;;Total ram usage:        5 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; Hardware stack levels required when called: 6
  2806 ;; This function calls:
  2807 ;;		_LIN_enableRx
  2808 ;;		_LIN_setTimerHandler
  2809 ;;		_LIN_stopTimer
  2810 ;; This function is called by:
  2811 ;;		_LIN_Slave_Initialize
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815     054E                     _LIN_init:	
  2816                           ;psect for function _LIN_init
  2817                           
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2821                           ;LIN_init@tableLength stored from wreg
  2822     054E  00F6               	movwf	LIN_init@tableLength
  2823     054F                     l1921:
  2824                           
  2825                           ;LINDrivers/lin_slave.c: 58: void LIN_init(uint8_t tableLength, const lin_rx_cmd_t *cons
      +                          t command,;LINDrivers/lin_slave.c: 59:               void (*processData)(void)) {;LINDri
      +                          vers/lin_slave.c: 60:   LIN_rxCommand = command;
  2826     054F  0873               	movf	LIN_init@command+1,w
  2827     0550  0020               	movlb	0	; select bank0
  2828     0551  00C5               	movwf	_LIN_rxCommand+1
  2829     0552  0872               	movf	LIN_init@command,w
  2830     0553  00C4               	movwf	_LIN_rxCommand
  2831                           
  2832                           ;LINDrivers/lin_slave.c: 61:   LIN_rxCommandLength = tableLength;
  2833     0554  0876               	movf	LIN_init@tableLength,w
  2834     0555  00D4               	movwf	_LIN_rxCommandLength
  2835                           
  2836                           ;LINDrivers/lin_slave.c: 62:   LIN_processData = processData;
  2837     0556  0875               	movf	LIN_init@processData+1,w
  2838     0557  00C7               	movwf	_LIN_processData+1
  2839     0558  0874               	movf	LIN_init@processData,w
  2840     0559  00C6               	movwf	_LIN_processData
  2841     055A                     l1923:
  2842                           
  2843                           ;LINDrivers/lin_slave.c: 63:   LIN_stopTimer();
  2844     055A  3186  262E  3185   	fcall	_LIN_stopTimer
  2845     055D                     l1925:
  2846                           
  2847                           ;LINDrivers/lin_slave.c: 64:   LIN_enableRx();
  2848     055D  3186  2638  3185   	fcall	_LIN_enableRx
  2849     0560                     l1927:
  2850                           
  2851                           ;LINDrivers/lin_slave.c: 65:   LIN_setTimerHandler();
  2852     0560  3185  25F7  3185   	fcall	_LIN_setTimerHandler
  2853     0563                     l194:
  2854     0563  0008               	return
  2855     0564                     __end_of_LIN_init:
  2856                           
  2857                           	psect	text8
  2858     05F7                     __ptext8:	
  2859 ;; *************** function _LIN_setTimerHandler *****************
  2860 ;; Defined at:
  2861 ;;		line 318 in file "LINDrivers/lin_slave.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, pclath, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2875 ;;      Params:         0       0       0       0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 5
  2882 ;; This function calls:
  2883 ;;		_TMR0_SetInterruptHandler
  2884 ;; This function is called by:
  2885 ;;		_LIN_init
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889     05F7                     _LIN_setTimerHandler:	
  2890                           ;psect for function _LIN_setTimerHandler
  2891                           
  2892     05F7                     l1865:	
  2893                           ;incstack = 0
  2894                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  2895                           
  2896     05F7  30CA               	movlw	low _LIN_timerHandler
  2897     05F8  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2898     05F9  3005               	movlw	high _LIN_timerHandler
  2899     05FA  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2900     05FB  3186  2605  3185   	fcall	_TMR0_SetInterruptHandler
  2901     05FE                     l285:
  2902     05FE  0008               	return
  2903     05FF                     __end_of_LIN_setTimerHandler:
  2904                           
  2905                           	psect	text9
  2906     0605                     __ptext9:	
  2907 ;; *************** function _TMR0_SetInterruptHandler *****************
  2908 ;; Defined at:
  2909 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2912 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2924 ;;      Params:         2       0       0       0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0
  2927 ;;      Totals:         2       0       0       0       0       0       0       0
  2928 ;;Total ram usage:        2 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 4
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_LIN_setTimerHandler
  2935 ;;		_TMR0_Initialize
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939     0605                     _TMR0_SetInterruptHandler:	
  2940                           ;psect for function _TMR0_SetInterruptHandler
  2941                           
  2942     0605                     l1857:	
  2943                           ;incstack = 0
  2944                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2945                           
  2946                           
  2947                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2948     0605  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2949     0606  0020               	movlb	0	; select bank0
  2950     0607  00B9               	movwf	_TMR0_InterruptHandler+1
  2951     0608  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2952     0609  00B8               	movwf	_TMR0_InterruptHandler
  2953     060A                     l505:
  2954     060A  0008               	return
  2955     060B                     __end_of_TMR0_SetInterruptHandler:
  2956                           
  2957                           	psect	text10
  2958     0052                     __ptext10:	
  2959 ;; *************** function _LIN_handler *****************
  2960 ;; Defined at:
  2961 ;;		line 100 in file "LINDrivers/lin_slave.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  temp            1    0        unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      enum E204
  2968 ;; Registers used:
  2969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2975 ;;      Params:         0       0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       5       0       0       0       0       0
  2978 ;;      Totals:         0       0       5       0       0       0       0       0
  2979 ;;Total ram usage:        5 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 7
  2982 ;; This function calls:
  2983 ;;		NULL
  2984 ;;		_AutoBaud_Detect_ON
  2985 ;;		_EUSART_Initialize
  2986 ;;		_EUSART_Read
  2987 ;;		_EUSART_is_rx_ready
  2988 ;;		_LIN_checkPID
  2989 ;;		_LIN_disableRx
  2990 ;;		_LIN_enableRx
  2991 ;;		_LIN_getChecksum
  2992 ;;		_LIN_getFromTable
  2993 ;;		_LIN_queuePacket
  2994 ;;		_LIN_startTimer
  2995 ;;		_LIN_stopTimer
  2996 ;;		_memset
  2997 ;;		_processLIN
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003     0052                     _LIN_handler:	
  3004                           ;psect for function _LIN_handler
  3005                           
  3006     0052                     l2517:	
  3007                           ;incstack = 0
  3008                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3009                           
  3010                           
  3011                           ;LINDrivers/lin_slave.c: 101:   static lin_rx_state_t LIN_rxState = LIN_RX_IDLE;;LINDriv
      +                          ers/lin_slave.c: 102:   static uint8_t rxDataIndex = 0;;LINDrivers/lin_slave.c: 103:   u
      +                          int8_t temp;;LINDrivers/lin_slave.c: 105:   if (LIN_rxInProgress == 1) {
  3012     0052  0020               	movlb	0	; select bank0
  3013     0053  0355               	decf	_LIN_rxInProgress,w
  3014     0054  1D03               	btfss	3,2
  3015     0055  2857               	goto	u1921
  3016     0056  2858               	goto	u1920
  3017     0057                     u1921:
  3018     0057  294B               	goto	l2599
  3019     0058                     u1920:
  3020     0058                     l2519:
  3021                           
  3022                           ;LINDrivers/lin_slave.c: 106:     if (LIN_timerRunning == 0) {
  3023     0058  0853               	movf	_LIN_timerRunning,w
  3024     0059  1D03               	btfss	3,2
  3025     005A  285C               	goto	u1931
  3026     005B  285D               	goto	u1930
  3027     005C                     u1931:
  3028     005C  294B               	goto	l2599
  3029     005D                     u1930:
  3030     005D                     l2521:
  3031                           
  3032                           ;LINDrivers/lin_slave.c: 108:       LIN_rxState = LIN_RX_ERROR;
  3033     005D  3008               	movlw	8
  3034     005E  00D1               	movwf	LIN_handler@LIN_rxState
  3035     005F  294B               	goto	l2599
  3036     0060                     l2523:
  3037                           
  3038                           ;LINDrivers/lin_slave.c: 114:       LIN_startTimer(41);
  3039     0060  3029               	movlw	41
  3040     0061  3185  25BD  3180   	fcall	_LIN_startTimer
  3041     0064                     l2525:
  3042                           
  3043                           ;LINDrivers/lin_slave.c: 115:       LIN_rxInProgress = 1;
  3044     0064  3001               	movlw	1
  3045     0065  0020               	movlb	0	; select bank0
  3046     0066  00D5               	movwf	_LIN_rxInProgress
  3047     0067                     l2527:
  3048                           
  3049                           ;LINDrivers/lin_slave.c: 117:       AutoBaud_Detect_ON();
  3050     0067  3186  2642  3180   	fcall	_AutoBaud_Detect_ON
  3051     006A                     l2529:
  3052                           
  3053                           ;LINDrivers/lin_slave.c: 118:       LIN_rxState = LIN_RX_SYNC;
  3054     006A  3002               	movlw	2
  3055     006B  0020               	movlb	0	; select bank0
  3056     006C  00D1               	movwf	LIN_handler@LIN_rxState
  3057                           
  3058                           ;LINDrivers/lin_slave.c: 119:     break;
  3059     006D  2971               	goto	l236
  3060     006E                     l216:	
  3061                           ;LINDrivers/lin_slave.c: 129:   case LIN_RX_SYNC:
  3062                           
  3063                           
  3064                           ;LINDrivers/lin_slave.c: 130:     if (!BAUDCONbits.ABDEN) {
  3065     006E  0023               	movlb	3	; select bank3
  3066     006F  181F               	btfsc	31,0	;volatile
  3067     0070  2872               	goto	u1941
  3068     0071  2873               	goto	u1940
  3069     0072                     u1941:
  3070     0072  2971               	goto	l236
  3071     0073                     u1940:
  3072     0073                     l2531:
  3073                           
  3074                           ;LINDrivers/lin_slave.c: 131:       LIN_rxState = LIN_RX_PID;
  3075     0073  3003               	movlw	3
  3076     0074  0020               	movlb	0	; select bank0
  3077     0075  00D1               	movwf	LIN_handler@LIN_rxState
  3078     0076                     l2533:
  3079                           
  3080                           ;LINDrivers/lin_slave.c: 134:       LIN_disableRx();
  3081     0076  3186  263D  3180   	fcall	_LIN_disableRx
  3082     0079                     l2535:
  3083                           
  3084                           ;LINDrivers/lin_slave.c: 135:       EUSART_Initialize();
  3085     0079  3183  2388  3180   	fcall	_EUSART_Initialize
  3086     007C                     l2537:
  3087                           
  3088                           ;LINDrivers/lin_slave.c: 136:       PIE1bits.RCIE = 1;
  3089     007C  0021               	movlb	1	; select bank1
  3090     007D  1691               	bsf	17,5	;volatile
  3091     007E  2971               	goto	l236
  3092     007F                     l2539:
  3093                           
  3094                           ;LINDrivers/lin_slave.c: 140:     if (EUSART_is_rx_ready() > 0) {
  3095     007F  3185  25EE  3180   	fcall	_EUSART_is_rx_ready
  3096     0082  3A00               	xorlw	0
  3097     0083  1903               	skipnz
  3098     0084  2886               	goto	u1951
  3099     0085  2887               	goto	u1950
  3100     0086                     u1951:
  3101     0086  2971               	goto	l236
  3102     0087                     u1950:
  3103     0087                     l2541:
  3104                           
  3105                           ;LINDrivers/lin_slave.c: 141:       LIN_packet.PID = EUSART_Read();
  3106     0087  3184  247E  3180   	fcall	_EUSART_Read
  3107     008A  0020               	movlb	0	; select bank0
  3108     008B  00D9               	movwf	_LIN_packet
  3109     008C                     l2543:
  3110     008C  0023               	movlb	3	; select bank3
  3111     008D  0819               	movf	25,w	;volatile
  3112     008E                     l2545:
  3113                           
  3114                           ;LINDrivers/lin_slave.c: 145:       if (LIN_checkPID(LIN_packet.PID) == 0) {
  3115     008E  0020               	movlb	0	; select bank0
  3116     008F  0859               	movf	_LIN_packet,w
  3117     0090  3185  251D  3180   	fcall	_LIN_checkPID
  3118     0093  3A00               	xorlw	0
  3119     0094  1D03               	skipz
  3120     0095  2897               	goto	u1961
  3121     0096  2898               	goto	u1960
  3122     0097                     u1961:
  3123     0097  289C               	goto	l2549
  3124     0098                     u1960:
  3125     0098                     l2547:
  3126                           
  3127                           ;LINDrivers/lin_slave.c: 146:         LIN_rxState = LIN_RX_ERROR;
  3128     0098  3008               	movlw	8
  3129     0099  0020               	movlb	0	; select bank0
  3130     009A  00D1               	movwf	LIN_handler@LIN_rxState
  3131                           
  3132                           ;LINDrivers/lin_slave.c: 147:         break;
  3133     009B  2971               	goto	l236
  3134     009C                     l2549:
  3135                           
  3136                           ;LINDrivers/lin_slave.c: 149:       LIN_packet.type = LIN_getFromTable(LIN_packet.PID, T
      +                          YPE);
  3137     009C  01F0               	clrf	LIN_getFromTable@param
  3138     009D  0AF0               	incf	LIN_getFromTable@param,f
  3139     009E  0020               	movlb	0	; select bank0
  3140     009F  0859               	movf	_LIN_packet,w
  3141     00A0  3183  232A  3180   	fcall	_LIN_getFromTable
  3142     00A3  0020               	movlb	0	; select bank0
  3143     00A4  00E3               	movwf	_LIN_packet+10
  3144     00A5                     l2551:
  3145                           
  3146                           ;LINDrivers/lin_slave.c: 150:       if (LIN_packet.type == RECEIVE) {
  3147     00A5  0363               	decf	_LIN_packet+10,w
  3148     00A6  1D03               	btfss	3,2
  3149     00A7  28A9               	goto	u1971
  3150     00A8  28AA               	goto	u1970
  3151     00A9                     u1971:
  3152     00A9  28B5               	goto	l2557
  3153     00AA                     u1970:
  3154     00AA                     l2553:
  3155                           
  3156                           ;LINDrivers/lin_slave.c: 151:         LIN_packet.length = LIN_getFromTable(LIN_packet.PI
      +                          D, LENGTH);
  3157     00AA  3002               	movlw	2
  3158     00AB  00F0               	movwf	LIN_getFromTable@param
  3159     00AC  0859               	movf	_LIN_packet,w
  3160     00AD  3183  232A  3180   	fcall	_LIN_getFromTable
  3161     00B0  0020               	movlb	0	; select bank0
  3162     00B1  00E4               	movwf	_LIN_packet+11
  3163     00B2                     l2555:
  3164                           
  3165                           ;LINDrivers/lin_slave.c: 152:         LIN_rxState = LIN_RX_DATA;
  3166     00B2  3004               	movlw	4
  3167     00B3  00D1               	movwf	LIN_handler@LIN_rxState
  3168                           
  3169                           ;LINDrivers/lin_slave.c: 153:       } else {
  3170     00B4  2971               	goto	l236
  3171     00B5                     l2557:
  3172                           
  3173                           ;LINDrivers/lin_slave.c: 154:         LIN_disableRx();
  3174     00B5  3186  263D  3180   	fcall	_LIN_disableRx
  3175     00B8                     l2559:
  3176                           
  3177                           ;LINDrivers/lin_slave.c: 155:         LIN_rxState = LIN_RX_TX_DATA;
  3178     00B8  3006               	movlw	6
  3179     00B9  0020               	movlb	0	; select bank0
  3180     00BA  00D1               	movwf	LIN_handler@LIN_rxState
  3181     00BB  2971               	goto	l236
  3182     00BC                     l2561:
  3183                           
  3184                           ;LINDrivers/lin_slave.c: 160:     if (EUSART_is_rx_ready() > 0) {
  3185     00BC  3185  25EE  3180   	fcall	_EUSART_is_rx_ready
  3186     00BF  3A00               	xorlw	0
  3187     00C0  1903               	skipnz
  3188     00C1  28C3               	goto	u1981
  3189     00C2  28C4               	goto	u1980
  3190     00C3                     u1981:
  3191     00C3  2971               	goto	l236
  3192     00C4                     u1980:
  3193     00C4                     l2563:
  3194                           
  3195                           ;LINDrivers/lin_slave.c: 161:       LIN_packet.data[rxDataIndex] = EUSART_Read();
  3196     00C4  3184  247E  3180   	fcall	_EUSART_Read
  3197     00C7  0021               	movlb	1	; select bank1
  3198     00C8  00A8               	movwf	??_LIN_handler^(0+128)
  3199     00C9  305A               	movlw	low (_LIN_packet+1)
  3200     00CA  00A9               	movwf	(??_LIN_handler+1)^(0+128)
  3201     00CB  3000               	movlw	high (_LIN_packet+1)
  3202     00CC  00AA               	movwf	((??_LIN_handler+1)^(0+128)+1)
  3203     00CD  0020               	movlb	0	; select bank0
  3204     00CE  0850               	movf	LIN_handler@rxDataIndex,w
  3205     00CF  0021               	movlb	1	; select bank1
  3206     00D0  0729               	addwf	(??_LIN_handler+1)^(0+128),w
  3207     00D1  00AB               	movwf	(??_LIN_handler+3)^(0+128)
  3208     00D2  3000               	movlw	0
  3209     00D3  3D2A               	addwfc	(??_LIN_handler+2)^(0+128),w
  3210     00D4  00AC               	movwf	(??_LIN_handler+4)^(0+128)
  3211     00D5  082B               	movf	(??_LIN_handler+3)^(0+128),w
  3212     00D6  0086               	movwf	6
  3213     00D7  082C               	movf	(??_LIN_handler+4)^(0+128),w
  3214     00D8  0087               	movwf	7
  3215     00D9  0828               	movf	??_LIN_handler^(0+128),w
  3216     00DA  0081               	movwf	1
  3217     00DB                     l2565:
  3218                           
  3219                           ;LINDrivers/lin_slave.c: 162:       if (++rxDataIndex >= LIN_packet.length) {
  3220     00DB  0020               	movlb	0	; select bank0
  3221     00DC  0864               	movf	_LIN_packet+11,w
  3222     00DD  0021               	movlb	1	; select bank1
  3223     00DE  00A8               	movwf	??_LIN_handler^(0+128)
  3224     00DF  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3225     00E0  1BA8               	btfsc	??_LIN_handler^(0+128),7
  3226     00E1  03A9               	decf	(??_LIN_handler^(0+128)+1),f
  3227     00E2  3001               	movlw	1
  3228     00E3  0020               	movlb	0	; select bank0
  3229     00E4  07D0               	addwf	LIN_handler@rxDataIndex,f
  3230     00E5  0021               	movlb	1	; select bank1
  3231     00E6  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3232     00E7  3A80               	xorlw	128
  3233     00E8  3C80               	sublw	128
  3234     00E9  1D03               	skipz
  3235     00EA  28EE               	goto	u1995
  3236     00EB  0828               	movf	??_LIN_handler^(0+128),w
  3237     00EC  0020               	movlb	0	; select bank0
  3238     00ED  0250               	subwf	LIN_handler@rxDataIndex,w
  3239     00EE                     u1995:
  3240     00EE  1C03               	skipc
  3241     00EF  28F1               	goto	u1991
  3242     00F0  28F2               	goto	u1990
  3243     00F1                     u1991:
  3244     00F1  2971               	goto	l236
  3245     00F2                     u1990:
  3246     00F2                     l2567:
  3247                           
  3248                           ;LINDrivers/lin_slave.c: 164:         rxDataIndex = 0;
  3249     00F2  0020               	movlb	0	; select bank0
  3250     00F3  01D0               	clrf	LIN_handler@rxDataIndex
  3251     00F4                     l2569:
  3252                           
  3253                           ;LINDrivers/lin_slave.c: 165:         LIN_rxState = LIN_RX_CHECKSUM;
  3254     00F4  3005               	movlw	5
  3255     00F5  00D1               	movwf	LIN_handler@LIN_rxState
  3256     00F6  2971               	goto	l236
  3257     00F7                     l2571:
  3258                           
  3259                           ;LINDrivers/lin_slave.c: 170:     if (EUSART_is_rx_ready() > 0) {
  3260     00F7  3185  25EE  3180   	fcall	_EUSART_is_rx_ready
  3261     00FA  3A00               	xorlw	0
  3262     00FB  1903               	skipnz
  3263     00FC  28FE               	goto	u2001
  3264     00FD  28FF               	goto	u2000
  3265     00FE                     u2001:
  3266     00FE  2971               	goto	l236
  3267     00FF                     u2000:
  3268     00FF                     l2573:
  3269                           
  3270                           ;LINDrivers/lin_slave.c: 171:       LIN_packet.checksum = EUSART_Read();
  3271     00FF  3184  247E  3180   	fcall	_EUSART_Read
  3272     0102  0020               	movlb	0	; select bank0
  3273     0103  00E2               	movwf	_LIN_packet+9
  3274                           
  3275                           ;LINDrivers/lin_slave.c: 172:       if (LIN_packet.checksum !=
  3276     0104  0859               	movf	_LIN_packet,w
  3277     0105  00F0               	movwf	LIN_getChecksum@pid
  3278     0106  305A               	movlw	low (_LIN_packet+1)
  3279     0107  00F1               	movwf	LIN_getChecksum@data
  3280     0108  3000               	movlw	high (_LIN_packet+1)
  3281     0109  00F2               	movwf	LIN_getChecksum@data+1
  3282     010A  0864               	movf	_LIN_packet+11,w
  3283     010B  3183  23FC  3180   	fcall	_LIN_getChecksum
  3284     010E  0020               	movlb	0	; select bank0
  3285     010F  0662               	xorwf	_LIN_packet+9,w
  3286     0110  1903               	skipnz
  3287     0111  2913               	goto	u2011
  3288     0112  2914               	goto	u2010
  3289     0113                     u2011:
  3290     0113  2915               	goto	l228
  3291     0114                     u2010:
  3292     0114  2898               	goto	l2547
  3293     0115                     l228:
  3294                           
  3295                           ;LINDrivers/lin_slave.c: 176:         LIN_rxState = LIN_RX_RDY;
  3296     0115  3007               	movlw	7
  3297     0116  00D1               	movwf	LIN_handler@LIN_rxState
  3298     0117  2971               	goto	l236
  3299     0118                     l2577:
  3300                           
  3301                           ;LINDrivers/lin_slave.c: 181:     LIN_queuePacket(LIN_packet.PID);
  3302     0118  0020               	movlb	0	; select bank0
  3303     0119  0859               	movf	_LIN_packet,w
  3304     011A  3182  22C8  3180   	fcall	_LIN_queuePacket
  3305     011D                     l2579:
  3306                           
  3307                           ;LINDrivers/lin_slave.c: 182:     LIN_rxState = LIN_RX_RDY;
  3308     011D  3007               	movlw	7
  3309     011E  0020               	movlb	0	; select bank0
  3310     011F  00D1               	movwf	LIN_handler@LIN_rxState
  3311     0120                     l231:	
  3312                           ;LINDrivers/lin_slave.c: 183:   case LIN_RX_RDY:
  3313                           
  3314                           
  3315                           ;LINDrivers/lin_slave.c: 184:     LIN_processData();
  3316     0120  0020               	movlb	0	; select bank0
  3317     0121  0847               	movf	_LIN_processData+1,w
  3318     0122  008A               	movwf	10
  3319     0123  0846               	movf	_LIN_processData,w
  3320     0124  000A               	callw
  3321     0125  3180               	pagesel	$
  3322     0126                     l2581:
  3323                           
  3324                           ;LINDrivers/lin_slave.c: 186:     LIN_stopTimer();
  3325     0126  3186  262E  3180   	fcall	_LIN_stopTimer
  3326     0129                     l2583:
  3327                           
  3328                           ;LINDrivers/lin_slave.c: 187:     rxDataIndex = 0;
  3329     0129  0020               	movlb	0	; select bank0
  3330     012A  01D0               	clrf	LIN_handler@rxDataIndex
  3331     012B                     l2585:
  3332                           
  3333                           ;LINDrivers/lin_slave.c: 188:     LIN_rxInProgress = 0;
  3334     012B  01D5               	clrf	_LIN_rxInProgress
  3335     012C                     l2587:
  3336                           
  3337                           ;LINDrivers/lin_slave.c: 189:     PIE1bits.RCIE = 0;
  3338     012C  0021               	movlb	1	; select bank1
  3339     012D  1291               	bcf	17,5	;volatile
  3340     012E                     l2589:
  3341                           
  3342                           ;LINDrivers/lin_slave.c: 190:     memset(LIN_packet.rawPacket, 0,
  3343     012E  3059               	movlw	low _LIN_packet
  3344     012F  00F0               	movwf	memset@dest
  3345     0130  3000               	movlw	high _LIN_packet
  3346     0131  00F1               	movwf	memset@dest+1
  3347     0132  3000               	movlw	0
  3348     0133  00F2               	movwf	memset@c
  3349     0134  00F3               	movwf	memset@c+1
  3350     0135  300D               	movlw	13
  3351     0136  00F4               	movwf	memset@n
  3352     0137  3000               	movlw	0
  3353     0138  00F5               	movwf	memset@n+1
  3354     0139  3185  2537  3180   	fcall	_memset
  3355     013C                     l2591:
  3356                           
  3357                           ;LINDrivers/lin_slave.c: 194:     if (TXSTAbits.TRMT) {
  3358     013C  0023               	movlb	3	; select bank3
  3359     013D  1C9E               	btfss	30,1	;volatile
  3360     013E  2940               	goto	u2021
  3361     013F  2941               	goto	u2020
  3362     0140                     u2021:
  3363     0140  2947               	goto	l234
  3364     0141                     u2020:
  3365     0141                     l2593:
  3366                           
  3367                           ;LINDrivers/lin_slave.c: 195:       LIN_enableRx();
  3368     0141  3186  2638  3180   	fcall	_LIN_enableRx
  3369     0144                     l2595:
  3370                           
  3371                           ;LINDrivers/lin_slave.c: 196:       LIN_rxState = LIN_RX_IDLE;
  3372     0144  0020               	movlb	0	; select bank0
  3373     0145  01D1               	clrf	LIN_handler@LIN_rxState
  3374                           
  3375                           ;LINDrivers/lin_slave.c: 197:     } else {
  3376     0146  2971               	goto	l236
  3377     0147                     l234:
  3378                           
  3379                           ;LINDrivers/lin_slave.c: 198:       LIN_rxState = LIN_RX_WAIT;
  3380     0147  3009               	movlw	9
  3381     0148  0020               	movlb	0	; select bank0
  3382     0149  00D1               	movwf	LIN_handler@LIN_rxState
  3383     014A  2971               	goto	l236
  3384     014B                     l2599:
  3385     014B  0851               	movf	LIN_handler@LIN_rxState,w
  3386     014C  0021               	movlb	1	; select bank1
  3387     014D  00A8               	movwf	??_LIN_handler^(0+128)
  3388     014E  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3389                           
  3390                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3391                           ; Switch size 1, requested type "simple"
  3392                           ; Number of cases is 1, Range of values is 0 to 0
  3393                           ; switch strategies available:
  3394                           ; Name         Instructions Cycles
  3395                           ; simple_byte            4     3 (average)
  3396                           ; direct_byte            8     6 (fixed)
  3397                           ; jumptable            260     6 (fixed)
  3398                           ;	Chosen strategy is simple_byte
  3399     014F  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3400     0150  3A00               	xorlw	0	; case 0
  3401     0151  1903               	skipnz
  3402     0152  2954               	goto	l2685
  3403     0153  2971               	goto	l236
  3404     0154                     l2685:
  3405                           
  3406                           ; Switch size 1, requested type "simple"
  3407                           ; Number of cases is 9, Range of values is 0 to 9
  3408                           ; switch strategies available:
  3409                           ; Name         Instructions Cycles
  3410                           ; direct_byte           26     6 (fixed)
  3411                           ; simple_byte           28    15 (average)
  3412                           ; jumptable            260     6 (fixed)
  3413                           ;	Chosen strategy is simple_byte
  3414     0154  0828               	movf	??_LIN_handler^(0+128),w
  3415     0155  3A00               	xorlw	0	; case 0
  3416     0156  1903               	skipnz
  3417     0157  2860               	goto	l2523
  3418     0158  3A02               	xorlw	2	; case 2
  3419     0159  1903               	skipnz
  3420     015A  286E               	goto	l216
  3421     015B  3A01               	xorlw	1	; case 3
  3422     015C  1903               	skipnz
  3423     015D  287F               	goto	l2539
  3424     015E  3A07               	xorlw	7	; case 4
  3425     015F  1903               	skipnz
  3426     0160  28BC               	goto	l2561
  3427     0161  3A01               	xorlw	1	; case 5
  3428     0162  1903               	skipnz
  3429     0163  28F7               	goto	l2571
  3430     0164  3A03               	xorlw	3	; case 6
  3431     0165  1903               	skipnz
  3432     0166  2918               	goto	l2577
  3433     0167  3A01               	xorlw	1	; case 7
  3434     0168  1903               	skipnz
  3435     0169  2920               	goto	l231
  3436     016A  3A0F               	xorlw	15	; case 8
  3437     016B  1903               	skipnz
  3438     016C  2926               	goto	l2581
  3439     016D  3A01               	xorlw	1	; case 9
  3440     016E  1903               	skipnz
  3441     016F  293C               	goto	l2591
  3442     0170  2971               	goto	l236
  3443     0171                     l236:
  3444     0171  0008               	return
  3445     0172                     __end_of_LIN_handler:
  3446                           
  3447                           	psect	text11
  3448     0172                     __ptext11:	
  3449 ;; *************** function _processLIN *****************
  3450 ;; Defined at:
  3451 ;;		line 151 in file "LINDrivers/lin_app.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  tempRxData      8    1[BANK0 ] unsigned char [8]
  3456 ;;  cmd             1    0[BANK0 ] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3466 ;;      Params:         0       0       0       0       0       0       0       0
  3467 ;;      Locals:         0       9       0       0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0
  3469 ;;      Totals:         0       9       0       0       0       0       0       0
  3470 ;;Total ram usage:        9 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 6
  3473 ;; This function calls:
  3474 ;;		_DRL_OFF
  3475 ;;		_DRL_ON
  3476 ;;		_HIBEAM_OFF
  3477 ;;		_HIBEAM_ON
  3478 ;;		_LEFT_OFF
  3479 ;;		_LEFT_ON
  3480 ;;		_LIN_getPacket
  3481 ;;		_LOBEAM_OFF
  3482 ;;		_LOBEAM_ON
  3483 ;;		_POS_OFF
  3484 ;;		_POS_ON
  3485 ;;		_RIGHT_OFF
  3486 ;;		_RIGHT_ON
  3487 ;; This function is called by:
  3488 ;;		_LIN_Slave_Initialize
  3489 ;;		_LIN_handler
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493     0172                     _processLIN:	
  3494                           ;psect for function _processLIN
  3495                           
  3496     0172                     l2035:	
  3497                           ;incstack = 0
  3498                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3499                           
  3500                           
  3501                           ;LINDrivers/lin_app.c: 152:   uint8_t tempRxData[8];;LINDrivers/lin_app.c: 153:   uint8_
      +                          t cmd;;LINDrivers/lin_app.c: 155:   lampState.Byte = 0;
  3502     0172  0020               	movlb	0	; select bank0
  3503     0173  01D8               	clrf	_lampState
  3504                           
  3505                           ;LINDrivers/lin_app.c: 156:   lampFlags.Byte = 0;
  3506     0174  01D6               	clrf	_lampFlags
  3507     0175                     l2037:
  3508                           
  3509                           ;LINDrivers/lin_app.c: 158:   cmd = LIN_getPacket(tempRxData);
  3510     0175  3067               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3511     0176  00F9               	movwf	LIN_getPacket@data
  3512     0177  3184  242E  3181   	fcall	_LIN_getPacket
  3513     017A  0020               	movlb	0	; select bank0
  3514     017B  00E6               	movwf	processLIN@cmd
  3515                           
  3516                           ;LINDrivers/lin_app.c: 159:   switch (cmd) {
  3517     017C  29F5               	goto	l2099
  3518     017D                     l2039:
  3519                           
  3520                           ;LINDrivers/lin_app.c: 163:     if ((tempRxData[2] == 0x49) || (tempRxData[2] == 0x51)) 
      +                          {
  3521     017D  3049               	movlw	73
  3522     017E  0669               	xorwf	processLIN@tempRxData+2,w
  3523     017F  1903               	btfsc	3,2
  3524     0180  2982               	goto	u1351
  3525     0181  2983               	goto	u1350
  3526     0182                     u1351:
  3527     0182  2989               	goto	l2043
  3528     0183                     u1350:
  3529     0183                     l2041:
  3530     0183  3051               	movlw	81
  3531     0184  0669               	xorwf	processLIN@tempRxData+2,w
  3532     0185  1D03               	btfss	3,2
  3533     0186  2988               	goto	u1361
  3534     0187  2989               	goto	u1360
  3535     0188                     u1361:
  3536     0188  298D               	goto	l2047
  3537     0189                     u1360:
  3538     0189                     l2043:
  3539                           
  3540                           ;LINDrivers/lin_app.c: 164:       lampState.mode = eOFF_DRL;
  3541     0189  30F8               	movlw	-8
  3542     018A  05D8               	andwf	_lampState,f
  3543     018B                     l2045:
  3544                           
  3545                           ;LINDrivers/lin_app.c: 165:       lampFlags.fDRL = 1;
  3546     018B  1456               	bsf	_lampFlags,0
  3547                           
  3548                           ;LINDrivers/lin_app.c: 166:     } else if ((tempRxData[2] == 0x0A) || (tempRxData[2] == 
      +                          0x14) ||
  3549     018C  29D9               	goto	l2085
  3550     018D                     l2047:
  3551     018D  300A               	movlw	10
  3552     018E  0669               	xorwf	processLIN@tempRxData+2,w
  3553     018F  1903               	btfsc	3,2
  3554     0190  2992               	goto	u1371
  3555     0191  2993               	goto	u1370
  3556     0192                     u1371:
  3557     0192  299F               	goto	l2053
  3558     0193                     u1370:
  3559     0193                     l2049:
  3560     0193  3014               	movlw	20
  3561     0194  0669               	xorwf	processLIN@tempRxData+2,w
  3562     0195  1903               	btfsc	3,2
  3563     0196  2998               	goto	u1381
  3564     0197  2999               	goto	u1380
  3565     0198                     u1381:
  3566     0198  299F               	goto	l2053
  3567     0199                     u1380:
  3568     0199                     l2051:
  3569     0199  3012               	movlw	18
  3570     019A  0669               	xorwf	processLIN@tempRxData+2,w
  3571     019B  1D03               	btfss	3,2
  3572     019C  299E               	goto	u1391
  3573     019D  299F               	goto	u1390
  3574     019E                     u1391:
  3575     019E  29A5               	goto	l2057
  3576     019F                     u1390:
  3577     019F                     l2053:
  3578                           
  3579                           ;LINDrivers/lin_app.c: 167:                (tempRxData[2] == 0x12)) {;LINDrivers/lin_app
      +                          .c: 168:       lampState.mode = ePOS;
  3580     019F  0858               	movf	_lampState,w
  3581     01A0  39F8               	andlw	-8
  3582     01A1  3801               	iorlw	1
  3583     01A2  00D8               	movwf	_lampState
  3584     01A3                     l2055:
  3585                           
  3586                           ;LINDrivers/lin_app.c: 169:       lampFlags.fPOS = 1;
  3587     01A3  14D6               	bsf	_lampFlags,1
  3588                           
  3589                           ;LINDrivers/lin_app.c: 170:     } else if ((tempRxData[2] == 0x8C) ||
  3590     01A4  29D9               	goto	l2085
  3591     01A5                     l2057:
  3592     01A5  308C               	movlw	140
  3593     01A6  0669               	xorwf	processLIN@tempRxData+2,w
  3594     01A7  1903               	btfsc	3,2
  3595     01A8  29AA               	goto	u1401
  3596     01A9  29AB               	goto	u1400
  3597     01AA                     u1401:
  3598     01AA  29B7               	goto	l2063
  3599     01AB                     u1400:
  3600     01AB                     l2059:
  3601     01AB  3094               	movlw	148
  3602     01AC  0669               	xorwf	processLIN@tempRxData+2,w
  3603     01AD  1903               	btfsc	3,2
  3604     01AE  29B0               	goto	u1411
  3605     01AF  29B1               	goto	u1410
  3606     01B0                     u1411:
  3607     01B0  29B7               	goto	l2063
  3608     01B1                     u1410:
  3609     01B1                     l2061:
  3610     01B1  30AC               	movlw	172
  3611     01B2  0669               	xorwf	processLIN@tempRxData+2,w
  3612     01B3  1D03               	btfss	3,2
  3613     01B4  29B6               	goto	u1421
  3614     01B5  29B7               	goto	u1420
  3615     01B6                     u1421:
  3616     01B6  29BD               	goto	l2069
  3617     01B7                     u1420:
  3618     01B7                     l2063:
  3619                           
  3620                           ;LINDrivers/lin_app.c: 172:                (tempRxData[2] == 0xAC)) {;LINDrivers/lin_app
      +                          .c: 173:       lampState.mode = eAUTO_LOBEAM_POS;
  3621     01B7  0858               	movf	_lampState,w
  3622     01B8  39F8               	andlw	-8
  3623     01B9  3803               	iorlw	3
  3624     01BA  00D8               	movwf	_lampState
  3625     01BB                     l2065:
  3626                           
  3627                           ;LINDrivers/lin_app.c: 174:       lampFlags.fLOBEAM = 1;
  3628     01BB  1556               	bsf	_lampFlags,2
  3629     01BC  29A3               	goto	l2055
  3630     01BD                     l2069:
  3631     01BD  304C               	movlw	76
  3632     01BE  0669               	xorwf	processLIN@tempRxData+2,w
  3633     01BF  1D03               	btfss	3,2
  3634     01C0  29C2               	goto	u1431
  3635     01C1  29C3               	goto	u1430
  3636     01C2                     u1431:
  3637     01C2  29C8               	goto	l2075
  3638     01C3                     u1430:
  3639     01C3                     l2071:
  3640                           
  3641                           ;LINDrivers/lin_app.c: 177:       lampState.mode = eAUTO_DRL;
  3642     01C3  0858               	movf	_lampState,w
  3643     01C4  39F8               	andlw	-8
  3644     01C5  3802               	iorlw	2
  3645     01C6  00D8               	movwf	_lampState
  3646     01C7  298B               	goto	l2045
  3647     01C8                     l2075:
  3648     01C8  300B               	movlw	11
  3649     01C9  0669               	xorwf	processLIN@tempRxData+2,w
  3650     01CA  1903               	btfsc	3,2
  3651     01CB  29CD               	goto	u1441
  3652     01CC  29CE               	goto	u1440
  3653     01CD                     u1441:
  3654     01CD  29D4               	goto	l2079
  3655     01CE                     u1440:
  3656     01CE                     l2077:
  3657     01CE  3013               	movlw	19
  3658     01CF  0669               	xorwf	processLIN@tempRxData+2,w
  3659     01D0  1D03               	btfss	3,2
  3660     01D1  29D3               	goto	u1451
  3661     01D2  29D4               	goto	u1450
  3662     01D3                     u1451:
  3663     01D3  29D9               	goto	l93
  3664     01D4                     u1450:
  3665     01D4                     l2079:
  3666                           
  3667                           ;LINDrivers/lin_app.c: 180:                (tempRxData[2] == 0x13)) {;LINDrivers/lin_app
      +                          .c: 181:       lampState.mode = eLOBEAM;
  3668     01D4  0858               	movf	_lampState,w
  3669     01D5  39F8               	andlw	-8
  3670     01D6  3804               	iorlw	4
  3671     01D7  00D8               	movwf	_lampState
  3672     01D8  29BB               	goto	l2065
  3673     01D9                     l93:
  3674     01D9                     l2085:
  3675                           
  3676                           ;LINDrivers/lin_app.c: 187:     if ((tempRxData[1] & 0B10000000) == 0B10000000) {
  3677     01D9  1FE8               	btfss	processLIN@tempRxData+1,7
  3678     01DA  29DC               	goto	u1461
  3679     01DB  29DD               	goto	u1460
  3680     01DC                     u1461:
  3681     01DC  29DF               	goto	l103
  3682     01DD                     u1460:
  3683     01DD                     l2087:
  3684                           
  3685                           ;LINDrivers/lin_app.c: 188:       lampState.OverTaking = 1;
  3686     01DD  15D8               	bsf	_lampState,3
  3687                           
  3688                           ;LINDrivers/lin_app.c: 189:       lampFlags.fHIBEAM = 1;
  3689     01DE  15D6               	bsf	_lampFlags,3
  3690     01DF                     l103:	
  3691                           ;LINDrivers/lin_app.c: 190:     }
  3692                           
  3693                           
  3694                           ;LINDrivers/lin_app.c: 193:     if ((tempRxData[1] & 0B01000000) == 0B01000000) {
  3695     01DF  1F68               	btfss	processLIN@tempRxData+1,6
  3696     01E0  29E2               	goto	u1471
  3697     01E1  29E3               	goto	u1470
  3698     01E2                     u1471:
  3699     01E2  29E5               	goto	l104
  3700     01E3                     u1470:
  3701     01E3                     l2089:
  3702                           
  3703                           ;LINDrivers/lin_app.c: 194:       lampState.HighBeam = 1;
  3704     01E3  1758               	bsf	_lampState,6
  3705                           
  3706                           ;LINDrivers/lin_app.c: 195:       lampFlags.fHIBEAM = 1;
  3707     01E4  15D6               	bsf	_lampFlags,3
  3708     01E5                     l104:	
  3709                           ;LINDrivers/lin_app.c: 196:     }
  3710                           
  3711                           
  3712                           ;LINDrivers/lin_app.c: 199:     if ((tempRxData[1] & 0B00010000) == 0B00010000) {
  3713     01E5  1E68               	btfss	processLIN@tempRxData+1,4
  3714     01E6  29E8               	goto	u1481
  3715     01E7  29E9               	goto	u1480
  3716     01E8                     u1481:
  3717     01E8  29EB               	goto	l105
  3718     01E9                     u1480:
  3719     01E9                     l2091:
  3720                           
  3721                           ;LINDrivers/lin_app.c: 200:       lampState.TurnLeft = 1;
  3722     01E9  1658               	bsf	_lampState,4
  3723                           
  3724                           ;LINDrivers/lin_app.c: 201:       lampFlags.fLEFT = 1;
  3725     01EA  16D6               	bsf	_lampFlags,5
  3726     01EB                     l105:	
  3727                           ;LINDrivers/lin_app.c: 202:     }
  3728                           
  3729                           
  3730                           ;LINDrivers/lin_app.c: 205:     if ((tempRxData[1] & 0B00100000) == 0B00100000) {
  3731     01EB  1EE8               	btfss	processLIN@tempRxData+1,5
  3732     01EC  29EE               	goto	u1491
  3733     01ED  29EF               	goto	u1490
  3734     01EE                     u1491:
  3735     01EE  29FA               	goto	l107
  3736     01EF                     u1490:
  3737     01EF                     l2093:
  3738                           
  3739                           ;LINDrivers/lin_app.c: 206:       lampState.TurnRight = 1;
  3740     01EF  16D8               	bsf	_lampState,5
  3741                           
  3742                           ;LINDrivers/lin_app.c: 207:       lampFlags.fRIGHT = 1;
  3743     01F0  1756               	bsf	_lampFlags,6
  3744     01F1  29FA               	goto	l107
  3745     01F2                     l2095:
  3746                           
  3747                           ;LINDrivers/lin_app.c: 228:     lampState.Byte = 0;
  3748     01F2  01D8               	clrf	_lampState
  3749                           
  3750                           ;LINDrivers/lin_app.c: 229:     lampFlags.Byte = 0;
  3751     01F3  01D6               	clrf	_lampFlags
  3752                           
  3753                           ;LINDrivers/lin_app.c: 230:     break;
  3754     01F4  29FA               	goto	l107
  3755     01F5                     l2099:
  3756     01F5  0866               	movf	processLIN@cmd,w
  3757                           
  3758                           ; Switch size 1, requested type "simple"
  3759                           ; Number of cases is 1, Range of values is 1 to 1
  3760                           ; switch strategies available:
  3761                           ; Name         Instructions Cycles
  3762                           ; simple_byte            4     3 (average)
  3763                           ; direct_byte           11     9 (fixed)
  3764                           ; jumptable            263     9 (fixed)
  3765                           ;	Chosen strategy is simple_byte
  3766     01F6  3A01               	xorlw	1	; case 1
  3767     01F7  1903               	skipnz
  3768     01F8  297D               	goto	l2039
  3769     01F9  29F2               	goto	l2095
  3770     01FA                     l107:
  3771                           
  3772                           ;LINDrivers/lin_app.c: 235:   if (lampFlags.fDRL) {
  3773     01FA  1C56               	btfss	_lampFlags,0
  3774     01FB  29FD               	goto	u1501
  3775     01FC  29FE               	goto	u1500
  3776     01FD                     u1501:
  3777     01FD  2A02               	goto	l2103
  3778     01FE                     u1500:
  3779     01FE                     l2101:
  3780                           
  3781                           ;LINDrivers/lin_app.c: 236:     DRL_ON();
  3782     01FE  3186  2676  3181   	fcall	_DRL_ON
  3783                           
  3784                           ;LINDrivers/lin_app.c: 237:   } else {
  3785     0201  2A05               	goto	l2105
  3786     0202                     l2103:
  3787                           
  3788                           ;LINDrivers/lin_app.c: 238:     DRL_OFF();
  3789     0202  3186  2679  3181   	fcall	_DRL_OFF
  3790     0205                     l2105:
  3791                           
  3792                           ;LINDrivers/lin_app.c: 241:   if (lampFlags.fPOS) {
  3793     0205  0020               	movlb	0	; select bank0
  3794     0206  1CD6               	btfss	_lampFlags,1
  3795     0207  2A09               	goto	u1511
  3796     0208  2A0A               	goto	u1510
  3797     0209                     u1511:
  3798     0209  2A0E               	goto	l2109
  3799     020A                     u1510:
  3800     020A                     l2107:
  3801                           
  3802                           ;LINDrivers/lin_app.c: 242:     POS_ON();
  3803     020A  3186  265E  3181   	fcall	_POS_ON
  3804                           
  3805                           ;LINDrivers/lin_app.c: 243:   } else {
  3806     020D  2A11               	goto	l2111
  3807     020E                     l2109:
  3808                           
  3809                           ;LINDrivers/lin_app.c: 244:     POS_OFF();
  3810     020E  3186  2661  3181   	fcall	_POS_OFF
  3811     0211                     l2111:
  3812                           
  3813                           ;LINDrivers/lin_app.c: 247:   if (lampFlags.fLOBEAM) {
  3814     0211  0020               	movlb	0	; select bank0
  3815     0212  1D56               	btfss	_lampFlags,2
  3816     0213  2A15               	goto	u1521
  3817     0214  2A16               	goto	u1520
  3818     0215                     u1521:
  3819     0215  2A1A               	goto	l2115
  3820     0216                     u1520:
  3821     0216                     l2113:
  3822                           
  3823                           ;LINDrivers/lin_app.c: 248:     LOBEAM_ON();
  3824     0216  3186  2664  3181   	fcall	_LOBEAM_ON
  3825                           
  3826                           ;LINDrivers/lin_app.c: 249:   } else {
  3827     0219  2A1D               	goto	l2117
  3828     021A                     l2115:
  3829                           
  3830                           ;LINDrivers/lin_app.c: 250:     LOBEAM_OFF();
  3831     021A  3186  2667  3181   	fcall	_LOBEAM_OFF
  3832     021D                     l2117:
  3833                           
  3834                           ;LINDrivers/lin_app.c: 253:   if (lampFlags.fHIBEAM) {
  3835     021D  0020               	movlb	0	; select bank0
  3836     021E  1DD6               	btfss	_lampFlags,3
  3837     021F  2A21               	goto	u1531
  3838     0220  2A22               	goto	u1530
  3839     0221                     u1531:
  3840     0221  2A26               	goto	l2121
  3841     0222                     u1530:
  3842     0222                     l2119:
  3843                           
  3844                           ;LINDrivers/lin_app.c: 254:     HIBEAM_ON();
  3845     0222  3186  2670  3181   	fcall	_HIBEAM_ON
  3846                           
  3847                           ;LINDrivers/lin_app.c: 255:   } else {
  3848     0225  2A29               	goto	l2123
  3849     0226                     l2121:
  3850                           
  3851                           ;LINDrivers/lin_app.c: 256:     HIBEAM_OFF();
  3852     0226  3186  2673  3181   	fcall	_HIBEAM_OFF
  3853     0229                     l2123:
  3854                           
  3855                           ;LINDrivers/lin_app.c: 259:   if (lampFlags.fLEFT) {
  3856     0229  0020               	movlb	0	; select bank0
  3857     022A  1ED6               	btfss	_lampFlags,5
  3858     022B  2A2D               	goto	u1541
  3859     022C  2A2E               	goto	u1540
  3860     022D                     u1541:
  3861     022D  2A32               	goto	l2127
  3862     022E                     u1540:
  3863     022E                     l2125:
  3864                           
  3865                           ;LINDrivers/lin_app.c: 260:     LEFT_ON();
  3866     022E  3186  266A  3181   	fcall	_LEFT_ON
  3867                           
  3868                           ;LINDrivers/lin_app.c: 261:   } else {
  3869     0231  2A35               	goto	l2129
  3870     0232                     l2127:
  3871                           
  3872                           ;LINDrivers/lin_app.c: 262:     LEFT_OFF();
  3873     0232  3186  266D  3181   	fcall	_LEFT_OFF
  3874     0235                     l2129:
  3875                           
  3876                           ;LINDrivers/lin_app.c: 265:   if (lampFlags.fRIGHT) {
  3877     0235  0020               	movlb	0	; select bank0
  3878     0236  1F56               	btfss	_lampFlags,6
  3879     0237  2A39               	goto	u1551
  3880     0238  2A3A               	goto	u1550
  3881     0239                     u1551:
  3882     0239  2A3E               	goto	l2133
  3883     023A                     u1550:
  3884     023A                     l2131:
  3885                           
  3886                           ;LINDrivers/lin_app.c: 266:     RIGHT_ON();
  3887     023A  3186  2658  3181   	fcall	_RIGHT_ON
  3888                           
  3889                           ;LINDrivers/lin_app.c: 267:   } else {
  3890     023D  2A41               	goto	l121
  3891     023E                     l2133:
  3892                           
  3893                           ;LINDrivers/lin_app.c: 268:     RIGHT_OFF();
  3894     023E  3186  265B  3181   	fcall	_RIGHT_OFF
  3895     0241                     l121:
  3896     0241  0008               	return
  3897     0242                     __end_of_processLIN:
  3898                           
  3899                           	psect	text12
  3900     0658                     __ptext12:	
  3901 ;; *************** function _RIGHT_ON *****************
  3902 ;; Defined at:
  3903 ;;		line 139 in file "LINDrivers/lin_app.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;		None
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		None
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3917 ;;      Params:         0       0       0       0       0       0       0       0
  3918 ;;      Locals:         0       0       0       0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0
  3920 ;;      Totals:         0       0       0       0       0       0       0       0
  3921 ;;Total ram usage:        0 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 4
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_processLIN
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931     0658                     _RIGHT_ON:	
  3932                           ;psect for function _RIGHT_ON
  3933                           
  3934     0658                     l65:	
  3935                           ;incstack = 0
  3936                           ; Regs used in _RIGHT_ON: []
  3937                           
  3938     0658  0022               	movlb	2	; select bank2
  3939     0659  140D               	bsf	13,0	;volatile
  3940     065A                     l67:
  3941     065A  0008               	return
  3942     065B                     __end_of_RIGHT_ON:
  3943                           
  3944                           	psect	text13
  3945     065B                     __ptext13:	
  3946 ;; *************** function _RIGHT_OFF *****************
  3947 ;; Defined at:
  3948 ;;		line 140 in file "LINDrivers/lin_app.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		None
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3962 ;;      Params:         0       0       0       0       0       0       0       0
  3963 ;;      Locals:         0       0       0       0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0       0
  3965 ;;      Totals:         0       0       0       0       0       0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 4
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_processLIN
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976     065B                     _RIGHT_OFF:	
  3977                           ;psect for function _RIGHT_OFF
  3978                           
  3979     065B                     l70:	
  3980                           ;incstack = 0
  3981                           ; Regs used in _RIGHT_OFF: []
  3982                           
  3983     065B  0022               	movlb	2	; select bank2
  3984     065C  100D               	bcf	13,0	;volatile
  3985     065D                     l72:
  3986     065D  0008               	return
  3987     065E                     __end_of_RIGHT_OFF:
  3988                           
  3989                           	psect	text14
  3990     065E                     __ptext14:	
  3991 ;; *************** function _POS_ON *****************
  3992 ;; Defined at:
  3993 ;;		line 129 in file "LINDrivers/lin_app.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		None
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4007 ;;      Params:         0       0       0       0       0       0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; Hardware stack levels required when called: 4
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_processLIN
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021     065E                     _POS_ON:	
  4022                           ;psect for function _POS_ON
  4023                           
  4024     065E                     l15:	
  4025                           ;incstack = 0
  4026                           ; Regs used in _POS_ON: []
  4027                           
  4028     065E  0022               	movlb	2	; select bank2
  4029     065F  168D               	bsf	13,5	;volatile
  4030     0660                     l17:
  4031     0660  0008               	return
  4032     0661                     __end_of_POS_ON:
  4033                           
  4034                           	psect	text15
  4035     0661                     __ptext15:	
  4036 ;; *************** function _POS_OFF *****************
  4037 ;; Defined at:
  4038 ;;		line 130 in file "LINDrivers/lin_app.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		None
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4052 ;;      Params:         0       0       0       0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0       0
  4055 ;;      Totals:         0       0       0       0       0       0       0       0
  4056 ;;Total ram usage:        0 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 4
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_processLIN
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066     0661                     _POS_OFF:	
  4067                           ;psect for function _POS_OFF
  4068                           
  4069     0661                     l20:	
  4070                           ;incstack = 0
  4071                           ; Regs used in _POS_OFF: []
  4072                           
  4073     0661  0022               	movlb	2	; select bank2
  4074     0662  128D               	bcf	13,5	;volatile
  4075     0663                     l22:
  4076     0663  0008               	return
  4077     0664                     __end_of_POS_OFF:
  4078                           
  4079                           	psect	text16
  4080     0664                     __ptext16:	
  4081 ;; *************** function _LOBEAM_ON *****************
  4082 ;; Defined at:
  4083 ;;		line 133 in file "LINDrivers/lin_app.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		None
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4097 ;;      Params:         0       0       0       0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0
  4100 ;;      Totals:         0       0       0       0       0       0       0       0
  4101 ;;Total ram usage:        0 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; Hardware stack levels required when called: 4
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_processLIN
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111     0664                     _LOBEAM_ON:	
  4112                           ;psect for function _LOBEAM_ON
  4113                           
  4114     0664                     l35:	
  4115                           ;incstack = 0
  4116                           ; Regs used in _LOBEAM_ON: []
  4117                           
  4118     0664  0022               	movlb	2	; select bank2
  4119     0665  158D               	bsf	13,3	;volatile
  4120     0666                     l37:
  4121     0666  0008               	return
  4122     0667                     __end_of_LOBEAM_ON:
  4123                           
  4124                           	psect	text17
  4125     0667                     __ptext17:	
  4126 ;; *************** function _LOBEAM_OFF *****************
  4127 ;; Defined at:
  4128 ;;		line 134 in file "LINDrivers/lin_app.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		None
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4142 ;;      Params:         0       0       0       0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0       0       0       0
  4145 ;;      Totals:         0       0       0       0       0       0       0       0
  4146 ;;Total ram usage:        0 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 4
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_processLIN
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156     0667                     _LOBEAM_OFF:	
  4157                           ;psect for function _LOBEAM_OFF
  4158                           
  4159     0667                     l40:	
  4160                           ;incstack = 0
  4161                           ; Regs used in _LOBEAM_OFF: []
  4162                           
  4163     0667  0022               	movlb	2	; select bank2
  4164     0668  118D               	bcf	13,3	;volatile
  4165     0669                     l42:
  4166     0669  0008               	return
  4167     066A                     __end_of_LOBEAM_OFF:
  4168                           
  4169                           	psect	text18
  4170     042E                     __ptext18:	
  4171 ;; *************** function _LIN_getPacket *****************
  4172 ;; Defined at:
  4173 ;;		line 215 in file "LINDrivers/lin_slave.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  data            1    9[COMMON] PTR unsigned char 
  4176 ;;		 -> processLIN@tempRxData(8), 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  cmd             1   10[COMMON] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      unsigned char 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4188 ;;      Params:         1       0       0       0       0       0       0       0
  4189 ;;      Locals:         1       0       0       0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0       0
  4191 ;;      Totals:         2       0       0       0       0       0       0       0
  4192 ;;Total ram usage:        2 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 5
  4195 ;; This function calls:
  4196 ;;		_memcpy
  4197 ;;		_memset
  4198 ;; This function is called by:
  4199 ;;		_processLIN
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203     042E                     _LIN_getPacket:	
  4204                           ;psect for function _LIN_getPacket
  4205                           
  4206     042E                     l1929:	
  4207                           ;incstack = 0
  4208                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4209                           
  4210                           
  4211                           ;LINDrivers/lin_slave.c: 216:   uint8_t cmd = LIN_packet.PID & 0x3F;
  4212     042E  0020               	movlb	0	; select bank0
  4213     042F  0859               	movf	_LIN_packet,w
  4214     0430  393F               	andlw	63
  4215     0431  00FA               	movwf	LIN_getPacket@cmd
  4216     0432                     l1931:
  4217                           
  4218                           ;LINDrivers/lin_slave.c: 218:   if (cmd != 0) {
  4219     0432  087A               	movf	LIN_getPacket@cmd,w
  4220     0433  1903               	btfsc	3,2
  4221     0434  2C36               	goto	u1031
  4222     0435  2C37               	goto	u1030
  4223     0436                     u1031:
  4224     0436  2C3A               	goto	l1935
  4225     0437                     u1030:
  4226     0437                     l1933:
  4227                           
  4228                           ;LINDrivers/lin_slave.c: 219:     __nop();
  4229     0437  0000               	nop
  4230                           
  4231                           ;LINDrivers/lin_slave.c: 220:     __nop();
  4232     0438  0000               	nop
  4233                           
  4234                           ;LINDrivers/lin_slave.c: 221:     __nop();
  4235     0439  0000               	nop
  4236     043A                     l1935:
  4237                           
  4238                           ;LINDrivers/lin_slave.c: 224:   memcpy(data, LIN_packet.data, sizeof(LIN_packet.data));
  4239     043A  0879               	movf	LIN_getPacket@data,w
  4240     043B  00F0               	movwf	memcpy@d1
  4241     043C  01F1               	clrf	memcpy@d1+1
  4242     043D  305A               	movlw	low (_LIN_packet+1)
  4243     043E  00F2               	movwf	memcpy@s1
  4244     043F  3000               	movlw	high (_LIN_packet+1)
  4245     0440  00F3               	movwf	memcpy@s1+1
  4246     0441  3008               	movlw	8
  4247     0442  00F4               	movwf	memcpy@n
  4248     0443  3000               	movlw	0
  4249     0444  00F5               	movwf	memcpy@n+1
  4250     0445  3184  24C5  3184   	fcall	_memcpy
  4251                           
  4252                           ;LINDrivers/lin_slave.c: 225:   memset(LIN_packet.rawPacket, 0, sizeof(LIN_packet.rawPac
      +                          ket));
  4253     0448  3059               	movlw	low _LIN_packet
  4254     0449  00F0               	movwf	memset@dest
  4255     044A  3000               	movlw	high _LIN_packet
  4256     044B  00F1               	movwf	memset@dest+1
  4257     044C  3000               	movlw	0
  4258     044D  00F2               	movwf	memset@c
  4259     044E  00F3               	movwf	memset@c+1
  4260     044F  300D               	movlw	13
  4261     0450  00F4               	movwf	memset@n
  4262     0451  3000               	movlw	0
  4263     0452  00F5               	movwf	memset@n+1
  4264     0453  3185  2537  3184   	fcall	_memset
  4265     0456                     l1937:
  4266                           
  4267                           ;LINDrivers/lin_slave.c: 227:   return cmd;
  4268     0456  087A               	movf	LIN_getPacket@cmd,w
  4269     0457                     l246:
  4270     0457  0008               	return
  4271     0458                     __end_of_LIN_getPacket:
  4272                           
  4273                           	psect	text19
  4274     0537                     __ptext19:	
  4275 ;; *************** function _memset *****************
  4276 ;; Defined at:
  4277 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  dest            2    0[COMMON] PTR void 
  4280 ;;		 -> LIN_packet(13), 
  4281 ;;  c               2    2[COMMON] int 
  4282 ;;  n               2    4[COMMON] unsigned int 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  p               1    6[COMMON] PTR unsigned char 
  4285 ;;		 -> LIN_packet(13), 
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  2    0[COMMON] PTR void 
  4288 ;; Registers used:
  4289 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4295 ;;      Params:         6       0       0       0       0       0       0       0
  4296 ;;      Locals:         1       0       0       0       0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0       0       0       0
  4298 ;;      Totals:         7       0       0       0       0       0       0       0
  4299 ;;Total ram usage:        7 bytes
  4300 ;; Hardware stack levels used: 1
  4301 ;; Hardware stack levels required when called: 4
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_LIN_handler
  4306 ;;		_LIN_getPacket
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310     0537                     _memset:	
  4311                           ;psect for function _memset
  4312                           
  4313     0537                     l1895:	
  4314                           ;incstack = 0
  4315                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4316                           
  4317     0537  0870               	movf	memset@dest,w
  4318     0538  00F6               	movwf	memset@p
  4319     0539  2D41               	goto	l1901
  4320     053A                     l1897:
  4321     053A  0876               	movf	memset@p,w
  4322     053B  0086               	movwf	6
  4323     053C  0187               	clrf	7
  4324     053D  0872               	movf	memset@c,w
  4325     053E  0081               	movwf	1
  4326     053F                     l1899:
  4327     053F  3001               	movlw	1
  4328     0540  07F6               	addwf	memset@p,f
  4329     0541                     l1901:
  4330     0541  3001               	movlw	1
  4331     0542  02F4               	subwf	memset@n,f
  4332     0543  3000               	movlw	0
  4333     0544  3BF5               	subwfb	memset@n+1,f
  4334     0545  0A74               	incf	memset@n,w
  4335     0546  1D03               	skipz
  4336     0547  2D4C               	goto	u991
  4337     0548  0A75               	incf	memset@n+1,w
  4338     0549  1D03               	btfss	3,2
  4339     054A  2D4C               	goto	u991
  4340     054B  2D4D               	goto	u990
  4341     054C                     u991:
  4342     054C  2D3A               	goto	l1897
  4343     054D                     u990:
  4344     054D                     l1211:
  4345     054D  0008               	return
  4346     054E                     __end_of_memset:
  4347                           
  4348                           	psect	text20
  4349     066A                     __ptext20:	
  4350 ;; *************** function _LEFT_ON *****************
  4351 ;; Defined at:
  4352 ;;		line 137 in file "LINDrivers/lin_app.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		None
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4366 ;;      Params:         0       0       0       0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0
  4369 ;;      Totals:         0       0       0       0       0       0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: 4
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_processLIN
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380     066A                     _LEFT_ON:	
  4381                           ;psect for function _LEFT_ON
  4382                           
  4383     066A                     l55:	
  4384                           ;incstack = 0
  4385                           ; Regs used in _LEFT_ON: []
  4386                           
  4387     066A  0022               	movlb	2	; select bank2
  4388     066B  148D               	bsf	13,1	;volatile
  4389     066C                     l57:
  4390     066C  0008               	return
  4391     066D                     __end_of_LEFT_ON:
  4392                           
  4393                           	psect	text21
  4394     066D                     __ptext21:	
  4395 ;; *************** function _LEFT_OFF *****************
  4396 ;; Defined at:
  4397 ;;		line 138 in file "LINDrivers/lin_app.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		None
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4411 ;;      Params:         0       0       0       0       0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0
  4414 ;;      Totals:         0       0       0       0       0       0       0       0
  4415 ;;Total ram usage:        0 bytes
  4416 ;; Hardware stack levels used: 1
  4417 ;; Hardware stack levels required when called: 4
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_processLIN
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425     066D                     _LEFT_OFF:	
  4426                           ;psect for function _LEFT_OFF
  4427                           
  4428     066D                     l60:	
  4429                           ;incstack = 0
  4430                           ; Regs used in _LEFT_OFF: []
  4431                           
  4432     066D  0022               	movlb	2	; select bank2
  4433     066E  108D               	bcf	13,1	;volatile
  4434     066F                     l62:
  4435     066F  0008               	return
  4436     0670                     __end_of_LEFT_OFF:
  4437                           
  4438                           	psect	text22
  4439     0670                     __ptext22:	
  4440 ;; *************** function _HIBEAM_ON *****************
  4441 ;; Defined at:
  4442 ;;		line 135 in file "LINDrivers/lin_app.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		None
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4456 ;;      Params:         0       0       0       0       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0       0
  4458 ;;      Temps:          0       0       0       0       0       0       0       0
  4459 ;;      Totals:         0       0       0       0       0       0       0       0
  4460 ;;Total ram usage:        0 bytes
  4461 ;; Hardware stack levels used: 1
  4462 ;; Hardware stack levels required when called: 4
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_processLIN
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470     0670                     _HIBEAM_ON:	
  4471                           ;psect for function _HIBEAM_ON
  4472                           
  4473     0670                     l45:	
  4474                           ;incstack = 0
  4475                           ; Regs used in _HIBEAM_ON: []
  4476                           
  4477     0670  0022               	movlb	2	; select bank2
  4478     0671  150D               	bsf	13,2	;volatile
  4479     0672                     l47:
  4480     0672  0008               	return
  4481     0673                     __end_of_HIBEAM_ON:
  4482                           
  4483                           	psect	text23
  4484     0673                     __ptext23:	
  4485 ;; *************** function _HIBEAM_OFF *****************
  4486 ;; Defined at:
  4487 ;;		line 136 in file "LINDrivers/lin_app.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		None
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4501 ;;      Params:         0       0       0       0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0
  4504 ;;      Totals:         0       0       0       0       0       0       0       0
  4505 ;;Total ram usage:        0 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 4
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_processLIN
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515     0673                     _HIBEAM_OFF:	
  4516                           ;psect for function _HIBEAM_OFF
  4517                           
  4518     0673                     l50:	
  4519                           ;incstack = 0
  4520                           ; Regs used in _HIBEAM_OFF: []
  4521                           
  4522     0673  0022               	movlb	2	; select bank2
  4523     0674  110D               	bcf	13,2	;volatile
  4524     0675                     l52:
  4525     0675  0008               	return
  4526     0676                     __end_of_HIBEAM_OFF:
  4527                           
  4528                           	psect	text24
  4529     0676                     __ptext24:	
  4530 ;; *************** function _DRL_ON *****************
  4531 ;; Defined at:
  4532 ;;		line 131 in file "LINDrivers/lin_app.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		None
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4546 ;;      Params:         0       0       0       0       0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0
  4549 ;;      Totals:         0       0       0       0       0       0       0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; Hardware stack levels required when called: 4
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_processLIN
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560     0676                     _DRL_ON:	
  4561                           ;psect for function _DRL_ON
  4562                           
  4563     0676                     l25:	
  4564                           ;incstack = 0
  4565                           ; Regs used in _DRL_ON: []
  4566                           
  4567     0676  0022               	movlb	2	; select bank2
  4568     0677  160D               	bsf	13,4	;volatile
  4569     0678                     l27:
  4570     0678  0008               	return
  4571     0679                     __end_of_DRL_ON:
  4572                           
  4573                           	psect	text25
  4574     0679                     __ptext25:	
  4575 ;; *************** function _DRL_OFF *****************
  4576 ;; Defined at:
  4577 ;;		line 132 in file "LINDrivers/lin_app.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		None
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4591 ;;      Params:         0       0       0       0       0       0       0       0
  4592 ;;      Locals:         0       0       0       0       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0       0
  4594 ;;      Totals:         0       0       0       0       0       0       0       0
  4595 ;;Total ram usage:        0 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; Hardware stack levels required when called: 4
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_processLIN
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605     0679                     _DRL_OFF:	
  4606                           ;psect for function _DRL_OFF
  4607                           
  4608     0679                     l30:	
  4609                           ;incstack = 0
  4610                           ; Regs used in _DRL_OFF: []
  4611                           
  4612     0679  0022               	movlb	2	; select bank2
  4613     067A  120D               	bcf	13,4	;volatile
  4614     067B                     l32:
  4615     067B  0008               	return
  4616     067C                     __end_of_DRL_OFF:
  4617                           
  4618                           	psect	text26
  4619     062E                     __ptext26:	
  4620 ;; *************** function _LIN_stopTimer *****************
  4621 ;; Defined at:
  4622 ;;		line 320 in file "LINDrivers/lin_slave.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;		None
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;		None
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		status,2
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4636 ;;      Params:         0       0       0       0       0       0       0       0
  4637 ;;      Locals:         0       0       0       0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0
  4639 ;;      Totals:         0       0       0       0       0       0       0       0
  4640 ;;Total ram usage:        0 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 4
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_LIN_init
  4647 ;;		_LIN_handler
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651     062E                     _LIN_stopTimer:	
  4652                           ;psect for function _LIN_stopTimer
  4653                           
  4654     062E                     l1859:	
  4655                           ;incstack = 0
  4656                           ; Regs used in _LIN_stopTimer: [status,2]
  4657                           
  4658                           
  4659                           ;LINDrivers/lin_slave.c: 321:   __nop();
  4660     062E  0000               	nop
  4661     062F                     l1861:
  4662                           
  4663                           ;LINDrivers/lin_slave.c: 323:   CountCallBack = 0;
  4664     062F  0020               	movlb	0	; select bank0
  4665     0630  01D2               	clrf	_CountCallBack	;volatile
  4666                           
  4667                           ;LINDrivers/lin_slave.c: 324:   LIN_timerRunning = 0;
  4668     0631  01D3               	clrf	_LIN_timerRunning
  4669     0632                     l288:
  4670     0632  0008               	return
  4671     0633                     __end_of_LIN_stopTimer:
  4672                           
  4673                           	psect	text27
  4674     05BD                     __ptext27:	
  4675 ;; *************** function _LIN_startTimer *****************
  4676 ;; Defined at:
  4677 ;;		line 302 in file "LINDrivers/lin_slave.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  timeout         1    wreg     unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  timeout         1    1[COMMON] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4691 ;;      Params:         0       0       0       0       0       0       0       0
  4692 ;;      Locals:         1       0       0       0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0
  4694 ;;      Totals:         1       0       0       0       0       0       0       0
  4695 ;;Total ram usage:        1 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 5
  4698 ;; This function calls:
  4699 ;;		_TMR0_WriteTimer
  4700 ;; This function is called by:
  4701 ;;		_LIN_handler
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705     05BD                     _LIN_startTimer:	
  4706                           ;psect for function _LIN_startTimer
  4707                           
  4708                           
  4709                           ;incstack = 0
  4710                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  4711                           ;LIN_startTimer@timeout stored from wreg
  4712     05BD  00F1               	movwf	LIN_startTimer@timeout
  4713     05BE                     l2161:
  4714                           
  4715                           ;LINDrivers/lin_slave.c: 303:   LIN_timeout = timeout;
  4716     05BE  0871               	movf	LIN_startTimer@timeout,w
  4717     05BF  0020               	movlb	0	; select bank0
  4718     05C0  00EF               	movwf	_LIN_timeout
  4719     05C1                     l2163:
  4720                           
  4721                           ;LINDrivers/lin_slave.c: 304:   TMR0_WriteTimer(0);
  4722     05C1  3000               	movlw	0
  4723     05C2  3186  2633  3185   	fcall	_TMR0_WriteTimer
  4724     05C5                     l2165:
  4725                           
  4726                           ;LINDrivers/lin_slave.c: 305:   __nop();
  4727     05C5  0000               	nop
  4728     05C6                     l2167:
  4729                           
  4730                           ;LINDrivers/lin_slave.c: 306:   LIN_timerRunning = 1;
  4731     05C6  3001               	movlw	1
  4732     05C7  0020               	movlb	0	; select bank0
  4733     05C8  00D3               	movwf	_LIN_timerRunning
  4734     05C9                     l278:
  4735     05C9  0008               	return
  4736     05CA                     __end_of_LIN_startTimer:
  4737                           
  4738                           	psect	text28
  4739     0633                     __ptext28:	
  4740 ;; *************** function _TMR0_WriteTimer *****************
  4741 ;; Defined at:
  4742 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  timerVal        1    wreg     unsigned char 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  timerVal        1    0[COMMON] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4756 ;;      Params:         0       0       0       0       0       0       0       0
  4757 ;;      Locals:         1       0       0       0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0
  4759 ;;      Totals:         1       0       0       0       0       0       0       0
  4760 ;;Total ram usage:        1 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; Hardware stack levels required when called: 4
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_LIN_startTimer
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770     0633                     _TMR0_WriteTimer:	
  4771                           ;psect for function _TMR0_WriteTimer
  4772                           
  4773                           
  4774                           ;incstack = 0
  4775                           ; Regs used in _TMR0_WriteTimer: [wreg]
  4776                           ;TMR0_WriteTimer@timerVal stored from wreg
  4777     0633  00F0               	movwf	TMR0_WriteTimer@timerVal
  4778     0634                     l2007:
  4779                           
  4780                           ;mcc_generated_files/tmr0.c: 96: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_fi
      +                          les/tmr0.c: 97: {;mcc_generated_files/tmr0.c: 99:     TMR0 = timerVal;
  4781     0634  0870               	movf	TMR0_WriteTimer@timerVal,w
  4782     0635  0020               	movlb	0	; select bank0
  4783     0636  0095               	movwf	21	;volatile
  4784     0637                     l495:
  4785     0637  0008               	return
  4786     0638                     __end_of_TMR0_WriteTimer:
  4787                           
  4788                           	psect	text29
  4789     02C8                     __ptext29:	
  4790 ;; *************** function _LIN_queuePacket *****************
  4791 ;; Defined at:
  4792 ;;		line 68 in file "LINDrivers/lin_slave.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  cmd             1    wreg     unsigned char 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  cmd             1    1[BANK0 ] unsigned char 
  4797 ;;  i               1    2[BANK0 ] unsigned char 
  4798 ;;  tempSchedule    2    3[BANK0 ] PTR const struct .
  4799 ;;		 -> NULL(0), scheduleTable(5), 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4809 ;;      Params:         0       0       0       0       0       0       0       0
  4810 ;;      Locals:         0       4       0       0       0       0       0       0
  4811 ;;      Temps:          0       1       0       0       0       0       0       0
  4812 ;;      Totals:         0       5       0       0       0       0       0       0
  4813 ;;Total ram usage:        5 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; Hardware stack levels required when called: 6
  4816 ;; This function calls:
  4817 ;;		_LIN_getChecksum
  4818 ;;		_LIN_sendPacket
  4819 ;;		_memcpy
  4820 ;; This function is called by:
  4821 ;;		_LIN_handler
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825     02C8                     _LIN_queuePacket:	
  4826                           ;psect for function _LIN_queuePacket
  4827                           
  4828                           
  4829                           ;incstack = 0
  4830                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4831                           ;LIN_queuePacket@cmd stored from wreg
  4832     02C8  0020               	movlb	0	; select bank0
  4833     02C9  00E7               	movwf	LIN_queuePacket@cmd
  4834     02CA                     l2493:
  4835                           
  4836                           ;LINDrivers/lin_slave.c: 69:   const lin_rx_cmd_t *tempSchedule =
  4837     02CA  0845               	movf	_LIN_rxCommand+1,w
  4838     02CB  00EA               	movwf	LIN_queuePacket@tempSchedule+1
  4839     02CC  0844               	movf	_LIN_rxCommand,w
  4840     02CD  00E9               	movwf	LIN_queuePacket@tempSchedule
  4841     02CE                     l2495:
  4842                           
  4843                           ;LINDrivers/lin_slave.c: 72:   cmd &= 0x3F;
  4844     02CE  303F               	movlw	63
  4845     02CF  05E7               	andwf	LIN_queuePacket@cmd,f
  4846     02D0                     l2497:
  4847                           
  4848                           ;LINDrivers/lin_slave.c: 73:   for (uint8_t i = 0; i < LIN_rxCommandLength; i++) {
  4849     02D0  01E8               	clrf	LIN_queuePacket@i
  4850     02D1  2AE3               	goto	l2507
  4851     02D2                     l2499:
  4852                           
  4853                           ;LINDrivers/lin_slave.c: 74:     if (cmd == tempSchedule->cmd) {
  4854     02D2  0869               	movf	LIN_queuePacket@tempSchedule,w
  4855     02D3  0084               	movwf	4
  4856     02D4  086A               	movf	LIN_queuePacket@tempSchedule+1,w
  4857     02D5  0085               	movwf	5
  4858     02D6  0800               	movf	0,w	;code access
  4859     02D7  0667               	xorwf	LIN_queuePacket@cmd,w
  4860     02D8  1D03               	skipz
  4861     02D9  2ADB               	goto	u1901
  4862     02DA  2ADC               	goto	u1900
  4863     02DB                     u1901:
  4864     02DB  2ADD               	goto	l2503
  4865     02DC                     u1900:
  4866     02DC  2AE9               	goto	l2509
  4867     02DD                     l2503:
  4868                           
  4869                           ;LINDrivers/lin_slave.c: 77:     tempSchedule++;
  4870     02DD  3005               	movlw	5
  4871     02DE  07E9               	addwf	LIN_queuePacket@tempSchedule,f
  4872     02DF  3000               	movlw	0
  4873     02E0  3DEA               	addwfc	LIN_queuePacket@tempSchedule+1,f
  4874     02E1                     l2505:
  4875                           
  4876                           ;LINDrivers/lin_slave.c: 78:   }
  4877     02E1  3001               	movlw	1
  4878     02E2  07E8               	addwf	LIN_queuePacket@i,f
  4879     02E3                     l2507:
  4880     02E3  0854               	movf	_LIN_rxCommandLength,w
  4881     02E4  0268               	subwf	LIN_queuePacket@i,w
  4882     02E5  1C03               	skipc
  4883     02E6  2AE8               	goto	u1911
  4884     02E7  2AE9               	goto	u1910
  4885     02E8                     u1911:
  4886     02E8  2AD2               	goto	l2499
  4887     02E9                     u1910:
  4888     02E9                     l2509:
  4889                           
  4890                           ;LINDrivers/lin_slave.c: 80:   LIN_packet.type = tempSchedule->type;
  4891     02E9  3001               	movlw	1
  4892     02EA  0769               	addwf	LIN_queuePacket@tempSchedule,w
  4893     02EB  0084               	movwf	4
  4894     02EC  086A               	movf	LIN_queuePacket@tempSchedule+1,w
  4895     02ED  1803               	skipnc
  4896     02EE  3E01               	addlw	1
  4897     02EF  0085               	movwf	5
  4898     02F0  0800               	movf	0,w	;code access
  4899     02F1  00E3               	movwf	_LIN_packet+10
  4900                           
  4901                           ;LINDrivers/lin_slave.c: 81:   LIN_packet.length = tempSchedule->length;
  4902     02F2  3002               	movlw	2
  4903     02F3  0769               	addwf	LIN_queuePacket@tempSchedule,w
  4904     02F4  0084               	movwf	4
  4905     02F5  086A               	movf	LIN_queuePacket@tempSchedule+1,w
  4906     02F6  1803               	skipnc
  4907     02F7  3E01               	addlw	1
  4908     02F8  0085               	movwf	5
  4909     02F9  0800               	movf	0,w	;code access
  4910     02FA  00E4               	movwf	_LIN_packet+11
  4911     02FB                     l2511:
  4912                           
  4913                           ;LINDrivers/lin_slave.c: 85:   memcpy(LIN_packet.data, tempSchedule->data, LIN_packet.le
      +                          ngth);
  4914     02FB  305A               	movlw	low (_LIN_packet+1)
  4915     02FC  00F0               	movwf	memcpy@d1
  4916     02FD  3000               	movlw	high (_LIN_packet+1)
  4917     02FE  00F1               	movwf	memcpy@d1+1
  4918     02FF  3003               	movlw	3
  4919     0300  0769               	addwf	LIN_queuePacket@tempSchedule,w
  4920     0301  0084               	movwf	4
  4921     0302  086A               	movf	LIN_queuePacket@tempSchedule+1,w
  4922     0303  1803               	skipnc
  4923     0304  3E01               	addlw	1
  4924     0305  0085               	movwf	5
  4925     0306  3F00               	moviw [0]fsr0
  4926     0307  00F2               	movwf	memcpy@s1
  4927     0308  3F01               	moviw [1]fsr0
  4928     0309  00F3               	movwf	memcpy@s1+1
  4929     030A  0864               	movf	_LIN_packet+11,w
  4930     030B  00F4               	movwf	memcpy@n
  4931     030C  01F5               	clrf	memcpy@n+1
  4932     030D  1BF4               	btfsc	memcpy@n,7
  4933     030E  03F5               	decf	memcpy@n+1,f
  4934     030F  3184  24C5  3182   	fcall	_memcpy
  4935     0312                     l2513:
  4936                           
  4937                           ;LINDrivers/lin_slave.c: 88:   LIN_packet.checksum =
  4938     0312  0020               	movlb	0	; select bank0
  4939     0313  0859               	movf	_LIN_packet,w
  4940     0314  00F0               	movwf	LIN_getChecksum@pid
  4941     0315  305A               	movlw	low (_LIN_packet+1)
  4942     0316  00F1               	movwf	LIN_getChecksum@data
  4943     0317  3000               	movlw	high (_LIN_packet+1)
  4944     0318  00F2               	movwf	LIN_getChecksum@data+1
  4945     0319  0864               	movf	_LIN_packet+11,w
  4946     031A  3183  23FC  3182   	fcall	_LIN_getChecksum
  4947     031D  0020               	movlb	0	; select bank0
  4948     031E  00E2               	movwf	_LIN_packet+9
  4949     031F                     l2515:
  4950                           
  4951                           ;LINDrivers/lin_slave.c: 90:   LIN_sendPacket(LIN_packet.length, LIN_packet.PID, LIN_pac
      +                          ket.data);
  4952     031F  0859               	movf	_LIN_packet,w
  4953     0320  00F9               	movwf	LIN_sendPacket@pid
  4954     0321  305A               	movlw	low (_LIN_packet+1)
  4955     0322  00FA               	movwf	LIN_sendPacket@data
  4956     0323  3000               	movlw	high (_LIN_packet+1)
  4957     0324  00FB               	movwf	LIN_sendPacket@data+1
  4958     0325  0864               	movf	_LIN_packet+11,w
  4959     0326  3184  24A2  3182   	fcall	_LIN_sendPacket
  4960     0329                     l201:
  4961     0329  0008               	return
  4962     032A                     __end_of_LIN_queuePacket:
  4963                           
  4964                           	psect	text30
  4965     04C5                     __ptext30:	
  4966 ;; *************** function _memcpy *****************
  4967 ;; Defined at:
  4968 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  d1              2    0[COMMON] PTR void 
  4971 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4972 ;;  s1              2    2[COMMON] PTR const void 
  4973 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4974 ;;  n               2    4[COMMON] unsigned int 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  s               1    8[COMMON] PTR const unsigned char 
  4977 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4978 ;;  d               1    7[COMMON] PTR unsigned char 
  4979 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4980 ;;  tmp             1    6[COMMON] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  2    0[COMMON] PTR void 
  4983 ;; Registers used:
  4984 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4990 ;;      Params:         6       0       0       0       0       0       0       0
  4991 ;;      Locals:         3       0       0       0       0       0       0       0
  4992 ;;      Temps:          0       0       0       0       0       0       0       0
  4993 ;;      Totals:         9       0       0       0       0       0       0       0
  4994 ;;Total ram usage:        9 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; Hardware stack levels required when called: 4
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_LIN_queuePacket
  5001 ;;		_LIN_getPacket
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005     04C5                     _memcpy:	
  5006                           ;psect for function _memcpy
  5007                           
  5008     04C5                     l1867:	
  5009                           ;incstack = 0
  5010                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  5011                           
  5012     04C5  0872               	movf	memcpy@s1,w
  5013     04C6  00F8               	movwf	memcpy@s
  5014     04C7  0870               	movf	memcpy@d1,w
  5015     04C8  00F7               	movwf	memcpy@d
  5016     04C9  2CD8               	goto	l1202
  5017     04CA                     l1869:
  5018     04CA  0878               	movf	memcpy@s,w
  5019     04CB  0086               	movwf	6
  5020     04CC  0187               	clrf	7
  5021     04CD  0801               	movf	1,w
  5022     04CE  00F6               	movwf	memcpy@tmp
  5023     04CF                     l1871:
  5024     04CF  3001               	movlw	1
  5025     04D0  07F8               	addwf	memcpy@s,f
  5026     04D1                     l1873:
  5027     04D1  0877               	movf	memcpy@d,w
  5028     04D2  0086               	movwf	6
  5029     04D3  0187               	clrf	7
  5030     04D4  0876               	movf	memcpy@tmp,w
  5031     04D5  0081               	movwf	1
  5032     04D6  3001               	movlw	1
  5033     04D7  07F7               	addwf	memcpy@d,f
  5034     04D8                     l1202:
  5035     04D8  3001               	movlw	1
  5036     04D9  02F4               	subwf	memcpy@n,f
  5037     04DA  3000               	movlw	0
  5038     04DB  3BF5               	subwfb	memcpy@n+1,f
  5039     04DC  0A74               	incf	memcpy@n,w
  5040     04DD  1D03               	skipz
  5041     04DE  2CE3               	goto	u961
  5042     04DF  0A75               	incf	memcpy@n+1,w
  5043     04E0  1D03               	btfss	3,2
  5044     04E1  2CE3               	goto	u961
  5045     04E2  2CE4               	goto	u960
  5046     04E3                     u961:
  5047     04E3  2CCA               	goto	l1869
  5048     04E4                     u960:
  5049     04E4                     l1205:
  5050     04E4  0008               	return
  5051     04E5                     __end_of_memcpy:
  5052                           
  5053                           	psect	text31
  5054     04A2                     __ptext31:	
  5055 ;; *************** function _LIN_sendPacket *****************
  5056 ;; Defined at:
  5057 ;;		line 205 in file "LINDrivers/lin_slave.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  length          1    wreg     unsigned char 
  5060 ;;  pid             1    9[COMMON] unsigned char 
  5061 ;;  data            2   10[COMMON] PTR unsigned char 
  5062 ;;		 -> LIN_packet(13), 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  length          1   12[COMMON] unsigned char 
  5065 ;;  i               1   13[COMMON] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      void 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5075 ;;      Params:         3       0       0       0       0       0       0       0
  5076 ;;      Locals:         2       0       0       0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0
  5078 ;;      Totals:         5       0       0       0       0       0       0       0
  5079 ;;Total ram usage:        5 bytes
  5080 ;; Hardware stack levels used: 1
  5081 ;; Hardware stack levels required when called: 5
  5082 ;; This function calls:
  5083 ;;		_EUSART_Write
  5084 ;;		_LIN_getChecksum
  5085 ;; This function is called by:
  5086 ;;		_LIN_queuePacket
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090     04A2                     _LIN_sendPacket:	
  5091                           ;psect for function _LIN_sendPacket
  5092                           
  5093                           
  5094                           ;incstack = 0
  5095                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5096                           ;LIN_sendPacket@length stored from wreg
  5097     04A2  00FC               	movwf	LIN_sendPacket@length
  5098     04A3                     l1941:
  5099                           
  5100                           ;LINDrivers/lin_slave.c: 208:   for (uint8_t i = 0; i < length; i++) {
  5101     04A3  01FD               	clrf	LIN_sendPacket@i
  5102     04A4  2CB1               	goto	l1947
  5103     04A5                     l1943:
  5104                           
  5105                           ;LINDrivers/lin_slave.c: 209:     EUSART_Write(*(data + i));
  5106     04A5  087D               	movf	LIN_sendPacket@i,w
  5107     04A6  077A               	addwf	LIN_sendPacket@data,w
  5108     04A7  0086               	movwf	6
  5109     04A8  3000               	movlw	0
  5110     04A9  3D7B               	addwfc	LIN_sendPacket@data+1,w
  5111     04AA  0087               	movwf	7
  5112     04AB  0801               	movf	1,w
  5113     04AC  3184  2458  3184   	fcall	_EUSART_Write
  5114     04AF                     l1945:
  5115                           
  5116                           ;LINDrivers/lin_slave.c: 210:   }
  5117     04AF  3001               	movlw	1
  5118     04B0  07FD               	addwf	LIN_sendPacket@i,f
  5119     04B1                     l1947:
  5120     04B1  087C               	movf	LIN_sendPacket@length,w
  5121     04B2  027D               	subwf	LIN_sendPacket@i,w
  5122     04B3  1C03               	skipc
  5123     04B4  2CB6               	goto	u1041
  5124     04B5  2CB7               	goto	u1040
  5125     04B6                     u1041:
  5126     04B6  2CA5               	goto	l1943
  5127     04B7                     u1040:
  5128     04B7                     l1949:
  5129                           
  5130                           ;LINDrivers/lin_slave.c: 212:   EUSART_Write(LIN_getChecksum(length, pid, data));
  5131     04B7  0879               	movf	LIN_sendPacket@pid,w
  5132     04B8  00F0               	movwf	LIN_getChecksum@pid
  5133     04B9  087B               	movf	LIN_sendPacket@data+1,w
  5134     04BA  00F2               	movwf	LIN_getChecksum@data+1
  5135     04BB  087A               	movf	LIN_sendPacket@data,w
  5136     04BC  00F1               	movwf	LIN_getChecksum@data
  5137     04BD  087C               	movf	LIN_sendPacket@length,w
  5138     04BE  3183  23FC  3184   	fcall	_LIN_getChecksum
  5139     04C1  3184  2458  3184   	fcall	_EUSART_Write
  5140     04C4                     l242:
  5141     04C4  0008               	return
  5142     04C5                     __end_of_LIN_sendPacket:
  5143                           
  5144                           	psect	text32
  5145     03FC                     __ptext32:	
  5146 ;; *************** function _LIN_getChecksum *****************
  5147 ;; Defined at:
  5148 ;;		line 289 in file "LINDrivers/lin_slave.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  length          1    wreg     unsigned char 
  5151 ;;  pid             1    0[COMMON] unsigned char 
  5152 ;;  data            2    1[COMMON] PTR unsigned char 
  5153 ;;		 -> LIN_packet(13), 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  length          1    5[COMMON] unsigned char 
  5156 ;;  i               1    6[COMMON] unsigned char 
  5157 ;;  checksum        2    7[COMMON] unsigned short 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      unsigned char 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5167 ;;      Params:         3       0       0       0       0       0       0       0
  5168 ;;      Locals:         4       0       0       0       0       0       0       0
  5169 ;;      Temps:          2       0       0       0       0       0       0       0
  5170 ;;      Totals:         9       0       0       0       0       0       0       0
  5171 ;;Total ram usage:        9 bytes
  5172 ;; Hardware stack levels used: 1
  5173 ;; Hardware stack levels required when called: 4
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_LIN_queuePacket
  5178 ;;		_LIN_handler
  5179 ;;		_LIN_sendPacket
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183     03FC                     _LIN_getChecksum:	
  5184                           ;psect for function _LIN_getChecksum
  5185                           
  5186                           
  5187                           ;incstack = 0
  5188                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  5189                           ;LIN_getChecksum@length stored from wreg
  5190     03FC  00F5               	movwf	LIN_getChecksum@length
  5191     03FD                     l1875:
  5192                           
  5193                           ;LINDrivers/lin_slave.c: 290:   uint16_t checksum = pid;
  5194     03FD  0870               	movf	LIN_getChecksum@pid,w
  5195     03FE  00F3               	movwf	??_LIN_getChecksum
  5196     03FF  01F4               	clrf	??_LIN_getChecksum+1
  5197     0400  0873               	movf	??_LIN_getChecksum,w
  5198     0401  00F7               	movwf	LIN_getChecksum@checksum
  5199     0402  0874               	movf	??_LIN_getChecksum+1,w
  5200     0403  00F8               	movwf	LIN_getChecksum@checksum+1
  5201     0404                     l1877:
  5202                           
  5203                           ;LINDrivers/lin_slave.c: 292:   for (uint8_t i = 0; i < length; i++) {
  5204     0404  01F6               	clrf	LIN_getChecksum@i
  5205     0405  2C24               	goto	l1889
  5206     0406                     l1879:
  5207                           
  5208                           ;LINDrivers/lin_slave.c: 293:     checksum = checksum + *data++;
  5209     0406  0871               	movf	LIN_getChecksum@data,w
  5210     0407  0086               	movwf	6
  5211     0408  0872               	movf	LIN_getChecksum@data+1,w
  5212     0409  0087               	movwf	7
  5213     040A  0801               	movf	1,w
  5214     040B  0777               	addwf	LIN_getChecksum@checksum,w
  5215     040C  00F7               	movwf	LIN_getChecksum@checksum
  5216     040D  0878               	movf	LIN_getChecksum@checksum+1,w
  5217     040E  1803               	skipnc
  5218     040F  0A78               	incf	LIN_getChecksum@checksum+1,w
  5219     0410  00F8               	movwf	LIN_getChecksum@checksum+1
  5220     0411                     l1881:
  5221     0411  3001               	movlw	1
  5222     0412  07F1               	addwf	LIN_getChecksum@data,f
  5223     0413  3000               	movlw	0
  5224     0414  3DF2               	addwfc	LIN_getChecksum@data+1,f
  5225     0415                     l1883:
  5226                           
  5227                           ;LINDrivers/lin_slave.c: 294:     if (checksum > 0xFF)
  5228     0415  3001               	movlw	1
  5229     0416  0278               	subwf	LIN_getChecksum@checksum+1,w
  5230     0417  3000               	movlw	0
  5231     0418  1903               	skipnz
  5232     0419  0277               	subwf	LIN_getChecksum@checksum,w
  5233     041A  1C03               	skipc
  5234     041B  2C1D               	goto	u971
  5235     041C  2C1E               	goto	u970
  5236     041D                     u971:
  5237     041D  2C22               	goto	l1887
  5238     041E                     u970:
  5239     041E                     l1885:
  5240                           
  5241                           ;LINDrivers/lin_slave.c: 295:       checksum -= 0xFF;
  5242     041E  30FF               	movlw	255
  5243     041F  02F7               	subwf	LIN_getChecksum@checksum,f
  5244     0420  3000               	movlw	0
  5245     0421  3BF8               	subwfb	LIN_getChecksum@checksum+1,f
  5246     0422                     l1887:
  5247                           
  5248                           ;LINDrivers/lin_slave.c: 296:   }
  5249     0422  3001               	movlw	1
  5250     0423  07F6               	addwf	LIN_getChecksum@i,f
  5251     0424                     l1889:
  5252     0424  0875               	movf	LIN_getChecksum@length,w
  5253     0425  0276               	subwf	LIN_getChecksum@i,w
  5254     0426  1C03               	skipc
  5255     0427  2C29               	goto	u981
  5256     0428  2C2A               	goto	u980
  5257     0429                     u981:
  5258     0429  2C06               	goto	l1879
  5259     042A                     u980:
  5260     042A                     l274:
  5261                           
  5262                           ;LINDrivers/lin_slave.c: 297:   checksum = ~checksum;
  5263     042A  09F7               	comf	LIN_getChecksum@checksum,f
  5264     042B  09F8               	comf	LIN_getChecksum@checksum+1,f
  5265     042C                     l1891:
  5266                           
  5267                           ;LINDrivers/lin_slave.c: 299:   return (uint8_t)checksum;
  5268     042C  0877               	movf	LIN_getChecksum@checksum,w
  5269     042D                     l275:
  5270     042D  0008               	return
  5271     042E                     __end_of_LIN_getChecksum:
  5272                           
  5273                           	psect	text33
  5274     0458                     __ptext33:	
  5275 ;; *************** function _EUSART_Write *****************
  5276 ;; Defined at:
  5277 ;;		line 173 in file "mcc_generated_files/eusart.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  txData          1    wreg     unsigned char 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  txData          1    0[COMMON] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5291 ;;      Params:         0       0       0       0       0       0       0       0
  5292 ;;      Locals:         1       0       0       0       0       0       0       0
  5293 ;;      Temps:          0       0       0       0       0       0       0       0
  5294 ;;      Totals:         1       0       0       0       0       0       0       0
  5295 ;;Total ram usage:        1 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 4
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_LIN_sendPacket
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305     0458                     _EUSART_Write:	
  5306                           ;psect for function _EUSART_Write
  5307                           
  5308                           
  5309                           ;incstack = 0
  5310                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5311                           ;EUSART_Write@txData stored from wreg
  5312     0458  00F0               	movwf	EUSART_Write@txData
  5313     0459                     l1903:
  5314     0459                     l1905:	
  5315                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  5316                           
  5317                           
  5318                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  5319     0459  0020               	movlb	0	; select bank0
  5320     045A  084D               	movf	_eusartTxBufferRemaining,w	;volatile
  5321     045B  1903               	btfsc	3,2
  5322     045C  2C5E               	goto	u1001
  5323     045D  2C5F               	goto	u1000
  5324     045E                     u1001:
  5325     045E  2C59               	goto	l1905
  5326     045F                     u1000:
  5327     045F                     l427:
  5328                           
  5329                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  5330     045F  0021               	movlb	1	; select bank1
  5331     0460  1A11               	btfsc	17,4	;volatile
  5332     0461  2C63               	goto	u1011
  5333     0462  2C64               	goto	u1010
  5334     0463                     u1011:
  5335     0463  2C68               	goto	l428
  5336     0464                     u1010:
  5337     0464                     l1907:
  5338                           
  5339                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  5340     0464  0870               	movf	EUSART_Write@txData,w
  5341     0465  0023               	movlb	3	; select bank3
  5342     0466  009A               	movwf	26	;volatile
  5343                           
  5344                           ;mcc_generated_files/eusart.c: 182:     }
  5345     0467  2C7B               	goto	l1919
  5346     0468                     l428:	
  5347                           ;mcc_generated_files/eusart.c: 183:     else
  5348                           
  5349                           
  5350                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  5351     0468  1211               	bcf	17,4	;volatile
  5352     0469                     l1909:
  5353                           
  5354                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  5355     0469  0020               	movlb	0	; select bank0
  5356     046A  084F               	movf	_eusartTxHead,w
  5357     046B  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5358     046C  0086               	movwf	6
  5359     046D  0187               	clrf	7
  5360     046E  0870               	movf	EUSART_Write@txData,w
  5361     046F  0081               	movwf	1
  5362     0470                     l1911:
  5363     0470  3001               	movlw	1
  5364     0471  07CF               	addwf	_eusartTxHead,f	;volatile
  5365     0472                     l1913:
  5366                           
  5367                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5368     0472  3008               	movlw	8
  5369     0473  024F               	subwf	_eusartTxHead,w	;volatile
  5370     0474  1C03               	skipc
  5371     0475  2C77               	goto	u1021
  5372     0476  2C78               	goto	u1020
  5373     0477                     u1021:
  5374     0477  2C79               	goto	l1917
  5375     0478                     u1020:
  5376     0478                     l1915:
  5377                           
  5378                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  5379     0478  01CF               	clrf	_eusartTxHead	;volatile
  5380     0479                     l1917:
  5381                           
  5382                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  5383     0479  3001               	movlw	1
  5384     047A  02CD               	subwf	_eusartTxBufferRemaining,f	;volatile
  5385     047B                     l1919:
  5386                           
  5387                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  5388     047B  0021               	movlb	1	; select bank1
  5389     047C  1611               	bsf	17,4	;volatile
  5390     047D                     l431:
  5391     047D  0008               	return
  5392     047E                     __end_of_EUSART_Write:
  5393                           
  5394                           	psect	text34
  5395     0638                     __ptext34:	
  5396 ;; *************** function _LIN_enableRx *****************
  5397 ;; Defined at:
  5398 ;;		line 327 in file "LINDrivers/lin_slave.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      void 
  5405 ;; Registers used:
  5406 ;;		None
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5412 ;;      Params:         0       0       0       0       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0       0       0
  5415 ;;      Totals:         0       0       0       0       0       0       0       0
  5416 ;;Total ram usage:        0 bytes
  5417 ;; Hardware stack levels used: 1
  5418 ;; Hardware stack levels required when called: 4
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_LIN_init
  5423 ;;		_LIN_handler
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427     0638                     _LIN_enableRx:	
  5428                           ;psect for function _LIN_enableRx
  5429                           
  5430     0638                     l1863:	
  5431                           ;incstack = 0
  5432                           ; Regs used in _LIN_enableRx: []
  5433                           
  5434                           
  5435                           ;LINDrivers/lin_slave.c: 328:   RCSTAbits.CREN = 1;
  5436     0638  0023               	movlb	3	; select bank3
  5437     0639  161D               	bsf	29,4	;volatile
  5438                           
  5439                           ;LINDrivers/lin_slave.c: 329:   PIE1bits.RCIE = 1;
  5440     063A  0021               	movlb	1	; select bank1
  5441     063B  1691               	bsf	17,5	;volatile
  5442     063C                     l291:
  5443     063C  0008               	return
  5444     063D                     __end_of_LIN_enableRx:
  5445                           
  5446                           	psect	text35
  5447     063D                     __ptext35:	
  5448 ;; *************** function _LIN_disableRx *****************
  5449 ;; Defined at:
  5450 ;;		line 332 in file "LINDrivers/lin_slave.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;		None
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;		None
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		None
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5464 ;;      Params:         0       0       0       0       0       0       0       0
  5465 ;;      Locals:         0       0       0       0       0       0       0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0       0
  5467 ;;      Totals:         0       0       0       0       0       0       0       0
  5468 ;;Total ram usage:        0 bytes
  5469 ;; Hardware stack levels used: 1
  5470 ;; Hardware stack levels required when called: 4
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_LIN_handler
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478     063D                     _LIN_disableRx:	
  5479                           ;psect for function _LIN_disableRx
  5480                           
  5481     063D                     l2169:	
  5482                           ;incstack = 0
  5483                           ; Regs used in _LIN_disableRx: []
  5484                           
  5485                           
  5486                           ;LINDrivers/lin_slave.c: 333:   RCSTAbits.CREN = 0;
  5487     063D  0023               	movlb	3	; select bank3
  5488     063E  121D               	bcf	29,4	;volatile
  5489                           
  5490                           ;LINDrivers/lin_slave.c: 334:   PIE1bits.RCIE = 0;
  5491     063F  0021               	movlb	1	; select bank1
  5492     0640  1291               	bcf	17,5	;volatile
  5493     0641                     l294:
  5494     0641  0008               	return
  5495     0642                     __end_of_LIN_disableRx:
  5496                           
  5497                           	psect	text36
  5498     051D                     __ptext36:	
  5499 ;; *************** function _LIN_checkPID *****************
  5500 ;; Defined at:
  5501 ;;		line 261 in file "LINDrivers/lin_slave.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  pid             1    wreg     unsigned char 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  pid             1    7[COMMON] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      _Bool 
  5508 ;; Registers used:
  5509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5515 ;;      Params:         0       0       0       0       0       0       0       0
  5516 ;;      Locals:         1       0       0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0       0
  5518 ;;      Totals:         1       0       0       0       0       0       0       0
  5519 ;;Total ram usage:        1 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 5
  5522 ;; This function calls:
  5523 ;;		_LIN_calcParity
  5524 ;;		_LIN_getFromTable
  5525 ;; This function is called by:
  5526 ;;		_LIN_handler
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530     051D                     _LIN_checkPID:	
  5531                           ;psect for function _LIN_checkPID
  5532                           
  5533                           
  5534                           ;incstack = 0
  5535                           ; Regs used in _LIN_checkPID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5536                           ;LIN_checkPID@pid stored from wreg
  5537     051D  00F7               	movwf	LIN_checkPID@pid
  5538     051E                     l2225:
  5539                           
  5540                           ;LINDrivers/lin_slave.c: 262:   if (LIN_getFromTable(pid, TYPE) == ERROR)
  5541     051E  01F0               	clrf	LIN_getFromTable@param
  5542     051F  0AF0               	incf	LIN_getFromTable@param,f
  5543     0520  0877               	movf	LIN_checkPID@pid,w
  5544     0521  3183  232A  3185   	fcall	_LIN_getFromTable
  5545     0524  3A02               	xorlw	2
  5546     0525  1D03               	skipz
  5547     0526  2D28               	goto	u1621
  5548     0527  2D29               	goto	u1620
  5549     0528                     u1621:
  5550     0528  2D2B               	goto	l2231
  5551     0529                     u1620:
  5552     0529                     l2227:
  5553                           
  5554                           ;LINDrivers/lin_slave.c: 263:     return 0;
  5555     0529  3000               	movlw	0
  5556     052A  2D36               	goto	l264
  5557     052B                     l2231:
  5558                           
  5559                           ;LINDrivers/lin_slave.c: 265:   if (pid == LIN_calcParity(pid & 0x3F))
  5560     052B  0877               	movf	LIN_checkPID@pid,w
  5561     052C  393F               	andlw	63
  5562     052D  3182  2242  3185   	fcall	_LIN_calcParity
  5563     0530  0677               	xorwf	LIN_checkPID@pid,w
  5564     0531  1D03               	skipz
  5565     0532  2D34               	goto	u1631
  5566     0533  2D35               	goto	u1630
  5567     0534                     u1631:
  5568     0534  2D29               	goto	l2227
  5569     0535                     u1630:
  5570     0535                     l2233:
  5571                           
  5572                           ;LINDrivers/lin_slave.c: 266:     return 1;
  5573     0535  3001               	movlw	1
  5574     0536                     l264:
  5575     0536  0008               	return
  5576     0537                     __end_of_LIN_checkPID:
  5577                           
  5578                           	psect	text37
  5579     032A                     __ptext37:	
  5580 ;; *************** function _LIN_getFromTable *****************
  5581 ;; Defined at:
  5582 ;;		line 230 in file "LINDrivers/lin_slave.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  cmd             1    wreg     unsigned char 
  5585 ;;  param           1    0[COMMON] enum E221
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  cmd             1    3[COMMON] unsigned char 
  5588 ;;  length          1    4[COMMON] unsigned char 
  5589 ;;  rxCommand       2    5[COMMON] PTR const struct .
  5590 ;;		 -> NULL(0), scheduleTable(5), 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      unsigned char 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5600 ;;      Params:         1       0       0       0       0       0       0       0
  5601 ;;      Locals:         4       0       0       0       0       0       0       0
  5602 ;;      Temps:          2       0       0       0       0       0       0       0
  5603 ;;      Totals:         7       0       0       0       0       0       0       0
  5604 ;;Total ram usage:        7 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 4
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_LIN_handler
  5611 ;;		_LIN_checkPID
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615     032A                     _LIN_getFromTable:	
  5616                           ;psect for function _LIN_getFromTable
  5617                           
  5618                           
  5619                           ;incstack = 0
  5620                           ; Regs used in _LIN_getFromTable: [wreg-fsr0h+status,2+status,0+pclath]
  5621                           ;LIN_getFromTable@cmd stored from wreg
  5622     032A  00F3               	movwf	LIN_getFromTable@cmd
  5623     032B                     l1951:
  5624                           
  5625                           ;LINDrivers/lin_slave.c: 231:   const lin_rx_cmd_t *rxCommand =
  5626     032B  0020               	movlb	0	; select bank0
  5627     032C  0845               	movf	_LIN_rxCommand+1,w
  5628     032D  00F6               	movwf	LIN_getFromTable@rxCommand+1
  5629     032E  0844               	movf	_LIN_rxCommand,w
  5630     032F  00F5               	movwf	LIN_getFromTable@rxCommand
  5631     0330                     l1953:
  5632                           
  5633                           ;LINDrivers/lin_slave.c: 234:   cmd &= 0x3F;
  5634     0330  303F               	movlw	63
  5635     0331  05F3               	andwf	LIN_getFromTable@cmd,f
  5636     0332                     l1955:
  5637                           
  5638                           ;LINDrivers/lin_slave.c: 236:   for (uint8_t length = 0; length < LIN_rxCommandLength; l
      +                          ength++) {
  5639     0332  01F4               	clrf	LIN_getFromTable@length
  5640     0333  2B55               	goto	l1969
  5641     0334                     l1957:
  5642                           
  5643                           ;LINDrivers/lin_slave.c: 237:     if (cmd == rxCommand->cmd) {
  5644     0334  0875               	movf	LIN_getFromTable@rxCommand,w
  5645     0335  0084               	movwf	4
  5646     0336  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5647     0337  0085               	movwf	5
  5648     0338  0800               	movf	0,w	;code access
  5649     0339  0673               	xorwf	LIN_getFromTable@cmd,w
  5650     033A  1D03               	skipz
  5651     033B  2B3D               	goto	u1051
  5652     033C  2B3E               	goto	u1050
  5653     033D                     u1051:
  5654     033D  2B3F               	goto	l1961
  5655     033E                     u1050:
  5656     033E  2B74               	goto	l1985
  5657     033F                     l1961:
  5658                           
  5659                           ;LINDrivers/lin_slave.c: 240:     rxCommand++;
  5660     033F  3005               	movlw	5
  5661     0340  07F5               	addwf	LIN_getFromTable@rxCommand,f
  5662     0341  3000               	movlw	0
  5663     0342  3DF6               	addwfc	LIN_getFromTable@rxCommand+1,f
  5664                           
  5665                           ;LINDrivers/lin_slave.c: 242:     if (length == (LIN_rxCommandLength - 1)) {
  5666     0343  0854               	movf	_LIN_rxCommandLength,w
  5667     0344  3EFF               	addlw	255
  5668     0345  00F1               	movwf	??_LIN_getFromTable
  5669     0346  30FF               	movlw	255
  5670     0347  1803               	skipnc
  5671     0348  3000               	movlw	0
  5672     0349  00F2               	movwf	??_LIN_getFromTable+1
  5673     034A  0874               	movf	LIN_getFromTable@length,w
  5674     034B  0671               	xorwf	??_LIN_getFromTable,w
  5675     034C  0472               	iorwf	??_LIN_getFromTable+1,w
  5676     034D  1D03               	skipz
  5677     034E  2B50               	goto	u1061
  5678     034F  2B51               	goto	u1060
  5679     0350                     u1061:
  5680     0350  2B53               	goto	l1967
  5681     0351                     u1060:
  5682     0351                     l1963:
  5683                           
  5684                           ;LINDrivers/lin_slave.c: 243:       return ERROR;
  5685     0351  3002               	movlw	2
  5686     0352  2B87               	goto	l254
  5687     0353                     l1967:
  5688                           
  5689                           ;LINDrivers/lin_slave.c: 245:   }
  5690     0353  3001               	movlw	1
  5691     0354  07F4               	addwf	LIN_getFromTable@length,f
  5692     0355                     l1969:
  5693     0355  0854               	movf	_LIN_rxCommandLength,w
  5694     0356  0274               	subwf	LIN_getFromTable@length,w
  5695     0357  1C03               	skipc
  5696     0358  2B5A               	goto	u1071
  5697     0359  2B5B               	goto	u1070
  5698     035A                     u1071:
  5699     035A  2B34               	goto	l1957
  5700     035B                     u1070:
  5701     035B  2B74               	goto	l1985
  5702     035C                     l1971:
  5703                           
  5704                           ;LINDrivers/lin_slave.c: 249:     return rxCommand->cmd;
  5705     035C  0875               	movf	LIN_getFromTable@rxCommand,w
  5706     035D  0084               	movwf	4
  5707     035E  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5708     035F  0085               	movwf	5
  5709     0360  0800               	movf	0,w	;code access
  5710     0361  2B87               	goto	l254
  5711     0362                     l1975:
  5712                           
  5713                           ;LINDrivers/lin_slave.c: 251:     return rxCommand->type;
  5714     0362  3001               	movlw	1
  5715     0363  0775               	addwf	LIN_getFromTable@rxCommand,w
  5716     0364  0084               	movwf	4
  5717     0365  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5718     0366  1803               	skipnc
  5719     0367  3E01               	addlw	1
  5720     0368  0085               	movwf	5
  5721     0369  0800               	movf	0,w	;code access
  5722     036A  2B87               	goto	l254
  5723     036B                     l1979:
  5724                           
  5725                           ;LINDrivers/lin_slave.c: 253:     return rxCommand->length;
  5726     036B  3002               	movlw	2
  5727     036C  0775               	addwf	LIN_getFromTable@rxCommand,w
  5728     036D  0084               	movwf	4
  5729     036E  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5730     036F  1803               	skipnc
  5731     0370  3E01               	addlw	1
  5732     0371  0085               	movwf	5
  5733     0372  0800               	movf	0,w	;code access
  5734     0373  2B87               	goto	l254
  5735     0374                     l1985:
  5736     0374  0870               	movf	LIN_getFromTable@param,w
  5737     0375  00F1               	movwf	??_LIN_getFromTable
  5738     0376  01F2               	clrf	??_LIN_getFromTable+1
  5739                           
  5740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5741                           ; Switch size 1, requested type "simple"
  5742                           ; Number of cases is 1, Range of values is 0 to 0
  5743                           ; switch strategies available:
  5744                           ; Name         Instructions Cycles
  5745                           ; simple_byte            4     3 (average)
  5746                           ; direct_byte            8     6 (fixed)
  5747                           ; jumptable            260     6 (fixed)
  5748                           ;	Chosen strategy is simple_byte
  5749     0377  0872               	movf	??_LIN_getFromTable+1,w
  5750     0378  3A00               	xorlw	0	; case 0
  5751     0379  1903               	skipnz
  5752     037A  2B7C               	goto	l2687
  5753     037B  2B51               	goto	l1963
  5754     037C                     l2687:
  5755                           
  5756                           ; Switch size 1, requested type "simple"
  5757                           ; Number of cases is 3, Range of values is 0 to 2
  5758                           ; switch strategies available:
  5759                           ; Name         Instructions Cycles
  5760                           ; simple_byte           10     6 (average)
  5761                           ; direct_byte           12     6 (fixed)
  5762                           ; jumptable            260     6 (fixed)
  5763                           ;	Chosen strategy is simple_byte
  5764     037C  0871               	movf	??_LIN_getFromTable,w
  5765     037D  3A00               	xorlw	0	; case 0
  5766     037E  1903               	skipnz
  5767     037F  2B5C               	goto	l1971
  5768     0380  3A01               	xorlw	1	; case 1
  5769     0381  1903               	skipnz
  5770     0382  2B62               	goto	l1975
  5771     0383  3A03               	xorlw	3	; case 2
  5772     0384  1903               	skipnz
  5773     0385  2B6B               	goto	l1979
  5774     0386  2B51               	goto	l1963
  5775     0387                     l254:
  5776     0387  0008               	return
  5777     0388                     __end_of_LIN_getFromTable:
  5778                           
  5779                           	psect	text38
  5780     0242                     __ptext38:	
  5781 ;; *************** function _LIN_calcParity *****************
  5782 ;; Defined at:
  5783 ;;		line 271 in file "LINDrivers/lin_slave.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  CMD             1    wreg     unsigned char 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  CMD             1    1[COMMON] unsigned char 
  5788 ;;  PID             1    2[COMMON] struct .
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      unsigned char 
  5791 ;; Registers used:
  5792 ;;		wreg, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5798 ;;      Params:         0       0       0       0       0       0       0       0
  5799 ;;      Locals:         2       0       0       0       0       0       0       0
  5800 ;;      Temps:          1       0       0       0       0       0       0       0
  5801 ;;      Totals:         3       0       0       0       0       0       0       0
  5802 ;;Total ram usage:        3 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; Hardware stack levels required when called: 4
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_LIN_checkPID
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812     0242                     _LIN_calcParity:	
  5813                           ;psect for function _LIN_calcParity
  5814                           
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  5818                           ;LIN_calcParity@CMD stored from wreg
  5819     0242  00F1               	movwf	LIN_calcParity@CMD
  5820     0243                     l1999:
  5821                           
  5822                           ;LINDrivers/lin_slave.c: 272:   lin_pid_t PID;;LINDrivers/lin_slave.c: 273:   PID.rawPID
      +                           = CMD;
  5823     0243  0871               	movf	LIN_calcParity@CMD,w
  5824     0244  00F2               	movwf	LIN_calcParity@PID
  5825                           
  5826                           ;LINDrivers/lin_slave.c: 278:   PID.P0 = PID.ID0 ^ PID.ID1;
  5827     0245  18F2               	btfsc	LIN_calcParity@PID,1
  5828     0246  2A48               	goto	u1081
  5829     0247  2A4A               	goto	u1080
  5830     0248                     u1081:
  5831     0248  3001               	movlw	1
  5832     0249  2A4B               	goto	u1082
  5833     024A                     u1080:
  5834     024A  3000               	movlw	0
  5835     024B                     u1082:
  5836     024B  00F0               	movwf	??_LIN_calcParity
  5837     024C  1872               	btfsc	LIN_calcParity@PID,0
  5838     024D  2A4F               	goto	u1091
  5839     024E  2A51               	goto	u1090
  5840     024F                     u1091:
  5841     024F  3001               	movlw	1
  5842     0250  2A52               	goto	u1092
  5843     0251                     u1090:
  5844     0251  3000               	movlw	0
  5845     0252                     u1092:
  5846     0252  0670               	xorwf	??_LIN_calcParity,w
  5847     0253  1D03               	skipz
  5848     0254  2A56               	goto	u1101
  5849     0255  2A58               	goto	u1100
  5850     0256                     u1101:
  5851     0256  1772               	bsf	LIN_calcParity@PID,6
  5852     0257  2A59               	goto	u1114
  5853     0258                     u1100:
  5854     0258  1372               	bcf	LIN_calcParity@PID,6
  5855     0259                     u1114:
  5856                           
  5857                           ;LINDrivers/lin_slave.c: 279:   PID.P0 = PID.P0 ^ PID.ID2;
  5858     0259  1972               	btfsc	LIN_calcParity@PID,2
  5859     025A  2A5C               	goto	u1121
  5860     025B  2A5E               	goto	u1120
  5861     025C                     u1121:
  5862     025C  3001               	movlw	1
  5863     025D  2A5F               	goto	u1122
  5864     025E                     u1120:
  5865     025E  3000               	movlw	0
  5866     025F                     u1122:
  5867     025F  00F0               	movwf	??_LIN_calcParity
  5868     0260  1B72               	btfsc	LIN_calcParity@PID,6
  5869     0261  2A63               	goto	u1131
  5870     0262  2A65               	goto	u1130
  5871     0263                     u1131:
  5872     0263  3001               	movlw	1
  5873     0264  2A66               	goto	u1132
  5874     0265                     u1130:
  5875     0265  3000               	movlw	0
  5876     0266                     u1132:
  5877     0266  0670               	xorwf	??_LIN_calcParity,w
  5878     0267  1D03               	skipz
  5879     0268  2A6A               	goto	u1141
  5880     0269  2A6C               	goto	u1140
  5881     026A                     u1141:
  5882     026A  1772               	bsf	LIN_calcParity@PID,6
  5883     026B  2A6D               	goto	u1154
  5884     026C                     u1140:
  5885     026C  1372               	bcf	LIN_calcParity@PID,6
  5886     026D                     u1154:
  5887                           
  5888                           ;LINDrivers/lin_slave.c: 280:   PID.P0 = PID.P0 ^ PID.ID4;
  5889     026D  1A72               	btfsc	LIN_calcParity@PID,4
  5890     026E  2A70               	goto	u1161
  5891     026F  2A72               	goto	u1160
  5892     0270                     u1161:
  5893     0270  3001               	movlw	1
  5894     0271  2A73               	goto	u1162
  5895     0272                     u1160:
  5896     0272  3000               	movlw	0
  5897     0273                     u1162:
  5898     0273  00F0               	movwf	??_LIN_calcParity
  5899     0274  1B72               	btfsc	LIN_calcParity@PID,6
  5900     0275  2A77               	goto	u1171
  5901     0276  2A79               	goto	u1170
  5902     0277                     u1171:
  5903     0277  3001               	movlw	1
  5904     0278  2A7A               	goto	u1172
  5905     0279                     u1170:
  5906     0279  3000               	movlw	0
  5907     027A                     u1172:
  5908     027A  0670               	xorwf	??_LIN_calcParity,w
  5909     027B  1D03               	skipz
  5910     027C  2A7E               	goto	u1181
  5911     027D  2A80               	goto	u1180
  5912     027E                     u1181:
  5913     027E  1772               	bsf	LIN_calcParity@PID,6
  5914     027F  2A81               	goto	u1194
  5915     0280                     u1180:
  5916     0280  1372               	bcf	LIN_calcParity@PID,6
  5917     0281                     u1194:
  5918                           
  5919                           ;LINDrivers/lin_slave.c: 281:   PID.P1 = PID.ID1 ^ PID.ID3;
  5920     0281  19F2               	btfsc	LIN_calcParity@PID,3
  5921     0282  2A84               	goto	u1201
  5922     0283  2A86               	goto	u1200
  5923     0284                     u1201:
  5924     0284  3001               	movlw	1
  5925     0285  2A87               	goto	u1202
  5926     0286                     u1200:
  5927     0286  3000               	movlw	0
  5928     0287                     u1202:
  5929     0287  00F0               	movwf	??_LIN_calcParity
  5930     0288  18F2               	btfsc	LIN_calcParity@PID,1
  5931     0289  2A8B               	goto	u1211
  5932     028A  2A8D               	goto	u1210
  5933     028B                     u1211:
  5934     028B  3001               	movlw	1
  5935     028C  2A8E               	goto	u1212
  5936     028D                     u1210:
  5937     028D  3000               	movlw	0
  5938     028E                     u1212:
  5939     028E  0670               	xorwf	??_LIN_calcParity,w
  5940     028F  1D03               	skipz
  5941     0290  2A92               	goto	u1221
  5942     0291  2A94               	goto	u1220
  5943     0292                     u1221:
  5944     0292  17F2               	bsf	LIN_calcParity@PID,7
  5945     0293  2A95               	goto	u1234
  5946     0294                     u1220:
  5947     0294  13F2               	bcf	LIN_calcParity@PID,7
  5948     0295                     u1234:
  5949                           
  5950                           ;LINDrivers/lin_slave.c: 282:   PID.P1 = PID.P1 ^ PID.ID4;
  5951     0295  1A72               	btfsc	LIN_calcParity@PID,4
  5952     0296  2A98               	goto	u1241
  5953     0297  2A9A               	goto	u1240
  5954     0298                     u1241:
  5955     0298  3001               	movlw	1
  5956     0299  2A9B               	goto	u1242
  5957     029A                     u1240:
  5958     029A  3000               	movlw	0
  5959     029B                     u1242:
  5960     029B  00F0               	movwf	??_LIN_calcParity
  5961     029C  1BF2               	btfsc	LIN_calcParity@PID,7
  5962     029D  2A9F               	goto	u1251
  5963     029E  2AA1               	goto	u1250
  5964     029F                     u1251:
  5965     029F  3001               	movlw	1
  5966     02A0  2AA2               	goto	u1252
  5967     02A1                     u1250:
  5968     02A1  3000               	movlw	0
  5969     02A2                     u1252:
  5970     02A2  0670               	xorwf	??_LIN_calcParity,w
  5971     02A3  1D03               	skipz
  5972     02A4  2AA6               	goto	u1261
  5973     02A5  2AA8               	goto	u1260
  5974     02A6                     u1261:
  5975     02A6  17F2               	bsf	LIN_calcParity@PID,7
  5976     02A7  2AA9               	goto	u1274
  5977     02A8                     u1260:
  5978     02A8  13F2               	bcf	LIN_calcParity@PID,7
  5979     02A9                     u1274:
  5980                           
  5981                           ;LINDrivers/lin_slave.c: 283:   PID.P1 = PID.P1 ^ PID.ID5;
  5982     02A9  1AF2               	btfsc	LIN_calcParity@PID,5
  5983     02AA  2AAC               	goto	u1281
  5984     02AB  2AAE               	goto	u1280
  5985     02AC                     u1281:
  5986     02AC  3001               	movlw	1
  5987     02AD  2AAF               	goto	u1282
  5988     02AE                     u1280:
  5989     02AE  3000               	movlw	0
  5990     02AF                     u1282:
  5991     02AF  00F0               	movwf	??_LIN_calcParity
  5992     02B0  1BF2               	btfsc	LIN_calcParity@PID,7
  5993     02B1  2AB3               	goto	u1291
  5994     02B2  2AB5               	goto	u1290
  5995     02B3                     u1291:
  5996     02B3  3001               	movlw	1
  5997     02B4  2AB6               	goto	u1292
  5998     02B5                     u1290:
  5999     02B5  3000               	movlw	0
  6000     02B6                     u1292:
  6001     02B6  0670               	xorwf	??_LIN_calcParity,w
  6002     02B7  1D03               	skipz
  6003     02B8  2ABA               	goto	u1301
  6004     02B9  2ABC               	goto	u1300
  6005     02BA                     u1301:
  6006     02BA  17F2               	bsf	LIN_calcParity@PID,7
  6007     02BB  2ABD               	goto	u1314
  6008     02BC                     u1300:
  6009     02BC  13F2               	bcf	LIN_calcParity@PID,7
  6010     02BD                     u1314:
  6011     02BD                     l2001:
  6012                           
  6013                           ;LINDrivers/lin_slave.c: 284:   PID.P1 = ~PID.P1;
  6014     02BD  1003               	clrc
  6015     02BE  1FF2               	btfss	LIN_calcParity@PID,7
  6016     02BF  1403               	setc
  6017     02C0  1803               	btfsc	3,0
  6018     02C1  2AC3               	goto	u1321
  6019     02C2  2AC5               	goto	u1320
  6020     02C3                     u1321:
  6021     02C3  17F2               	bsf	LIN_calcParity@PID,7
  6022     02C4  2AC6               	goto	u1334
  6023     02C5                     u1320:
  6024     02C5  13F2               	bcf	LIN_calcParity@PID,7
  6025     02C6                     u1334:
  6026     02C6                     l2003:
  6027                           
  6028                           ;LINDrivers/lin_slave.c: 286:   return PID.rawPID;
  6029     02C6  0872               	movf	LIN_calcParity@PID,w
  6030     02C7                     l268:
  6031     02C7  0008               	return
  6032     02C8                     __end_of_LIN_calcParity:
  6033                           
  6034                           	psect	text39
  6035     05EE                     __ptext39:	
  6036 ;; *************** function _EUSART_is_rx_ready *****************
  6037 ;; Defined at:
  6038 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      _Bool 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6052 ;;      Params:         0       0       0       0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0
  6055 ;;      Totals:         0       0       0       0       0       0       0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 4
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_LIN_handler
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066     05EE                     _EUSART_is_rx_ready:	
  6067                           ;psect for function _EUSART_is_rx_ready
  6068                           
  6069     05EE                     l2199:	
  6070                           ;incstack = 0
  6071                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6072                           
  6073                           
  6074                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  6075     05EE  0020               	movlb	0	; select bank0
  6076     05EF  084A               	movf	_eusartRxCount,w	;volatile
  6077     05F0  1D03               	btfss	3,2
  6078     05F1  2DF3               	goto	u1581
  6079     05F2  2DF5               	goto	u1580
  6080     05F3                     u1581:
  6081     05F3  3001               	movlw	1
  6082     05F4  2DF6               	goto	u1590
  6083     05F5                     u1580:
  6084     05F5  3000               	movlw	0
  6085     05F6                     u1590:
  6086     05F6                     l409:
  6087     05F6  0008               	return
  6088     05F7                     __end_of_EUSART_is_rx_ready:
  6089                           
  6090                           	psect	text40
  6091     047E                     __ptext40:	
  6092 ;; *************** function _EUSART_Read *****************
  6093 ;; Defined at:
  6094 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  readValue       1    0[COMMON] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      unsigned char 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6108 ;;      Params:         0       0       0       0       0       0       0       0
  6109 ;;      Locals:         1       0       0       0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0
  6111 ;;      Totals:         1       0       0       0       0       0       0       0
  6112 ;;Total ram usage:        1 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; Hardware stack levels required when called: 4
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_LIN_handler
  6119 ;;		_LIN_breakCheck
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123     047E                     _EUSART_Read:	
  6124                           ;psect for function _EUSART_Read
  6125                           
  6126     047E                     l2203:	
  6127                           ;incstack = 0
  6128                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6129                           
  6130     047E                     l2205:	
  6131                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  6132                           
  6133                           
  6134                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  6135     047E  0020               	movlb	0	; select bank0
  6136     047F  084A               	movf	_eusartRxCount,w	;volatile
  6137     0480  1903               	btfsc	3,2
  6138     0481  2C83               	goto	u1601
  6139     0482  2C84               	goto	u1600
  6140     0483                     u1601:
  6141     0483  2C7E               	goto	l2205
  6142     0484                     u1600:
  6143     0484                     l2207:
  6144                           
  6145                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  6146     0484  084B               	movf	_eusartRxTail,w	;volatile
  6147     0485  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6148     0486  0086               	movwf	6
  6149     0487  0187               	clrf	7
  6150     0488  0801               	movf	1,w
  6151     0489  00C9               	movwf	_eusartRxLastError	;volatile
  6152                           
  6153                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  6154     048A  084B               	movf	_eusartRxTail,w
  6155     048B  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6156     048C  0086               	movwf	6
  6157     048D  0187               	clrf	7
  6158     048E  0801               	movf	1,w
  6159     048F  00F0               	movwf	EUSART_Read@readValue
  6160     0490                     l2209:
  6161     0490  3001               	movlw	1
  6162     0491  07CB               	addwf	_eusartRxTail,f	;volatile
  6163     0492                     l2211:
  6164                           
  6165                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  6166     0492  3008               	movlw	8
  6167     0493  024B               	subwf	_eusartRxTail,w	;volatile
  6168     0494  1C03               	skipc
  6169     0495  2C97               	goto	u1611
  6170     0496  2C98               	goto	u1610
  6171     0497                     u1611:
  6172     0497  2C99               	goto	l2215
  6173     0498                     u1610:
  6174     0498                     l2213:
  6175                           
  6176                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  6177     0498  01CB               	clrf	_eusartRxTail	;volatile
  6178     0499                     l2215:
  6179                           
  6180                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  6181     0499  0021               	movlb	1	; select bank1
  6182     049A  1291               	bcf	17,5	;volatile
  6183     049B                     l2217:
  6184                           
  6185                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  6186     049B  3001               	movlw	1
  6187     049C  0020               	movlb	0	; select bank0
  6188     049D  02CA               	subwf	_eusartRxCount,f	;volatile
  6189     049E                     l2219:
  6190                           
  6191                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  6192     049E  0021               	movlb	1	; select bank1
  6193     049F  1691               	bsf	17,5	;volatile
  6194     04A0                     l2221:
  6195                           
  6196                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  6197     04A0  0870               	movf	EUSART_Read@readValue,w
  6198     04A1                     l422:
  6199     04A1  0008               	return
  6200     04A2                     __end_of_EUSART_Read:
  6201                           
  6202                           	psect	text41
  6203     0388                     __ptext41:	
  6204 ;; *************** function _EUSART_Initialize *****************
  6205 ;; Defined at:
  6206 ;;		line 88 in file "mcc_generated_files/eusart.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0, pclath, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6220 ;;      Params:         0       0       0       0       0       0       0       0
  6221 ;;      Locals:         0       0       0       0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0       0
  6223 ;;      Totals:         0       0       0       0       0       0       0       0
  6224 ;;Total ram usage:        0 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 5
  6227 ;; This function calls:
  6228 ;;		_EUSART_SetErrorHandler
  6229 ;;		_EUSART_SetFramingErrorHandler
  6230 ;;		_EUSART_SetOverrunErrorHandler
  6231 ;;		_EUSART_SetRxInterruptHandler
  6232 ;;		_EUSART_SetTxInterruptHandler
  6233 ;; This function is called by:
  6234 ;;		_LIN_handler
  6235 ;;		_SYSTEM_Initialize
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239     0388                     _EUSART_Initialize:	
  6240                           ;psect for function _EUSART_Initialize
  6241                           
  6242     0388                     l2171:	
  6243                           ;incstack = 0
  6244                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6245                           
  6246                           
  6247                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  6248     0388  0021               	movlb	1	; select bank1
  6249     0389  1291               	bcf	17,5	;volatile
  6250     038A                     l2173:
  6251                           
  6252                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6253     038A  30C2               	movlw	low _EUSART_Receive_ISR
  6254     038B  00F0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  6255     038C  3003               	movlw	high _EUSART_Receive_ISR
  6256     038D  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  6257     038E  3186  2611  3183   	fcall	_EUSART_SetRxInterruptHandler
  6258     0391                     l2175:
  6259                           
  6260                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  6261     0391  0021               	movlb	1	; select bank1
  6262     0392  1211               	bcf	17,4	;volatile
  6263                           
  6264                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6265     0393  30E5               	movlw	low _EUSART_Transmit_ISR
  6266     0394  00F0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  6267     0395  3004               	movlw	high _EUSART_Transmit_ISR
  6268     0396  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  6269     0397  3186  260B  3183   	fcall	_EUSART_SetTxInterruptHandler
  6270     039A                     l2177:
  6271                           
  6272                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x18;
  6273     039A  3018               	movlw	24
  6274     039B  0023               	movlb	3	; select bank3
  6275     039C  009F               	movwf	31	;volatile
  6276     039D                     l2179:
  6277                           
  6278                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  6279     039D  3090               	movlw	144
  6280     039E  009D               	movwf	29	;volatile
  6281     039F                     l2181:
  6282                           
  6283                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  6284     039F  3024               	movlw	36
  6285     03A0  009E               	movwf	30	;volatile
  6286                           
  6287                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  6288     03A1  307E               	movlw	low _EUSART_DefaultFramingErrorHandler
  6289     03A2  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6290     03A3  3006               	movlw	high _EUSART_DefaultFramingErrorHandler
  6291     03A4  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6292     03A5  3186  261D  3183   	fcall	_EUSART_SetFramingErrorHandler
  6293                           
  6294                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  6295     03A8  3050               	movlw	low _EUSART_DefaultOverrunErrorHandler
  6296     03A9  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6297     03AA  3006               	movlw	high _EUSART_DefaultOverrunErrorHandler
  6298     03AB  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6299     03AC  3186  2617  3183   	fcall	_EUSART_SetOverrunErrorHandler
  6300                           
  6301                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  6302     03AF  3054               	movlw	low _EUSART_DefaultErrorHandler
  6303     03B0  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  6304     03B1  3006               	movlw	high _EUSART_DefaultErrorHandler
  6305     03B2  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6306     03B3  3186  2623  3183   	fcall	_EUSART_SetErrorHandler
  6307     03B6                     l2183:
  6308                           
  6309                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  6310     03B6  0020               	movlb	0	; select bank0
  6311     03B7  01C9               	clrf	_eusartRxLastError	;volatile
  6312     03B8                     l2185:
  6313                           
  6314                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  6315     03B8  01CF               	clrf	_eusartTxHead	;volatile
  6316     03B9                     l2187:
  6317                           
  6318                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  6319     03B9  01CE               	clrf	_eusartTxTail	;volatile
  6320     03BA                     l2189:
  6321                           
  6322                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6323     03BA  3008               	movlw	8
  6324     03BB  00CD               	movwf	_eusartTxBufferRemaining	;volatile
  6325     03BC                     l2191:
  6326                           
  6327                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  6328     03BC  01CC               	clrf	_eusartRxHead	;volatile
  6329     03BD                     l2193:
  6330                           
  6331                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  6332     03BD  01CB               	clrf	_eusartRxTail	;volatile
  6333     03BE                     l2195:
  6334                           
  6335                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  6336     03BE  01CA               	clrf	_eusartRxCount	;volatile
  6337     03BF                     l2197:
  6338                           
  6339                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 0;
  6340     03BF  0021               	movlb	1	; select bank1
  6341     03C0  1291               	bcf	17,5	;volatile
  6342     03C1                     l403:
  6343     03C1  0008               	return
  6344     03C2                     __end_of_EUSART_Initialize:
  6345                           
  6346                           	psect	text42
  6347     060B                     __ptext42:	
  6348 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6349 ;; Defined at:
  6350 ;;		line 276 in file "mcc_generated_files/eusart.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6353 ;;		 -> EUSART_Transmit_ISR(1), 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6365 ;;      Params:         2       0       0       0       0       0       0       0
  6366 ;;      Locals:         0       0       0       0       0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0       0
  6368 ;;      Totals:         2       0       0       0       0       0       0       0
  6369 ;;Total ram usage:        2 bytes
  6370 ;; Hardware stack levels used: 1
  6371 ;; Hardware stack levels required when called: 4
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_EUSART_Initialize
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379     060B                     _EUSART_SetTxInterruptHandler:	
  6380                           ;psect for function _EUSART_SetTxInterruptHandler
  6381                           
  6382     060B                     l2011:	
  6383                           ;incstack = 0
  6384                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  6385                           
  6386                           
  6387                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  6388     060B  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  6389     060C  0020               	movlb	0	; select bank0
  6390     060D  00C3               	movwf	_EUSART_TxDefaultInterruptHandler+1
  6391     060E  0870               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  6392     060F  00C2               	movwf	_EUSART_TxDefaultInterruptHandler
  6393     0610                     l469:
  6394     0610  0008               	return
  6395     0611                     __end_of_EUSART_SetTxInterruptHandler:
  6396                           
  6397                           	psect	text43
  6398     0611                     __ptext43:	
  6399 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6400 ;; Defined at:
  6401 ;;		line 280 in file "mcc_generated_files/eusart.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6404 ;;		 -> EUSART_Receive_ISR(1), 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6416 ;;      Params:         2       0       0       0       0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0
  6419 ;;      Totals:         2       0       0       0       0       0       0       0
  6420 ;;Total ram usage:        2 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; Hardware stack levels required when called: 4
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_EUSART_Initialize
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430     0611                     _EUSART_SetRxInterruptHandler:	
  6431                           ;psect for function _EUSART_SetRxInterruptHandler
  6432                           
  6433     0611                     l2009:	
  6434                           ;incstack = 0
  6435                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  6436                           
  6437                           
  6438                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  6439     0611  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  6440     0612  0020               	movlb	0	; select bank0
  6441     0613  00C1               	movwf	_EUSART_RxDefaultInterruptHandler+1
  6442     0614  0870               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  6443     0615  00C0               	movwf	_EUSART_RxDefaultInterruptHandler
  6444     0616                     l472:
  6445     0616  0008               	return
  6446     0617                     __end_of_EUSART_SetRxInterruptHandler:
  6447                           
  6448                           	psect	text44
  6449     0617                     __ptext44:	
  6450 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6451 ;; Defined at:
  6452 ;;		line 268 in file "mcc_generated_files/eusart.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6455 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6467 ;;      Params:         2       0       0       0       0       0       0       0
  6468 ;;      Locals:         0       0       0       0       0       0       0       0
  6469 ;;      Temps:          0       0       0       0       0       0       0       0
  6470 ;;      Totals:         2       0       0       0       0       0       0       0
  6471 ;;Total ram usage:        2 bytes
  6472 ;; Hardware stack levels used: 1
  6473 ;; Hardware stack levels required when called: 4
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_EUSART_Initialize
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481     0617                     _EUSART_SetOverrunErrorHandler:	
  6482                           ;psect for function _EUSART_SetOverrunErrorHandler
  6483                           
  6484     0617                     l2015:	
  6485                           ;incstack = 0
  6486                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6487                           
  6488                           
  6489                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  6490     0617  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6491     0618  0020               	movlb	0	; select bank0
  6492     0619  00BD               	movwf	_EUSART_OverrunErrorHandler+1
  6493     061A  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6494     061B  00BC               	movwf	_EUSART_OverrunErrorHandler
  6495     061C                     l463:
  6496     061C  0008               	return
  6497     061D                     __end_of_EUSART_SetOverrunErrorHandler:
  6498                           
  6499                           	psect	text45
  6500     061D                     __ptext45:	
  6501 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6502 ;; Defined at:
  6503 ;;		line 264 in file "mcc_generated_files/eusart.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6506 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  1    wreg      void 
  6511 ;; Registers used:
  6512 ;;		wreg
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6518 ;;      Params:         2       0       0       0       0       0       0       0
  6519 ;;      Locals:         0       0       0       0       0       0       0       0
  6520 ;;      Temps:          0       0       0       0       0       0       0       0
  6521 ;;      Totals:         2       0       0       0       0       0       0       0
  6522 ;;Total ram usage:        2 bytes
  6523 ;; Hardware stack levels used: 1
  6524 ;; Hardware stack levels required when called: 4
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_EUSART_Initialize
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532     061D                     _EUSART_SetFramingErrorHandler:	
  6533                           ;psect for function _EUSART_SetFramingErrorHandler
  6534                           
  6535     061D                     l2013:	
  6536                           ;incstack = 0
  6537                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6538                           
  6539                           
  6540                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  6541     061D  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6542     061E  0020               	movlb	0	; select bank0
  6543     061F  00BF               	movwf	_EUSART_FramingErrorHandler+1
  6544     0620  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6545     0621  00BE               	movwf	_EUSART_FramingErrorHandler
  6546     0622                     l460:
  6547     0622  0008               	return
  6548     0623                     __end_of_EUSART_SetFramingErrorHandler:
  6549                           
  6550                           	psect	text46
  6551     0623                     __ptext46:	
  6552 ;; *************** function _EUSART_SetErrorHandler *****************
  6553 ;; Defined at:
  6554 ;;		line 272 in file "mcc_generated_files/eusart.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6557 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      void 
  6562 ;; Registers used:
  6563 ;;		wreg
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6569 ;;      Params:         2       0       0       0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0
  6572 ;;      Totals:         2       0       0       0       0       0       0       0
  6573 ;;Total ram usage:        2 bytes
  6574 ;; Hardware stack levels used: 1
  6575 ;; Hardware stack levels required when called: 4
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_EUSART_Initialize
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583     0623                     _EUSART_SetErrorHandler:	
  6584                           ;psect for function _EUSART_SetErrorHandler
  6585                           
  6586     0623                     l2017:	
  6587                           ;incstack = 0
  6588                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6589                           
  6590                           
  6591                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  6592     0623  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6593     0624  0020               	movlb	0	; select bank0
  6594     0625  00BB               	movwf	_EUSART_ErrorHandler+1
  6595     0626  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6596     0627  00BA               	movwf	_EUSART_ErrorHandler
  6597     0628                     l466:
  6598     0628  0008               	return
  6599     0629                     __end_of_EUSART_SetErrorHandler:
  6600                           
  6601                           	psect	text47
  6602     0642                     __ptext47:	
  6603 ;; *************** function _AutoBaud_Detect_ON *****************
  6604 ;; Defined at:
  6605 ;;		line 93 in file "LINDrivers/lin_slave.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      void 
  6612 ;; Registers used:
  6613 ;;		None
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6619 ;;      Params:         0       0       0       0       0       0       0       0
  6620 ;;      Locals:         0       0       0       0       0       0       0       0
  6621 ;;      Temps:          0       0       0       0       0       0       0       0
  6622 ;;      Totals:         0       0       0       0       0       0       0       0
  6623 ;;Total ram usage:        0 bytes
  6624 ;; Hardware stack levels used: 1
  6625 ;; Hardware stack levels required when called: 4
  6626 ;; This function calls:
  6627 ;;		Nothing
  6628 ;; This function is called by:
  6629 ;;		_LIN_handler
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633     0642                     _AutoBaud_Detect_ON:	
  6634                           ;psect for function _AutoBaud_Detect_ON
  6635                           
  6636     0642                     l2159:	
  6637                           ;incstack = 0
  6638                           ; Regs used in _AutoBaud_Detect_ON: []
  6639                           
  6640                           
  6641                           ;LINDrivers/lin_slave.c: 95:   BAUDCONbits.ABDOVF = 0;
  6642     0642  0023               	movlb	3	; select bank3
  6643     0643  139F               	bcf	31,7	;volatile
  6644                           
  6645                           ;LINDrivers/lin_slave.c: 96:   BAUDCONbits.ABDEN = 1;
  6646     0644  141F               	bsf	31,0	;volatile
  6647                           
  6648                           ;LINDrivers/lin_slave.c: 97:   BAUDCONbits.WUE = 1;
  6649     0645  149F               	bsf	31,1	;volatile
  6650     0646                     l204:
  6651     0646  0008               	return
  6652     0647                     __end_of_AutoBaud_Detect_ON:
  6653                           
  6654                           	psect	intentry
  6655     0004                     __pintentry:	
  6656 ;; *************** function _INTERRUPT_InterruptManager *****************
  6657 ;; Defined at:
  6658 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;		None
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;		None
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      void 
  6665 ;; Registers used:
  6666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6672 ;;      Params:         0       0       0       0       0       0       0       0
  6673 ;;      Locals:         0       0       0       0       0       0       0       0
  6674 ;;      Temps:          0       0       0       0       0       0       0       0
  6675 ;;      Totals:         0       0       0       0       0       0       0       0
  6676 ;;Total ram usage:        0 bytes
  6677 ;; Hardware stack levels used: 1
  6678 ;; Hardware stack levels required when called: 3
  6679 ;; This function calls:
  6680 ;;		NULL
  6681 ;;		_EUSART_Receive_ISR
  6682 ;;		_EUSART_Transmit_ISR
  6683 ;;		_TMR0_ISR
  6684 ;; This function is called by:
  6685 ;;		Interrupt level 1
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689     0004                     _INTERRUPT_InterruptManager:
  6690                           
  6691                           ;incstack = 0
  6692     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6693                           
  6694                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6695     0005  3180               	pagesel	$
  6696     0006                     i1l2409:
  6697                           
  6698                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6699     0006  1E8B               	btfss	11,5	;volatile
  6700     0007  2809               	goto	u183_21
  6701     0008  280A               	goto	u183_20
  6702     0009                     u183_21:
  6703     0009  2812               	goto	i1l529
  6704     000A                     u183_20:
  6705     000A                     i1l2411:
  6706     000A  1D0B               	btfss	11,2	;volatile
  6707     000B  280D               	goto	u184_21
  6708     000C  280E               	goto	u184_20
  6709     000D                     u184_21:
  6710     000D  2812               	goto	i1l529
  6711     000E                     u184_20:
  6712     000E                     i1l2413:
  6713                           
  6714                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  6715     000E  3185  25A0  3180   	fcall	_TMR0_ISR
  6716                           
  6717                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6718     0011  2836               	goto	i1l537
  6719     0012                     i1l529:	
  6720                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6721                           
  6722     0012  1F0B               	btfss	11,6	;volatile
  6723     0013  2815               	goto	u185_21
  6724     0014  2816               	goto	u185_20
  6725     0015                     u185_21:
  6726     0015  2836               	goto	i1l537
  6727     0016                     u185_20:
  6728     0016                     i1l2415:
  6729                           
  6730                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  6731     0016  0021               	movlb	1	; select bank1
  6732     0017  1E11               	btfss	17,4	;volatile
  6733     0018  281A               	goto	u186_21
  6734     0019  281B               	goto	u186_20
  6735     001A                     u186_21:
  6736     001A  2826               	goto	i1l532
  6737     001B                     u186_20:
  6738     001B                     i1l2417:
  6739     001B  0020               	movlb	0	; select bank0
  6740     001C  1E11               	btfss	17,4	;volatile
  6741     001D  281F               	goto	u187_21
  6742     001E  2820               	goto	u187_20
  6743     001F                     u187_21:
  6744     001F  2826               	goto	i1l532
  6745     0020                     u187_20:
  6746     0020                     i1l2419:
  6747                           
  6748                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
  6749     0020  0843               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  6750     0021  008A               	movwf	10
  6751     0022  0842               	movf	_EUSART_TxDefaultInterruptHandler,w
  6752     0023  000A               	callw
  6753     0024  3180               	pagesel	$
  6754                           
  6755                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6756     0025  2836               	goto	i1l537
  6757     0026                     i1l532:	
  6758                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  6759                           
  6760     0026  0021               	movlb	1	; select bank1
  6761     0027  1E91               	btfss	17,5	;volatile
  6762     0028  282A               	goto	u188_21
  6763     0029  282B               	goto	u188_20
  6764     002A                     u188_21:
  6765     002A  2836               	goto	i1l536
  6766     002B                     u188_20:
  6767     002B                     i1l2421:
  6768     002B  0020               	movlb	0	; select bank0
  6769     002C  1E91               	btfss	17,5	;volatile
  6770     002D  282F               	goto	u189_21
  6771     002E  2830               	goto	u189_20
  6772     002F                     u189_21:
  6773     002F  2836               	goto	i1l536
  6774     0030                     u189_20:
  6775     0030                     i1l2423:
  6776                           
  6777                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
  6778     0030  0841               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  6779     0031  008A               	movwf	10
  6780     0032  0840               	movf	_EUSART_RxDefaultInterruptHandler,w
  6781     0033  000A               	callw
  6782     0034  3180               	pagesel	$
  6783                           
  6784                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  6785     0035  2836               	goto	i1l537
  6786     0036                     i1l536:	
  6787                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  6788                           
  6789     0036                     i1l537:
  6790     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6791     0037  0009               	retfie
  6792     0038                     __end_of_INTERRUPT_InterruptManager:
  6793                           
  6794                           	psect	text49
  6795     05A0                     __ptext49:	
  6796 ;; *************** function _TMR0_ISR *****************
  6797 ;; Defined at:
  6798 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0, pclath, cstack
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6812 ;;      Params:         0       0       0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; Hardware stack levels required when called: 2
  6819 ;; This function calls:
  6820 ;;		NULL
  6821 ;;		_LIN_timerHandler
  6822 ;;		_TMR0_DefaultInterruptHandler
  6823 ;; This function is called by:
  6824 ;;		_INTERRUPT_InterruptManager
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828     05A0                     _TMR0_ISR:	
  6829                           ;psect for function _TMR0_ISR
  6830                           
  6831     05A0                     i1l2381:	
  6832                           ;incstack = 0
  6833                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6834                           
  6835                           
  6836                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  6837     05A0  110B               	bcf	11,2	;volatile
  6838     05A1                     i1l2383:
  6839                           
  6840                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  6841     05A1  0020               	movlb	0	; select bank0
  6842     05A2  0848               	movf	_timer0ReloadVal,w	;volatile
  6843     05A3  0095               	movwf	21	;volatile
  6844     05A4                     i1l2385:
  6845                           
  6846                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  6847     05A4  0838               	movf	_TMR0_InterruptHandler,w
  6848     05A5  0439               	iorwf	_TMR0_InterruptHandler+1,w
  6849     05A6  1903               	btfsc	3,2
  6850     05A7  2DA9               	goto	u181_21
  6851     05A8  2DAA               	goto	u181_20
  6852     05A9                     u181_21:
  6853     05A9  2DAF               	goto	i1l502
  6854     05AA                     u181_20:
  6855     05AA                     i1l2387:
  6856                           
  6857                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  6858     05AA  0839               	movf	_TMR0_InterruptHandler+1,w
  6859     05AB  008A               	movwf	10
  6860     05AC  0838               	movf	_TMR0_InterruptHandler,w
  6861     05AD  000A               	callw
  6862     05AE  3185               	pagesel	$
  6863     05AF                     i1l502:
  6864     05AF  0008               	return
  6865     05B0                     __end_of_TMR0_ISR:
  6866                           
  6867                           	psect	text50
  6868     05CA                     __ptext50:	
  6869 ;; *************** function _LIN_timerHandler *****************
  6870 ;; Defined at:
  6871 ;;		line 309 in file "LINDrivers/lin_slave.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      void 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0, pclath, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6885 ;;      Params:         0       0       0       0       0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0       0       0
  6888 ;;      Totals:         0       0       0       0       0       0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used: 1
  6891 ;; Hardware stack levels required when called: 1
  6892 ;; This function calls:
  6893 ;;		i1_LIN_stopTimer
  6894 ;; This function is called by:
  6895 ;;		_LIN_setTimerHandler
  6896 ;;		_TMR0_ISR
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900     05CA                     _LIN_timerHandler:	
  6901                           ;psect for function _LIN_timerHandler
  6902                           
  6903     05CA                     i1l2241:	
  6904                           ;incstack = 0
  6905                           ; Regs used in _LIN_timerHandler: [wreg+status,2+status,0+pclath+cstack]
  6906                           
  6907                           
  6908                           ;LINDrivers/lin_slave.c: 312:   if (++CountCallBack >= LIN_timeout) {
  6909     05CA  3001               	movlw	1
  6910     05CB  0020               	movlb	0	; select bank0
  6911     05CC  07D2               	addwf	_CountCallBack,f	;volatile
  6912     05CD  086F               	movf	_LIN_timeout,w
  6913     05CE  0252               	subwf	_CountCallBack,w	;volatile
  6914     05CF  1C03               	skipc
  6915     05D0  2DD2               	goto	u164_21
  6916     05D1  2DD3               	goto	u164_20
  6917     05D2                     u164_21:
  6918     05D2  2DD6               	goto	i1l282
  6919     05D3                     u164_20:
  6920     05D3                     i1l2243:
  6921                           
  6922                           ;LINDrivers/lin_slave.c: 314:     LIN_stopTimer();
  6923     05D3  3186  2647  3185   	fcall	i1_LIN_stopTimer
  6924     05D6                     i1l282:
  6925     05D6  0008               	return
  6926     05D7                     __end_of_LIN_timerHandler:
  6927                           
  6928                           	psect	text51
  6929     067D                     __ptext51:	
  6930 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6931 ;; Defined at:
  6932 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;		None
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;		None
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      void 
  6939 ;; Registers used:
  6940 ;;		None
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6946 ;;      Params:         0       0       0       0       0       0       0       0
  6947 ;;      Locals:         0       0       0       0       0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0
  6949 ;;      Totals:         0       0       0       0       0       0       0       0
  6950 ;;Total ram usage:        0 bytes
  6951 ;; Hardware stack levels used: 1
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_TMR0_Initialize
  6956 ;;		_TMR0_ISR
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960     067D                     _TMR0_DefaultInterruptHandler:	
  6961                           ;psect for function _TMR0_DefaultInterruptHandler
  6962                           
  6963     067D                     i1l508:	
  6964                           ;incstack = 0
  6965                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6966                           
  6967     067D  0008               	return
  6968     067E                     __end_of_TMR0_DefaultInterruptHandler:
  6969                           
  6970                           	psect	text52
  6971     0647                     __ptext52:	
  6972 ;; *************** function i1_LIN_stopTimer *****************
  6973 ;; Defined at:
  6974 ;;		line 320 in file "LINDrivers/lin_slave.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;		None
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		status,2
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6988 ;;      Params:         0       0       0       0       0       0       0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0
  6991 ;;      Totals:         0       0       0       0       0       0       0       0
  6992 ;;Total ram usage:        0 bytes
  6993 ;; Hardware stack levels used: 1
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_LIN_timerHandler
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001     0647                     i1_LIN_stopTimer:	
  7002                           ;psect for function i1_LIN_stopTimer
  7003                           
  7004     0647                     i1l2029:	
  7005                           ;incstack = 0
  7006                           ; Regs used in i1_LIN_stopTimer: [status,2]
  7007                           
  7008                           
  7009                           ;LINDrivers/lin_slave.c: 321:   __nop();
  7010     0647  0000               	nop
  7011     0648                     i1l2031:
  7012                           
  7013                           ;LINDrivers/lin_slave.c: 323:   CountCallBack = 0;
  7014     0648  0020               	movlb	0	; select bank0
  7015     0649  01D2               	clrf	_CountCallBack	;volatile
  7016                           
  7017                           ;LINDrivers/lin_slave.c: 324:   LIN_timerRunning = 0;
  7018     064A  01D3               	clrf	_LIN_timerRunning
  7019     064B                     i1l288:
  7020     064B  0008               	return
  7021     064C                     __end_ofi1_LIN_stopTimer:
  7022                           
  7023                           	psect	text53
  7024     04E5                     __ptext53:	
  7025 ;; *************** function _EUSART_Transmit_ISR *****************
  7026 ;; Defined at:
  7027 ;;		line 197 in file "mcc_generated_files/eusart.c"
  7028 ;; Parameters:    Size  Location     Type
  7029 ;;		None
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;		None
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      void 
  7034 ;; Registers used:
  7035 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7041 ;;      Params:         0       0       0       0       0       0       0       0
  7042 ;;      Locals:         0       0       0       0       0       0       0       0
  7043 ;;      Temps:          0       0       0       0       0       0       0       0
  7044 ;;      Totals:         0       0       0       0       0       0       0       0
  7045 ;;Total ram usage:        0 bytes
  7046 ;; Hardware stack levels used: 1
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_EUSART_Initialize
  7051 ;;		_INTERRUPT_InterruptManager
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055     04E5                     _EUSART_Transmit_ISR:	
  7056                           ;psect for function _EUSART_Transmit_ISR
  7057                           
  7058     04E5                     i1l2349:	
  7059                           ;incstack = 0
  7060                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7061                           
  7062                           
  7063                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7064     04E5  3008               	movlw	8
  7065     04E6  0020               	movlb	0	; select bank0
  7066     04E7  024D               	subwf	_eusartTxBufferRemaining,w	;volatile
  7067     04E8  1803               	skipnc
  7068     04E9  2CEB               	goto	u176_21
  7069     04EA  2CEC               	goto	u176_20
  7070     04EB                     u176_21:
  7071     04EB  2D00               	goto	i1l434
  7072     04EC                     u176_20:
  7073     04EC                     i1l2351:
  7074                           
  7075                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7076     04EC  084E               	movf	_eusartTxTail,w
  7077     04ED  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7078     04EE  0086               	movwf	6
  7079     04EF  0187               	clrf	7
  7080     04F0  0801               	movf	1,w
  7081     04F1  0023               	movlb	3	; select bank3
  7082     04F2  009A               	movwf	26	;volatile
  7083     04F3                     i1l2353:
  7084     04F3  3001               	movlw	1
  7085     04F4  0020               	movlb	0	; select bank0
  7086     04F5  07CE               	addwf	_eusartTxTail,f	;volatile
  7087     04F6                     i1l2355:
  7088                           
  7089                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7090     04F6  3008               	movlw	8
  7091     04F7  024E               	subwf	_eusartTxTail,w	;volatile
  7092     04F8  1C03               	skipc
  7093     04F9  2CFB               	goto	u177_21
  7094     04FA  2CFC               	goto	u177_20
  7095     04FB                     u177_21:
  7096     04FB  2CFD               	goto	i1l2359
  7097     04FC                     u177_20:
  7098     04FC                     i1l2357:
  7099                           
  7100                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  7101     04FC  01CE               	clrf	_eusartTxTail	;volatile
  7102     04FD                     i1l2359:
  7103                           
  7104                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  7105     04FD  3001               	movlw	1
  7106     04FE  07CD               	addwf	_eusartTxBufferRemaining,f	;volatile
  7107                           
  7108                           ;mcc_generated_files/eusart.c: 209:     }
  7109     04FF  2D02               	goto	i1l437
  7110     0500                     i1l434:	
  7111                           ;mcc_generated_files/eusart.c: 210:     else
  7112                           
  7113                           
  7114                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  7115     0500  0021               	movlb	1	; select bank1
  7116     0501  1211               	bcf	17,4	;volatile
  7117     0502                     i1l437:
  7118     0502  0008               	return
  7119     0503                     __end_of_EUSART_Transmit_ISR:
  7120                           
  7121                           	psect	text54
  7122     03C2                     __ptext54:	
  7123 ;; *************** function _EUSART_Receive_ISR *****************
  7124 ;; Defined at:
  7125 ;;		line 216 in file "mcc_generated_files/eusart.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1    wreg      void 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7139 ;;      Params:         0       0       0       0       0       0       0       0
  7140 ;;      Locals:         0       0       0       0       0       0       0       0
  7141 ;;      Temps:          0       0       0       0       0       0       0       0
  7142 ;;      Totals:         0       0       0       0       0       0       0       0
  7143 ;;Total ram usage:        0 bytes
  7144 ;; Hardware stack levels used: 1
  7145 ;; Hardware stack levels required when called: 2
  7146 ;; This function calls:
  7147 ;;		NULL
  7148 ;;		_EUSART_DefaultErrorHandler
  7149 ;;		_EUSART_DefaultFramingErrorHandler
  7150 ;;		_EUSART_DefaultOverrunErrorHandler
  7151 ;;		_EUSART_RxDataHandler
  7152 ;; This function is called by:
  7153 ;;		_EUSART_Initialize
  7154 ;;		_INTERRUPT_InterruptManager
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158     03C2                     _EUSART_Receive_ISR:	
  7159                           ;psect for function _EUSART_Receive_ISR
  7160                           
  7161     03C2                     i1l2361:	
  7162                           ;incstack = 0
  7163                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7164                           
  7165                           
  7166                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7167     03C2  0020               	movlb	0	; select bank0
  7168     03C3  084C               	movf	_eusartRxHead,w	;volatile
  7169     03C4  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7170     03C5  0086               	movwf	6
  7171     03C6  0187               	clrf	7
  7172     03C7  0181               	clrf	1
  7173     03C8                     i1l2363:
  7174                           
  7175                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  7176     03C8  0023               	movlb	3	; select bank3
  7177     03C9  1D1D               	btfss	29,2	;volatile
  7178     03CA  2BCC               	goto	u178_21
  7179     03CB  2BCD               	goto	u178_20
  7180     03CC                     u178_21:
  7181     03CC  2BD8               	goto	i1l2369
  7182     03CD                     u178_20:
  7183     03CD                     i1l2365:
  7184                           
  7185                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7186     03CD  0020               	movlb	0	; select bank0
  7187     03CE  084C               	movf	_eusartRxHead,w	;volatile
  7188     03CF  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7189     03D0  0086               	movwf	6
  7190     03D1  0187               	clrf	7
  7191     03D2  1481               	bsf	1,1
  7192     03D3                     i1l2367:
  7193                           
  7194                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  7195     03D3  083F               	movf	_EUSART_FramingErrorHandler+1,w
  7196     03D4  008A               	movwf	10
  7197     03D5  083E               	movf	_EUSART_FramingErrorHandler,w
  7198     03D6  000A               	callw
  7199     03D7  3183               	pagesel	$
  7200     03D8                     i1l2369:
  7201                           
  7202                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  7203     03D8  0023               	movlb	3	; select bank3
  7204     03D9  1C9D               	btfss	29,1	;volatile
  7205     03DA  2BDC               	goto	u179_21
  7206     03DB  2BDD               	goto	u179_20
  7207     03DC                     u179_21:
  7208     03DC  2BE8               	goto	i1l2375
  7209     03DD                     u179_20:
  7210     03DD                     i1l2371:
  7211                           
  7212                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7213     03DD  0020               	movlb	0	; select bank0
  7214     03DE  084C               	movf	_eusartRxHead,w	;volatile
  7215     03DF  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7216     03E0  0086               	movwf	6
  7217     03E1  0187               	clrf	7
  7218     03E2  1501               	bsf	1,2
  7219     03E3                     i1l2373:
  7220                           
  7221                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  7222     03E3  083D               	movf	_EUSART_OverrunErrorHandler+1,w
  7223     03E4  008A               	movwf	10
  7224     03E5  083C               	movf	_EUSART_OverrunErrorHandler,w
  7225     03E6  000A               	callw
  7226     03E7  3183               	pagesel	$
  7227     03E8                     i1l2375:
  7228                           
  7229                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7230     03E8  0020               	movlb	0	; select bank0
  7231     03E9  084C               	movf	_eusartRxHead,w	;volatile
  7232     03EA  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7233     03EB  0086               	movwf	6
  7234     03EC  0187               	clrf	7
  7235     03ED  0801               	movf	1,w
  7236     03EE  1903               	btfsc	3,2
  7237     03EF  2BF1               	goto	u180_21
  7238     03F0  2BF2               	goto	u180_20
  7239     03F1                     u180_21:
  7240     03F1  2BF8               	goto	i1l2379
  7241     03F2                     u180_20:
  7242     03F2                     i1l2377:
  7243                           
  7244                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  7245     03F2  083B               	movf	_EUSART_ErrorHandler+1,w
  7246     03F3  008A               	movwf	10
  7247     03F4  083A               	movf	_EUSART_ErrorHandler,w
  7248     03F5  000A               	callw
  7249     03F6  3183               	pagesel	$
  7250                           
  7251                           ;mcc_generated_files/eusart.c: 233:     } else {
  7252     03F7  2BFB               	goto	i1l444
  7253     03F8                     i1l2379:
  7254                           
  7255                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  7256     03F8  3185  2564  3183   	fcall	_EUSART_RxDataHandler
  7257     03FB                     i1l444:
  7258     03FB  0008               	return
  7259     03FC                     __end_of_EUSART_Receive_ISR:
  7260                           
  7261                           	psect	text55
  7262     0650                     __ptext55:	
  7263 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7264 ;; Defined at:
  7265 ;;		line 252 in file "mcc_generated_files/eusart.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;		None
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;		None
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      void 
  7272 ;; Registers used:
  7273 ;;		None
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7279 ;;      Params:         0       0       0       0       0       0       0       0
  7280 ;;      Locals:         0       0       0       0       0       0       0       0
  7281 ;;      Temps:          0       0       0       0       0       0       0       0
  7282 ;;      Totals:         0       0       0       0       0       0       0       0
  7283 ;;Total ram usage:        0 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_EUSART_Initialize
  7289 ;;		_EUSART_Receive_ISR
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293     0650                     _EUSART_DefaultOverrunErrorHandler:	
  7294                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  7295                           
  7296     0650                     i1l2245:	
  7297                           ;incstack = 0
  7298                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  7299                           
  7300                           
  7301                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  7302     0650  0023               	movlb	3	; select bank3
  7303     0651  121D               	bcf	29,4	;volatile
  7304                           
  7305                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  7306     0652  161D               	bsf	29,4	;volatile
  7307     0653                     i1l454:
  7308     0653  0008               	return
  7309     0654                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7310                           
  7311                           	psect	text56
  7312     067E                     __ptext56:	
  7313 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7314 ;; Defined at:
  7315 ;;		line 250 in file "mcc_generated_files/eusart.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;		None
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      void 
  7322 ;; Registers used:
  7323 ;;		None
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7329 ;;      Params:         0       0       0       0       0       0       0       0
  7330 ;;      Locals:         0       0       0       0       0       0       0       0
  7331 ;;      Temps:          0       0       0       0       0       0       0       0
  7332 ;;      Totals:         0       0       0       0       0       0       0       0
  7333 ;;Total ram usage:        0 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_EUSART_Initialize
  7339 ;;		_EUSART_Receive_ISR
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343     067E                     _EUSART_DefaultFramingErrorHandler:	
  7344                           ;psect for function _EUSART_DefaultFramingErrorHandler
  7345                           
  7346     067E                     i1l451:	
  7347                           ;incstack = 0
  7348                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  7349                           
  7350     067E  0008               	return
  7351     067F                     __end_of_EUSART_DefaultFramingErrorHandler:
  7352                           
  7353                           	psect	text57
  7354     0654                     __ptext57:	
  7355 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7356 ;; Defined at:
  7357 ;;		line 260 in file "mcc_generated_files/eusart.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;		None
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7371 ;;      Params:         0       0       0       0       0       0       0       0
  7372 ;;      Locals:         0       0       0       0       0       0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0
  7374 ;;      Totals:         0       0       0       0       0       0       0       0
  7375 ;;Total ram usage:        0 bytes
  7376 ;; Hardware stack levels used: 1
  7377 ;; Hardware stack levels required when called: 1
  7378 ;; This function calls:
  7379 ;;		_EUSART_RxDataHandler
  7380 ;; This function is called by:
  7381 ;;		_EUSART_Initialize
  7382 ;;		_EUSART_Receive_ISR
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386     0654                     _EUSART_DefaultErrorHandler:	
  7387                           ;psect for function _EUSART_DefaultErrorHandler
  7388                           
  7389     0654                     i1l2247:	
  7390                           ;incstack = 0
  7391                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7392                           
  7393                           
  7394                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  7395     0654  3185  2564  3186   	fcall	_EUSART_RxDataHandler
  7396     0657                     i1l457:
  7397     0657  0008               	return
  7398     0658                     __end_of_EUSART_DefaultErrorHandler:
  7399                           
  7400                           	psect	text58
  7401     0564                     __ptext58:	
  7402 ;; *************** function _EUSART_RxDataHandler *****************
  7403 ;; Defined at:
  7404 ;;		line 240 in file "mcc_generated_files/eusart.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;		None
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;		None
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  1    wreg      void 
  7411 ;; Registers used:
  7412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7418 ;;      Params:         0       0       0       0       0       0       0       0
  7419 ;;      Locals:         0       0       0       0       0       0       0       0
  7420 ;;      Temps:          0       0       0       0       0       0       0       0
  7421 ;;      Totals:         0       0       0       0       0       0       0       0
  7422 ;;Total ram usage:        0 bytes
  7423 ;; Hardware stack levels used: 1
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_EUSART_Receive_ISR
  7428 ;;		_EUSART_DefaultErrorHandler
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432     0564                     _EUSART_RxDataHandler:	
  7433                           ;psect for function _EUSART_RxDataHandler
  7434                           
  7435     0564                     i1l2019:	
  7436                           ;incstack = 0
  7437                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  7438                           
  7439                           
  7440                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7441     0564  0020               	movlb	0	; select bank0
  7442     0565  084C               	movf	_eusartRxHead,w
  7443     0566  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7444     0567  0086               	movwf	6
  7445     0568  0187               	clrf	7
  7446     0569  0023               	movlb	3	; select bank3
  7447     056A  0819               	movf	25,w	;volatile
  7448     056B  0081               	movwf	1
  7449     056C                     i1l2021:
  7450     056C  3001               	movlw	1
  7451     056D  0020               	movlb	0	; select bank0
  7452     056E  07CC               	addwf	_eusartRxHead,f	;volatile
  7453     056F                     i1l2023:
  7454                           
  7455                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7456     056F  3008               	movlw	8
  7457     0570  024C               	subwf	_eusartRxHead,w	;volatile
  7458     0571  1C03               	skipc
  7459     0572  2D74               	goto	u134_21
  7460     0573  2D75               	goto	u134_20
  7461     0574                     u134_21:
  7462     0574  2D76               	goto	i1l2027
  7463     0575                     u134_20:
  7464     0575                     i1l2025:
  7465                           
  7466                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  7467     0575  01CC               	clrf	_eusartRxHead	;volatile
  7468     0576                     i1l2027:
  7469                           
  7470                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  7471     0576  3001               	movlw	1
  7472     0577  07CA               	addwf	_eusartRxCount,f	;volatile
  7473     0578                     i1l448:
  7474     0578  0008               	return
  7475     0579                     __end_of_EUSART_RxDataHandler:
  7476     0002                     ___latbits      equ	2
  7477     007E                     btemp           set	126	;btemp
  7478     007E                     int$flags       set	126
  7479     007E                     wtemp0          set	126
  7480                           
  7481                           	psect	idloc
  7482                           
  7483                           ;Config register IDLOC0 @ 0x8000
  7484                           ;	unspecified, using default values
  7485     8000                     	org	32768
  7486     8000  3FFF               	dw	16383
  7487                           
  7488                           ;Config register IDLOC1 @ 0x8001
  7489                           ;	unspecified, using default values
  7490     8001                     	org	32769
  7491     8001  3FFF               	dw	16383
  7492                           
  7493                           ;Config register IDLOC2 @ 0x8002
  7494                           ;	unspecified, using default values
  7495     8002                     	org	32770
  7496     8002  3FFF               	dw	16383
  7497                           
  7498                           ;Config register IDLOC3 @ 0x8003
  7499                           ;	unspecified, using default values
  7500     8003                     	org	32771
  7501     8003  3FFF               	dw	16383
  7502                           
  7503                           	psect	config
  7504                           
  7505                           ;Config register CONFIG1 @ 0x8007
  7506                           ;	Oscillator Selection
  7507                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7508                           ;	Watchdog Timer Enable
  7509                           ;	WDTE = OFF, WDT disabled
  7510                           ;	Power-up Timer Enable
  7511                           ;	PWRTE = OFF, PWRT disabled
  7512                           ;	MCLR Pin Function Select
  7513                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7514                           ;	Flash Program Memory Code Protection
  7515                           ;	CP = OFF, Program memory code protection is disabled
  7516                           ;	Data Memory Code Protection
  7517                           ;	CPD = OFF, Data memory code protection is disabled
  7518                           ;	Brown-out Reset Enable
  7519                           ;	BOREN = ON, Brown-out Reset enabled
  7520                           ;	Clock Out Enable
  7521                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7522                           ;	Internal/External Switchover
  7523                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7524                           ;	Fail-Safe Clock Monitor Enable
  7525                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7526     8007                     	org	32775
  7527     8007  3FE4               	dw	16356
  7528                           
  7529                           ;Config register CONFIG2 @ 0x8008
  7530                           ;	Flash Memory Self-Write Protection
  7531                           ;	WRT = OFF, Write protection off
  7532                           ;	Voltage Regulator Capacitor Enable
  7533                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  7534                           ;	PLL Enable
  7535                           ;	PLLEN = ON, 4x PLL enabled
  7536                           ;	Stack Overflow/Underflow Reset Enable
  7537                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7538                           ;	Brown-out Reset Voltage Selection
  7539                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7540                           ;	Low-Voltage Programming Enable
  7541                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  7542     8008                     	org	32776
  7543     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    5
    Data        1
    BSS         78
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      80
    BANK1            80      5      13
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    LIN_getChecksum@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    LIN_getFromTable@rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_getFromTable@rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK0[8]), 

    LIN_init@command	const PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), NULL(), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_queuePacket@tempSchedule$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_sendPacket@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@d1	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memset@dest	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memset@p	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    S26$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    scheduleTable$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    sp__memcpy	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    sp__memset	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Slave_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_queuePacket->_LIN_sendPacket
    _LIN_sendPacket->_LIN_getChecksum
    _LIN_checkPID->_LIN_getFromTable
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _LIN_handler->_processLIN

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LIN_handler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3254
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     238
                  _EUSART_Initialize
               _LIN_Slave_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Slave_Initialize                                 0     0      0      99
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             5     1      4      99
                                              2 COMMON     5     1      4
                       _LIN_enableRx
                _LIN_setTimerHandler
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      24
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          6     6      0    3016
                                              0 BANK1      5     5      0
                                NULL *
                 _AutoBaud_Detect_ON
                  _EUSART_Initialize
                        _EUSART_Read
                 _EUSART_is_rx_ready
                       _LIN_checkPID
                      _LIN_disableRx
                       _LIN_enableRx
                    _LIN_getChecksum
                   _LIN_getFromTable
                    _LIN_queuePacket
                     _LIN_startTimer
                      _LIN_stopTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                           9     9      0     711
                                              0 BANK0      9     9      0
                            _DRL_OFF
                             _DRL_ON
                         _HIBEAM_OFF
                          _HIBEAM_ON
                           _LEFT_OFF
                            _LEFT_ON
                      _LIN_getPacket
                         _LOBEAM_OFF
                          _LOBEAM_ON
                            _POS_OFF
                             _POS_ON
                          _RIGHT_OFF
                           _RIGHT_ON
 ---------------------------------------------------------------------------------
 (3) _RIGHT_ON                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RIGHT_OFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _POS_ON                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _POS_OFF                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LOBEAM_ON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LOBEAM_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        2     1      1     319
                                              9 COMMON     2     1      1
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     1      6     102
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (3) _LEFT_ON                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LEFT_OFF                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _HIBEAM_ON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _HIBEAM_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DRL_ON                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DRL_OFF                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       1     1      0      58
                                              1 COMMON     1     1      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LIN_queuePacket                                      5     5      0     991
                                              0 BANK0      5     5      0
                    _LIN_getChecksum
                     _LIN_sendPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               9     3      6     149
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) _LIN_sendPacket                                       5     2      3     426
                                              9 COMMON     5     2      3
                       _EUSART_Write
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (4) _LIN_getChecksum                                      9     6      3     196
                                              0 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      58
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_checkPID                                         1     1      0     624
                                              7 COMMON     1     1      0
                     _LIN_calcParity
                   _LIN_getFromTable
 ---------------------------------------------------------------------------------
 (2) _LIN_getFromTable                                     7     6      1     192
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (3) _LIN_calcParity                                       3     3      0     345
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     115
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AutoBaud_Detect_ON                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                                NULL *
                   _LIN_timerHandler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     0     0      0       0
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_handler
     NULL(Fake) *
     _AutoBaud_Detect_ON *
     _EUSART_Initialize *
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EUSART_Read *
     _EUSART_is_rx_ready *
     _LIN_checkPID *
       _LIN_calcParity
       _LIN_getFromTable
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_getChecksum *
     _LIN_getFromTable *
     _LIN_queuePacket *
       _LIN_getChecksum
       _LIN_sendPacket
         _EUSART_Write
         _LIN_getChecksum
       _memcpy
     _LIN_startTimer *
       _TMR0_WriteTimer
     _LIN_stopTimer *
     _memset *
     _processLIN *
       _DRL_OFF
       _DRL_ON
       _HIBEAM_OFF
       _HIBEAM_ON
       _LEFT_OFF
       _LEFT_ON
       _LIN_getPacket
         _memcpy
         _memset
       _LOBEAM_OFF
       _LOBEAM_ON
       _POS_OFF
       _POS_ON
       _RIGHT_OFF
       _RIGHT_ON
   _SYSTEM_Initialize
     _EUSART_Initialize
     _LIN_Slave_Initialize
       _LIN_init
         _LIN_enableRx
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _LIN_timerHandler *
       i1_LIN_stopTimer
     _TMR0_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      9      80    100.0%
BANK1               80      5      13     16.2%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     102      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Oct 14 15:27:11 2025

                ?_EUSART_SetRxInterruptHandler 0070                          __end_of_LIN_getPacket 0458  
                        ??_LIN_setTimerHandler 0072                          __end_of_LIN_disableRx 0642  
                                  ?_LOBEAM_OFF 0070                                             l20 0661  
                                           l30 0679                                             l22 0663  
                                           l15 065E                                             l32 067B  
                                           l40 0667                                             l25 0676  
                                           l17 0660                                             l50 0673  
                                           l42 0669                                             l27 0678  
                                           l35 0664                                             l52 0675  
                                           l60 066D                                             l45 0670  
                                           l37 0666                                             l62 066F  
                                           l70 065B                                             l47 0672  
                                           l55 066A                                             l72 065D  
                                           l57 066C                                             l65 0658  
                                           l81 05BC                                             l67 065A  
                                           l93 01D9                                _timer0ReloadVal 0048  
                              ?_LIN_calcParity 0070                                            l103 01DF  
                                          l104 01E5                                            l201 0329  
                                          l121 0241                                            l105 01EB  
                                          l107 01FA                                            l204 0646  
                                          l231 0120                                            l216 006E  
                                          l242 04C4                                            l234 0147  
                                          l403 03C1                                            l228 0115  
                                          l236 0171                                            l422 04A1  
                                          l254 0387                                            l246 0457  
                                          l431 047D                                            l264 0536  
                                          l409 05F6                                            l505 060A  
                                          l329 051C                                            l274 042A  
                                          l194 0563                                            l291 063C  
                                          l427 045F                                            l275 042D  
                                          l460 0622                                            l268 02C7  
                                          l428 0468                                            l285 05FE  
                                          l294 0641                                            l278 05C9  
                                          l463 061C                                            l472 0616  
                                          l288 0632                                            l466 0628  
                                          l572 05E2                                            l469 0610  
                                          l566 059F                                            l495 0637  
                                          l575 064F                                            l569 05DD  
                                          l489 058C                                            u700 05E2  
                                          u701 05E1                                            u960 04E4  
                                          u961 04E3                                            u970 041E  
                                          u971 041D                                            u980 042A  
                                          u981 0429                                            u990 054D  
                                          u991 054C                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 0070                       __end_of_LIN_getFromTable 0388  
                                          wreg 0009                          __end_of_scheduleTable 062E  
                                 ?_EUSART_Read 0070                                __end_of_DRL_OFF 067C  
                              __end_of_LEFT_ON 066D                                           l2001 02BD  
                                         l1202 04D8                                           l2011 060B  
                                         l2003 02C6                                           l1211 054D  
                                         l2013 061D                                           l1205 04E4  
                                         l2101 01FE                                           l2015 0617  
                                         l2007 0634                                           l2111 0211  
                                         l2103 0202                                           l2017 0623  
                                         l2009 0611                                           l2121 0226  
                                         l2113 0216                                           l2105 0205  
                                         l2041 0183                                           l2033 05B0  
                                         l2211 0492                                           l2203 047E  
                                         l2131 023A                                           l2123 0229  
                                         l2115 021A                                           l2107 020A  
                                         l2051 0199                                           l2043 0189  
                                         l2035 0172                                           l2221 04A0  
                                         l2213 0498                                           l2205 047E  
                                         l2133 023E                                           l2125 022E  
                                         l2117 021D                                           l2109 020E  
                                         l2061 01B1                                           l2053 019F  
                                         l2045 018B                                           l2037 0175  
                                         l2215 0499                                           l2207 0484  
                                         l2231 052B                                           l2127 0232  
                                         l2119 0222                                           l2071 01C3  
                                         l2063 01B7                                           l2055 01A3  
                                         l2047 018D                                           l2039 017D  
                                         l2217 049B                                           l2209 0490  
                                         l2233 0535                                           l2225 051E  
                                         l2161 05BE                                           l2129 0235  
                                         l2065 01BB                                           l2057 01A5  
                                         l2049 0193                                           l1601 0508  
                                         l2171 0388                                           l2219 049E  
                                         l2227 0529                                           l2163 05C1  
                                         l2091 01E9                                           l2075 01C8  
                                         l2059 01AB                                           l1611 0518  
                                         l1603 050B                                           l2251 057E  
                                         l2181 039F                                           l2173 038A  
                                         l2165 05C5                                           l2093 01EF  
                                         l2077 01CE                                           l2069 01BD  
                                         l2085 01D9                                           l1605 050D  
                                         l2253 0581                                           l2159 0642  
                                         l2191 03BC                                           l2183 03B6  
                                         l2175 0391                                           l2511 02FB  
                                         l2503 02DD                                           l2167 05C6  
                                         l2095 01F2                                           l2087 01DD  
                                         l2079 01D4                                           l1631 05DA  
                                         l1607 050F                                           l2255 0583  
                                         l2193 03BD                                           l2185 03B8  
                                         l2177 039A                                           l2169 063D  
                                         l2513 0312                                           l2505 02E1  
                                         l2089 01E3                                           l2521 005D  
                                         l1609 0513                                           l2257 0584  
                                         l2249 0579                                           l1633 064C  
                                         l2195 03BE                                           l2187 03B9  
                                         l2179 039D                                           l2515 031F  
                                         l2507 02E3                                           l2099 01F5  
                                         l2531 0073                                           l2523 0060  
                                         l2259 0585                                           l2611 05E7  
                                         l2197 03BF                                           l2189 03BA  
                                         l2509 02E9                                           l1901 0541  
                                         l2541 0087                                           l2533 0076  
                                         l2525 0064                                           l2517 0052  
                                         l1629 05D7                                           l2613 05E8  
                                         l2199 05EE                                           l1911 0470  
                                         l1903 0459                                           l2551 00A5  
                                         l2543 008C                                           l2535 0079  
                                         l2527 0067                                           l2519 0058  
                                         l2391 0596                                           l2607 05E3  
                                         l1913 0472                                           l1905 0459  
                                         l2561 00BC                                           l2553 00AA  
                                         l2545 008E                                           l2537 007C  
                                         l2529 006A                                           l1921 054F  
                                         l2393 0599                                           l2609 05E6  
                                         l1915 0478                                           l1907 0464  
                                         l1931 0432                                           l2571 00F7  
                                         l2563 00C4                                           l2555 00B2  
                                         l2547 0098                                           l2539 007F  
                                         l1923 055A                                           l2395 059C  
                                         l1917 0479                                           l1909 0469  
                                         l1941 04A3                                           l2493 02CA  
                                         l1861 062F                                           l1933 0437  
                                         l2581 0126                                           l2573 00FF  
                                         l2565 00DB                                           l2557 00B5  
                                         l2549 009C                                           l1925 055D  
                                         l2389 058D                                           l1951 032B  
                                         l1863 0638                                           l1919 047B  
                                         l1943 04A5                                           l1871 04CF  
                                         l2495 02CE                                           l1935 043A  
                                         l2591 013C                                           l2583 0129  
                                         l2567 00F2                                           l2559 00B8  
                                         l1927 0560                                           l1599 0503  
                                         l1961 033F                                           l1953 0330  
                                         l1881 0411                                           l1945 04AF  
                                         l1873 04D1                                           l2497 02D0  
                                         l1937 0456                                           l1929 042E  
                                         l2593 0141                                           l2585 012B  
                                         l2577 0118                                           l2569 00F4  
                                         l1857 0605                                           l1865 05F7  
                                         l1971 035C                                           l1963 0351  
                                         l1955 0332                                           l1891 042C  
                                         l1883 0415                                           l1875 03FD  
                                         l1947 04B1                                           l1867 04C5  
                                         l2499 02D2                                           l1859 062E  
                                         l2595 0144                                           l2587 012C  
                                         l2579 011D                                           l1957 0334  
                                         l1885 041E                                           l1877 0404  
                                         l1949 04B7                                           l1869 04CA  
                                         l2685 0154                                           l2589 012E  
                                         l2687 037C                                           l1975 0362  
                                         l1967 0353                                           l1887 0422  
                                         l1879 0406                                           l1895 0537  
                                         l2599 014B                                           l1985 0374  
                                         l1969 0355                                           l1889 0424  
                                         l1897 053A                                           l1979 036B  
                                         l1899 053F                                           l1999 0243  
                                         u1000 045F                                           u1001 045E  
                                         u1010 0464                                           u1011 0463  
                                         u1100 0258                                           u1020 0478  
                                         u1101 0256                                           u1021 0477  
                                         u1030 0437                                           u1031 0436  
                                         u1200 0286                                           u1120 025E  
                                         u1040 04B7                                           u2000 00FF  
                                         u1201 0284                                           u1121 025C  
                                         u1041 04B6                                           u2001 00FE  
                                         u1210 028D                                           u1202 0287  
                                         u1130 0265                                           u1122 025F  
                                         u1114 0259                                           u1050 033E  
                                         u2010 0114                                           u1211 028B  
                                         u1131 0263                                           u1051 033D  
                                         u2011 0113                                           u1300 02BC  
                                         u1220 0294                                           u1212 028E  
                                         u1140 026C                                           u1132 0266  
                                         u1060 0351                                           u2020 0141  
                                         u1301 02BA                                           u1221 0292  
                                         u1141 026A                                           u1061 0350  
                                         u2021 0140                                           u1070 035B  
                                         u1071 035A                                           u1320 02C5  
                                         u1240 029A                                           u1160 0272  
                                         u1080 024A                                           u1400 01AB  
                                         u1321 02C3                                           u1241 0298  
                                         u1161 0270                                           u1081 0248  
                                         u1401 01AA                                           u1314 02BD  
                                         u1250 02A1                                           u1242 029B  
                                         u1234 0295                                           u1170 0279  
                                         u1162 0273                                           u1154 026D  
                                         u1090 0251                                           u1082 024B  
                                         u1410 01B1                                           u1251 029F  
                                         u1171 0277                                           u1091 024F  
                                         u1411 01B0                                           u1260 02A8  
                                         u1252 02A2                                           u1180 0280  
                                         u1172 027A                                           u1092 0252  
                                         u1500 01FE                                           u1420 01B7  
                                         u1261 02A6                                           u1181 027E  
                                         u1501 01FD                                           u1421 01B6  
                                         _LATA 010C                                           u1334 02C6  
                                         u1510 020A                                           u1430 01C3  
                                         u1350 0183                                           _LATB 010D  
                                         u1511 0209                                           u1431 01C2  
                                         u1351 0182                                           _LATC 010E  
                                         u1600 0484                                           u1280 02AE  
                                         u1520 0216                                           u1440 01CE  
                                         u1360 0189                                           u1601 0483  
                                         u1281 02AC                                           u1521 0215  
                                         u1441 01CD                                           u1361 0188  
                                         _LATE 0110                                           u1610 0498  
                                         u1290 02B5                                           u1282 02AF  
                                         u1274 02A9                                           u1194 0281  
                                         u1530 0222                                           u1450 01D4  
                                         u1370 0193                                           u1611 0497  
                                         u1291 02B3                                           u1531 0221  
                                         u1451 01D3                                           u1371 0192  
                                         u1292 02B6                                           u1620 0529  
                                         u1540 022E                                           u1460 01DD  
                                         u1380 0199                                           u1621 0528  
                                         u1541 022D                                           u1461 01DC  
                                         u1381 0198                                           u1630 0535  
                                         u1550 023A                                           u1470 01E3  
                                         u1390 019F                                           u1631 0534  
                                         u1551 0239                                           u1471 01E2  
                                         u1391 019E                                           u1480 01E9  
                                         u1481 01E8                                           u1490 01EF  
                                         u1491 01EE                                           u1580 05F5  
                                         u1900 02DC                                           u1581 05F3  
                                         u1901 02DB                                           u1590 05F6  
                                         u1910 02E9                                           u1911 02E8  
                                         u1920 0058                                           u1921 0057  
                                         u1930 005D                                           u1931 005C  
                                         u1940 0073                                           u1941 0072  
                                         u1950 0087                                           u1951 0086  
                                         u1960 0098                                           u1961 0097  
                                         u1970 00AA                                           u1971 00A9  
                                         u1980 00C4                                           u1981 00C3  
                                         u1990 00F2                                           u1991 00F1  
                                         u1995 00EE                                           _PLLR 04D6  
                                         _TMR0 0015                                           _WPUB 020D  
                                         _WPUE 0210                                 _LIN_sendPacket 04A2  
                              __end_of_POS_OFF 0664                                           _main 05E3  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0038  
                                processLIN@cmd 0066                               __end_of_LEFT_OFF 0670  
                      __end_of_TMR0_Initialize 058D                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 05E3  
                            LIN_sendPacket@pid 0079                                          ?_main 0070  
                              LIN_init@command 0072                                          i1l502 05AF  
                                        i1l434 0500                                          i1l282 05D6  
                                        i1l451 067E                                          i1l444 03FB  
                                        i1l508 067D                                          i1l532 0026  
                                        i1l437 0502                                          i1l454 0653  
                                        i1l448 0578                                          i1l288 064B  
                                        i1l536 0036                                          i1l457 0657  
                                        i1l537 0036                                          i1l529 0012  
                              _TMR0_WriteTimer 0633                                          _RCREG 0199  
                                        _RCSTA 019D                               __end_of_RIGHT_ON 065B  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        _TXREG 019A                               __end_of_LIN_init 0564  
                        __end_of_LIN_stopTimer 0633                                          _TXSTA 019E  
                    ?_TMR0_SetInterruptHandler 0070                               __end_of_TMR0_ISR 05B0  
                                        _fLock 0057                                 _WDT_Initialize 064C  
                       __end_of_LIN_sendPacket 04C5                                          pclath 000A  
                               _LIN_startTimer 05BD                                          status 0003  
                                        wtemp0 007E                               ?_LIN_getChecksum 0070  
                            __end_of_HIBEAM_ON 0673                    LIN_queuePacket@tempSchedule 0069  
                              __initialization 003A                                   ?_LIN_handler 0070  
                                 __end_of_main 05EE                                 ??_EUSART_Write 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0072  
                                       ??_main 007E                              __end_of_LOBEAM_ON 0667  
                                    ??_DRL_OFF 0070                                      ??_LEFT_ON 0070  
                       __end_of_WDT_Initialize 0650                             LIN_sendPacket@data 007A  
    __end_of_EUSART_DefaultFramingErrorHandler 067F            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 067E  
                                    ??_POS_OFF 0070                     _EUSART_OverrunErrorHandler 003C  
                       __end_of_LIN_startTimer 05CA                                ?_LIN_sendPacket 0079  
                                       _APFCON 011D                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 05F7  
                                       _BORCON 0116                                         i1l2021 056C  
                                       i1l2023 056F                                         i1l2031 0648  
                                       i1l2025 0575                                         i1l2027 0576  
                                       i1l2019 0564                                         i1l2029 0647  
                                       i1l2241 05CA                                         i1l2243 05D3  
                                       i1l2411 000A                                         i1l2245 0650  
                                       i1l2421 002B                                         i1l2413 000E  
                                       i1l2247 0654                                         i1l2351 04EC  
                                       i1l2423 0030                                         i1l2415 0016  
                                       i1l2361 03C2                                         i1l2353 04F3  
                                       i1l2417 001B                                         i1l2409 0006  
                                       i1l2371 03DD                                         i1l2363 03C8  
                                       i1l2355 04F6                                         i1l2419 0020  
                                       i1l2373 03E3                                         i1l2365 03CD  
                                       i1l2357 04FC                                         i1l2349 04E5  
                                       i1l2381 05A0                                         i1l2375 03E8  
                                       i1l2367 03D3                                         i1l2359 04FD  
                                       i1l2383 05A1                                         i1l2377 03F2  
                                       i1l2369 03D8                                         i1l2385 05A4  
                                       i1l2379 03F8                                         i1l2387 05AA  
                                       _DRL_ON 0676                                         u134_20 0575  
                                       u134_21 0574                                         u180_20 03F2  
                                       u164_20 05D3                                         u180_21 03F1  
                                       u164_21 05D2                                         u181_20 05AA  
                                       u181_21 05A9                                         u183_20 000A  
                                       u183_21 0009                                         u176_20 04EC  
                                       u184_20 000E                                         u176_21 04EB  
                                       u184_21 000D                                         u177_20 04FC  
                                       u185_20 0016                                         u177_21 04FB  
                                       u185_21 0015                                         u178_20 03CD  
                                       u186_20 001B                                         u178_21 03CC  
                                       u186_21 001A                                         u179_20 03DD  
                                       u187_20 0020                                         u179_21 03DC  
                                       u187_21 001F                                         u188_20 002B  
                                       u188_21 002A                                         u189_20 0030  
                                       u189_21 002F                                         _OSCCON 0099  
                            __end_of_RIGHT_OFF 065E                                         _WDTCON 0097  
                                       _POS_ON 065E                                _LIN_processData 0046  
                              _LIN_queuePacket 02C8                        __end_of_TMR0_WriteTimer 0638  
                          _EUSART_Transmit_ISR 04E5                                         _memcpy 04C5  
                             ?_TMR0_Initialize 0070                                         _memset 0537  
                                 ??_HIBEAM_OFF 0070                                ?_WDT_Initialize 0070  
                             _LIN_rxInProgress 0055       TMR0_SetInterruptHandler@InterruptHandler 0070  
                              ?_LIN_startTimer 0070                           ?_EUSART_Transmit_ISR 0070  
                            _SYSTEM_Initialize 058D                        __end_of__initialization 004E  
                                    ?_LEFT_OFF 0070                             ?_SYSTEM_Initialize 0070  
                           __end_of_HIBEAM_OFF 0676                                  ?_LIN_checkPID 0070  
         __end_of_EUSART_SetTxInterruptHandler 0611                   _EUSART_SetTxInterruptHandler 060B  
                                    ?_RIGHT_ON 0070                                      ?_LIN_init 0072  
                               __pcstackCOMMON 0070                                  ?_LIN_enableRx 0070  
                             ??_LIN_calcParity 0070                                LIN_sendPacket@i 007D  
                                 __pidataBANK0 067C                            ??_SYSTEM_Initialize 0077  
                                    ?_TMR0_ISR 0070                                   ??_LOBEAM_OFF 0070  
                       LIN_handler@rxDataIndex 0050                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                              ?_LIN_getFromTable 0070  
                       LIN_handler@LIN_rxState 0051                ??_EUSART_SetOverrunErrorHandler 0072  
                           ??_LIN_getFromTable 0071                      __end_of_SYSTEM_Initialize 05A0  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                                        ?_DRL_ON 0070  
                         __end_of_EUSART_Write 047E                             __end_of_LOBEAM_OFF 066A  
                                   ??_LEFT_OFF 0070                                        ?_POS_ON 0070  
                               ??_LIN_checkPID 0077                    __end_of_LIN_setTimerHandler 05FF  
                      __end_of_LIN_queuePacket 032A                                     ??_RIGHT_ON 0070  
                               ??_LIN_enableRx 0070                                     __pmaintext 05E3  
                             _LIN_timerHandler 05CA                                     ??_LIN_init 0076  
                          LIN_getChecksum@data 0071                  ?_EUSART_SetTxInterruptHandler 0070  
             _EUSART_TxDefaultInterruptHandler 0042               __end_of_TMR0_SetInterruptHandler 060B  
                                   ??_TMR0_ISR 0070                                     __pintentry 0004  
                             ?_TMR0_WriteTimer 0070                                        ?_memcpy 0070  
                                      _BAUDCON 019F                                        ?_memset 0070  
                 ??_EUSART_DefaultErrorHandler 0070                          LIN_getChecksum@length 0075  
                             _LIN_timerRunning 0053                                  _eusartRxCount 004A  
                                      _DRL_OFF 0679                                        _LEFT_ON 066A  
                                      _OSCTUNE 0098                                        _POS_OFF 0661  
                     ??_EUSART_SetErrorHandler 0072                        LIN_getChecksum@checksum 0077  
                 __end_of_LIN_Slave_Initialize 05BD                                  _SW_STATE_Data 00A0  
                                    _HIBEAM_ON 0670                                        __ptext1 058D  
                                      __ptext2 064C                                        __ptext3 0579  
                                      __ptext4 0503                                        __ptext5 05D7  
                                      __ptext6 05B0                                        __ptext7 054E  
                                      __ptext8 05F7                                        __ptext9 0605  
                        _OSCILLATOR_Initialize 05D7                               ??_LIN_sendPacket 007C  
                     ??_PIN_MANAGER_Initialize 0070                                      _LOBEAM_ON 0664  
                                      clrloop0 0600                      LIN_getFromTable@rxCommand 0075  
                         end_of_initialization 004E          __end_of_EUSART_SetOverrunErrorHandler 061D  
                _EUSART_SetOverrunErrorHandler 0617                                        memcpy@d 0077  
                                      memcpy@n 0074                                        memcpy@s 0078  
                                      memset@c 0072                                        memset@n 0074  
                                      memset@p 0076                              _EUSART_Initialize 0388  
                             ?_LIN_queuePacket 0070                                      _RIGHT_OFF 065B  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                            ??i1_LIN_stopTimer 0070                             _EUSART_is_rx_ready 05EE  
                                _LIN_getPacket 042E                                     ?_HIBEAM_ON 0070  
                                _LIN_disableRx 063D                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                 ??_EUSART_SetTxInterruptHandler 0072  
                            LIN_getPacket@data 0079                       _TMR0_SetInterruptHandler 0605  
                          ?_EUSART_is_rx_ready 0070                                     _processLIN 0172  
                         __end_of_LIN_checkPID 0537                            LIN_init@tableLength 0076  
                             ??_LIN_startTimer 0071                           __end_of_LIN_enableRx 063D  
                                   ?_LOBEAM_ON 0070                                  _scheduleTable 0629  
                    __end_of_EUSART_Initialize 03C2                           ??_EUSART_is_rx_ready 0070  
                               __end_of_DRL_ON 0679                                      _TXSTAbits 019E  
                               __end_of_POS_ON 0661                                  _LIN_rxCommand 0044  
                                   ?_RIGHT_OFF 0070                                 ?_LIN_getPacket 0079  
                               ?_LIN_disableRx 0070             __end_of_EUSART_DefaultErrorHandler 0658  
                   _EUSART_DefaultErrorHandler 0654                                    _BAUDCONbits 019F  
                                 _EUSART_Write 0458                                 __end_of_memcpy 04E5  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_memset 054E  
                          start_initialization 003A                                  _LIN_stopTimer 062E  
                     __end_of_LIN_timerHandler 05D7                           _LIN_Slave_Initialize 05B0  
                                ??_EUSART_Read 0070                     __end_of_AutoBaud_Detect_ON 0647  
 EUSART_SetRxInterruptHandler@interruptHandler 0070   EUSART_SetTxInterruptHandler@interruptHandler 0070  
                                     ??_DRL_ON 0070                          LIN_startTimer@timeout 0071  
                                     ??_POS_ON 0070                              LIN_calcParity@CMD 0071  
               ?_EUSART_SetOverrunErrorHandler 0070                              LIN_calcParity@PID 0072  
                   _EUSART_FramingErrorHandler 003E                         _EUSART_SetErrorHandler 0623  
                                  ??_HIBEAM_ON 0070                                    __pdataBANK0 006F  
                                     ??_memcpy 0076                                       ??_memset 0076  
                         processLIN@tempRxData 0067                                     memset@dest 0070  
                                  ?_processLIN 0070                            LIN_init@processData 0074  
                                     ?_DRL_OFF 0070                                       ?_LEFT_ON 0070  
                  __end_of_EUSART_Transmit_ISR 0503                                 ?_LIN_stopTimer 0070  
                                    ___latbits 0002                                  __pcstackBANK0 0066  
                                __pcstackBANK1 00A8                              ??_LIN_getChecksum 0073  
                        ?_LIN_Slave_Initialize 0070                                    ??_LOBEAM_ON 0070  
                                     ?_POS_OFF 0070                     __end_of_EUSART_Receive_ISR 03FC  
             _EUSART_RxDefaultInterruptHandler 0040                            __end_of_EUSART_Read 04A2  
                        _TMR0_InterruptHandler 0038                   __end_of_EUSART_RxDataHandler 0579  
                              ??_LIN_getPacket 007A                                    ??_RIGHT_OFF 0070  
                       _PIN_MANAGER_Initialize 0503                                  ??_LIN_handler 00A8  
                             LIN_getChecksum@i 0076                                ??_LIN_disableRx 0070  
                         EUSART_Read@readValue 0070                             LIN_getChecksum@pid 0070  
                         LIN_sendPacket@length 007C                                   _eusartRxHead 004C  
                                 _eusartTxHead 004F                                   _eusartRxTail 004B  
                                 _eusartTxTail 004E                   ??_INTERRUPT_InterruptManager 0070  
                                    _lampFlags 0056                        _eusartTxBufferRemaining 004D  
                                    _lampState 0058                                LIN_checkPID@pid 0077  
                              i1_LIN_stopTimer 0647                                 _eusartRxBuffer 0028  
                            ??_TMR0_Initialize 0072                                       _LEFT_OFF 066D  
                               _eusartTxBuffer 0030         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 05FF  
                                     _PIE1bits 0091                              _eusartRxLastError 0049  
                                 _LIN_checkPID 051D                     ??_TMR0_SetInterruptHandler 0072  
                                     _PIR1bits 0011                                       _RIGHT_ON 0658  
              ??_EUSART_SetFramingErrorHandler 0072                                       _LIN_init 054E  
                                 _LIN_enableRx 0638                                       _TMR0_ISR 05A0  
    __end_of_EUSART_DefaultOverrunErrorHandler 0654            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0650  
                             LIN_getPacket@cmd 007A                            __end_of_LIN_handler 0172  
                              ??_LIN_stopTimer 0070                         ??_LIN_Slave_Initialize 0077  
                                  _EUSART_Read 047E                               _LIN_getFromTable 032A  
                                    memcpy@tmp 0076                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 003A                    ?_EUSART_DefaultErrorHandler 0070  
                                   _HIBEAM_OFF 0673                        __end_ofi1_LIN_stopTimer 064C  
                         _EUSART_RxDataHandler 0564                                       __ptext10 0052  
                                     __ptext11 0172                                       __ptext20 066A  
                                     __ptext12 0658                                       __ptext21 066D  
                                     __ptext13 065B                                       __ptext30 04C5  
                                     __ptext22 0670                                       __ptext14 065E  
                                     __ptext31 04A2                                       __ptext23 0673  
                                     __ptext15 0661                                       __ptext40 047E  
                                     __ptext32 03FC                                       __ptext24 0676  
                                     __ptext16 0664                                       __ptext41 0388  
                                     __ptext33 0458                                       __ptext25 0679  
                                     __ptext17 0667                                       __ptext50 05CA  
                                     __ptext42 060B                                       __ptext34 0638  
                                     __ptext26 062E                                       __ptext18 042E  
                                     __ptext51 067D                                       __ptext43 0611  
                                     __ptext35 063D                                       __ptext27 05BD  
                                     __ptext19 0537                                       __ptext52 0647  
                                     __ptext44 0617                                       __ptext36 051D  
                                     __ptext28 0633                                       __ptext53 04E5  
                                     __ptext45 061D                                       __ptext37 032A  
                                     __ptext29 02C8                                       __ptext54 03C2  
                                     __ptext46 0623                                       __ptext38 0242  
                                     __ptext55 0650                                       __ptext47 0642  
                                     __ptext39 05EE                                       __ptext56 067E  
                                     __ptext57 0654                                       __ptext49 05A0  
                                     __ptext58 0564                              ?_LIN_timerHandler 0070  
                      TMR0_WriteTimer@timerVal 0070                             ??_LIN_timerHandler 0070  
                            ??_TMR0_WriteTimer 0070                         LIN_getFromTable@length 0074  
         __end_of_TMR0_DefaultInterruptHandler 067E                   _TMR0_DefaultInterruptHandler 067D  
                      ?_EUSART_SetErrorHandler 0070                             _AutoBaud_Detect_ON 0642  
                          _LIN_rxCommandLength 0054  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                  _LIN_handler 0052                                       int$flags 007E  
                                   _LOBEAM_OFF 0667                                _LIN_getChecksum 03FC  
           __end_of_INTERRUPT_InterruptManager 0038                     _INTERRUPT_InterruptManager 0004  
                          ?_AutoBaud_Detect_ON 0070          __end_of_EUSART_SetFramingErrorHandler 0623  
                _EUSART_SetFramingErrorHandler 061D                                   ??_processLIN 007B  
                                  _LIN_timeout 006F                                 _LIN_calcParity 0242  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                                     memcpy@d1 0070                                       memcpy@s1 0072  
                          _LIN_setTimerHandler 05F7                           ??_AutoBaud_Detect_ON 0070  
                                     intlevel1 0000                                  _CountCallBack 0052  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0629  
                        LIN_getFromTable@param 0070                             __end_of_processLIN 0242  
         __end_of_EUSART_SetRxInterruptHandler 0617                   _EUSART_SetRxInterruptHandler 0611  
                ?_TMR0_DefaultInterruptHandler 0070                                     _LIN_packet 0059  
                           _EUSART_Receive_ISR 03C2                           ?_LIN_setTimerHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                    ?_HIBEAM_OFF 0070  
                       __end_of_LIN_calcParity 02C8                                  __pstringtext1 0629  
                           LIN_queuePacket@cmd 0067                                     _OPTION_REG 0095  
                          ?_EUSART_Receive_ISR 0070                                _TMR0_Initialize 0579  
                            ??_LIN_queuePacket 0066                               ?i1_LIN_stopTimer 0070  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 051D  
                          LIN_getFromTable@cmd 0073                               LIN_queuePacket@i 0068  
                         ??_EUSART_Receive_ISR 0070                        __end_of_LIN_getChecksum 042E  
