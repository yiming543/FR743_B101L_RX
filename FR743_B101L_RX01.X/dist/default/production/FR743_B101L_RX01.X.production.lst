

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jul 11 16:31:52 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,space=0,delta=2
    52                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    63                           	dabs	1,0x7E,2
    64     0000                     
    65                           ; Version 2.20
    66                           ; Generated 12/02/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F1936 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99     0008                     bsr             equ	8
   100     0005                     fsr0h           equ	5
   101     0004                     fsr0l           equ	4
   102     0007                     fsr1h           equ	7
   103     0006                     fsr1l           equ	6
   104     0000                     indf            equ	0
   105     0000                     indf0           equ	0
   106     0001                     indf1           equ	1
   107     000B                     intcon          equ	11
   108     0002                     pc              equ	2
   109     0002                     pcl             equ	2
   110     000A                     pclath          equ	10
   111     0003                     status          equ	3
   112     0009                     wreg            equ	9
   113     0000                     INDF0           equ	0	;# 
   114     0001                     INDF1           equ	1	;# 
   115     0002                     PCL             equ	2	;# 
   116     0003                     STATUS          equ	3	;# 
   117     0004                     FSR0L           equ	4	;# 
   118     0005                     FSR0H           equ	5	;# 
   119     0006                     FSR1L           equ	6	;# 
   120     0007                     FSR1H           equ	7	;# 
   121     0008                     BSR             equ	8	;# 
   122     0009                     WREG            equ	9	;# 
   123     000A                     PCLATH          equ	10	;# 
   124     000B                     INTCON          equ	11	;# 
   125     000C                     PORTA           equ	12	;# 
   126     000D                     PORTB           equ	13	;# 
   127     000E                     PORTC           equ	14	;# 
   128     0010                     PORTE           equ	16	;# 
   129     0011                     PIR1            equ	17	;# 
   130     0012                     PIR2            equ	18	;# 
   131     0013                     PIR3            equ	19	;# 
   132     0015                     TMR0            equ	21	;# 
   133     0016                     TMR1            equ	22	;# 
   134     0016                     TMR1L           equ	22	;# 
   135     0017                     TMR1H           equ	23	;# 
   136     0018                     T1CON           equ	24	;# 
   137     0019                     T1GCON          equ	25	;# 
   138     001A                     TMR2            equ	26	;# 
   139     001B                     PR2             equ	27	;# 
   140     001C                     T2CON           equ	28	;# 
   141     001E                     CPSCON0         equ	30	;# 
   142     001F                     CPSCON1         equ	31	;# 
   143     008C                     TRISA           equ	140	;# 
   144     008D                     TRISB           equ	141	;# 
   145     008E                     TRISC           equ	142	;# 
   146     0090                     TRISE           equ	144	;# 
   147     0091                     PIE1            equ	145	;# 
   148     0092                     PIE2            equ	146	;# 
   149     0093                     PIE3            equ	147	;# 
   150     0095                     OPTION_REG      equ	149	;# 
   151     0096                     PCON            equ	150	;# 
   152     0097                     WDTCON          equ	151	;# 
   153     0098                     OSCTUNE         equ	152	;# 
   154     0099                     OSCCON          equ	153	;# 
   155     009A                     OSCSTAT         equ	154	;# 
   156     009B                     ADRES           equ	155	;# 
   157     009B                     ADRESL          equ	155	;# 
   158     009C                     ADRESH          equ	156	;# 
   159     009D                     ADCON0          equ	157	;# 
   160     009E                     ADCON1          equ	158	;# 
   161     010C                     LATA            equ	268	;# 
   162     010D                     LATB            equ	269	;# 
   163     010E                     LATC            equ	270	;# 
   164     0110                     LATE            equ	272	;# 
   165     0111                     CM1CON0         equ	273	;# 
   166     0112                     CM1CON1         equ	274	;# 
   167     0113                     CM2CON0         equ	275	;# 
   168     0114                     CM2CON1         equ	276	;# 
   169     0115                     CMOUT           equ	277	;# 
   170     0116                     BORCON          equ	278	;# 
   171     0117                     FVRCON          equ	279	;# 
   172     0118                     DACCON0         equ	280	;# 
   173     0119                     DACCON1         equ	281	;# 
   174     011A                     SRCON0          equ	282	;# 
   175     011B                     SRCON1          equ	283	;# 
   176     011D                     APFCON          equ	285	;# 
   177     018C                     ANSELA          equ	396	;# 
   178     018D                     ANSELB          equ	397	;# 
   179     0191                     EEADR           equ	401	;# 
   180     0191                     EEADRL          equ	401	;# 
   181     0192                     EEADRH          equ	402	;# 
   182     0193                     EEDAT           equ	403	;# 
   183     0193                     EEDATL          equ	403	;# 
   184     0193                     EEDATA          equ	403	;# 
   185     0194                     EEDATH          equ	404	;# 
   186     0195                     EECON1          equ	405	;# 
   187     0196                     EECON2          equ	406	;# 
   188     0199                     RCREG           equ	409	;# 
   189     019A                     TXREG           equ	410	;# 
   190     019B                     SP1BRG          equ	411	;# 
   191     019B                     SP1BRGL         equ	411	;# 
   192     019B                     SPBRG           equ	411	;# 
   193     019B                     SPBRGL          equ	411	;# 
   194     019C                     SP1BRGH         equ	412	;# 
   195     019C                     SPBRGH          equ	412	;# 
   196     019D                     RCSTA           equ	413	;# 
   197     019E                     TXSTA           equ	414	;# 
   198     019F                     BAUDCON         equ	415	;# 
   199     020D                     WPUB            equ	525	;# 
   200     0210                     WPUE            equ	528	;# 
   201     0211                     SSPBUF          equ	529	;# 
   202     0212                     SSPADD          equ	530	;# 
   203     0213                     SSPMSK          equ	531	;# 
   204     0214                     SSPSTAT         equ	532	;# 
   205     0215                     SSPCON1         equ	533	;# 
   206     0215                     SSPCON          equ	533	;# 
   207     0216                     SSPCON2         equ	534	;# 
   208     0217                     SSPCON3         equ	535	;# 
   209     0291                     CCPR1           equ	657	;# 
   210     0291                     CCPR1L          equ	657	;# 
   211     0292                     CCPR1H          equ	658	;# 
   212     0293                     CCP1CON         equ	659	;# 
   213     0294                     PWM1CON         equ	660	;# 
   214     0295                     CCP1AS          equ	661	;# 
   215     0295                     ECCP1AS         equ	661	;# 
   216     0296                     PSTR1CON        equ	662	;# 
   217     0298                     CCPR2           equ	664	;# 
   218     0298                     CCPR2L          equ	664	;# 
   219     0299                     CCPR2H          equ	665	;# 
   220     029A                     CCP2CON         equ	666	;# 
   221     029B                     PWM2CON         equ	667	;# 
   222     029C                     CCP2AS          equ	668	;# 
   223     029C                     ECCP2AS         equ	668	;# 
   224     029D                     PSTR2CON        equ	669	;# 
   225     029E                     CCPTMRS0        equ	670	;# 
   226     029F                     CCPTMRS1        equ	671	;# 
   227     0311                     CCPR3           equ	785	;# 
   228     0311                     CCPR3L          equ	785	;# 
   229     0312                     CCPR3H          equ	786	;# 
   230     0313                     CCP3CON         equ	787	;# 
   231     0314                     PWM3CON         equ	788	;# 
   232     0315                     CCP3AS          equ	789	;# 
   233     0315                     ECCP3AS         equ	789	;# 
   234     0316                     PSTR3CON        equ	790	;# 
   235     0318                     CCPR4           equ	792	;# 
   236     0318                     CCPR4L          equ	792	;# 
   237     0319                     CCPR4H          equ	793	;# 
   238     031A                     CCP4CON         equ	794	;# 
   239     031C                     CCPR5           equ	796	;# 
   240     031C                     CCPR5L          equ	796	;# 
   241     031D                     CCPR5H          equ	797	;# 
   242     031E                     CCP5CON         equ	798	;# 
   243     0394                     IOCBP           equ	916	;# 
   244     0395                     IOCBN           equ	917	;# 
   245     0396                     IOCBF           equ	918	;# 
   246     0415                     TMR4            equ	1045	;# 
   247     0416                     PR4             equ	1046	;# 
   248     0417                     T4CON           equ	1047	;# 
   249     041C                     TMR6            equ	1052	;# 
   250     041D                     PR6             equ	1053	;# 
   251     041E                     T6CON           equ	1054	;# 
   252     0791                     LCDCON          equ	1937	;# 
   253     0792                     LCDPS           equ	1938	;# 
   254     0793                     LCDREF          equ	1939	;# 
   255     0794                     LCDCST          equ	1940	;# 
   256     0795                     LCDRL           equ	1941	;# 
   257     0798                     LCDSE0          equ	1944	;# 
   258     0799                     LCDSE1          equ	1945	;# 
   259     07A0                     LCDDATA0        equ	1952	;# 
   260     07A1                     LCDDATA1        equ	1953	;# 
   261     07A3                     LCDDATA3        equ	1955	;# 
   262     07A4                     LCDDATA4        equ	1956	;# 
   263     07A6                     LCDDATA6        equ	1958	;# 
   264     07A7                     LCDDATA7        equ	1959	;# 
   265     07A9                     LCDDATA9        equ	1961	;# 
   266     07AA                     LCDDATA10       equ	1962	;# 
   267     0FE4                     STATUS_SHAD     equ	4068	;# 
   268     0FE5                     WREG_SHAD       equ	4069	;# 
   269     0FE6                     BSR_SHAD        equ	4070	;# 
   270     0FE7                     PCLATH_SHAD     equ	4071	;# 
   271     0FE8                     FSR0L_SHAD      equ	4072	;# 
   272     0FE9                     FSR0H_SHAD      equ	4073	;# 
   273     0FEA                     FSR1L_SHAD      equ	4074	;# 
   274     0FEB                     FSR1H_SHAD      equ	4075	;# 
   275     0FED                     STKPTR          equ	4077	;# 
   276     0FEE                     TOSL            equ	4078	;# 
   277     0FEF                     TOSH            equ	4079	;# 
   278     0000                     INDF0           equ	0	;# 
   279     0001                     INDF1           equ	1	;# 
   280     0002                     PCL             equ	2	;# 
   281     0003                     STATUS          equ	3	;# 
   282     0004                     FSR0L           equ	4	;# 
   283     0005                     FSR0H           equ	5	;# 
   284     0006                     FSR1L           equ	6	;# 
   285     0007                     FSR1H           equ	7	;# 
   286     0008                     BSR             equ	8	;# 
   287     0009                     WREG            equ	9	;# 
   288     000A                     PCLATH          equ	10	;# 
   289     000B                     INTCON          equ	11	;# 
   290     000C                     PORTA           equ	12	;# 
   291     000D                     PORTB           equ	13	;# 
   292     000E                     PORTC           equ	14	;# 
   293     0010                     PORTE           equ	16	;# 
   294     0011                     PIR1            equ	17	;# 
   295     0012                     PIR2            equ	18	;# 
   296     0013                     PIR3            equ	19	;# 
   297     0015                     TMR0            equ	21	;# 
   298     0016                     TMR1            equ	22	;# 
   299     0016                     TMR1L           equ	22	;# 
   300     0017                     TMR1H           equ	23	;# 
   301     0018                     T1CON           equ	24	;# 
   302     0019                     T1GCON          equ	25	;# 
   303     001A                     TMR2            equ	26	;# 
   304     001B                     PR2             equ	27	;# 
   305     001C                     T2CON           equ	28	;# 
   306     001E                     CPSCON0         equ	30	;# 
   307     001F                     CPSCON1         equ	31	;# 
   308     008C                     TRISA           equ	140	;# 
   309     008D                     TRISB           equ	141	;# 
   310     008E                     TRISC           equ	142	;# 
   311     0090                     TRISE           equ	144	;# 
   312     0091                     PIE1            equ	145	;# 
   313     0092                     PIE2            equ	146	;# 
   314     0093                     PIE3            equ	147	;# 
   315     0095                     OPTION_REG      equ	149	;# 
   316     0096                     PCON            equ	150	;# 
   317     0097                     WDTCON          equ	151	;# 
   318     0098                     OSCTUNE         equ	152	;# 
   319     0099                     OSCCON          equ	153	;# 
   320     009A                     OSCSTAT         equ	154	;# 
   321     009B                     ADRES           equ	155	;# 
   322     009B                     ADRESL          equ	155	;# 
   323     009C                     ADRESH          equ	156	;# 
   324     009D                     ADCON0          equ	157	;# 
   325     009E                     ADCON1          equ	158	;# 
   326     010C                     LATA            equ	268	;# 
   327     010D                     LATB            equ	269	;# 
   328     010E                     LATC            equ	270	;# 
   329     0110                     LATE            equ	272	;# 
   330     0111                     CM1CON0         equ	273	;# 
   331     0112                     CM1CON1         equ	274	;# 
   332     0113                     CM2CON0         equ	275	;# 
   333     0114                     CM2CON1         equ	276	;# 
   334     0115                     CMOUT           equ	277	;# 
   335     0116                     BORCON          equ	278	;# 
   336     0117                     FVRCON          equ	279	;# 
   337     0118                     DACCON0         equ	280	;# 
   338     0119                     DACCON1         equ	281	;# 
   339     011A                     SRCON0          equ	282	;# 
   340     011B                     SRCON1          equ	283	;# 
   341     011D                     APFCON          equ	285	;# 
   342     018C                     ANSELA          equ	396	;# 
   343     018D                     ANSELB          equ	397	;# 
   344     0191                     EEADR           equ	401	;# 
   345     0191                     EEADRL          equ	401	;# 
   346     0192                     EEADRH          equ	402	;# 
   347     0193                     EEDAT           equ	403	;# 
   348     0193                     EEDATL          equ	403	;# 
   349     0193                     EEDATA          equ	403	;# 
   350     0194                     EEDATH          equ	404	;# 
   351     0195                     EECON1          equ	405	;# 
   352     0196                     EECON2          equ	406	;# 
   353     0199                     RCREG           equ	409	;# 
   354     019A                     TXREG           equ	410	;# 
   355     019B                     SP1BRG          equ	411	;# 
   356     019B                     SP1BRGL         equ	411	;# 
   357     019B                     SPBRG           equ	411	;# 
   358     019B                     SPBRGL          equ	411	;# 
   359     019C                     SP1BRGH         equ	412	;# 
   360     019C                     SPBRGH          equ	412	;# 
   361     019D                     RCSTA           equ	413	;# 
   362     019E                     TXSTA           equ	414	;# 
   363     019F                     BAUDCON         equ	415	;# 
   364     020D                     WPUB            equ	525	;# 
   365     0210                     WPUE            equ	528	;# 
   366     0211                     SSPBUF          equ	529	;# 
   367     0212                     SSPADD          equ	530	;# 
   368     0213                     SSPMSK          equ	531	;# 
   369     0214                     SSPSTAT         equ	532	;# 
   370     0215                     SSPCON1         equ	533	;# 
   371     0215                     SSPCON          equ	533	;# 
   372     0216                     SSPCON2         equ	534	;# 
   373     0217                     SSPCON3         equ	535	;# 
   374     0291                     CCPR1           equ	657	;# 
   375     0291                     CCPR1L          equ	657	;# 
   376     0292                     CCPR1H          equ	658	;# 
   377     0293                     CCP1CON         equ	659	;# 
   378     0294                     PWM1CON         equ	660	;# 
   379     0295                     CCP1AS          equ	661	;# 
   380     0295                     ECCP1AS         equ	661	;# 
   381     0296                     PSTR1CON        equ	662	;# 
   382     0298                     CCPR2           equ	664	;# 
   383     0298                     CCPR2L          equ	664	;# 
   384     0299                     CCPR2H          equ	665	;# 
   385     029A                     CCP2CON         equ	666	;# 
   386     029B                     PWM2CON         equ	667	;# 
   387     029C                     CCP2AS          equ	668	;# 
   388     029C                     ECCP2AS         equ	668	;# 
   389     029D                     PSTR2CON        equ	669	;# 
   390     029E                     CCPTMRS0        equ	670	;# 
   391     029F                     CCPTMRS1        equ	671	;# 
   392     0311                     CCPR3           equ	785	;# 
   393     0311                     CCPR3L          equ	785	;# 
   394     0312                     CCPR3H          equ	786	;# 
   395     0313                     CCP3CON         equ	787	;# 
   396     0314                     PWM3CON         equ	788	;# 
   397     0315                     CCP3AS          equ	789	;# 
   398     0315                     ECCP3AS         equ	789	;# 
   399     0316                     PSTR3CON        equ	790	;# 
   400     0318                     CCPR4           equ	792	;# 
   401     0318                     CCPR4L          equ	792	;# 
   402     0319                     CCPR4H          equ	793	;# 
   403     031A                     CCP4CON         equ	794	;# 
   404     031C                     CCPR5           equ	796	;# 
   405     031C                     CCPR5L          equ	796	;# 
   406     031D                     CCPR5H          equ	797	;# 
   407     031E                     CCP5CON         equ	798	;# 
   408     0394                     IOCBP           equ	916	;# 
   409     0395                     IOCBN           equ	917	;# 
   410     0396                     IOCBF           equ	918	;# 
   411     0415                     TMR4            equ	1045	;# 
   412     0416                     PR4             equ	1046	;# 
   413     0417                     T4CON           equ	1047	;# 
   414     041C                     TMR6            equ	1052	;# 
   415     041D                     PR6             equ	1053	;# 
   416     041E                     T6CON           equ	1054	;# 
   417     0791                     LCDCON          equ	1937	;# 
   418     0792                     LCDPS           equ	1938	;# 
   419     0793                     LCDREF          equ	1939	;# 
   420     0794                     LCDCST          equ	1940	;# 
   421     0795                     LCDRL           equ	1941	;# 
   422     0798                     LCDSE0          equ	1944	;# 
   423     0799                     LCDSE1          equ	1945	;# 
   424     07A0                     LCDDATA0        equ	1952	;# 
   425     07A1                     LCDDATA1        equ	1953	;# 
   426     07A3                     LCDDATA3        equ	1955	;# 
   427     07A4                     LCDDATA4        equ	1956	;# 
   428     07A6                     LCDDATA6        equ	1958	;# 
   429     07A7                     LCDDATA7        equ	1959	;# 
   430     07A9                     LCDDATA9        equ	1961	;# 
   431     07AA                     LCDDATA10       equ	1962	;# 
   432     0FE4                     STATUS_SHAD     equ	4068	;# 
   433     0FE5                     WREG_SHAD       equ	4069	;# 
   434     0FE6                     BSR_SHAD        equ	4070	;# 
   435     0FE7                     PCLATH_SHAD     equ	4071	;# 
   436     0FE8                     FSR0L_SHAD      equ	4072	;# 
   437     0FE9                     FSR0H_SHAD      equ	4073	;# 
   438     0FEA                     FSR1L_SHAD      equ	4074	;# 
   439     0FEB                     FSR1H_SHAD      equ	4075	;# 
   440     0FED                     STKPTR          equ	4077	;# 
   441     0FEE                     TOSL            equ	4078	;# 
   442     0FEF                     TOSH            equ	4079	;# 
   443     0000                     INDF0           equ	0	;# 
   444     0001                     INDF1           equ	1	;# 
   445     0002                     PCL             equ	2	;# 
   446     0003                     STATUS          equ	3	;# 
   447     0004                     FSR0L           equ	4	;# 
   448     0005                     FSR0H           equ	5	;# 
   449     0006                     FSR1L           equ	6	;# 
   450     0007                     FSR1H           equ	7	;# 
   451     0008                     BSR             equ	8	;# 
   452     0009                     WREG            equ	9	;# 
   453     000A                     PCLATH          equ	10	;# 
   454     000B                     INTCON          equ	11	;# 
   455     000C                     PORTA           equ	12	;# 
   456     000D                     PORTB           equ	13	;# 
   457     000E                     PORTC           equ	14	;# 
   458     0010                     PORTE           equ	16	;# 
   459     0011                     PIR1            equ	17	;# 
   460     0012                     PIR2            equ	18	;# 
   461     0013                     PIR3            equ	19	;# 
   462     0015                     TMR0            equ	21	;# 
   463     0016                     TMR1            equ	22	;# 
   464     0016                     TMR1L           equ	22	;# 
   465     0017                     TMR1H           equ	23	;# 
   466     0018                     T1CON           equ	24	;# 
   467     0019                     T1GCON          equ	25	;# 
   468     001A                     TMR2            equ	26	;# 
   469     001B                     PR2             equ	27	;# 
   470     001C                     T2CON           equ	28	;# 
   471     001E                     CPSCON0         equ	30	;# 
   472     001F                     CPSCON1         equ	31	;# 
   473     008C                     TRISA           equ	140	;# 
   474     008D                     TRISB           equ	141	;# 
   475     008E                     TRISC           equ	142	;# 
   476     0090                     TRISE           equ	144	;# 
   477     0091                     PIE1            equ	145	;# 
   478     0092                     PIE2            equ	146	;# 
   479     0093                     PIE3            equ	147	;# 
   480     0095                     OPTION_REG      equ	149	;# 
   481     0096                     PCON            equ	150	;# 
   482     0097                     WDTCON          equ	151	;# 
   483     0098                     OSCTUNE         equ	152	;# 
   484     0099                     OSCCON          equ	153	;# 
   485     009A                     OSCSTAT         equ	154	;# 
   486     009B                     ADRES           equ	155	;# 
   487     009B                     ADRESL          equ	155	;# 
   488     009C                     ADRESH          equ	156	;# 
   489     009D                     ADCON0          equ	157	;# 
   490     009E                     ADCON1          equ	158	;# 
   491     010C                     LATA            equ	268	;# 
   492     010D                     LATB            equ	269	;# 
   493     010E                     LATC            equ	270	;# 
   494     0110                     LATE            equ	272	;# 
   495     0111                     CM1CON0         equ	273	;# 
   496     0112                     CM1CON1         equ	274	;# 
   497     0113                     CM2CON0         equ	275	;# 
   498     0114                     CM2CON1         equ	276	;# 
   499     0115                     CMOUT           equ	277	;# 
   500     0116                     BORCON          equ	278	;# 
   501     0117                     FVRCON          equ	279	;# 
   502     0118                     DACCON0         equ	280	;# 
   503     0119                     DACCON1         equ	281	;# 
   504     011A                     SRCON0          equ	282	;# 
   505     011B                     SRCON1          equ	283	;# 
   506     011D                     APFCON          equ	285	;# 
   507     018C                     ANSELA          equ	396	;# 
   508     018D                     ANSELB          equ	397	;# 
   509     0191                     EEADR           equ	401	;# 
   510     0191                     EEADRL          equ	401	;# 
   511     0192                     EEADRH          equ	402	;# 
   512     0193                     EEDAT           equ	403	;# 
   513     0193                     EEDATL          equ	403	;# 
   514     0193                     EEDATA          equ	403	;# 
   515     0194                     EEDATH          equ	404	;# 
   516     0195                     EECON1          equ	405	;# 
   517     0196                     EECON2          equ	406	;# 
   518     0199                     RCREG           equ	409	;# 
   519     019A                     TXREG           equ	410	;# 
   520     019B                     SP1BRG          equ	411	;# 
   521     019B                     SP1BRGL         equ	411	;# 
   522     019B                     SPBRG           equ	411	;# 
   523     019B                     SPBRGL          equ	411	;# 
   524     019C                     SP1BRGH         equ	412	;# 
   525     019C                     SPBRGH          equ	412	;# 
   526     019D                     RCSTA           equ	413	;# 
   527     019E                     TXSTA           equ	414	;# 
   528     019F                     BAUDCON         equ	415	;# 
   529     020D                     WPUB            equ	525	;# 
   530     0210                     WPUE            equ	528	;# 
   531     0211                     SSPBUF          equ	529	;# 
   532     0212                     SSPADD          equ	530	;# 
   533     0213                     SSPMSK          equ	531	;# 
   534     0214                     SSPSTAT         equ	532	;# 
   535     0215                     SSPCON1         equ	533	;# 
   536     0215                     SSPCON          equ	533	;# 
   537     0216                     SSPCON2         equ	534	;# 
   538     0217                     SSPCON3         equ	535	;# 
   539     0291                     CCPR1           equ	657	;# 
   540     0291                     CCPR1L          equ	657	;# 
   541     0292                     CCPR1H          equ	658	;# 
   542     0293                     CCP1CON         equ	659	;# 
   543     0294                     PWM1CON         equ	660	;# 
   544     0295                     CCP1AS          equ	661	;# 
   545     0295                     ECCP1AS         equ	661	;# 
   546     0296                     PSTR1CON        equ	662	;# 
   547     0298                     CCPR2           equ	664	;# 
   548     0298                     CCPR2L          equ	664	;# 
   549     0299                     CCPR2H          equ	665	;# 
   550     029A                     CCP2CON         equ	666	;# 
   551     029B                     PWM2CON         equ	667	;# 
   552     029C                     CCP2AS          equ	668	;# 
   553     029C                     ECCP2AS         equ	668	;# 
   554     029D                     PSTR2CON        equ	669	;# 
   555     029E                     CCPTMRS0        equ	670	;# 
   556     029F                     CCPTMRS1        equ	671	;# 
   557     0311                     CCPR3           equ	785	;# 
   558     0311                     CCPR3L          equ	785	;# 
   559     0312                     CCPR3H          equ	786	;# 
   560     0313                     CCP3CON         equ	787	;# 
   561     0314                     PWM3CON         equ	788	;# 
   562     0315                     CCP3AS          equ	789	;# 
   563     0315                     ECCP3AS         equ	789	;# 
   564     0316                     PSTR3CON        equ	790	;# 
   565     0318                     CCPR4           equ	792	;# 
   566     0318                     CCPR4L          equ	792	;# 
   567     0319                     CCPR4H          equ	793	;# 
   568     031A                     CCP4CON         equ	794	;# 
   569     031C                     CCPR5           equ	796	;# 
   570     031C                     CCPR5L          equ	796	;# 
   571     031D                     CCPR5H          equ	797	;# 
   572     031E                     CCP5CON         equ	798	;# 
   573     0394                     IOCBP           equ	916	;# 
   574     0395                     IOCBN           equ	917	;# 
   575     0396                     IOCBF           equ	918	;# 
   576     0415                     TMR4            equ	1045	;# 
   577     0416                     PR4             equ	1046	;# 
   578     0417                     T4CON           equ	1047	;# 
   579     041C                     TMR6            equ	1052	;# 
   580     041D                     PR6             equ	1053	;# 
   581     041E                     T6CON           equ	1054	;# 
   582     0791                     LCDCON          equ	1937	;# 
   583     0792                     LCDPS           equ	1938	;# 
   584     0793                     LCDREF          equ	1939	;# 
   585     0794                     LCDCST          equ	1940	;# 
   586     0795                     LCDRL           equ	1941	;# 
   587     0798                     LCDSE0          equ	1944	;# 
   588     0799                     LCDSE1          equ	1945	;# 
   589     07A0                     LCDDATA0        equ	1952	;# 
   590     07A1                     LCDDATA1        equ	1953	;# 
   591     07A3                     LCDDATA3        equ	1955	;# 
   592     07A4                     LCDDATA4        equ	1956	;# 
   593     07A6                     LCDDATA6        equ	1958	;# 
   594     07A7                     LCDDATA7        equ	1959	;# 
   595     07A9                     LCDDATA9        equ	1961	;# 
   596     07AA                     LCDDATA10       equ	1962	;# 
   597     0FE4                     STATUS_SHAD     equ	4068	;# 
   598     0FE5                     WREG_SHAD       equ	4069	;# 
   599     0FE6                     BSR_SHAD        equ	4070	;# 
   600     0FE7                     PCLATH_SHAD     equ	4071	;# 
   601     0FE8                     FSR0L_SHAD      equ	4072	;# 
   602     0FE9                     FSR0H_SHAD      equ	4073	;# 
   603     0FEA                     FSR1L_SHAD      equ	4074	;# 
   604     0FEB                     FSR1H_SHAD      equ	4075	;# 
   605     0FED                     STKPTR          equ	4077	;# 
   606     0FEE                     TOSL            equ	4078	;# 
   607     0FEF                     TOSH            equ	4079	;# 
   608     0000                     INDF0           equ	0	;# 
   609     0001                     INDF1           equ	1	;# 
   610     0002                     PCL             equ	2	;# 
   611     0003                     STATUS          equ	3	;# 
   612     0004                     FSR0L           equ	4	;# 
   613     0005                     FSR0H           equ	5	;# 
   614     0006                     FSR1L           equ	6	;# 
   615     0007                     FSR1H           equ	7	;# 
   616     0008                     BSR             equ	8	;# 
   617     0009                     WREG            equ	9	;# 
   618     000A                     PCLATH          equ	10	;# 
   619     000B                     INTCON          equ	11	;# 
   620     000C                     PORTA           equ	12	;# 
   621     000D                     PORTB           equ	13	;# 
   622     000E                     PORTC           equ	14	;# 
   623     0010                     PORTE           equ	16	;# 
   624     0011                     PIR1            equ	17	;# 
   625     0012                     PIR2            equ	18	;# 
   626     0013                     PIR3            equ	19	;# 
   627     0015                     TMR0            equ	21	;# 
   628     0016                     TMR1            equ	22	;# 
   629     0016                     TMR1L           equ	22	;# 
   630     0017                     TMR1H           equ	23	;# 
   631     0018                     T1CON           equ	24	;# 
   632     0019                     T1GCON          equ	25	;# 
   633     001A                     TMR2            equ	26	;# 
   634     001B                     PR2             equ	27	;# 
   635     001C                     T2CON           equ	28	;# 
   636     001E                     CPSCON0         equ	30	;# 
   637     001F                     CPSCON1         equ	31	;# 
   638     008C                     TRISA           equ	140	;# 
   639     008D                     TRISB           equ	141	;# 
   640     008E                     TRISC           equ	142	;# 
   641     0090                     TRISE           equ	144	;# 
   642     0091                     PIE1            equ	145	;# 
   643     0092                     PIE2            equ	146	;# 
   644     0093                     PIE3            equ	147	;# 
   645     0095                     OPTION_REG      equ	149	;# 
   646     0096                     PCON            equ	150	;# 
   647     0097                     WDTCON          equ	151	;# 
   648     0098                     OSCTUNE         equ	152	;# 
   649     0099                     OSCCON          equ	153	;# 
   650     009A                     OSCSTAT         equ	154	;# 
   651     009B                     ADRES           equ	155	;# 
   652     009B                     ADRESL          equ	155	;# 
   653     009C                     ADRESH          equ	156	;# 
   654     009D                     ADCON0          equ	157	;# 
   655     009E                     ADCON1          equ	158	;# 
   656     010C                     LATA            equ	268	;# 
   657     010D                     LATB            equ	269	;# 
   658     010E                     LATC            equ	270	;# 
   659     0110                     LATE            equ	272	;# 
   660     0111                     CM1CON0         equ	273	;# 
   661     0112                     CM1CON1         equ	274	;# 
   662     0113                     CM2CON0         equ	275	;# 
   663     0114                     CM2CON1         equ	276	;# 
   664     0115                     CMOUT           equ	277	;# 
   665     0116                     BORCON          equ	278	;# 
   666     0117                     FVRCON          equ	279	;# 
   667     0118                     DACCON0         equ	280	;# 
   668     0119                     DACCON1         equ	281	;# 
   669     011A                     SRCON0          equ	282	;# 
   670     011B                     SRCON1          equ	283	;# 
   671     011D                     APFCON          equ	285	;# 
   672     018C                     ANSELA          equ	396	;# 
   673     018D                     ANSELB          equ	397	;# 
   674     0191                     EEADR           equ	401	;# 
   675     0191                     EEADRL          equ	401	;# 
   676     0192                     EEADRH          equ	402	;# 
   677     0193                     EEDAT           equ	403	;# 
   678     0193                     EEDATL          equ	403	;# 
   679     0193                     EEDATA          equ	403	;# 
   680     0194                     EEDATH          equ	404	;# 
   681     0195                     EECON1          equ	405	;# 
   682     0196                     EECON2          equ	406	;# 
   683     0199                     RCREG           equ	409	;# 
   684     019A                     TXREG           equ	410	;# 
   685     019B                     SP1BRG          equ	411	;# 
   686     019B                     SP1BRGL         equ	411	;# 
   687     019B                     SPBRG           equ	411	;# 
   688     019B                     SPBRGL          equ	411	;# 
   689     019C                     SP1BRGH         equ	412	;# 
   690     019C                     SPBRGH          equ	412	;# 
   691     019D                     RCSTA           equ	413	;# 
   692     019E                     TXSTA           equ	414	;# 
   693     019F                     BAUDCON         equ	415	;# 
   694     020D                     WPUB            equ	525	;# 
   695     0210                     WPUE            equ	528	;# 
   696     0211                     SSPBUF          equ	529	;# 
   697     0212                     SSPADD          equ	530	;# 
   698     0213                     SSPMSK          equ	531	;# 
   699     0214                     SSPSTAT         equ	532	;# 
   700     0215                     SSPCON1         equ	533	;# 
   701     0215                     SSPCON          equ	533	;# 
   702     0216                     SSPCON2         equ	534	;# 
   703     0217                     SSPCON3         equ	535	;# 
   704     0291                     CCPR1           equ	657	;# 
   705     0291                     CCPR1L          equ	657	;# 
   706     0292                     CCPR1H          equ	658	;# 
   707     0293                     CCP1CON         equ	659	;# 
   708     0294                     PWM1CON         equ	660	;# 
   709     0295                     CCP1AS          equ	661	;# 
   710     0295                     ECCP1AS         equ	661	;# 
   711     0296                     PSTR1CON        equ	662	;# 
   712     0298                     CCPR2           equ	664	;# 
   713     0298                     CCPR2L          equ	664	;# 
   714     0299                     CCPR2H          equ	665	;# 
   715     029A                     CCP2CON         equ	666	;# 
   716     029B                     PWM2CON         equ	667	;# 
   717     029C                     CCP2AS          equ	668	;# 
   718     029C                     ECCP2AS         equ	668	;# 
   719     029D                     PSTR2CON        equ	669	;# 
   720     029E                     CCPTMRS0        equ	670	;# 
   721     029F                     CCPTMRS1        equ	671	;# 
   722     0311                     CCPR3           equ	785	;# 
   723     0311                     CCPR3L          equ	785	;# 
   724     0312                     CCPR3H          equ	786	;# 
   725     0313                     CCP3CON         equ	787	;# 
   726     0314                     PWM3CON         equ	788	;# 
   727     0315                     CCP3AS          equ	789	;# 
   728     0315                     ECCP3AS         equ	789	;# 
   729     0316                     PSTR3CON        equ	790	;# 
   730     0318                     CCPR4           equ	792	;# 
   731     0318                     CCPR4L          equ	792	;# 
   732     0319                     CCPR4H          equ	793	;# 
   733     031A                     CCP4CON         equ	794	;# 
   734     031C                     CCPR5           equ	796	;# 
   735     031C                     CCPR5L          equ	796	;# 
   736     031D                     CCPR5H          equ	797	;# 
   737     031E                     CCP5CON         equ	798	;# 
   738     0394                     IOCBP           equ	916	;# 
   739     0395                     IOCBN           equ	917	;# 
   740     0396                     IOCBF           equ	918	;# 
   741     0415                     TMR4            equ	1045	;# 
   742     0416                     PR4             equ	1046	;# 
   743     0417                     T4CON           equ	1047	;# 
   744     041C                     TMR6            equ	1052	;# 
   745     041D                     PR6             equ	1053	;# 
   746     041E                     T6CON           equ	1054	;# 
   747     0791                     LCDCON          equ	1937	;# 
   748     0792                     LCDPS           equ	1938	;# 
   749     0793                     LCDREF          equ	1939	;# 
   750     0794                     LCDCST          equ	1940	;# 
   751     0795                     LCDRL           equ	1941	;# 
   752     0798                     LCDSE0          equ	1944	;# 
   753     0799                     LCDSE1          equ	1945	;# 
   754     07A0                     LCDDATA0        equ	1952	;# 
   755     07A1                     LCDDATA1        equ	1953	;# 
   756     07A3                     LCDDATA3        equ	1955	;# 
   757     07A4                     LCDDATA4        equ	1956	;# 
   758     07A6                     LCDDATA6        equ	1958	;# 
   759     07A7                     LCDDATA7        equ	1959	;# 
   760     07A9                     LCDDATA9        equ	1961	;# 
   761     07AA                     LCDDATA10       equ	1962	;# 
   762     0FE4                     STATUS_SHAD     equ	4068	;# 
   763     0FE5                     WREG_SHAD       equ	4069	;# 
   764     0FE6                     BSR_SHAD        equ	4070	;# 
   765     0FE7                     PCLATH_SHAD     equ	4071	;# 
   766     0FE8                     FSR0L_SHAD      equ	4072	;# 
   767     0FE9                     FSR0H_SHAD      equ	4073	;# 
   768     0FEA                     FSR1L_SHAD      equ	4074	;# 
   769     0FEB                     FSR1H_SHAD      equ	4075	;# 
   770     0FED                     STKPTR          equ	4077	;# 
   771     0FEE                     TOSL            equ	4078	;# 
   772     0FEF                     TOSH            equ	4079	;# 
   773     0000                     INDF0           equ	0	;# 
   774     0001                     INDF1           equ	1	;# 
   775     0002                     PCL             equ	2	;# 
   776     0003                     STATUS          equ	3	;# 
   777     0004                     FSR0L           equ	4	;# 
   778     0005                     FSR0H           equ	5	;# 
   779     0006                     FSR1L           equ	6	;# 
   780     0007                     FSR1H           equ	7	;# 
   781     0008                     BSR             equ	8	;# 
   782     0009                     WREG            equ	9	;# 
   783     000A                     PCLATH          equ	10	;# 
   784     000B                     INTCON          equ	11	;# 
   785     000C                     PORTA           equ	12	;# 
   786     000D                     PORTB           equ	13	;# 
   787     000E                     PORTC           equ	14	;# 
   788     0010                     PORTE           equ	16	;# 
   789     0011                     PIR1            equ	17	;# 
   790     0012                     PIR2            equ	18	;# 
   791     0013                     PIR3            equ	19	;# 
   792     0015                     TMR0            equ	21	;# 
   793     0016                     TMR1            equ	22	;# 
   794     0016                     TMR1L           equ	22	;# 
   795     0017                     TMR1H           equ	23	;# 
   796     0018                     T1CON           equ	24	;# 
   797     0019                     T1GCON          equ	25	;# 
   798     001A                     TMR2            equ	26	;# 
   799     001B                     PR2             equ	27	;# 
   800     001C                     T2CON           equ	28	;# 
   801     001E                     CPSCON0         equ	30	;# 
   802     001F                     CPSCON1         equ	31	;# 
   803     008C                     TRISA           equ	140	;# 
   804     008D                     TRISB           equ	141	;# 
   805     008E                     TRISC           equ	142	;# 
   806     0090                     TRISE           equ	144	;# 
   807     0091                     PIE1            equ	145	;# 
   808     0092                     PIE2            equ	146	;# 
   809     0093                     PIE3            equ	147	;# 
   810     0095                     OPTION_REG      equ	149	;# 
   811     0096                     PCON            equ	150	;# 
   812     0097                     WDTCON          equ	151	;# 
   813     0098                     OSCTUNE         equ	152	;# 
   814     0099                     OSCCON          equ	153	;# 
   815     009A                     OSCSTAT         equ	154	;# 
   816     009B                     ADRES           equ	155	;# 
   817     009B                     ADRESL          equ	155	;# 
   818     009C                     ADRESH          equ	156	;# 
   819     009D                     ADCON0          equ	157	;# 
   820     009E                     ADCON1          equ	158	;# 
   821     010C                     LATA            equ	268	;# 
   822     010D                     LATB            equ	269	;# 
   823     010E                     LATC            equ	270	;# 
   824     0110                     LATE            equ	272	;# 
   825     0111                     CM1CON0         equ	273	;# 
   826     0112                     CM1CON1         equ	274	;# 
   827     0113                     CM2CON0         equ	275	;# 
   828     0114                     CM2CON1         equ	276	;# 
   829     0115                     CMOUT           equ	277	;# 
   830     0116                     BORCON          equ	278	;# 
   831     0117                     FVRCON          equ	279	;# 
   832     0118                     DACCON0         equ	280	;# 
   833     0119                     DACCON1         equ	281	;# 
   834     011A                     SRCON0          equ	282	;# 
   835     011B                     SRCON1          equ	283	;# 
   836     011D                     APFCON          equ	285	;# 
   837     018C                     ANSELA          equ	396	;# 
   838     018D                     ANSELB          equ	397	;# 
   839     0191                     EEADR           equ	401	;# 
   840     0191                     EEADRL          equ	401	;# 
   841     0192                     EEADRH          equ	402	;# 
   842     0193                     EEDAT           equ	403	;# 
   843     0193                     EEDATL          equ	403	;# 
   844     0193                     EEDATA          equ	403	;# 
   845     0194                     EEDATH          equ	404	;# 
   846     0195                     EECON1          equ	405	;# 
   847     0196                     EECON2          equ	406	;# 
   848     0199                     RCREG           equ	409	;# 
   849     019A                     TXREG           equ	410	;# 
   850     019B                     SP1BRG          equ	411	;# 
   851     019B                     SP1BRGL         equ	411	;# 
   852     019B                     SPBRG           equ	411	;# 
   853     019B                     SPBRGL          equ	411	;# 
   854     019C                     SP1BRGH         equ	412	;# 
   855     019C                     SPBRGH          equ	412	;# 
   856     019D                     RCSTA           equ	413	;# 
   857     019E                     TXSTA           equ	414	;# 
   858     019F                     BAUDCON         equ	415	;# 
   859     020D                     WPUB            equ	525	;# 
   860     0210                     WPUE            equ	528	;# 
   861     0211                     SSPBUF          equ	529	;# 
   862     0212                     SSPADD          equ	530	;# 
   863     0213                     SSPMSK          equ	531	;# 
   864     0214                     SSPSTAT         equ	532	;# 
   865     0215                     SSPCON1         equ	533	;# 
   866     0215                     SSPCON          equ	533	;# 
   867     0216                     SSPCON2         equ	534	;# 
   868     0217                     SSPCON3         equ	535	;# 
   869     0291                     CCPR1           equ	657	;# 
   870     0291                     CCPR1L          equ	657	;# 
   871     0292                     CCPR1H          equ	658	;# 
   872     0293                     CCP1CON         equ	659	;# 
   873     0294                     PWM1CON         equ	660	;# 
   874     0295                     CCP1AS          equ	661	;# 
   875     0295                     ECCP1AS         equ	661	;# 
   876     0296                     PSTR1CON        equ	662	;# 
   877     0298                     CCPR2           equ	664	;# 
   878     0298                     CCPR2L          equ	664	;# 
   879     0299                     CCPR2H          equ	665	;# 
   880     029A                     CCP2CON         equ	666	;# 
   881     029B                     PWM2CON         equ	667	;# 
   882     029C                     CCP2AS          equ	668	;# 
   883     029C                     ECCP2AS         equ	668	;# 
   884     029D                     PSTR2CON        equ	669	;# 
   885     029E                     CCPTMRS0        equ	670	;# 
   886     029F                     CCPTMRS1        equ	671	;# 
   887     0311                     CCPR3           equ	785	;# 
   888     0311                     CCPR3L          equ	785	;# 
   889     0312                     CCPR3H          equ	786	;# 
   890     0313                     CCP3CON         equ	787	;# 
   891     0314                     PWM3CON         equ	788	;# 
   892     0315                     CCP3AS          equ	789	;# 
   893     0315                     ECCP3AS         equ	789	;# 
   894     0316                     PSTR3CON        equ	790	;# 
   895     0318                     CCPR4           equ	792	;# 
   896     0318                     CCPR4L          equ	792	;# 
   897     0319                     CCPR4H          equ	793	;# 
   898     031A                     CCP4CON         equ	794	;# 
   899     031C                     CCPR5           equ	796	;# 
   900     031C                     CCPR5L          equ	796	;# 
   901     031D                     CCPR5H          equ	797	;# 
   902     031E                     CCP5CON         equ	798	;# 
   903     0394                     IOCBP           equ	916	;# 
   904     0395                     IOCBN           equ	917	;# 
   905     0396                     IOCBF           equ	918	;# 
   906     0415                     TMR4            equ	1045	;# 
   907     0416                     PR4             equ	1046	;# 
   908     0417                     T4CON           equ	1047	;# 
   909     041C                     TMR6            equ	1052	;# 
   910     041D                     PR6             equ	1053	;# 
   911     041E                     T6CON           equ	1054	;# 
   912     0791                     LCDCON          equ	1937	;# 
   913     0792                     LCDPS           equ	1938	;# 
   914     0793                     LCDREF          equ	1939	;# 
   915     0794                     LCDCST          equ	1940	;# 
   916     0795                     LCDRL           equ	1941	;# 
   917     0798                     LCDSE0          equ	1944	;# 
   918     0799                     LCDSE1          equ	1945	;# 
   919     07A0                     LCDDATA0        equ	1952	;# 
   920     07A1                     LCDDATA1        equ	1953	;# 
   921     07A3                     LCDDATA3        equ	1955	;# 
   922     07A4                     LCDDATA4        equ	1956	;# 
   923     07A6                     LCDDATA6        equ	1958	;# 
   924     07A7                     LCDDATA7        equ	1959	;# 
   925     07A9                     LCDDATA9        equ	1961	;# 
   926     07AA                     LCDDATA10       equ	1962	;# 
   927     0FE4                     STATUS_SHAD     equ	4068	;# 
   928     0FE5                     WREG_SHAD       equ	4069	;# 
   929     0FE6                     BSR_SHAD        equ	4070	;# 
   930     0FE7                     PCLATH_SHAD     equ	4071	;# 
   931     0FE8                     FSR0L_SHAD      equ	4072	;# 
   932     0FE9                     FSR0H_SHAD      equ	4073	;# 
   933     0FEA                     FSR1L_SHAD      equ	4074	;# 
   934     0FEB                     FSR1H_SHAD      equ	4075	;# 
   935     0FED                     STKPTR          equ	4077	;# 
   936     0FEE                     TOSL            equ	4078	;# 
   937     0FEF                     TOSH            equ	4079	;# 
   938     0000                     INDF0           equ	0	;# 
   939     0001                     INDF1           equ	1	;# 
   940     0002                     PCL             equ	2	;# 
   941     0003                     STATUS          equ	3	;# 
   942     0004                     FSR0L           equ	4	;# 
   943     0005                     FSR0H           equ	5	;# 
   944     0006                     FSR1L           equ	6	;# 
   945     0007                     FSR1H           equ	7	;# 
   946     0008                     BSR             equ	8	;# 
   947     0009                     WREG            equ	9	;# 
   948     000A                     PCLATH          equ	10	;# 
   949     000B                     INTCON          equ	11	;# 
   950     000C                     PORTA           equ	12	;# 
   951     000D                     PORTB           equ	13	;# 
   952     000E                     PORTC           equ	14	;# 
   953     0010                     PORTE           equ	16	;# 
   954     0011                     PIR1            equ	17	;# 
   955     0012                     PIR2            equ	18	;# 
   956     0013                     PIR3            equ	19	;# 
   957     0015                     TMR0            equ	21	;# 
   958     0016                     TMR1            equ	22	;# 
   959     0016                     TMR1L           equ	22	;# 
   960     0017                     TMR1H           equ	23	;# 
   961     0018                     T1CON           equ	24	;# 
   962     0019                     T1GCON          equ	25	;# 
   963     001A                     TMR2            equ	26	;# 
   964     001B                     PR2             equ	27	;# 
   965     001C                     T2CON           equ	28	;# 
   966     001E                     CPSCON0         equ	30	;# 
   967     001F                     CPSCON1         equ	31	;# 
   968     008C                     TRISA           equ	140	;# 
   969     008D                     TRISB           equ	141	;# 
   970     008E                     TRISC           equ	142	;# 
   971     0090                     TRISE           equ	144	;# 
   972     0091                     PIE1            equ	145	;# 
   973     0092                     PIE2            equ	146	;# 
   974     0093                     PIE3            equ	147	;# 
   975     0095                     OPTION_REG      equ	149	;# 
   976     0096                     PCON            equ	150	;# 
   977     0097                     WDTCON          equ	151	;# 
   978     0098                     OSCTUNE         equ	152	;# 
   979     0099                     OSCCON          equ	153	;# 
   980     009A                     OSCSTAT         equ	154	;# 
   981     009B                     ADRES           equ	155	;# 
   982     009B                     ADRESL          equ	155	;# 
   983     009C                     ADRESH          equ	156	;# 
   984     009D                     ADCON0          equ	157	;# 
   985     009E                     ADCON1          equ	158	;# 
   986     010C                     LATA            equ	268	;# 
   987     010D                     LATB            equ	269	;# 
   988     010E                     LATC            equ	270	;# 
   989     0110                     LATE            equ	272	;# 
   990     0111                     CM1CON0         equ	273	;# 
   991     0112                     CM1CON1         equ	274	;# 
   992     0113                     CM2CON0         equ	275	;# 
   993     0114                     CM2CON1         equ	276	;# 
   994     0115                     CMOUT           equ	277	;# 
   995     0116                     BORCON          equ	278	;# 
   996     0117                     FVRCON          equ	279	;# 
   997     0118                     DACCON0         equ	280	;# 
   998     0119                     DACCON1         equ	281	;# 
   999     011A                     SRCON0          equ	282	;# 
  1000     011B                     SRCON1          equ	283	;# 
  1001     011D                     APFCON          equ	285	;# 
  1002     018C                     ANSELA          equ	396	;# 
  1003     018D                     ANSELB          equ	397	;# 
  1004     0191                     EEADR           equ	401	;# 
  1005     0191                     EEADRL          equ	401	;# 
  1006     0192                     EEADRH          equ	402	;# 
  1007     0193                     EEDAT           equ	403	;# 
  1008     0193                     EEDATL          equ	403	;# 
  1009     0193                     EEDATA          equ	403	;# 
  1010     0194                     EEDATH          equ	404	;# 
  1011     0195                     EECON1          equ	405	;# 
  1012     0196                     EECON2          equ	406	;# 
  1013     0199                     RCREG           equ	409	;# 
  1014     019A                     TXREG           equ	410	;# 
  1015     019B                     SP1BRG          equ	411	;# 
  1016     019B                     SP1BRGL         equ	411	;# 
  1017     019B                     SPBRG           equ	411	;# 
  1018     019B                     SPBRGL          equ	411	;# 
  1019     019C                     SP1BRGH         equ	412	;# 
  1020     019C                     SPBRGH          equ	412	;# 
  1021     019D                     RCSTA           equ	413	;# 
  1022     019E                     TXSTA           equ	414	;# 
  1023     019F                     BAUDCON         equ	415	;# 
  1024     020D                     WPUB            equ	525	;# 
  1025     0210                     WPUE            equ	528	;# 
  1026     0211                     SSPBUF          equ	529	;# 
  1027     0212                     SSPADD          equ	530	;# 
  1028     0213                     SSPMSK          equ	531	;# 
  1029     0214                     SSPSTAT         equ	532	;# 
  1030     0215                     SSPCON1         equ	533	;# 
  1031     0215                     SSPCON          equ	533	;# 
  1032     0216                     SSPCON2         equ	534	;# 
  1033     0217                     SSPCON3         equ	535	;# 
  1034     0291                     CCPR1           equ	657	;# 
  1035     0291                     CCPR1L          equ	657	;# 
  1036     0292                     CCPR1H          equ	658	;# 
  1037     0293                     CCP1CON         equ	659	;# 
  1038     0294                     PWM1CON         equ	660	;# 
  1039     0295                     CCP1AS          equ	661	;# 
  1040     0295                     ECCP1AS         equ	661	;# 
  1041     0296                     PSTR1CON        equ	662	;# 
  1042     0298                     CCPR2           equ	664	;# 
  1043     0298                     CCPR2L          equ	664	;# 
  1044     0299                     CCPR2H          equ	665	;# 
  1045     029A                     CCP2CON         equ	666	;# 
  1046     029B                     PWM2CON         equ	667	;# 
  1047     029C                     CCP2AS          equ	668	;# 
  1048     029C                     ECCP2AS         equ	668	;# 
  1049     029D                     PSTR2CON        equ	669	;# 
  1050     029E                     CCPTMRS0        equ	670	;# 
  1051     029F                     CCPTMRS1        equ	671	;# 
  1052     0311                     CCPR3           equ	785	;# 
  1053     0311                     CCPR3L          equ	785	;# 
  1054     0312                     CCPR3H          equ	786	;# 
  1055     0313                     CCP3CON         equ	787	;# 
  1056     0314                     PWM3CON         equ	788	;# 
  1057     0315                     CCP3AS          equ	789	;# 
  1058     0315                     ECCP3AS         equ	789	;# 
  1059     0316                     PSTR3CON        equ	790	;# 
  1060     0318                     CCPR4           equ	792	;# 
  1061     0318                     CCPR4L          equ	792	;# 
  1062     0319                     CCPR4H          equ	793	;# 
  1063     031A                     CCP4CON         equ	794	;# 
  1064     031C                     CCPR5           equ	796	;# 
  1065     031C                     CCPR5L          equ	796	;# 
  1066     031D                     CCPR5H          equ	797	;# 
  1067     031E                     CCP5CON         equ	798	;# 
  1068     0394                     IOCBP           equ	916	;# 
  1069     0395                     IOCBN           equ	917	;# 
  1070     0396                     IOCBF           equ	918	;# 
  1071     0415                     TMR4            equ	1045	;# 
  1072     0416                     PR4             equ	1046	;# 
  1073     0417                     T4CON           equ	1047	;# 
  1074     041C                     TMR6            equ	1052	;# 
  1075     041D                     PR6             equ	1053	;# 
  1076     041E                     T6CON           equ	1054	;# 
  1077     0791                     LCDCON          equ	1937	;# 
  1078     0792                     LCDPS           equ	1938	;# 
  1079     0793                     LCDREF          equ	1939	;# 
  1080     0794                     LCDCST          equ	1940	;# 
  1081     0795                     LCDRL           equ	1941	;# 
  1082     0798                     LCDSE0          equ	1944	;# 
  1083     0799                     LCDSE1          equ	1945	;# 
  1084     07A0                     LCDDATA0        equ	1952	;# 
  1085     07A1                     LCDDATA1        equ	1953	;# 
  1086     07A3                     LCDDATA3        equ	1955	;# 
  1087     07A4                     LCDDATA4        equ	1956	;# 
  1088     07A6                     LCDDATA6        equ	1958	;# 
  1089     07A7                     LCDDATA7        equ	1959	;# 
  1090     07A9                     LCDDATA9        equ	1961	;# 
  1091     07AA                     LCDDATA10       equ	1962	;# 
  1092     0FE4                     STATUS_SHAD     equ	4068	;# 
  1093     0FE5                     WREG_SHAD       equ	4069	;# 
  1094     0FE6                     BSR_SHAD        equ	4070	;# 
  1095     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1096     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1097     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1098     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1099     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1100     0FED                     STKPTR          equ	4077	;# 
  1101     0FEE                     TOSL            equ	4078	;# 
  1102     0FEF                     TOSH            equ	4079	;# 
  1103     0000                     INDF0           equ	0	;# 
  1104     0001                     INDF1           equ	1	;# 
  1105     0002                     PCL             equ	2	;# 
  1106     0003                     STATUS          equ	3	;# 
  1107     0004                     FSR0L           equ	4	;# 
  1108     0005                     FSR0H           equ	5	;# 
  1109     0006                     FSR1L           equ	6	;# 
  1110     0007                     FSR1H           equ	7	;# 
  1111     0008                     BSR             equ	8	;# 
  1112     0009                     WREG            equ	9	;# 
  1113     000A                     PCLATH          equ	10	;# 
  1114     000B                     INTCON          equ	11	;# 
  1115     000C                     PORTA           equ	12	;# 
  1116     000D                     PORTB           equ	13	;# 
  1117     000E                     PORTC           equ	14	;# 
  1118     0010                     PORTE           equ	16	;# 
  1119     0011                     PIR1            equ	17	;# 
  1120     0012                     PIR2            equ	18	;# 
  1121     0013                     PIR3            equ	19	;# 
  1122     0015                     TMR0            equ	21	;# 
  1123     0016                     TMR1            equ	22	;# 
  1124     0016                     TMR1L           equ	22	;# 
  1125     0017                     TMR1H           equ	23	;# 
  1126     0018                     T1CON           equ	24	;# 
  1127     0019                     T1GCON          equ	25	;# 
  1128     001A                     TMR2            equ	26	;# 
  1129     001B                     PR2             equ	27	;# 
  1130     001C                     T2CON           equ	28	;# 
  1131     001E                     CPSCON0         equ	30	;# 
  1132     001F                     CPSCON1         equ	31	;# 
  1133     008C                     TRISA           equ	140	;# 
  1134     008D                     TRISB           equ	141	;# 
  1135     008E                     TRISC           equ	142	;# 
  1136     0090                     TRISE           equ	144	;# 
  1137     0091                     PIE1            equ	145	;# 
  1138     0092                     PIE2            equ	146	;# 
  1139     0093                     PIE3            equ	147	;# 
  1140     0095                     OPTION_REG      equ	149	;# 
  1141     0096                     PCON            equ	150	;# 
  1142     0097                     WDTCON          equ	151	;# 
  1143     0098                     OSCTUNE         equ	152	;# 
  1144     0099                     OSCCON          equ	153	;# 
  1145     009A                     OSCSTAT         equ	154	;# 
  1146     009B                     ADRES           equ	155	;# 
  1147     009B                     ADRESL          equ	155	;# 
  1148     009C                     ADRESH          equ	156	;# 
  1149     009D                     ADCON0          equ	157	;# 
  1150     009E                     ADCON1          equ	158	;# 
  1151     010C                     LATA            equ	268	;# 
  1152     010D                     LATB            equ	269	;# 
  1153     010E                     LATC            equ	270	;# 
  1154     0110                     LATE            equ	272	;# 
  1155     0111                     CM1CON0         equ	273	;# 
  1156     0112                     CM1CON1         equ	274	;# 
  1157     0113                     CM2CON0         equ	275	;# 
  1158     0114                     CM2CON1         equ	276	;# 
  1159     0115                     CMOUT           equ	277	;# 
  1160     0116                     BORCON          equ	278	;# 
  1161     0117                     FVRCON          equ	279	;# 
  1162     0118                     DACCON0         equ	280	;# 
  1163     0119                     DACCON1         equ	281	;# 
  1164     011A                     SRCON0          equ	282	;# 
  1165     011B                     SRCON1          equ	283	;# 
  1166     011D                     APFCON          equ	285	;# 
  1167     018C                     ANSELA          equ	396	;# 
  1168     018D                     ANSELB          equ	397	;# 
  1169     0191                     EEADR           equ	401	;# 
  1170     0191                     EEADRL          equ	401	;# 
  1171     0192                     EEADRH          equ	402	;# 
  1172     0193                     EEDAT           equ	403	;# 
  1173     0193                     EEDATL          equ	403	;# 
  1174     0193                     EEDATA          equ	403	;# 
  1175     0194                     EEDATH          equ	404	;# 
  1176     0195                     EECON1          equ	405	;# 
  1177     0196                     EECON2          equ	406	;# 
  1178     0199                     RCREG           equ	409	;# 
  1179     019A                     TXREG           equ	410	;# 
  1180     019B                     SP1BRG          equ	411	;# 
  1181     019B                     SP1BRGL         equ	411	;# 
  1182     019B                     SPBRG           equ	411	;# 
  1183     019B                     SPBRGL          equ	411	;# 
  1184     019C                     SP1BRGH         equ	412	;# 
  1185     019C                     SPBRGH          equ	412	;# 
  1186     019D                     RCSTA           equ	413	;# 
  1187     019E                     TXSTA           equ	414	;# 
  1188     019F                     BAUDCON         equ	415	;# 
  1189     020D                     WPUB            equ	525	;# 
  1190     0210                     WPUE            equ	528	;# 
  1191     0211                     SSPBUF          equ	529	;# 
  1192     0212                     SSPADD          equ	530	;# 
  1193     0213                     SSPMSK          equ	531	;# 
  1194     0214                     SSPSTAT         equ	532	;# 
  1195     0215                     SSPCON1         equ	533	;# 
  1196     0215                     SSPCON          equ	533	;# 
  1197     0216                     SSPCON2         equ	534	;# 
  1198     0217                     SSPCON3         equ	535	;# 
  1199     0291                     CCPR1           equ	657	;# 
  1200     0291                     CCPR1L          equ	657	;# 
  1201     0292                     CCPR1H          equ	658	;# 
  1202     0293                     CCP1CON         equ	659	;# 
  1203     0294                     PWM1CON         equ	660	;# 
  1204     0295                     CCP1AS          equ	661	;# 
  1205     0295                     ECCP1AS         equ	661	;# 
  1206     0296                     PSTR1CON        equ	662	;# 
  1207     0298                     CCPR2           equ	664	;# 
  1208     0298                     CCPR2L          equ	664	;# 
  1209     0299                     CCPR2H          equ	665	;# 
  1210     029A                     CCP2CON         equ	666	;# 
  1211     029B                     PWM2CON         equ	667	;# 
  1212     029C                     CCP2AS          equ	668	;# 
  1213     029C                     ECCP2AS         equ	668	;# 
  1214     029D                     PSTR2CON        equ	669	;# 
  1215     029E                     CCPTMRS0        equ	670	;# 
  1216     029F                     CCPTMRS1        equ	671	;# 
  1217     0311                     CCPR3           equ	785	;# 
  1218     0311                     CCPR3L          equ	785	;# 
  1219     0312                     CCPR3H          equ	786	;# 
  1220     0313                     CCP3CON         equ	787	;# 
  1221     0314                     PWM3CON         equ	788	;# 
  1222     0315                     CCP3AS          equ	789	;# 
  1223     0315                     ECCP3AS         equ	789	;# 
  1224     0316                     PSTR3CON        equ	790	;# 
  1225     0318                     CCPR4           equ	792	;# 
  1226     0318                     CCPR4L          equ	792	;# 
  1227     0319                     CCPR4H          equ	793	;# 
  1228     031A                     CCP4CON         equ	794	;# 
  1229     031C                     CCPR5           equ	796	;# 
  1230     031C                     CCPR5L          equ	796	;# 
  1231     031D                     CCPR5H          equ	797	;# 
  1232     031E                     CCP5CON         equ	798	;# 
  1233     0394                     IOCBP           equ	916	;# 
  1234     0395                     IOCBN           equ	917	;# 
  1235     0396                     IOCBF           equ	918	;# 
  1236     0415                     TMR4            equ	1045	;# 
  1237     0416                     PR4             equ	1046	;# 
  1238     0417                     T4CON           equ	1047	;# 
  1239     041C                     TMR6            equ	1052	;# 
  1240     041D                     PR6             equ	1053	;# 
  1241     041E                     T6CON           equ	1054	;# 
  1242     0791                     LCDCON          equ	1937	;# 
  1243     0792                     LCDPS           equ	1938	;# 
  1244     0793                     LCDREF          equ	1939	;# 
  1245     0794                     LCDCST          equ	1940	;# 
  1246     0795                     LCDRL           equ	1941	;# 
  1247     0798                     LCDSE0          equ	1944	;# 
  1248     0799                     LCDSE1          equ	1945	;# 
  1249     07A0                     LCDDATA0        equ	1952	;# 
  1250     07A1                     LCDDATA1        equ	1953	;# 
  1251     07A3                     LCDDATA3        equ	1955	;# 
  1252     07A4                     LCDDATA4        equ	1956	;# 
  1253     07A6                     LCDDATA6        equ	1958	;# 
  1254     07A7                     LCDDATA7        equ	1959	;# 
  1255     07A9                     LCDDATA9        equ	1961	;# 
  1256     07AA                     LCDDATA10       equ	1962	;# 
  1257     0FE4                     STATUS_SHAD     equ	4068	;# 
  1258     0FE5                     WREG_SHAD       equ	4069	;# 
  1259     0FE6                     BSR_SHAD        equ	4070	;# 
  1260     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1261     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1262     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1263     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1264     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1265     0FED                     STKPTR          equ	4077	;# 
  1266     0FEE                     TOSL            equ	4078	;# 
  1267     0FEF                     TOSH            equ	4079	;# 
  1268     0000                     INDF0           equ	0	;# 
  1269     0001                     INDF1           equ	1	;# 
  1270     0002                     PCL             equ	2	;# 
  1271     0003                     STATUS          equ	3	;# 
  1272     0004                     FSR0L           equ	4	;# 
  1273     0005                     FSR0H           equ	5	;# 
  1274     0006                     FSR1L           equ	6	;# 
  1275     0007                     FSR1H           equ	7	;# 
  1276     0008                     BSR             equ	8	;# 
  1277     0009                     WREG            equ	9	;# 
  1278     000A                     PCLATH          equ	10	;# 
  1279     000B                     INTCON          equ	11	;# 
  1280     000C                     PORTA           equ	12	;# 
  1281     000D                     PORTB           equ	13	;# 
  1282     000E                     PORTC           equ	14	;# 
  1283     0010                     PORTE           equ	16	;# 
  1284     0011                     PIR1            equ	17	;# 
  1285     0012                     PIR2            equ	18	;# 
  1286     0013                     PIR3            equ	19	;# 
  1287     0015                     TMR0            equ	21	;# 
  1288     0016                     TMR1            equ	22	;# 
  1289     0016                     TMR1L           equ	22	;# 
  1290     0017                     TMR1H           equ	23	;# 
  1291     0018                     T1CON           equ	24	;# 
  1292     0019                     T1GCON          equ	25	;# 
  1293     001A                     TMR2            equ	26	;# 
  1294     001B                     PR2             equ	27	;# 
  1295     001C                     T2CON           equ	28	;# 
  1296     001E                     CPSCON0         equ	30	;# 
  1297     001F                     CPSCON1         equ	31	;# 
  1298     008C                     TRISA           equ	140	;# 
  1299     008D                     TRISB           equ	141	;# 
  1300     008E                     TRISC           equ	142	;# 
  1301     0090                     TRISE           equ	144	;# 
  1302     0091                     PIE1            equ	145	;# 
  1303     0092                     PIE2            equ	146	;# 
  1304     0093                     PIE3            equ	147	;# 
  1305     0095                     OPTION_REG      equ	149	;# 
  1306     0096                     PCON            equ	150	;# 
  1307     0097                     WDTCON          equ	151	;# 
  1308     0098                     OSCTUNE         equ	152	;# 
  1309     0099                     OSCCON          equ	153	;# 
  1310     009A                     OSCSTAT         equ	154	;# 
  1311     009B                     ADRES           equ	155	;# 
  1312     009B                     ADRESL          equ	155	;# 
  1313     009C                     ADRESH          equ	156	;# 
  1314     009D                     ADCON0          equ	157	;# 
  1315     009E                     ADCON1          equ	158	;# 
  1316     010C                     LATA            equ	268	;# 
  1317     010D                     LATB            equ	269	;# 
  1318     010E                     LATC            equ	270	;# 
  1319     0110                     LATE            equ	272	;# 
  1320     0111                     CM1CON0         equ	273	;# 
  1321     0112                     CM1CON1         equ	274	;# 
  1322     0113                     CM2CON0         equ	275	;# 
  1323     0114                     CM2CON1         equ	276	;# 
  1324     0115                     CMOUT           equ	277	;# 
  1325     0116                     BORCON          equ	278	;# 
  1326     0117                     FVRCON          equ	279	;# 
  1327     0118                     DACCON0         equ	280	;# 
  1328     0119                     DACCON1         equ	281	;# 
  1329     011A                     SRCON0          equ	282	;# 
  1330     011B                     SRCON1          equ	283	;# 
  1331     011D                     APFCON          equ	285	;# 
  1332     018C                     ANSELA          equ	396	;# 
  1333     018D                     ANSELB          equ	397	;# 
  1334     0191                     EEADR           equ	401	;# 
  1335     0191                     EEADRL          equ	401	;# 
  1336     0192                     EEADRH          equ	402	;# 
  1337     0193                     EEDAT           equ	403	;# 
  1338     0193                     EEDATL          equ	403	;# 
  1339     0193                     EEDATA          equ	403	;# 
  1340     0194                     EEDATH          equ	404	;# 
  1341     0195                     EECON1          equ	405	;# 
  1342     0196                     EECON2          equ	406	;# 
  1343     0199                     RCREG           equ	409	;# 
  1344     019A                     TXREG           equ	410	;# 
  1345     019B                     SP1BRG          equ	411	;# 
  1346     019B                     SP1BRGL         equ	411	;# 
  1347     019B                     SPBRG           equ	411	;# 
  1348     019B                     SPBRGL          equ	411	;# 
  1349     019C                     SP1BRGH         equ	412	;# 
  1350     019C                     SPBRGH          equ	412	;# 
  1351     019D                     RCSTA           equ	413	;# 
  1352     019E                     TXSTA           equ	414	;# 
  1353     019F                     BAUDCON         equ	415	;# 
  1354     020D                     WPUB            equ	525	;# 
  1355     0210                     WPUE            equ	528	;# 
  1356     0211                     SSPBUF          equ	529	;# 
  1357     0212                     SSPADD          equ	530	;# 
  1358     0213                     SSPMSK          equ	531	;# 
  1359     0214                     SSPSTAT         equ	532	;# 
  1360     0215                     SSPCON1         equ	533	;# 
  1361     0215                     SSPCON          equ	533	;# 
  1362     0216                     SSPCON2         equ	534	;# 
  1363     0217                     SSPCON3         equ	535	;# 
  1364     0291                     CCPR1           equ	657	;# 
  1365     0291                     CCPR1L          equ	657	;# 
  1366     0292                     CCPR1H          equ	658	;# 
  1367     0293                     CCP1CON         equ	659	;# 
  1368     0294                     PWM1CON         equ	660	;# 
  1369     0295                     CCP1AS          equ	661	;# 
  1370     0295                     ECCP1AS         equ	661	;# 
  1371     0296                     PSTR1CON        equ	662	;# 
  1372     0298                     CCPR2           equ	664	;# 
  1373     0298                     CCPR2L          equ	664	;# 
  1374     0299                     CCPR2H          equ	665	;# 
  1375     029A                     CCP2CON         equ	666	;# 
  1376     029B                     PWM2CON         equ	667	;# 
  1377     029C                     CCP2AS          equ	668	;# 
  1378     029C                     ECCP2AS         equ	668	;# 
  1379     029D                     PSTR2CON        equ	669	;# 
  1380     029E                     CCPTMRS0        equ	670	;# 
  1381     029F                     CCPTMRS1        equ	671	;# 
  1382     0311                     CCPR3           equ	785	;# 
  1383     0311                     CCPR3L          equ	785	;# 
  1384     0312                     CCPR3H          equ	786	;# 
  1385     0313                     CCP3CON         equ	787	;# 
  1386     0314                     PWM3CON         equ	788	;# 
  1387     0315                     CCP3AS          equ	789	;# 
  1388     0315                     ECCP3AS         equ	789	;# 
  1389     0316                     PSTR3CON        equ	790	;# 
  1390     0318                     CCPR4           equ	792	;# 
  1391     0318                     CCPR4L          equ	792	;# 
  1392     0319                     CCPR4H          equ	793	;# 
  1393     031A                     CCP4CON         equ	794	;# 
  1394     031C                     CCPR5           equ	796	;# 
  1395     031C                     CCPR5L          equ	796	;# 
  1396     031D                     CCPR5H          equ	797	;# 
  1397     031E                     CCP5CON         equ	798	;# 
  1398     0394                     IOCBP           equ	916	;# 
  1399     0395                     IOCBN           equ	917	;# 
  1400     0396                     IOCBF           equ	918	;# 
  1401     0415                     TMR4            equ	1045	;# 
  1402     0416                     PR4             equ	1046	;# 
  1403     0417                     T4CON           equ	1047	;# 
  1404     041C                     TMR6            equ	1052	;# 
  1405     041D                     PR6             equ	1053	;# 
  1406     041E                     T6CON           equ	1054	;# 
  1407     0791                     LCDCON          equ	1937	;# 
  1408     0792                     LCDPS           equ	1938	;# 
  1409     0793                     LCDREF          equ	1939	;# 
  1410     0794                     LCDCST          equ	1940	;# 
  1411     0795                     LCDRL           equ	1941	;# 
  1412     0798                     LCDSE0          equ	1944	;# 
  1413     0799                     LCDSE1          equ	1945	;# 
  1414     07A0                     LCDDATA0        equ	1952	;# 
  1415     07A1                     LCDDATA1        equ	1953	;# 
  1416     07A3                     LCDDATA3        equ	1955	;# 
  1417     07A4                     LCDDATA4        equ	1956	;# 
  1418     07A6                     LCDDATA6        equ	1958	;# 
  1419     07A7                     LCDDATA7        equ	1959	;# 
  1420     07A9                     LCDDATA9        equ	1961	;# 
  1421     07AA                     LCDDATA10       equ	1962	;# 
  1422     0FE4                     STATUS_SHAD     equ	4068	;# 
  1423     0FE5                     WREG_SHAD       equ	4069	;# 
  1424     0FE6                     BSR_SHAD        equ	4070	;# 
  1425     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1426     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1427     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1428     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1429     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1430     0FED                     STKPTR          equ	4077	;# 
  1431     0FEE                     TOSL            equ	4078	;# 
  1432     0FEF                     TOSH            equ	4079	;# 
  1433     0000                     INDF0           equ	0	;# 
  1434     0001                     INDF1           equ	1	;# 
  1435     0002                     PCL             equ	2	;# 
  1436     0003                     STATUS          equ	3	;# 
  1437     0004                     FSR0L           equ	4	;# 
  1438     0005                     FSR0H           equ	5	;# 
  1439     0006                     FSR1L           equ	6	;# 
  1440     0007                     FSR1H           equ	7	;# 
  1441     0008                     BSR             equ	8	;# 
  1442     0009                     WREG            equ	9	;# 
  1443     000A                     PCLATH          equ	10	;# 
  1444     000B                     INTCON          equ	11	;# 
  1445     000C                     PORTA           equ	12	;# 
  1446     000D                     PORTB           equ	13	;# 
  1447     000E                     PORTC           equ	14	;# 
  1448     0010                     PORTE           equ	16	;# 
  1449     0011                     PIR1            equ	17	;# 
  1450     0012                     PIR2            equ	18	;# 
  1451     0013                     PIR3            equ	19	;# 
  1452     0015                     TMR0            equ	21	;# 
  1453     0016                     TMR1            equ	22	;# 
  1454     0016                     TMR1L           equ	22	;# 
  1455     0017                     TMR1H           equ	23	;# 
  1456     0018                     T1CON           equ	24	;# 
  1457     0019                     T1GCON          equ	25	;# 
  1458     001A                     TMR2            equ	26	;# 
  1459     001B                     PR2             equ	27	;# 
  1460     001C                     T2CON           equ	28	;# 
  1461     001E                     CPSCON0         equ	30	;# 
  1462     001F                     CPSCON1         equ	31	;# 
  1463     008C                     TRISA           equ	140	;# 
  1464     008D                     TRISB           equ	141	;# 
  1465     008E                     TRISC           equ	142	;# 
  1466     0090                     TRISE           equ	144	;# 
  1467     0091                     PIE1            equ	145	;# 
  1468     0092                     PIE2            equ	146	;# 
  1469     0093                     PIE3            equ	147	;# 
  1470     0095                     OPTION_REG      equ	149	;# 
  1471     0096                     PCON            equ	150	;# 
  1472     0097                     WDTCON          equ	151	;# 
  1473     0098                     OSCTUNE         equ	152	;# 
  1474     0099                     OSCCON          equ	153	;# 
  1475     009A                     OSCSTAT         equ	154	;# 
  1476     009B                     ADRES           equ	155	;# 
  1477     009B                     ADRESL          equ	155	;# 
  1478     009C                     ADRESH          equ	156	;# 
  1479     009D                     ADCON0          equ	157	;# 
  1480     009E                     ADCON1          equ	158	;# 
  1481     010C                     LATA            equ	268	;# 
  1482     010D                     LATB            equ	269	;# 
  1483     010E                     LATC            equ	270	;# 
  1484     0110                     LATE            equ	272	;# 
  1485     0111                     CM1CON0         equ	273	;# 
  1486     0112                     CM1CON1         equ	274	;# 
  1487     0113                     CM2CON0         equ	275	;# 
  1488     0114                     CM2CON1         equ	276	;# 
  1489     0115                     CMOUT           equ	277	;# 
  1490     0116                     BORCON          equ	278	;# 
  1491     0117                     FVRCON          equ	279	;# 
  1492     0118                     DACCON0         equ	280	;# 
  1493     0119                     DACCON1         equ	281	;# 
  1494     011A                     SRCON0          equ	282	;# 
  1495     011B                     SRCON1          equ	283	;# 
  1496     011D                     APFCON          equ	285	;# 
  1497     018C                     ANSELA          equ	396	;# 
  1498     018D                     ANSELB          equ	397	;# 
  1499     0191                     EEADR           equ	401	;# 
  1500     0191                     EEADRL          equ	401	;# 
  1501     0192                     EEADRH          equ	402	;# 
  1502     0193                     EEDAT           equ	403	;# 
  1503     0193                     EEDATL          equ	403	;# 
  1504     0193                     EEDATA          equ	403	;# 
  1505     0194                     EEDATH          equ	404	;# 
  1506     0195                     EECON1          equ	405	;# 
  1507     0196                     EECON2          equ	406	;# 
  1508     0199                     RCREG           equ	409	;# 
  1509     019A                     TXREG           equ	410	;# 
  1510     019B                     SP1BRG          equ	411	;# 
  1511     019B                     SP1BRGL         equ	411	;# 
  1512     019B                     SPBRG           equ	411	;# 
  1513     019B                     SPBRGL          equ	411	;# 
  1514     019C                     SP1BRGH         equ	412	;# 
  1515     019C                     SPBRGH          equ	412	;# 
  1516     019D                     RCSTA           equ	413	;# 
  1517     019E                     TXSTA           equ	414	;# 
  1518     019F                     BAUDCON         equ	415	;# 
  1519     020D                     WPUB            equ	525	;# 
  1520     0210                     WPUE            equ	528	;# 
  1521     0211                     SSPBUF          equ	529	;# 
  1522     0212                     SSPADD          equ	530	;# 
  1523     0213                     SSPMSK          equ	531	;# 
  1524     0214                     SSPSTAT         equ	532	;# 
  1525     0215                     SSPCON1         equ	533	;# 
  1526     0215                     SSPCON          equ	533	;# 
  1527     0216                     SSPCON2         equ	534	;# 
  1528     0217                     SSPCON3         equ	535	;# 
  1529     0291                     CCPR1           equ	657	;# 
  1530     0291                     CCPR1L          equ	657	;# 
  1531     0292                     CCPR1H          equ	658	;# 
  1532     0293                     CCP1CON         equ	659	;# 
  1533     0294                     PWM1CON         equ	660	;# 
  1534     0295                     CCP1AS          equ	661	;# 
  1535     0295                     ECCP1AS         equ	661	;# 
  1536     0296                     PSTR1CON        equ	662	;# 
  1537     0298                     CCPR2           equ	664	;# 
  1538     0298                     CCPR2L          equ	664	;# 
  1539     0299                     CCPR2H          equ	665	;# 
  1540     029A                     CCP2CON         equ	666	;# 
  1541     029B                     PWM2CON         equ	667	;# 
  1542     029C                     CCP2AS          equ	668	;# 
  1543     029C                     ECCP2AS         equ	668	;# 
  1544     029D                     PSTR2CON        equ	669	;# 
  1545     029E                     CCPTMRS0        equ	670	;# 
  1546     029F                     CCPTMRS1        equ	671	;# 
  1547     0311                     CCPR3           equ	785	;# 
  1548     0311                     CCPR3L          equ	785	;# 
  1549     0312                     CCPR3H          equ	786	;# 
  1550     0313                     CCP3CON         equ	787	;# 
  1551     0314                     PWM3CON         equ	788	;# 
  1552     0315                     CCP3AS          equ	789	;# 
  1553     0315                     ECCP3AS         equ	789	;# 
  1554     0316                     PSTR3CON        equ	790	;# 
  1555     0318                     CCPR4           equ	792	;# 
  1556     0318                     CCPR4L          equ	792	;# 
  1557     0319                     CCPR4H          equ	793	;# 
  1558     031A                     CCP4CON         equ	794	;# 
  1559     031C                     CCPR5           equ	796	;# 
  1560     031C                     CCPR5L          equ	796	;# 
  1561     031D                     CCPR5H          equ	797	;# 
  1562     031E                     CCP5CON         equ	798	;# 
  1563     0394                     IOCBP           equ	916	;# 
  1564     0395                     IOCBN           equ	917	;# 
  1565     0396                     IOCBF           equ	918	;# 
  1566     0415                     TMR4            equ	1045	;# 
  1567     0416                     PR4             equ	1046	;# 
  1568     0417                     T4CON           equ	1047	;# 
  1569     041C                     TMR6            equ	1052	;# 
  1570     041D                     PR6             equ	1053	;# 
  1571     041E                     T6CON           equ	1054	;# 
  1572     0791                     LCDCON          equ	1937	;# 
  1573     0792                     LCDPS           equ	1938	;# 
  1574     0793                     LCDREF          equ	1939	;# 
  1575     0794                     LCDCST          equ	1940	;# 
  1576     0795                     LCDRL           equ	1941	;# 
  1577     0798                     LCDSE0          equ	1944	;# 
  1578     0799                     LCDSE1          equ	1945	;# 
  1579     07A0                     LCDDATA0        equ	1952	;# 
  1580     07A1                     LCDDATA1        equ	1953	;# 
  1581     07A3                     LCDDATA3        equ	1955	;# 
  1582     07A4                     LCDDATA4        equ	1956	;# 
  1583     07A6                     LCDDATA6        equ	1958	;# 
  1584     07A7                     LCDDATA7        equ	1959	;# 
  1585     07A9                     LCDDATA9        equ	1961	;# 
  1586     07AA                     LCDDATA10       equ	1962	;# 
  1587     0FE4                     STATUS_SHAD     equ	4068	;# 
  1588     0FE5                     WREG_SHAD       equ	4069	;# 
  1589     0FE6                     BSR_SHAD        equ	4070	;# 
  1590     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1591     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1592     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1593     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1594     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1595     0FED                     STKPTR          equ	4077	;# 
  1596     0FEE                     TOSL            equ	4078	;# 
  1597     0FEF                     TOSH            equ	4079	;# 
  1598                           
  1599                           	psect	idataBANK0
  1600     0601                     __pidataBANK0:
  1601                           
  1602                           ;initializer for _LIN_timeout
  1603     0601  340A               	retlw	10
  1604                           
  1605                           	psect	stringtext1
  1606     05D4                     __pstringtext1:
  1607     05D4                     _scheduleTable:
  1608     05D4  3401               	retlw	1
  1609     05D5  3401               	retlw	1
  1610     05D6  3408               	retlw	8
  1611     05D7  34A0               	retlw	low (_SW_STATE_Data| 0)
  1612     05D8  3400               	retlw	high (_SW_STATE_Data| 0)
  1613     05D9                     __end_of_scheduleTable:
  1614     0011                     _PIR1bits       set	17
  1615     000B                     _INTCONbits     set	11
  1616     0015                     _TMR0           set	21
  1617     0097                     _WDTCON         set	151
  1618     0098                     _OSCTUNE        set	152
  1619     0099                     _OSCCON         set	153
  1620     0095                     _OPTION_REG     set	149
  1621     0095                     _OPTION_REGbits set	149
  1622     008E                     _TRISC          set	142
  1623     008D                     _TRISB          set	141
  1624     008C                     _TRISA          set	140
  1625     0090                     _TRISE          set	144
  1626     0091                     _PIE1bits       set	145
  1627     04D6                     _PLLR           set	1238
  1628     0116                     _BORCON         set	278
  1629     011D                     _APFCON         set	285
  1630     010E                     _LATC           set	270
  1631     010D                     _LATB           set	269
  1632     010C                     _LATA           set	268
  1633     0110                     _LATE           set	272
  1634     010D                     _LATBbits       set	269
  1635     0199                     _RCREG          set	409
  1636     019A                     _TXREG          set	410
  1637     019C                     _SPBRGH         set	412
  1638     019B                     _SPBRGL         set	411
  1639     019E                     _TXSTA          set	414
  1640     019D                     _RCSTA          set	413
  1641     019F                     _BAUDCON        set	415
  1642     018C                     _ANSELA         set	396
  1643     018D                     _ANSELB         set	397
  1644     019D                     _RCSTAbits      set	413
  1645     019E                     _TXSTAbits      set	414
  1646     020D                     _WPUB           set	525
  1647     0210                     _WPUE           set	528
  1648                           
  1649                           	psect	cinit
  1650     003A                     start_initialization:	
  1651                           ; #config settings
  1652                           
  1653     003A                     __initialization:
  1654                           
  1655                           ; Initialize objects allocated to BANK0
  1656     003A  3186  2601  3180   	fcall	__pidataBANK0	;fetch initializer
  1657     003D  00EC               	movwf	__pdataBANK0& (0+127)
  1658                           
  1659                           ; Clear objects allocated to BANK0
  1660     003E  3020               	movlw	low __pbssBANK0
  1661     003F  0084               	movwf	4
  1662     0040  3000               	movlw	high __pbssBANK0
  1663     0041  0085               	movwf	5
  1664     0042  3043               	movlw	67
  1665     0043  3185  25AA  3180   	fcall	clear_ram0
  1666                           
  1667                           ; Clear objects allocated to BANK1
  1668     0046  30A0               	movlw	low __pbssBANK1
  1669     0047  0084               	movwf	4
  1670     0048  3000               	movlw	high __pbssBANK1
  1671     0049  0085               	movwf	5
  1672     004A  3008               	movlw	8
  1673     004B  3185  25AA  3180   	fcall	clear_ram0
  1674     004E                     end_of_initialization:	
  1675                           ;End of C runtime variable initialization code
  1676                           
  1677     004E                     __end_of__initialization:
  1678     004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1679     004F  0020               	movlb	0
  1680     0050  3185  2D8E         	ljmp	_main	;jump to C main() function
  1681                           
  1682                           	psect	bssBANK0
  1683     0020                     __pbssBANK0:
  1684     0020                     _eusartRxStatusBuffer:
  1685     0020                     	ds	8
  1686     0028                     _eusartRxBuffer:
  1687     0028                     	ds	8
  1688     0030                     _eusartTxBuffer:
  1689     0030                     	ds	8
  1690     0038                     _TMR0_InterruptHandler:
  1691     0038                     	ds	2
  1692     003A                     _EUSART_ErrorHandler:
  1693     003A                     	ds	2
  1694     003C                     _EUSART_OverrunErrorHandler:
  1695     003C                     	ds	2
  1696     003E                     _EUSART_FramingErrorHandler:
  1697     003E                     	ds	2
  1698     0040                     _EUSART_RxDefaultInterruptHandler:
  1699     0040                     	ds	2
  1700     0042                     _EUSART_TxDefaultInterruptHandler:
  1701     0042                     	ds	2
  1702     0044                     _LIN_rxCommand:
  1703     0044                     	ds	2
  1704     0046                     _LIN_processData:
  1705     0046                     	ds	2
  1706     0048                     _timer0ReloadVal:
  1707     0048                     	ds	1
  1708     0049                     _eusartRxLastError:
  1709     0049                     	ds	1
  1710     004A                     _eusartRxCount:
  1711     004A                     	ds	1
  1712     004B                     _eusartRxTail:
  1713     004B                     	ds	1
  1714     004C                     _eusartRxHead:
  1715     004C                     	ds	1
  1716     004D                     _eusartTxBufferRemaining:
  1717     004D                     	ds	1
  1718     004E                     _eusartTxTail:
  1719     004E                     	ds	1
  1720     004F                     _eusartTxHead:
  1721     004F                     	ds	1
  1722     0050                     LIN_handler@rxDataIndex:
  1723     0050                     	ds	1
  1724     0051                     LIN_handler@LIN_rxState:
  1725     0051                     	ds	1
  1726     0052                     _CountCallBack:
  1727     0052                     	ds	1
  1728     0053                     _LIN_timerRunning:
  1729     0053                     	ds	1
  1730     0054                     _LIN_rxCommandLength:
  1731     0054                     	ds	1
  1732     0055                     _LIN_rxInProgress:
  1733     0055                     	ds	1
  1734     0056                     _LIN_packet:
  1735     0056                     	ds	13
  1736                           
  1737                           	psect	dataBANK0
  1738     006C                     __pdataBANK0:
  1739     006C                     _LIN_timeout:
  1740     006C                     	ds	1
  1741                           
  1742                           	psect	bssBANK1
  1743     00A0                     __pbssBANK1:
  1744     00A0                     _SW_STATE_Data:
  1745     00A0                     	ds	8
  1746                           
  1747                           	psect	clrtext
  1748     05AA                     clear_ram0:	
  1749                           ;	Called with FSR0 containing the base address, and
  1750                           ;	WREG with the size to clear
  1751                           
  1752     05AA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1753     05AB                     clrloop0:
  1754     05AB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1755     05AC  3101               	addfsr 0,1
  1756     05AD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1757     05AE  2DAB               	goto	clrloop0	;have we reached the end yet?
  1758     05AF  3400               	retlw	0	;all done for this memory range, return
  1759                           
  1760                           	psect	cstackBANK1
  1761     00A8                     __pcstackBANK1:
  1762     00A8                     ??_LIN_handler:
  1763                           
  1764                           ; 1 bytes @ 0x0
  1765     00A8                     	ds	5
  1766                           
  1767                           	psect	cstackCOMMON
  1768     0070                     __pcstackCOMMON:
  1769     0070                     ?_processLIN:
  1770     0070                     ?_LIN_stopTimer:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773     0070                     ?_LIN_enableRx:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776     0070                     ?_LIN_setTimerHandler:	
  1777                           ; 1 bytes @ 0x0
  1778                           
  1779     0070                     ?_LIN_getChecksum:	
  1780                           ; 1 bytes @ 0x0
  1781                           
  1782     0070                     ?_EUSART_is_rx_ready:	
  1783                           ; 1 bytes @ 0x0
  1784                           
  1785     0070                     ?_LIN_startTimer:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788     0070                     ?_LIN_breakCheck:	
  1789                           ; 1 bytes @ 0x0
  1790                           
  1791     0070                     ?_EUSART_Read:	
  1792                           ; 1 bytes @ 0x0
  1793                           
  1794     0070                     ?_LIN_checkPID:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797     0070                     ?_LIN_getFromTable:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800     0070                     ?_LIN_disableRx:	
  1801                           ; 1 bytes @ 0x0
  1802                           
  1803     0070                     ?_EUSART_Write:	
  1804                           ; 1 bytes @ 0x0
  1805                           
  1806     0070                     ?_LIN_calcParity:	
  1807                           ; 1 bytes @ 0x0
  1808                           
  1809     0070                     ?_TMR0_WriteTimer:	
  1810                           ; 1 bytes @ 0x0
  1811                           
  1812     0070                     ?_TMR0_SetInterruptHandler:	
  1813                           ; 1 bytes @ 0x0
  1814                           
  1815     0070                     ?_EUSART_get_last_status:	
  1816                           ; 1 bytes @ 0x0
  1817                           
  1818     0070                     ?_EUSART_SetRxInterruptHandler:	
  1819                           ; 1 bytes @ 0x0
  1820                           
  1821     0070                     ?_EUSART_Receive_ISR:	
  1822                           ; 1 bytes @ 0x0
  1823                           
  1824     0070                     ?_EUSART_SetTxInterruptHandler:	
  1825                           ; 1 bytes @ 0x0
  1826                           
  1827     0070                     ?_EUSART_Transmit_ISR:	
  1828                           ; 1 bytes @ 0x0
  1829                           
  1830     0070                     ?_EUSART_SetFramingErrorHandler:	
  1831                           ; 1 bytes @ 0x0
  1832                           
  1833     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1834                           ; 1 bytes @ 0x0
  1835                           
  1836     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1837                           ; 1 bytes @ 0x0
  1838                           
  1839     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1840                           ; 1 bytes @ 0x0
  1841                           
  1842     0070                     ?_EUSART_SetErrorHandler:	
  1843                           ; 1 bytes @ 0x0
  1844                           
  1845     0070                     ?_EUSART_DefaultErrorHandler:	
  1846                           ; 1 bytes @ 0x0
  1847                           
  1848     0070                     ?_EUSART_RxDataHandler:	
  1849                           ; 1 bytes @ 0x0
  1850                           
  1851     0070                     ?_TMR0_DefaultInterruptHandler:	
  1852                           ; 1 bytes @ 0x0
  1853                           
  1854     0070                     ?_OSCILLATOR_Initialize:	
  1855                           ; 1 bytes @ 0x0
  1856                           
  1857     0070                     ?_WDT_Initialize:	
  1858                           ; 1 bytes @ 0x0
  1859                           
  1860     0070                     ?_LIN_Slave_Initialize:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863     0070                     ?_LIN_queuePacket:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866     0070                     ?_LIN_handler:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869     0070                     ?_LIN_timerHandler:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872     0070                     ?_PIN_MANAGER_Initialize:	
  1873                           ; 1 bytes @ 0x0
  1874                           
  1875     0070                     ?_EUSART_Initialize:	
  1876                           ; 1 bytes @ 0x0
  1877                           
  1878     0070                     ?_TMR0_Initialize:	
  1879                           ; 1 bytes @ 0x0
  1880                           
  1881     0070                     ?_TMR0_ISR:	
  1882                           ; 1 bytes @ 0x0
  1883                           
  1884     0070                     ?_INTERRUPT_InterruptManager:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887     0070                     ?_SYSTEM_Initialize:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890     0070                     ?_main:	
  1891                           ; 1 bytes @ 0x0
  1892                           
  1893     0070                     ?i1_LIN_stopTimer:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896     0070                     ?_memcpy:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899     0070                     ?_memset:	
  1900                           ; 2 bytes @ 0x0
  1901                           
  1902     0070                     LIN_getFromTable@param:	
  1903                           ; 2 bytes @ 0x0
  1904                           
  1905     0070                     LIN_getChecksum@pid:	
  1906                           ; 1 bytes @ 0x0
  1907                           
  1908     0070                     EUSART_Read@readValue:	
  1909                           ; 1 bytes @ 0x0
  1910                           
  1911     0070                     EUSART_Write@txData:	
  1912                           ; 1 bytes @ 0x0
  1913                           
  1914     0070                     TMR0_WriteTimer@timerVal:	
  1915                           ; 1 bytes @ 0x0
  1916                           
  1917     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1918                           ; 1 bytes @ 0x0
  1919                           
  1920     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1921                           ; 2 bytes @ 0x0
  1922                           
  1923     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1924                           ; 2 bytes @ 0x0
  1925                           
  1926     0070                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1927                           ; 2 bytes @ 0x0
  1928                           
  1929     0070                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1930                           ; 2 bytes @ 0x0
  1931                           
  1932     0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  1933                           ; 2 bytes @ 0x0
  1934                           
  1935     0070                     memcpy@d1:	
  1936                           ; 2 bytes @ 0x0
  1937                           
  1938     0070                     memset@dest:	
  1939                           ; 2 bytes @ 0x0
  1940                           
  1941     0070                     ??_LIN_stopTimer:	
  1942                           ; 2 bytes @ 0x0
  1943                           
  1944     0070                     ??_LIN_enableRx:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947     0070                     ??_EUSART_is_rx_ready:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950     0070                     ??_EUSART_Read:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953     0070                     ??_LIN_disableRx:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956     0070                     ??_EUSART_Write:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959     0070                     ??_LIN_calcParity:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962     0070                     ??_TMR0_WriteTimer:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965     0070                     ??_EUSART_get_last_status:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968     0070                     ??_EUSART_Receive_ISR:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971     0070                     ??_EUSART_Transmit_ISR:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980     0070                     ??_EUSART_DefaultErrorHandler:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983     0070                     ??_EUSART_RxDataHandler:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986     0070                     ??_TMR0_DefaultInterruptHandler:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989     0070                     ??_OSCILLATOR_Initialize:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992     0070                     ??_WDT_Initialize:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995     0070                     ??_LIN_timerHandler:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998     0070                     ??_PIN_MANAGER_Initialize:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001     0070                     ??_TMR0_ISR:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004     0070                     ??_INTERRUPT_InterruptManager:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007     0070                     ??i1_LIN_stopTimer:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010                           
  2011                           ; 1 bytes @ 0x0
  2012     0070                     	ds	1
  2013     0071                     LIN_calcParity@CMD:
  2014     0071                     LIN_startTimer@timeout:	
  2015                           ; 1 bytes @ 0x1
  2016                           
  2017     0071                     LIN_getChecksum@data:	
  2018                           ; 1 bytes @ 0x1
  2019                           
  2020     0071                     ??_LIN_startTimer:	
  2021                           ; 2 bytes @ 0x1
  2022                           
  2023     0071                     ??_LIN_breakCheck:	
  2024                           ; 1 bytes @ 0x1
  2025                           
  2026     0071                     ??_LIN_getFromTable:	
  2027                           ; 1 bytes @ 0x1
  2028                           
  2029                           
  2030                           ; 1 bytes @ 0x1
  2031     0071                     	ds	1
  2032     0072                     ?_LIN_init:
  2033     0072                     LIN_calcParity@PID:	
  2034                           ; 1 bytes @ 0x2
  2035                           
  2036     0072                     LIN_init@command:	
  2037                           ; 1 bytes @ 0x2
  2038                           
  2039     0072                     memcpy@s1:	
  2040                           ; 2 bytes @ 0x2
  2041                           
  2042     0072                     memset@c:	
  2043                           ; 2 bytes @ 0x2
  2044                           
  2045     0072                     ??_LIN_setTimerHandler:	
  2046                           ; 2 bytes @ 0x2
  2047                           
  2048     0072                     ??_TMR0_SetInterruptHandler:	
  2049                           ; 1 bytes @ 0x2
  2050                           
  2051     0072                     ??_EUSART_SetRxInterruptHandler:	
  2052                           ; 1 bytes @ 0x2
  2053                           
  2054     0072                     ??_EUSART_SetTxInterruptHandler:	
  2055                           ; 1 bytes @ 0x2
  2056                           
  2057     0072                     ??_EUSART_SetFramingErrorHandler:	
  2058                           ; 1 bytes @ 0x2
  2059                           
  2060     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2061                           ; 1 bytes @ 0x2
  2062                           
  2063     0072                     ??_EUSART_SetErrorHandler:	
  2064                           ; 1 bytes @ 0x2
  2065                           
  2066     0072                     ??_EUSART_Initialize:	
  2067                           ; 1 bytes @ 0x2
  2068                           
  2069     0072                     ??_TMR0_Initialize:	
  2070                           ; 1 bytes @ 0x2
  2071                           
  2072                           
  2073                           ; 1 bytes @ 0x2
  2074     0072                     	ds	1
  2075     0073                     LIN_getFromTable@cmd:
  2076     0073                     ??_LIN_getChecksum:	
  2077                           ; 1 bytes @ 0x3
  2078                           
  2079                           
  2080                           ; 1 bytes @ 0x3
  2081     0073                     	ds	1
  2082     0074                     LIN_getFromTable@length:
  2083     0074                     LIN_init@processData:	
  2084                           ; 1 bytes @ 0x4
  2085                           
  2086     0074                     memcpy@n:	
  2087                           ; 2 bytes @ 0x4
  2088                           
  2089     0074                     memset@n:	
  2090                           ; 2 bytes @ 0x4
  2091                           
  2092                           
  2093                           ; 2 bytes @ 0x4
  2094     0074                     	ds	1
  2095     0075                     LIN_getChecksum@length:
  2096     0075                     LIN_getFromTable@rxCommand:	
  2097                           ; 1 bytes @ 0x5
  2098                           
  2099                           
  2100                           ; 2 bytes @ 0x5
  2101     0075                     	ds	1
  2102     0076                     LIN_init@tableLength:
  2103     0076                     LIN_getChecksum@i:	
  2104                           ; 1 bytes @ 0x6
  2105                           
  2106     0076                     memcpy@tmp:	
  2107                           ; 1 bytes @ 0x6
  2108                           
  2109     0076                     memset@p:	
  2110                           ; 1 bytes @ 0x6
  2111                           
  2112     0076                     ??_LIN_init:	
  2113                           ; 1 bytes @ 0x6
  2114                           
  2115     0076                     ??_memcpy:	
  2116                           ; 1 bytes @ 0x6
  2117                           
  2118     0076                     ??_memset:	
  2119                           ; 1 bytes @ 0x6
  2120                           
  2121                           
  2122                           ; 1 bytes @ 0x6
  2123     0076                     	ds	1
  2124     0077                     LIN_checkPID@pid:
  2125     0077                     memcpy@d:	
  2126                           ; 1 bytes @ 0x7
  2127                           
  2128     0077                     LIN_getChecksum@checksum:	
  2129                           ; 1 bytes @ 0x7
  2130                           
  2131     0077                     ??_LIN_checkPID:	
  2132                           ; 2 bytes @ 0x7
  2133                           
  2134     0077                     ??_LIN_Slave_Initialize:	
  2135                           ; 1 bytes @ 0x7
  2136                           
  2137     0077                     ??_SYSTEM_Initialize:	
  2138                           ; 1 bytes @ 0x7
  2139                           
  2140                           
  2141                           ; 1 bytes @ 0x7
  2142     0077                     	ds	1
  2143     0078                     memcpy@s:
  2144                           
  2145                           ; 1 bytes @ 0x8
  2146     0078                     	ds	1
  2147     0079                     ?_LIN_getPacket:
  2148     0079                     ?_LIN_sendPacket:	
  2149                           ; 1 bytes @ 0x9
  2150                           
  2151     0079                     LIN_sendPacket@pid:	
  2152                           ; 1 bytes @ 0x9
  2153                           
  2154     0079                     LIN_getPacket@data:	
  2155                           ; 1 bytes @ 0x9
  2156                           
  2157                           
  2158                           ; 1 bytes @ 0x9
  2159     0079                     	ds	1
  2160     007A                     LIN_getPacket@cmd:
  2161     007A                     LIN_sendPacket@data:	
  2162                           ; 1 bytes @ 0xA
  2163                           
  2164     007A                     ??_LIN_getPacket:	
  2165                           ; 2 bytes @ 0xA
  2166                           
  2167                           
  2168                           ; 1 bytes @ 0xA
  2169     007A                     	ds	1
  2170     007B                     ??_processLIN:
  2171                           
  2172                           ; 1 bytes @ 0xB
  2173     007B                     	ds	1
  2174     007C                     LIN_sendPacket@length:
  2175     007C                     ??_LIN_sendPacket:	
  2176                           ; 1 bytes @ 0xC
  2177                           
  2178                           
  2179                           ; 1 bytes @ 0xC
  2180     007C                     	ds	1
  2181     007D                     LIN_sendPacket@i:
  2182                           
  2183                           ; 1 bytes @ 0xD
  2184     007D                     	ds	1
  2185     007E                     ??_main:
  2186                           
  2187                           	psect	cstackBANK0
  2188     0063                     __pcstackBANK0:	
  2189                           ; 1 bytes @ 0xE
  2190                           
  2191     0063                     processLIN@tempRxData:
  2192     0063                     ??_LIN_queuePacket:	
  2193                           ; 8 bytes @ 0x0
  2194                           
  2195                           
  2196                           ; 1 bytes @ 0x0
  2197     0063                     	ds	1
  2198     0064                     LIN_queuePacket@cmd:
  2199                           
  2200                           ; 1 bytes @ 0x1
  2201     0064                     	ds	1
  2202     0065                     LIN_queuePacket@i:
  2203                           
  2204                           ; 1 bytes @ 0x2
  2205     0065                     	ds	1
  2206     0066                     LIN_queuePacket@tempSchedule:
  2207                           
  2208                           ; 2 bytes @ 0x3
  2209     0066                     	ds	5
  2210     006B                     processLIN@cmd:
  2211                           
  2212                           ; 1 bytes @ 0x8
  2213     006B                     	ds	1
  2214                           
  2215                           	psect	maintext
  2216     058E                     __pmaintext:	
  2217 ;;
  2218 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2219 ;;
  2220 ;; *************** function _main *****************
  2221 ;; Defined at:
  2222 ;;		line 58 in file "main.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : B1F/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2236 ;;      Params:         0       0       0       0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0
  2239 ;;      Totals:         0       0       0       0       0       0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels required when called: 9
  2242 ;; This function calls:
  2243 ;;		_LIN_handler
  2244 ;;		_SYSTEM_Initialize
  2245 ;; This function is called by:
  2246 ;;		Startup code after reset
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250     058E                     _main:	
  2251                           ;psect for function _main
  2252                           
  2253     058E                     l2372:	
  2254                           ;incstack = 0
  2255                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2256                           
  2257                           
  2258                           ;main.c: 61:   SYSTEM_Initialize();
  2259     058E  3185  2525  3185   	fcall	_SYSTEM_Initialize
  2260     0591                     l2374:
  2261                           
  2262                           ;main.c: 67:   (INTCONbits.GIE = 1);
  2263     0591  178B               	bsf	11,7	;volatile
  2264     0592                     l2376:
  2265                           
  2266                           ;main.c: 70:   (INTCONbits.PEIE = 1);
  2267     0592  170B               	bsf	11,6	;volatile
  2268     0593                     l2378:
  2269                           
  2270                           ;main.c: 79:   {;main.c: 81:     LIN_handler();
  2271     0593  3180  2052  3185   	fcall	_LIN_handler
  2272     0596  2D93               	goto	l2378
  2273     0597  3180  2838         	ljmp	start
  2274     0599                     __end_of_main:
  2275                           
  2276                           	psect	text1
  2277     0525                     __ptext1:	
  2278 ;; *************** function _SYSTEM_Initialize *****************
  2279 ;; Defined at:
  2280 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2294 ;;      Params:         0       0       0       0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0
  2297 ;;      Totals:         0       0       0       0       0       0       0       0
  2298 ;;Total ram usage:        0 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 8
  2301 ;; This function calls:
  2302 ;;		_EUSART_Initialize
  2303 ;;		_LIN_Slave_Initialize
  2304 ;;		_OSCILLATOR_Initialize
  2305 ;;		_PIN_MANAGER_Initialize
  2306 ;;		_TMR0_Initialize
  2307 ;;		_WDT_Initialize
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313     0525                     _SYSTEM_Initialize:	
  2314                           ;psect for function _SYSTEM_Initialize
  2315                           
  2316     0525                     l2164:	
  2317                           ;incstack = 0
  2318                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2319                           
  2320                           
  2321                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2322     0525  3184  249B  3185   	fcall	_PIN_MANAGER_Initialize
  2323                           
  2324                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2325     0528  3185  2582  3185   	fcall	_OSCILLATOR_Initialize
  2326                           
  2327                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2328     052B  3185  25F2  3185   	fcall	_WDT_Initialize
  2329     052E                     l2166:
  2330                           
  2331                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2332     052E  3185  2511  3185   	fcall	_TMR0_Initialize
  2333     0531                     l2168:
  2334                           
  2335                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2336     0531  3183  231C  3185   	fcall	_EUSART_Initialize
  2337     0534                     l2170:
  2338                           
  2339                           ;mcc_generated_files/mcc.c: 58:     LIN_Slave_Initialize();
  2340     0534  3185  255B  3185   	fcall	_LIN_Slave_Initialize
  2341     0537                     l503:
  2342     0537  0008               	return
  2343     0538                     __end_of_SYSTEM_Initialize:
  2344                           
  2345                           	psect	text2
  2346     05F2                     __ptext2:	
  2347 ;; *************** function _WDT_Initialize *****************
  2348 ;; Defined at:
  2349 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		None
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2363 ;;      Params:         0       0       0       0       0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0
  2366 ;;      Totals:         0       0       0       0       0       0       0       0
  2367 ;;Total ram usage:        0 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 4
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_SYSTEM_Initialize
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377     05F2                     _WDT_Initialize:	
  2378                           ;psect for function _WDT_Initialize
  2379                           
  2380     05F2                     l1494:	
  2381                           ;incstack = 0
  2382                           ; Regs used in _WDT_Initialize: []
  2383                           
  2384                           
  2385                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  2386     05F2  3016               	movlw	22
  2387     05F3  0021               	movlb	1	; select bank1
  2388     05F4  0097               	movwf	23	;volatile
  2389     05F5                     l512:
  2390     05F5  0008               	return
  2391     05F6                     __end_of_WDT_Initialize:
  2392                           
  2393                           	psect	text3
  2394     0511                     __ptext3:	
  2395 ;; *************** function _TMR0_Initialize *****************
  2396 ;; Defined at:
  2397 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, pclath, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2411 ;;      Params:         0       0       0       0       0       0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0
  2414 ;;      Totals:         0       0       0       0       0       0       0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 5
  2418 ;; This function calls:
  2419 ;;		_TMR0_SetInterruptHandler
  2420 ;; This function is called by:
  2421 ;;		_SYSTEM_Initialize
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425     0511                     _TMR0_Initialize:	
  2426                           ;psect for function _TMR0_Initialize
  2427                           
  2428     0511                     l2024:	
  2429                           ;incstack = 0
  2430                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2431                           
  2432                           
  2433                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  2434     0511  0021               	movlb	1	; select bank1
  2435     0512  0815               	movf	21,w	;volatile
  2436     0513  39C0               	andlw	192
  2437     0514  3814               	iorlw	20
  2438     0515  0095               	movwf	21	;volatile
  2439     0516                     l2026:
  2440                           
  2441                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  2442     0516  3006               	movlw	6
  2443     0517  0020               	movlb	0	; select bank0
  2444     0518  0095               	movwf	21	;volatile
  2445     0519                     l2028:
  2446                           
  2447                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  2448     0519  3006               	movlw	6
  2449     051A  00C8               	movwf	_timer0ReloadVal	;volatile
  2450     051B                     l2030:
  2451                           
  2452                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2453     051B  110B               	bcf	11,2	;volatile
  2454     051C                     l2032:
  2455                           
  2456                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2457     051C  168B               	bsf	11,5	;volatile
  2458     051D                     l2034:
  2459                           
  2460                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2461     051D  3002               	movlw	low _TMR0_DefaultInterruptHandler
  2462     051E  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2463     051F  3006               	movlw	high _TMR0_DefaultInterruptHandler
  2464     0520  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2465     0521  3185  25B0  3185   	fcall	_TMR0_SetInterruptHandler
  2466     0524                     l426:
  2467     0524  0008               	return
  2468     0525                     __end_of_TMR0_Initialize:
  2469                           
  2470                           	psect	text4
  2471     049B                     __ptext4:	
  2472 ;; *************** function _PIN_MANAGER_Initialize *****************
  2473 ;; Defined at:
  2474 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		status,2
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2488 ;;      Params:         0       0       0       0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 4
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_SYSTEM_Initialize
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502     049B                     _PIN_MANAGER_Initialize:	
  2503                           ;psect for function _PIN_MANAGER_Initialize
  2504                           
  2505     049B                     l1428:	
  2506                           ;incstack = 0
  2507                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2508                           
  2509                           
  2510                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2511     049B  0022               	movlb	2	; select bank2
  2512     049C  0190               	clrf	16	;volatile
  2513                           
  2514                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2515     049D  018C               	clrf	12	;volatile
  2516                           
  2517                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2518     049E  018D               	clrf	13	;volatile
  2519                           
  2520                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  2521     049F  018E               	clrf	14	;volatile
  2522     04A0                     l1430:
  2523                           
  2524                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2525     04A0  3008               	movlw	8
  2526     04A1  0021               	movlb	1	; select bank1
  2527     04A2  0090               	movwf	16	;volatile
  2528     04A3                     l1432:
  2529                           
  2530                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2531     04A3  30FF               	movlw	255
  2532     04A4  008C               	movwf	12	;volatile
  2533     04A5                     l1434:
  2534                           
  2535                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
  2536     04A5  30C0               	movlw	192
  2537     04A6  008D               	movwf	13	;volatile
  2538     04A7                     l1436:
  2539                           
  2540                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xBF;
  2541     04A7  30BF               	movlw	191
  2542     04A8  008E               	movwf	14	;volatile
  2543                           
  2544                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  2545     04A9  0023               	movlb	3	; select bank3
  2546     04AA  018D               	clrf	13	;volatile
  2547     04AB                     l1438:
  2548                           
  2549                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  2550     04AB  303F               	movlw	63
  2551     04AC  008C               	movwf	12	;volatile
  2552                           
  2553                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2554     04AD  0024               	movlb	4	; select bank4
  2555     04AE  0190               	clrf	16	;volatile
  2556                           
  2557                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2558     04AF  018D               	clrf	13	;volatile
  2559     04B0                     l1440:
  2560                           
  2561                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2562     04B0  0021               	movlb	1	; select bank1
  2563     04B1  1795               	bsf	21,7	;volatile
  2564                           
  2565                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2566     04B2  0022               	movlb	2	; select bank2
  2567     04B3  019D               	clrf	29	;volatile
  2568     04B4                     l262:
  2569     04B4  0008               	return
  2570     04B5                     __end_of_PIN_MANAGER_Initialize:
  2571                           
  2572                           	psect	text5
  2573     0582                     __ptext5:	
  2574 ;; *************** function _OSCILLATOR_Initialize *****************
  2575 ;; Defined at:
  2576 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		status,2
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2590 ;;      Params:         0       0       0       0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0
  2593 ;;      Totals:         0       0       0       0       0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 4
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_SYSTEM_Initialize
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604     0582                     _OSCILLATOR_Initialize:	
  2605                           ;psect for function _OSCILLATOR_Initialize
  2606                           
  2607     0582                     l1490:	
  2608                           ;incstack = 0
  2609                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2610                           
  2611                           
  2612                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2613     0582  3070               	movlw	112
  2614     0583  0021               	movlb	1	; select bank1
  2615     0584  0099               	movwf	25	;volatile
  2616     0585                     l1492:
  2617                           
  2618                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2619     0585  0198               	clrf	24	;volatile
  2620                           
  2621                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2622     0586  0022               	movlb	2	; select bank2
  2623     0587  0196               	clrf	22	;volatile
  2624     0588                     l506:	
  2625                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2626                           
  2627                           
  2628                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2629     0588  0021               	movlb	1	; select bank1
  2630     0589  1F1A               	btfss	26,6	;volatile
  2631     058A  2D8C               	goto	u571
  2632     058B  2D8D               	goto	u570
  2633     058C                     u571:
  2634     058C  2D88               	goto	l506
  2635     058D                     u570:
  2636     058D                     l509:
  2637     058D  0008               	return
  2638     058E                     __end_of_OSCILLATOR_Initialize:
  2639                           
  2640                           	psect	text6
  2641     055B                     __ptext6:	
  2642 ;; *************** function _LIN_Slave_Initialize *****************
  2643 ;; Defined at:
  2644 ;;		line 60 in file "mcc_generated_files/LINDrivers/lin_app.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2658 ;;      Params:         0       0       0       0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 7
  2665 ;; This function calls:
  2666 ;;		_LIN_init
  2667 ;; This function is called by:
  2668 ;;		_SYSTEM_Initialize
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672     055B                     _LIN_Slave_Initialize:	
  2673                           ;psect for function _LIN_Slave_Initialize
  2674                           
  2675     055B                     l1910:	
  2676                           ;incstack = 0
  2677                           ; Regs used in _LIN_Slave_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2678                           
  2679                           
  2680                           ;mcc_generated_files/LINDrivers/lin_app.c: 62:     LIN_init((sizeof(scheduleTable)/sizeo
      +                          f(lin_rx_cmd_t)), scheduleTable, processLIN);
  2681     055B  30D4               	movlw	low (_scheduleTable| (0+32768))
  2682     055C  00F2               	movwf	LIN_init@command
  2683     055D  3085               	movlw	high (_scheduleTable| (0+32768))
  2684     055E  00F3               	movwf	LIN_init@command+1
  2685     055F  30D2               	movlw	low _processLIN
  2686     0560  00F4               	movwf	LIN_init@processData
  2687     0561  3002               	movlw	high _processLIN
  2688     0562  00F5               	movwf	LIN_init@processData+1
  2689     0563  3001               	movlw	1
  2690     0564  3184  24E6  3185   	fcall	_LIN_init
  2691     0567                     l15:
  2692     0567  0008               	return
  2693     0568                     __end_of_LIN_Slave_Initialize:
  2694                           
  2695                           	psect	text7
  2696     04E6                     __ptext7:	
  2697 ;; *************** function _LIN_init *****************
  2698 ;; Defined at:
  2699 ;;		line 57 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  tableLength     1    wreg     unsigned char 
  2702 ;;  command         2    2[COMMON] const PTR const struct .
  2703 ;;		 -> scheduleTable(5), 
  2704 ;;  processData     2    4[COMMON] PTR FTN()void 
  2705 ;;		 -> processLIN(1), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  tableLength     1    6[COMMON] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, pclath, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2717 ;;      Params:         4       0       0       0       0       0       0       0
  2718 ;;      Locals:         1       0       0       0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0       0
  2720 ;;      Totals:         5       0       0       0       0       0       0       0
  2721 ;;Total ram usage:        5 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 6
  2724 ;; This function calls:
  2725 ;;		_LIN_enableRx
  2726 ;;		_LIN_setTimerHandler
  2727 ;;		_LIN_stopTimer
  2728 ;; This function is called by:
  2729 ;;		_LIN_Slave_Initialize
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733     04E6                     _LIN_init:	
  2734                           ;psect for function _LIN_init
  2735                           
  2736                           
  2737                           ;incstack = 0
  2738                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2739                           ;LIN_init@tableLength stored from wreg
  2740     04E6  00F6               	movwf	LIN_init@tableLength
  2741     04E7                     l1772:
  2742                           
  2743                           ;mcc_generated_files/LINDrivers/lin_slave.c: 58:     LIN_rxCommand = command;
  2744     04E7  0873               	movf	LIN_init@command+1,w
  2745     04E8  0020               	movlb	0	; select bank0
  2746     04E9  00C5               	movwf	_LIN_rxCommand+1
  2747     04EA  0872               	movf	LIN_init@command,w
  2748     04EB  00C4               	movwf	_LIN_rxCommand
  2749                           
  2750                           ;mcc_generated_files/LINDrivers/lin_slave.c: 59:     LIN_rxCommandLength = tableLength;
  2751     04EC  0876               	movf	LIN_init@tableLength,w
  2752     04ED  00D4               	movwf	_LIN_rxCommandLength
  2753                           
  2754                           ;mcc_generated_files/LINDrivers/lin_slave.c: 60:     LIN_processData = processData;
  2755     04EE  0875               	movf	LIN_init@processData+1,w
  2756     04EF  00C7               	movwf	_LIN_processData+1
  2757     04F0  0874               	movf	LIN_init@processData,w
  2758     04F1  00C6               	movwf	_LIN_processData
  2759     04F2                     l1774:
  2760                           
  2761                           ;mcc_generated_files/LINDrivers/lin_slave.c: 61:     LIN_stopTimer();
  2762     04F2  3185  25D9  3184   	fcall	_LIN_stopTimer
  2763     04F5                     l1776:
  2764                           
  2765                           ;mcc_generated_files/LINDrivers/lin_slave.c: 62:     LIN_enableRx();
  2766     04F5  3185  25E3  3184   	fcall	_LIN_enableRx
  2767     04F8                     l1778:
  2768                           
  2769                           ;mcc_generated_files/LINDrivers/lin_slave.c: 63:     LIN_setTimerHandler();
  2770     04F8  3185  25A2  3184   	fcall	_LIN_setTimerHandler
  2771     04FB                     l123:
  2772     04FB  0008               	return
  2773     04FC                     __end_of_LIN_init:
  2774                           
  2775                           	psect	text8
  2776     05A2                     __ptext8:	
  2777 ;; *************** function _LIN_setTimerHandler *****************
  2778 ;; Defined at:
  2779 ;;		line 308 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0, pclath, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2793 ;;      Params:         0       0       0       0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0
  2796 ;;      Totals:         0       0       0       0       0       0       0       0
  2797 ;;Total ram usage:        0 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 5
  2800 ;; This function calls:
  2801 ;;		_TMR0_SetInterruptHandler
  2802 ;; This function is called by:
  2803 ;;		_LIN_init
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807     05A2                     _LIN_setTimerHandler:	
  2808                           ;psect for function _LIN_setTimerHandler
  2809                           
  2810     05A2                     l1716:	
  2811                           ;incstack = 0
  2812                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  2813                           
  2814                           
  2815                           ;mcc_generated_files/LINDrivers/lin_slave.c: 309:     TMR0_SetInterruptHandler(LIN_timer
      +                          Handler);
  2816     05A2  3075               	movlw	low _LIN_timerHandler
  2817     05A3  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2818     05A4  3005               	movlw	high _LIN_timerHandler
  2819     05A5  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2820     05A6  3185  25B0  3185   	fcall	_TMR0_SetInterruptHandler
  2821     05A9                     l218:
  2822     05A9  0008               	return
  2823     05AA                     __end_of_LIN_setTimerHandler:
  2824                           
  2825                           	psect	text9
  2826     05B0                     __ptext9:	
  2827 ;; *************** function _TMR0_SetInterruptHandler *****************
  2828 ;; Defined at:
  2829 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2832 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2844 ;;      Params:         2       0       0       0       0       0       0       0
  2845 ;;      Locals:         0       0       0       0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0       0
  2847 ;;      Totals:         2       0       0       0       0       0       0       0
  2848 ;;Total ram usage:        2 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; Hardware stack levels required when called: 4
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_LIN_setTimerHandler
  2855 ;;		_TMR0_Initialize
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859     05B0                     _TMR0_SetInterruptHandler:	
  2860                           ;psect for function _TMR0_SetInterruptHandler
  2861                           
  2862     05B0                     l1708:	
  2863                           ;incstack = 0
  2864                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2865                           
  2866                           
  2867                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2868     05B0  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2869     05B1  0020               	movlb	0	; select bank0
  2870     05B2  00B9               	movwf	_TMR0_InterruptHandler+1
  2871     05B3  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2872     05B4  00B8               	movwf	_TMR0_InterruptHandler
  2873     05B5                     l442:
  2874     05B5  0008               	return
  2875     05B6                     __end_of_TMR0_SetInterruptHandler:
  2876                           
  2877                           	psect	text10
  2878     031C                     __ptext10:	
  2879 ;; *************** function _EUSART_Initialize *****************
  2880 ;; Defined at:
  2881 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2895 ;;      Params:         0       0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 5
  2902 ;; This function calls:
  2903 ;;		_EUSART_SetErrorHandler
  2904 ;;		_EUSART_SetFramingErrorHandler
  2905 ;;		_EUSART_SetOverrunErrorHandler
  2906 ;;		_EUSART_SetRxInterruptHandler
  2907 ;;		_EUSART_SetTxInterruptHandler
  2908 ;; This function is called by:
  2909 ;;		_SYSTEM_Initialize
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913     031C                     _EUSART_Initialize:	
  2914                           ;psect for function _EUSART_Initialize
  2915                           
  2916     031C                     l1988:	
  2917                           ;incstack = 0
  2918                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2919                           
  2920                           
  2921                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  2922     031C  0021               	movlb	1	; select bank1
  2923     031D  1291               	bcf	17,5	;volatile
  2924     031E                     l1990:
  2925                           
  2926                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2927     031E  305A               	movlw	low _EUSART_Receive_ISR
  2928     031F  00F0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  2929     0320  3003               	movlw	high _EUSART_Receive_ISR
  2930     0321  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  2931     0322  3185  25BC  3183   	fcall	_EUSART_SetRxInterruptHandler
  2932     0325                     l1992:
  2933                           
  2934                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  2935     0325  0021               	movlb	1	; select bank1
  2936     0326  1211               	bcf	17,4	;volatile
  2937                           
  2938                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  2939     0327  307D               	movlw	low _EUSART_Transmit_ISR
  2940     0328  00F0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  2941     0329  3004               	movlw	high _EUSART_Transmit_ISR
  2942     032A  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  2943     032B  3185  25B6  3183   	fcall	_EUSART_SetTxInterruptHandler
  2944     032E                     l1994:
  2945                           
  2946                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x18;
  2947     032E  3018               	movlw	24
  2948     032F  0023               	movlb	3	; select bank3
  2949     0330  009F               	movwf	31	;volatile
  2950     0331                     l1996:
  2951                           
  2952                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  2953     0331  3090               	movlw	144
  2954     0332  009D               	movwf	29	;volatile
  2955     0333                     l1998:
  2956                           
  2957                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  2958     0333  3024               	movlw	36
  2959     0334  009E               	movwf	30	;volatile
  2960     0335                     l2000:
  2961                           
  2962                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xFF;
  2963     0335  30FF               	movlw	255
  2964     0336  009B               	movwf	27	;volatile
  2965     0337                     l2002:
  2966                           
  2967                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x02;
  2968     0337  3002               	movlw	2
  2969     0338  009C               	movwf	28	;volatile
  2970                           
  2971                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  2972     0339  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
  2973     033A  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2974     033B  3006               	movlw	high _EUSART_DefaultFramingErrorHandler
  2975     033C  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2976     033D  3185  25C8  3183   	fcall	_EUSART_SetFramingErrorHandler
  2977                           
  2978                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  2979     0340  30F6               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2980     0341  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2981     0342  3005               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2982     0343  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2983     0344  3185  25C2  3183   	fcall	_EUSART_SetOverrunErrorHandler
  2984                           
  2985                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  2986     0347  30FA               	movlw	low _EUSART_DefaultErrorHandler
  2987     0348  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  2988     0349  3005               	movlw	high _EUSART_DefaultErrorHandler
  2989     034A  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2990     034B  3185  25CE  3183   	fcall	_EUSART_SetErrorHandler
  2991     034E                     l2004:
  2992                           
  2993                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  2994     034E  0020               	movlb	0	; select bank0
  2995     034F  01C9               	clrf	_eusartRxLastError	;volatile
  2996     0350                     l2006:
  2997                           
  2998                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  2999     0350  01CF               	clrf	_eusartTxHead	;volatile
  3000     0351                     l2008:
  3001                           
  3002                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3003     0351  01CE               	clrf	_eusartTxTail	;volatile
  3004     0352                     l2010:
  3005                           
  3006                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3007     0352  3008               	movlw	8
  3008     0353  00CD               	movwf	_eusartTxBufferRemaining	;volatile
  3009     0354                     l2012:
  3010                           
  3011                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3012     0354  01CC               	clrf	_eusartRxHead	;volatile
  3013     0355                     l2014:
  3014                           
  3015                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3016     0355  01CB               	clrf	_eusartRxTail	;volatile
  3017     0356                     l2016:
  3018                           
  3019                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3020     0356  01CA               	clrf	_eusartRxCount	;volatile
  3021     0357                     l2018:
  3022                           
  3023                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  3024     0357  0021               	movlb	1	; select bank1
  3025     0358  1691               	bsf	17,5	;volatile
  3026     0359                     l340:
  3027     0359  0008               	return
  3028     035A                     __end_of_EUSART_Initialize:
  3029                           
  3030                           	psect	text11
  3031     05B6                     __ptext11:	
  3032 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3033 ;; Defined at:
  3034 ;;		line 276 in file "mcc_generated_files/eusart.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3037 ;;		 -> EUSART_Transmit_ISR(1), 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3049 ;;      Params:         2       0       0       0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0
  3052 ;;      Totals:         2       0       0       0       0       0       0       0
  3053 ;;Total ram usage:        2 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 4
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_EUSART_Initialize
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063     05B6                     _EUSART_SetTxInterruptHandler:	
  3064                           ;psect for function _EUSART_SetTxInterruptHandler
  3065                           
  3066     05B6                     l1888:	
  3067                           ;incstack = 0
  3068                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3069                           
  3070                           
  3071                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3072     05B6  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3073     05B7  0020               	movlb	0	; select bank0
  3074     05B8  00C3               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3075     05B9  0870               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3076     05BA  00C2               	movwf	_EUSART_TxDefaultInterruptHandler
  3077     05BB                     l406:
  3078     05BB  0008               	return
  3079     05BC                     __end_of_EUSART_SetTxInterruptHandler:
  3080                           
  3081                           	psect	text12
  3082     05BC                     __ptext12:	
  3083 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3084 ;; Defined at:
  3085 ;;		line 280 in file "mcc_generated_files/eusart.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3088 ;;		 -> EUSART_Receive_ISR(1), 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3100 ;;      Params:         2       0       0       0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0
  3103 ;;      Totals:         2       0       0       0       0       0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 4
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_EUSART_Initialize
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114     05BC                     _EUSART_SetRxInterruptHandler:	
  3115                           ;psect for function _EUSART_SetRxInterruptHandler
  3116                           
  3117     05BC                     l1886:	
  3118                           ;incstack = 0
  3119                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3120                           
  3121                           
  3122                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3123     05BC  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3124     05BD  0020               	movlb	0	; select bank0
  3125     05BE  00C1               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3126     05BF  0870               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3127     05C0  00C0               	movwf	_EUSART_RxDefaultInterruptHandler
  3128     05C1                     l409:
  3129     05C1  0008               	return
  3130     05C2                     __end_of_EUSART_SetRxInterruptHandler:
  3131                           
  3132                           	psect	text13
  3133     05C2                     __ptext13:	
  3134 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3135 ;; Defined at:
  3136 ;;		line 268 in file "mcc_generated_files/eusart.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3139 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3151 ;;      Params:         2       0       0       0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0
  3154 ;;      Totals:         2       0       0       0       0       0       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 4
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_EUSART_Initialize
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165     05C2                     _EUSART_SetOverrunErrorHandler:	
  3166                           ;psect for function _EUSART_SetOverrunErrorHandler
  3167                           
  3168     05C2                     l1892:	
  3169                           ;incstack = 0
  3170                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3171                           
  3172                           
  3173                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  3174     05C2  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3175     05C3  0020               	movlb	0	; select bank0
  3176     05C4  00BD               	movwf	_EUSART_OverrunErrorHandler+1
  3177     05C5  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3178     05C6  00BC               	movwf	_EUSART_OverrunErrorHandler
  3179     05C7                     l400:
  3180     05C7  0008               	return
  3181     05C8                     __end_of_EUSART_SetOverrunErrorHandler:
  3182                           
  3183                           	psect	text14
  3184     05C8                     __ptext14:	
  3185 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3186 ;; Defined at:
  3187 ;;		line 264 in file "mcc_generated_files/eusart.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3190 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3202 ;;      Params:         2       0       0       0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0       0
  3205 ;;      Totals:         2       0       0       0       0       0       0       0
  3206 ;;Total ram usage:        2 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 4
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_EUSART_Initialize
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216     05C8                     _EUSART_SetFramingErrorHandler:	
  3217                           ;psect for function _EUSART_SetFramingErrorHandler
  3218                           
  3219     05C8                     l1890:	
  3220                           ;incstack = 0
  3221                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3222                           
  3223                           
  3224                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  3225     05C8  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3226     05C9  0020               	movlb	0	; select bank0
  3227     05CA  00BF               	movwf	_EUSART_FramingErrorHandler+1
  3228     05CB  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3229     05CC  00BE               	movwf	_EUSART_FramingErrorHandler
  3230     05CD                     l397:
  3231     05CD  0008               	return
  3232     05CE                     __end_of_EUSART_SetFramingErrorHandler:
  3233                           
  3234                           	psect	text15
  3235     05CE                     __ptext15:	
  3236 ;; *************** function _EUSART_SetErrorHandler *****************
  3237 ;; Defined at:
  3238 ;;		line 272 in file "mcc_generated_files/eusart.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3241 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3253 ;;      Params:         2       0       0       0       0       0       0       0
  3254 ;;      Locals:         0       0       0       0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0
  3256 ;;      Totals:         2       0       0       0       0       0       0       0
  3257 ;;Total ram usage:        2 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 4
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_EUSART_Initialize
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267     05CE                     _EUSART_SetErrorHandler:	
  3268                           ;psect for function _EUSART_SetErrorHandler
  3269                           
  3270     05CE                     l1894:	
  3271                           ;incstack = 0
  3272                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3273                           
  3274                           
  3275                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  3276     05CE  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3277     05CF  0020               	movlb	0	; select bank0
  3278     05D0  00BB               	movwf	_EUSART_ErrorHandler+1
  3279     05D1  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3280     05D2  00BA               	movwf	_EUSART_ErrorHandler
  3281     05D3                     l403:
  3282     05D3  0008               	return
  3283     05D4                     __end_of_EUSART_SetErrorHandler:
  3284                           
  3285                           	psect	text16
  3286     0052                     __ptext16:	
  3287 ;; *************** function _LIN_handler *****************
  3288 ;; Defined at:
  3289 ;;		line 91 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      enum E204
  3296 ;; Registers used:
  3297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3303 ;;      Params:         0       0       0       0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0
  3305 ;;      Temps:          0       0       5       0       0       0       0       0
  3306 ;;      Totals:         0       0       5       0       0       0       0       0
  3307 ;;Total ram usage:        5 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 7
  3310 ;; This function calls:
  3311 ;;		NULL
  3312 ;;		_EUSART_Read
  3313 ;;		_EUSART_is_rx_ready
  3314 ;;		_LIN_breakCheck
  3315 ;;		_LIN_checkPID
  3316 ;;		_LIN_disableRx
  3317 ;;		_LIN_enableRx
  3318 ;;		_LIN_getChecksum
  3319 ;;		_LIN_getFromTable
  3320 ;;		_LIN_queuePacket
  3321 ;;		_LIN_startTimer
  3322 ;;		_LIN_stopTimer
  3323 ;;		_memset
  3324 ;;		_processLIN
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330     0052                     _LIN_handler:	
  3331                           ;psect for function _LIN_handler
  3332                           
  3333     0052                     l2282:	
  3334                           ;incstack = 0
  3335                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3336                           
  3337                           
  3338                           ;mcc_generated_files/LINDrivers/lin_slave.c: 92:     static lin_rx_state_t LIN_rxState =
      +                           LIN_RX_IDLE;;mcc_generated_files/LINDrivers/lin_slave.c: 93:     static uint8_t rxDataI
      +                          ndex = 0;;mcc_generated_files/LINDrivers/lin_slave.c: 95:     if(LIN_rxInProgress == 1){
  3339     0052  0020               	movlb	0	; select bank0
  3340     0053  0355               	decf	_LIN_rxInProgress,w
  3341     0054  1D03               	btfss	3,2
  3342     0055  2857               	goto	u1721
  3343     0056  2858               	goto	u1720
  3344     0057                     u1721:
  3345     0057  2962               	goto	l2364
  3346     0058                     u1720:
  3347     0058                     l2284:
  3348                           
  3349                           ;mcc_generated_files/LINDrivers/lin_slave.c: 96:         if(LIN_timerRunning == 0){
  3350     0058  0853               	movf	_LIN_timerRunning,w
  3351     0059  1D03               	btfss	3,2
  3352     005A  285C               	goto	u1731
  3353     005B  285D               	goto	u1730
  3354     005C                     u1731:
  3355     005C  2962               	goto	l2364
  3356     005D                     u1730:
  3357     005D                     l2286:
  3358                           
  3359                           ;mcc_generated_files/LINDrivers/lin_slave.c: 98:             LIN_rxState = LIN_RX_ERROR;
  3360     005D  3008               	movlw	8
  3361     005E  00D1               	movwf	LIN_handler@LIN_rxState
  3362     005F  2962               	goto	l2364
  3363     0060                     l2288:
  3364                           
  3365                           ;mcc_generated_files/LINDrivers/lin_slave.c: 104:             if(EUSART_is_rx_ready() > 
      +                          0){
  3366     0060  3185  2599  3180   	fcall	_EUSART_is_rx_ready
  3367     0063  3A00               	xorlw	0
  3368     0064  1903               	skipnz
  3369     0065  2867               	goto	u1741
  3370     0066  2868               	goto	u1740
  3371     0067                     u1741:
  3372     0067  298B               	goto	l169
  3373     0068                     u1740:
  3374     0068                     l2290:
  3375                           
  3376                           ;mcc_generated_files/LINDrivers/lin_slave.c: 106:                 LIN_startTimer(15);
  3377     0068  300F               	movlw	15
  3378     0069  3185  2568  3180   	fcall	_LIN_startTimer
  3379     006C                     l2292:
  3380                           
  3381                           ;mcc_generated_files/LINDrivers/lin_slave.c: 107:                 LIN_rxInProgress = 1;
  3382     006C  3001               	movlw	1
  3383     006D  0020               	movlb	0	; select bank0
  3384     006E  00D5               	movwf	_LIN_rxInProgress
  3385     006F                     l2294:
  3386                           
  3387                           ;mcc_generated_files/LINDrivers/lin_slave.c: 108:                 LIN_rxState = LIN_RX_B
      +                          REAK;
  3388     006F  3001               	movlw	1
  3389     0070  00D1               	movwf	LIN_handler@LIN_rxState
  3390     0071  298B               	goto	l169
  3391     0072                     l2296:
  3392                           
  3393                           ;mcc_generated_files/LINDrivers/lin_slave.c: 112:             if(EUSART_is_rx_ready() > 
      +                          0){
  3394     0072  3185  2599  3180   	fcall	_EUSART_is_rx_ready
  3395     0075  3A00               	xorlw	0
  3396     0076  1903               	skipnz
  3397     0077  2879               	goto	u1751
  3398     0078  287A               	goto	u1750
  3399     0079                     u1751:
  3400     0079  298B               	goto	l169
  3401     007A                     u1750:
  3402     007A                     l2298:
  3403                           
  3404                           ;mcc_generated_files/LINDrivers/lin_slave.c: 113:                 if(LIN_breakCheck() ==
      +                           1){
  3405     007A  3185  2538  3180   	fcall	_LIN_breakCheck
  3406     007D  3A01               	xorlw	1
  3407     007E  1D03               	skipz
  3408     007F  2881               	goto	u1761
  3409     0080  2882               	goto	u1760
  3410     0081                     u1761:
  3411     0081  2886               	goto	l145
  3412     0082                     u1760:
  3413     0082                     l2300:
  3414                           
  3415                           ;mcc_generated_files/LINDrivers/lin_slave.c: 114:                     LIN_rxState = LIN_
      +                          RX_SYNC;
  3416     0082  3002               	movlw	2
  3417     0083  0020               	movlb	0	; select bank0
  3418     0084  00D1               	movwf	LIN_handler@LIN_rxState
  3419                           
  3420                           ;mcc_generated_files/LINDrivers/lin_slave.c: 115:                 } else {
  3421     0085  298B               	goto	l169
  3422     0086                     l145:
  3423                           
  3424                           ;mcc_generated_files/LINDrivers/lin_slave.c: 116:                     LIN_rxState = LIN_
      +                          RX_ERROR;
  3425     0086  3008               	movlw	8
  3426     0087  0020               	movlb	0	; select bank0
  3427     0088  00D1               	movwf	LIN_handler@LIN_rxState
  3428     0089  298B               	goto	l169
  3429     008A                     l2302:
  3430                           
  3431                           ;mcc_generated_files/LINDrivers/lin_slave.c: 121:             if(EUSART_is_rx_ready() > 
      +                          0){
  3432     008A  3185  2599  3180   	fcall	_EUSART_is_rx_ready
  3433     008D  3A00               	xorlw	0
  3434     008E  1903               	skipnz
  3435     008F  2891               	goto	u1771
  3436     0090  2892               	goto	u1770
  3437     0091                     u1771:
  3438     0091  298B               	goto	l169
  3439     0092                     u1770:
  3440     0092                     l2304:
  3441                           
  3442                           ;mcc_generated_files/LINDrivers/lin_slave.c: 122:                 if(EUSART_Read() == 0x
      +                          55){
  3443     0092  3184  2416  3180   	fcall	_EUSART_Read
  3444     0095  3A55               	xorlw	85
  3445     0096  1D03               	skipz
  3446     0097  2899               	goto	u1781
  3447     0098  289A               	goto	u1780
  3448     0099                     u1781:
  3449     0099  2886               	goto	l145
  3450     009A                     u1780:
  3451     009A                     l2306:
  3452                           
  3453                           ;mcc_generated_files/LINDrivers/lin_slave.c: 123:                     LIN_rxState = LIN_
      +                          RX_PID;
  3454     009A  3003               	movlw	3
  3455     009B  0020               	movlb	0	; select bank0
  3456     009C  00D1               	movwf	LIN_handler@LIN_rxState
  3457                           
  3458                           ;mcc_generated_files/LINDrivers/lin_slave.c: 124:                 } else {
  3459     009D  298B               	goto	l169
  3460     009E                     l2308:
  3461                           
  3462                           ;mcc_generated_files/LINDrivers/lin_slave.c: 130:             if(EUSART_is_rx_ready() > 
      +                          0){
  3463     009E  3185  2599  3180   	fcall	_EUSART_is_rx_ready
  3464     00A1  3A00               	xorlw	0
  3465     00A2  1903               	skipnz
  3466     00A3  28A5               	goto	u1791
  3467     00A4  28A6               	goto	u1790
  3468     00A5                     u1791:
  3469     00A5  298B               	goto	l169
  3470     00A6                     u1790:
  3471     00A6                     l2310:
  3472                           
  3473                           ;mcc_generated_files/LINDrivers/lin_slave.c: 131:                 LIN_packet.PID = EUSAR
      +                          T_Read();
  3474     00A6  3184  2416  3180   	fcall	_EUSART_Read
  3475     00A9  0020               	movlb	0	; select bank0
  3476     00AA  00D6               	movwf	_LIN_packet
  3477     00AB                     l2312:
  3478                           
  3479                           ;mcc_generated_files/LINDrivers/lin_slave.c: 134:                 if(LIN_checkPID(LIN_pa
      +                          cket.PID) == 0){
  3480     00AB  0856               	movf	_LIN_packet,w
  3481     00AC  3184  24B5  3180   	fcall	_LIN_checkPID
  3482     00AF  3A00               	xorlw	0
  3483     00B0  1D03               	skipz
  3484     00B1  28B3               	goto	u1801
  3485     00B2  28B4               	goto	u1800
  3486     00B3                     u1801:
  3487     00B3  28B5               	goto	l2316
  3488     00B4                     u1800:
  3489     00B4  2886               	goto	l145
  3490     00B5                     l2316:
  3491                           
  3492                           ;mcc_generated_files/LINDrivers/lin_slave.c: 138:                 LIN_packet.type = LIN_
      +                          getFromTable(LIN_packet.PID, TYPE);
  3493     00B5  01F0               	clrf	LIN_getFromTable@param
  3494     00B6  0AF0               	incf	LIN_getFromTable@param,f
  3495     00B7  0020               	movlb	0	; select bank0
  3496     00B8  0856               	movf	_LIN_packet,w
  3497     00B9  3182  2274  3180   	fcall	_LIN_getFromTable
  3498     00BC  0020               	movlb	0	; select bank0
  3499     00BD  00E0               	movwf	_LIN_packet+10
  3500     00BE                     l2318:
  3501                           
  3502                           ;mcc_generated_files/LINDrivers/lin_slave.c: 139:                 if(LIN_packet.type == 
      +                          RECEIVE){
  3503     00BE  0360               	decf	_LIN_packet+10,w
  3504     00BF  1D03               	btfss	3,2
  3505     00C0  28C2               	goto	u1811
  3506     00C1  28C3               	goto	u1810
  3507     00C2                     u1811:
  3508     00C2  28CE               	goto	l2324
  3509     00C3                     u1810:
  3510     00C3                     l2320:
  3511                           
  3512                           ;mcc_generated_files/LINDrivers/lin_slave.c: 140:                     LIN_packet.length 
      +                          = LIN_getFromTable(LIN_packet.PID, LENGTH);
  3513     00C3  3002               	movlw	2
  3514     00C4  00F0               	movwf	LIN_getFromTable@param
  3515     00C5  0856               	movf	_LIN_packet,w
  3516     00C6  3182  2274  3180   	fcall	_LIN_getFromTable
  3517     00C9  0020               	movlb	0	; select bank0
  3518     00CA  00E1               	movwf	_LIN_packet+11
  3519     00CB                     l2322:
  3520                           
  3521                           ;mcc_generated_files/LINDrivers/lin_slave.c: 141:                     LIN_rxState = LIN_
      +                          RX_DATA;
  3522     00CB  3004               	movlw	4
  3523     00CC  00D1               	movwf	LIN_handler@LIN_rxState
  3524                           
  3525                           ;mcc_generated_files/LINDrivers/lin_slave.c: 142:                 }
  3526     00CD  298B               	goto	l169
  3527     00CE                     l2324:
  3528                           
  3529                           ;mcc_generated_files/LINDrivers/lin_slave.c: 144:                     LIN_disableRx();
  3530     00CE  3185  25E8  3180   	fcall	_LIN_disableRx
  3531     00D1                     l2326:
  3532                           
  3533                           ;mcc_generated_files/LINDrivers/lin_slave.c: 145:                     LIN_rxState = LIN_
      +                          RX_TX_DATA;
  3534     00D1  3006               	movlw	6
  3535     00D2  0020               	movlb	0	; select bank0
  3536     00D3  00D1               	movwf	LIN_handler@LIN_rxState
  3537     00D4  298B               	goto	l169
  3538     00D5                     l2328:
  3539                           
  3540                           ;mcc_generated_files/LINDrivers/lin_slave.c: 150:             if(EUSART_is_rx_ready() > 
      +                          0){
  3541     00D5  3185  2599  3180   	fcall	_EUSART_is_rx_ready
  3542     00D8  3A00               	xorlw	0
  3543     00D9  1903               	skipnz
  3544     00DA  28DC               	goto	u1821
  3545     00DB  28DD               	goto	u1820
  3546     00DC                     u1821:
  3547     00DC  298B               	goto	l169
  3548     00DD                     u1820:
  3549     00DD                     l2330:
  3550                           
  3551                           ;mcc_generated_files/LINDrivers/lin_slave.c: 151:                 LIN_packet.data[rxData
      +                          Index] = EUSART_Read();
  3552     00DD  3184  2416  3180   	fcall	_EUSART_Read
  3553     00E0  0021               	movlb	1	; select bank1
  3554     00E1  00A8               	movwf	??_LIN_handler^(0+128)
  3555     00E2  3057               	movlw	low (_LIN_packet+1)
  3556     00E3  00A9               	movwf	(??_LIN_handler+1)^(0+128)
  3557     00E4  3000               	movlw	high (_LIN_packet+1)
  3558     00E5  00AA               	movwf	((??_LIN_handler+1)^(0+128)+1)
  3559     00E6  0020               	movlb	0	; select bank0
  3560     00E7  0850               	movf	LIN_handler@rxDataIndex,w
  3561     00E8  0021               	movlb	1	; select bank1
  3562     00E9  0729               	addwf	(??_LIN_handler+1)^(0+128),w
  3563     00EA  00AB               	movwf	(??_LIN_handler+3)^(0+128)
  3564     00EB  3000               	movlw	0
  3565     00EC  3D2A               	addwfc	(??_LIN_handler+2)^(0+128),w
  3566     00ED  00AC               	movwf	(??_LIN_handler+4)^(0+128)
  3567     00EE  082B               	movf	(??_LIN_handler+3)^(0+128),w
  3568     00EF  0086               	movwf	6
  3569     00F0  082C               	movf	(??_LIN_handler+4)^(0+128),w
  3570     00F1  0087               	movwf	7
  3571     00F2  0828               	movf	??_LIN_handler^(0+128),w
  3572     00F3  0081               	movwf	1
  3573     00F4                     l2332:
  3574                           
  3575                           ;mcc_generated_files/LINDrivers/lin_slave.c: 152:                 if(++rxDataIndex >= LI
      +                          N_packet.length){
  3576     00F4  0020               	movlb	0	; select bank0
  3577     00F5  0861               	movf	_LIN_packet+11,w
  3578     00F6  0021               	movlb	1	; select bank1
  3579     00F7  00A8               	movwf	??_LIN_handler^(0+128)
  3580     00F8  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3581     00F9  1BA8               	btfsc	??_LIN_handler^(0+128),7
  3582     00FA  03A9               	decf	(??_LIN_handler^(0+128)+1),f
  3583     00FB  3001               	movlw	1
  3584     00FC  0020               	movlb	0	; select bank0
  3585     00FD  07D0               	addwf	LIN_handler@rxDataIndex,f
  3586     00FE  0021               	movlb	1	; select bank1
  3587     00FF  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3588     0100  3A80               	xorlw	128
  3589     0101  3C80               	sublw	128
  3590     0102  1D03               	skipz
  3591     0103  2907               	goto	u1835
  3592     0104  0828               	movf	??_LIN_handler^(0+128),w
  3593     0105  0020               	movlb	0	; select bank0
  3594     0106  0250               	subwf	LIN_handler@rxDataIndex,w
  3595     0107                     u1835:
  3596     0107  1C03               	skipc
  3597     0108  290A               	goto	u1831
  3598     0109  290B               	goto	u1830
  3599     010A                     u1831:
  3600     010A  298B               	goto	l169
  3601     010B                     u1830:
  3602     010B                     l2334:
  3603                           
  3604                           ;mcc_generated_files/LINDrivers/lin_slave.c: 154:                     rxDataIndex = 0;
  3605     010B  0020               	movlb	0	; select bank0
  3606     010C  01D0               	clrf	LIN_handler@rxDataIndex
  3607     010D                     l2336:
  3608                           
  3609                           ;mcc_generated_files/LINDrivers/lin_slave.c: 155:                     LIN_rxState = LIN_
      +                          RX_CHECKSUM;
  3610     010D  3005               	movlw	5
  3611     010E  00D1               	movwf	LIN_handler@LIN_rxState
  3612     010F  298B               	goto	l169
  3613     0110                     l2338:
  3614                           
  3615                           ;mcc_generated_files/LINDrivers/lin_slave.c: 160:             if(EUSART_is_rx_ready() > 
      +                          0){
  3616     0110  3185  2599  3180   	fcall	_EUSART_is_rx_ready
  3617     0113  3A00               	xorlw	0
  3618     0114  1903               	skipnz
  3619     0115  2917               	goto	u1841
  3620     0116  2918               	goto	u1840
  3621     0117                     u1841:
  3622     0117  298B               	goto	l169
  3623     0118                     u1840:
  3624     0118                     l2340:
  3625                           
  3626                           ;mcc_generated_files/LINDrivers/lin_slave.c: 161:                 LIN_packet.checksum = 
      +                          EUSART_Read();
  3627     0118  3184  2416  3180   	fcall	_EUSART_Read
  3628     011B  0020               	movlb	0	; select bank0
  3629     011C  00DF               	movwf	_LIN_packet+9
  3630                           
  3631                           ;mcc_generated_files/LINDrivers/lin_slave.c: 162:                 if(LIN_packet.checksum
      +                           != LIN_getChecksum(LIN_packet.length, LIN_packet.PID, LIN_packet.data)) {
  3632     011D  0856               	movf	_LIN_packet,w
  3633     011E  00F0               	movwf	LIN_getChecksum@pid
  3634     011F  3057               	movlw	low (_LIN_packet+1)
  3635     0120  00F1               	movwf	LIN_getChecksum@data
  3636     0121  3000               	movlw	high (_LIN_packet+1)
  3637     0122  00F2               	movwf	LIN_getChecksum@data+1
  3638     0123  0861               	movf	_LIN_packet+11,w
  3639     0124  3183  2394  3180   	fcall	_LIN_getChecksum
  3640     0127  0020               	movlb	0	; select bank0
  3641     0128  065F               	xorwf	_LIN_packet+9,w
  3642     0129  1903               	skipnz
  3643     012A  292C               	goto	u1851
  3644     012B  292D               	goto	u1850
  3645     012C                     u1851:
  3646     012C  292E               	goto	l161
  3647     012D                     u1850:
  3648     012D  2886               	goto	l145
  3649     012E                     l161:	
  3650                           ;mcc_generated_files/LINDrivers/lin_slave.c: 165:                 else {
  3651                           
  3652                           
  3653                           ;mcc_generated_files/LINDrivers/lin_slave.c: 166:                     LIN_rxState = LIN_
      +                          RX_RDY;
  3654     012E  3007               	movlw	7
  3655     012F  00D1               	movwf	LIN_handler@LIN_rxState
  3656     0130  298B               	goto	l169
  3657     0131                     l2344:
  3658                           
  3659                           ;mcc_generated_files/LINDrivers/lin_slave.c: 171:             LIN_queuePacket(LIN_packet
      +                          .PID);
  3660     0131  0020               	movlb	0	; select bank0
  3661     0132  0856               	movf	_LIN_packet,w
  3662     0133  3182  2212  3180   	fcall	_LIN_queuePacket
  3663     0136                     l2346:
  3664                           
  3665                           ;mcc_generated_files/LINDrivers/lin_slave.c: 172:             LIN_rxState = LIN_RX_RDY;
  3666     0136  3007               	movlw	7
  3667     0137  0020               	movlb	0	; select bank0
  3668     0138  00D1               	movwf	LIN_handler@LIN_rxState
  3669     0139                     l164:	
  3670                           ;mcc_generated_files/LINDrivers/lin_slave.c: 173:         case LIN_RX_RDY:
  3671                           
  3672                           
  3673                           ;mcc_generated_files/LINDrivers/lin_slave.c: 174:             LIN_processData();
  3674     0139  0020               	movlb	0	; select bank0
  3675     013A  0847               	movf	_LIN_processData+1,w
  3676     013B  008A               	movwf	10
  3677     013C  0846               	movf	_LIN_processData,w
  3678     013D  000A               	callw
  3679     013E  3180               	pagesel	$
  3680     013F                     l2348:
  3681                           
  3682                           ;mcc_generated_files/LINDrivers/lin_slave.c: 176:             LIN_stopTimer();
  3683     013F  3185  25D9  3180   	fcall	_LIN_stopTimer
  3684     0142                     l2350:
  3685                           
  3686                           ;mcc_generated_files/LINDrivers/lin_slave.c: 177:             rxDataIndex = 0;
  3687     0142  0020               	movlb	0	; select bank0
  3688     0143  01D0               	clrf	LIN_handler@rxDataIndex
  3689     0144                     l2352:
  3690                           
  3691                           ;mcc_generated_files/LINDrivers/lin_slave.c: 178:             LIN_rxInProgress = 0;
  3692     0144  01D5               	clrf	_LIN_rxInProgress
  3693     0145                     l2354:
  3694                           
  3695                           ;mcc_generated_files/LINDrivers/lin_slave.c: 179:             memset(LIN_packet.rawPacke
      +                          t, 0, sizeof(LIN_packet.rawPacket));
  3696     0145  3056               	movlw	low _LIN_packet
  3697     0146  00F0               	movwf	memset@dest
  3698     0147  3000               	movlw	high _LIN_packet
  3699     0148  00F1               	movwf	memset@dest+1
  3700     0149  3000               	movlw	0
  3701     014A  00F2               	movwf	memset@c
  3702     014B  00F3               	movwf	memset@c+1
  3703     014C  300D               	movlw	13
  3704     014D  00F4               	movwf	memset@n
  3705     014E  3000               	movlw	0
  3706     014F  00F5               	movwf	memset@n+1
  3707     0150  3184  24CF  3180   	fcall	_memset
  3708     0153                     l2356:
  3709                           
  3710                           ;mcc_generated_files/LINDrivers/lin_slave.c: 181:             if(TXSTAbits.TRMT){
  3711     0153  0023               	movlb	3	; select bank3
  3712     0154  1C9E               	btfss	30,1	;volatile
  3713     0155  2957               	goto	u1861
  3714     0156  2958               	goto	u1860
  3715     0157                     u1861:
  3716     0157  295E               	goto	l167
  3717     0158                     u1860:
  3718     0158                     l2358:
  3719                           
  3720                           ;mcc_generated_files/LINDrivers/lin_slave.c: 182:                 LIN_enableRx();
  3721     0158  3185  25E3  3180   	fcall	_LIN_enableRx
  3722     015B                     l2360:
  3723                           
  3724                           ;mcc_generated_files/LINDrivers/lin_slave.c: 183:                 LIN_rxState = LIN_RX_I
      +                          DLE;
  3725     015B  0020               	movlb	0	; select bank0
  3726     015C  01D1               	clrf	LIN_handler@LIN_rxState
  3727                           
  3728                           ;mcc_generated_files/LINDrivers/lin_slave.c: 184:             } else {
  3729     015D  298B               	goto	l169
  3730     015E                     l167:
  3731                           
  3732                           ;mcc_generated_files/LINDrivers/lin_slave.c: 185:                 LIN_rxState = LIN_RX_W
      +                          AIT;
  3733     015E  3009               	movlw	9
  3734     015F  0020               	movlb	0	; select bank0
  3735     0160  00D1               	movwf	LIN_handler@LIN_rxState
  3736     0161  298B               	goto	l169
  3737     0162                     l2364:
  3738     0162  0851               	movf	LIN_handler@LIN_rxState,w
  3739     0163  0021               	movlb	1	; select bank1
  3740     0164  00A8               	movwf	??_LIN_handler^(0+128)
  3741     0165  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3742                           
  3743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3744                           ; Switch size 1, requested type "simple"
  3745                           ; Number of cases is 1, Range of values is 0 to 0
  3746                           ; switch strategies available:
  3747                           ; Name         Instructions Cycles
  3748                           ; simple_byte            4     3 (average)
  3749                           ; direct_byte            8     6 (fixed)
  3750                           ; jumptable            260     6 (fixed)
  3751                           ;	Chosen strategy is simple_byte
  3752     0166  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3753     0167  3A00               	xorlw	0	; case 0
  3754     0168  1903               	skipnz
  3755     0169  296B               	goto	l2450
  3756     016A  298B               	goto	l169
  3757     016B                     l2450:
  3758                           
  3759                           ; Switch size 1, requested type "simple"
  3760                           ; Number of cases is 10, Range of values is 0 to 9
  3761                           ; switch strategies available:
  3762                           ; Name         Instructions Cycles
  3763                           ; direct_byte           26     6 (fixed)
  3764                           ; simple_byte           31    16 (average)
  3765                           ; jumptable            260     6 (fixed)
  3766                           ;	Chosen strategy is simple_byte
  3767     016B  0828               	movf	??_LIN_handler^(0+128),w
  3768     016C  3A00               	xorlw	0	; case 0
  3769     016D  1903               	skipnz
  3770     016E  2860               	goto	l2288
  3771     016F  3A01               	xorlw	1	; case 1
  3772     0170  1903               	skipnz
  3773     0171  2872               	goto	l2296
  3774     0172  3A03               	xorlw	3	; case 2
  3775     0173  1903               	skipnz
  3776     0174  288A               	goto	l2302
  3777     0175  3A01               	xorlw	1	; case 3
  3778     0176  1903               	skipnz
  3779     0177  289E               	goto	l2308
  3780     0178  3A07               	xorlw	7	; case 4
  3781     0179  1903               	skipnz
  3782     017A  28D5               	goto	l2328
  3783     017B  3A01               	xorlw	1	; case 5
  3784     017C  1903               	skipnz
  3785     017D  2910               	goto	l2338
  3786     017E  3A03               	xorlw	3	; case 6
  3787     017F  1903               	skipnz
  3788     0180  2931               	goto	l2344
  3789     0181  3A01               	xorlw	1	; case 7
  3790     0182  1903               	skipnz
  3791     0183  2939               	goto	l164
  3792     0184  3A0F               	xorlw	15	; case 8
  3793     0185  1903               	skipnz
  3794     0186  293F               	goto	l2348
  3795     0187  3A01               	xorlw	1	; case 9
  3796     0188  1903               	skipnz
  3797     0189  2953               	goto	l2356
  3798     018A  298B               	goto	l169
  3799     018B                     l169:
  3800     018B  0008               	return
  3801     018C                     __end_of_LIN_handler:
  3802                           
  3803                           	psect	text17
  3804     02D2                     __ptext17:	
  3805 ;; *************** function _processLIN *****************
  3806 ;; Defined at:
  3807 ;;		line 65 in file "mcc_generated_files/LINDrivers/lin_app.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  tempRxData      8    0[BANK0 ] unsigned char [8]
  3812 ;;  cmd             1    8[BANK0 ] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3822 ;;      Params:         0       0       0       0       0       0       0       0
  3823 ;;      Locals:         0       9       0       0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0
  3825 ;;      Totals:         0       9       0       0       0       0       0       0
  3826 ;;Total ram usage:        9 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 6
  3829 ;; This function calls:
  3830 ;;		_LIN_getPacket
  3831 ;; This function is called by:
  3832 ;;		_LIN_Slave_Initialize
  3833 ;;		_LIN_handler
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837     02D2                     _processLIN:	
  3838                           ;psect for function _processLIN
  3839                           
  3840     02D2                     l1912:	
  3841                           ;incstack = 0
  3842                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3843                           
  3844                           
  3845                           ;mcc_generated_files/LINDrivers/lin_app.c: 66:     uint8_t tempRxData[8];;mcc_generated_
      +                          files/LINDrivers/lin_app.c: 67:     uint8_t cmd;;mcc_generated_files/LINDrivers/lin_app.
      +                          c: 69:     cmd = LIN_getPacket(tempRxData);
  3846     02D2  3063               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3847     02D3  00F9               	movwf	LIN_getPacket@data
  3848     02D4  3183  23C6  3182   	fcall	_LIN_getPacket
  3849     02D7  0020               	movlb	0	; select bank0
  3850     02D8  00EB               	movwf	processLIN@cmd
  3851                           
  3852                           ;mcc_generated_files/LINDrivers/lin_app.c: 70:     switch (cmd) {
  3853     02D9  2B16               	goto	l1916
  3854     02DA                     l19:	
  3855                           ;mcc_generated_files/LINDrivers/lin_app.c: 72:         case SW_STATE:
  3856                           
  3857                           
  3858                           ;mcc_generated_files/LINDrivers/lin_app.c: 73:             if ( (tempRxData[5] & 0B00100
      +                          000) == 0B00100000) {
  3859     02DA  1EE8               	btfss	processLIN@tempRxData+5,5
  3860     02DB  2ADD               	goto	u1271
  3861     02DC  2ADE               	goto	u1270
  3862     02DD                     u1271:
  3863     02DD  2AE1               	goto	l24
  3864     02DE                     u1270:
  3865     02DE                     l21:	
  3866                           ;mcc_generated_files/LINDrivers/lin_app.c: 74:                 do { LATBbits.LATB5 = 1; 
      +                          } while(0);
  3867                           
  3868     02DE  0022               	movlb	2	; select bank2
  3869     02DF  168D               	bsf	13,5	;volatile
  3870     02E0  2AE3               	goto	l23
  3871     02E1                     l24:	
  3872                           ;mcc_generated_files/LINDrivers/lin_app.c: 76:                 do { LATBbits.LATB5 = 0; 
      +                          } while(0);
  3873                           
  3874     02E1  0022               	movlb	2	; select bank2
  3875     02E2  128D               	bcf	13,5	;volatile
  3876     02E3                     l23:	
  3877                           ;mcc_generated_files/LINDrivers/lin_app.c: 77:             }
  3878                           
  3879                           
  3880                           ;mcc_generated_files/LINDrivers/lin_app.c: 79:             if ( (tempRxData[2] & 0B00000
      +                          001) == 0B00000001) {
  3881     02E3  0020               	movlb	0	; select bank0
  3882     02E4  1C65               	btfss	processLIN@tempRxData+2,0
  3883     02E5  2AE7               	goto	u1281
  3884     02E6  2AE8               	goto	u1280
  3885     02E7                     u1281:
  3886     02E7  2AEB               	goto	l30
  3887     02E8                     u1280:
  3888     02E8                     l27:	
  3889                           ;mcc_generated_files/LINDrivers/lin_app.c: 80:                 do { LATBbits.LATB4 = 1; 
      +                          } while(0);
  3890                           
  3891     02E8  0022               	movlb	2	; select bank2
  3892     02E9  160D               	bsf	13,4	;volatile
  3893     02EA  2AED               	goto	l29
  3894     02EB                     l30:	
  3895                           ;mcc_generated_files/LINDrivers/lin_app.c: 82:                 do { LATBbits.LATB4 = 0; 
      +                          } while(0);
  3896                           
  3897     02EB  0022               	movlb	2	; select bank2
  3898     02EC  120D               	bcf	13,4	;volatile
  3899     02ED                     l29:	
  3900                           ;mcc_generated_files/LINDrivers/lin_app.c: 83:             }
  3901                           
  3902                           
  3903                           ;mcc_generated_files/LINDrivers/lin_app.c: 85:             if ( (tempRxData[1] & 0B00001
      +                          000) == 0B00001000) {
  3904     02ED  0020               	movlb	0	; select bank0
  3905     02EE  1DE4               	btfss	processLIN@tempRxData+1,3
  3906     02EF  2AF1               	goto	u1291
  3907     02F0  2AF2               	goto	u1290
  3908     02F1                     u1291:
  3909     02F1  2AF5               	goto	l36
  3910     02F2                     u1290:
  3911     02F2                     l33:	
  3912                           ;mcc_generated_files/LINDrivers/lin_app.c: 86:                 do { LATBbits.LATB3 = 1; 
      +                          } while(0);
  3913                           
  3914     02F2  0022               	movlb	2	; select bank2
  3915     02F3  158D               	bsf	13,3	;volatile
  3916     02F4  2AF7               	goto	l35
  3917     02F5                     l36:	
  3918                           ;mcc_generated_files/LINDrivers/lin_app.c: 88:                 do { LATBbits.LATB3 = 0; 
      +                          } while(0);
  3919                           
  3920     02F5  0022               	movlb	2	; select bank2
  3921     02F6  118D               	bcf	13,3	;volatile
  3922     02F7                     l35:	
  3923                           ;mcc_generated_files/LINDrivers/lin_app.c: 89:             }
  3924                           
  3925                           
  3926                           ;mcc_generated_files/LINDrivers/lin_app.c: 91:             if ( (tempRxData[1] & 0B01000
      +                          000) == 0B01000000) {
  3927     02F7  0020               	movlb	0	; select bank0
  3928     02F8  1F64               	btfss	processLIN@tempRxData+1,6
  3929     02F9  2AFB               	goto	u1301
  3930     02FA  2AFC               	goto	u1300
  3931     02FB                     u1301:
  3932     02FB  2AFF               	goto	l42
  3933     02FC                     u1300:
  3934     02FC                     l39:	
  3935                           ;mcc_generated_files/LINDrivers/lin_app.c: 92:                 do { LATBbits.LATB2 = 1; 
      +                          } while(0);
  3936                           
  3937     02FC  0022               	movlb	2	; select bank2
  3938     02FD  150D               	bsf	13,2	;volatile
  3939     02FE  2B01               	goto	l41
  3940     02FF                     l42:	
  3941                           ;mcc_generated_files/LINDrivers/lin_app.c: 94:                 do { LATBbits.LATB2 = 0; 
      +                          } while(0);
  3942                           
  3943     02FF  0022               	movlb	2	; select bank2
  3944     0300  110D               	bcf	13,2	;volatile
  3945     0301                     l41:	
  3946                           ;mcc_generated_files/LINDrivers/lin_app.c: 95:             }
  3947                           
  3948                           
  3949                           ;mcc_generated_files/LINDrivers/lin_app.c: 97:             if ( (tempRxData[1] & 0B00010
      +                          000) == 0B00010000) {
  3950     0301  0020               	movlb	0	; select bank0
  3951     0302  1E64               	btfss	processLIN@tempRxData+1,4
  3952     0303  2B05               	goto	u1311
  3953     0304  2B06               	goto	u1310
  3954     0305                     u1311:
  3955     0305  2B09               	goto	l48
  3956     0306                     u1310:
  3957     0306                     l45:	
  3958                           ;mcc_generated_files/LINDrivers/lin_app.c: 98:                 do { LATBbits.LATB1 = 1; 
      +                          } while(0);
  3959                           
  3960     0306  0022               	movlb	2	; select bank2
  3961     0307  148D               	bsf	13,1	;volatile
  3962     0308  2B0B               	goto	l47
  3963     0309                     l48:	
  3964                           ;mcc_generated_files/LINDrivers/lin_app.c: 100:                 do { LATBbits.LATB1 = 0;
      +                           } while(0);
  3965                           
  3966     0309  0022               	movlb	2	; select bank2
  3967     030A  108D               	bcf	13,1	;volatile
  3968     030B                     l47:	
  3969                           ;mcc_generated_files/LINDrivers/lin_app.c: 101:             }
  3970                           
  3971                           
  3972                           ;mcc_generated_files/LINDrivers/lin_app.c: 103:             if ( (tempRxData[1] & 0B0010
      +                          0000) == 0B00100000) {
  3973     030B  0020               	movlb	0	; select bank0
  3974     030C  1EE4               	btfss	processLIN@tempRxData+1,5
  3975     030D  2B0F               	goto	u1321
  3976     030E  2B10               	goto	u1320
  3977     030F                     u1321:
  3978     030F  2B13               	goto	l54
  3979     0310                     u1320:
  3980     0310                     l51:	
  3981                           ;mcc_generated_files/LINDrivers/lin_app.c: 104:                 do { LATBbits.LATB0 = 1;
      +                           } while(0);
  3982                           
  3983     0310  0022               	movlb	2	; select bank2
  3984     0311  140D               	bsf	13,0	;volatile
  3985     0312  2B1B               	goto	l58
  3986     0313                     l54:	
  3987                           ;mcc_generated_files/LINDrivers/lin_app.c: 106:                 do { LATBbits.LATB0 = 0;
      +                           } while(0);
  3988                           
  3989     0313  0022               	movlb	2	; select bank2
  3990     0314  100D               	bcf	13,0	;volatile
  3991     0315  2B1B               	goto	l58
  3992     0316                     l1916:
  3993     0316  086B               	movf	processLIN@cmd,w
  3994                           
  3995                           ; Switch size 1, requested type "simple"
  3996                           ; Number of cases is 1, Range of values is 1 to 1
  3997                           ; switch strategies available:
  3998                           ; Name         Instructions Cycles
  3999                           ; simple_byte            4     3 (average)
  4000                           ; direct_byte           11     9 (fixed)
  4001                           ; jumptable            263     9 (fixed)
  4002                           ;	Chosen strategy is simple_byte
  4003     0317  3A01               	xorlw	1	; case 1
  4004     0318  1903               	skipnz
  4005     0319  2ADA               	goto	l19
  4006     031A  2B1B               	goto	l58
  4007     031B                     l58:
  4008     031B  0008               	return
  4009     031C                     __end_of_processLIN:
  4010                           
  4011                           	psect	text18
  4012     03C6                     __ptext18:	
  4013 ;; *************** function _LIN_getPacket *****************
  4014 ;; Defined at:
  4015 ;;		line 202 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  data            1    9[COMMON] PTR unsigned char 
  4018 ;;		 -> processLIN@tempRxData(8), 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  cmd             1   10[COMMON] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      unsigned char 
  4023 ;; Registers used:
  4024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4030 ;;      Params:         1       0       0       0       0       0       0       0
  4031 ;;      Locals:         1       0       0       0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0
  4033 ;;      Totals:         2       0       0       0       0       0       0       0
  4034 ;;Total ram usage:        2 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; Hardware stack levels required when called: 5
  4037 ;; This function calls:
  4038 ;;		_memcpy
  4039 ;;		_memset
  4040 ;; This function is called by:
  4041 ;;		_processLIN
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045     03C6                     _LIN_getPacket:	
  4046                           ;psect for function _LIN_getPacket
  4047                           
  4048     03C6                     l1780:	
  4049                           ;incstack = 0
  4050                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4051                           
  4052                           
  4053                           ;mcc_generated_files/LINDrivers/lin_slave.c: 203:     uint8_t cmd = LIN_packet.PID & 0x3
      +                          F;
  4054     03C6  0020               	movlb	0	; select bank0
  4055     03C7  0856               	movf	_LIN_packet,w
  4056     03C8  393F               	andlw	63
  4057     03C9  00FA               	movwf	LIN_getPacket@cmd
  4058     03CA                     l1782:
  4059                           
  4060                           ;mcc_generated_files/LINDrivers/lin_slave.c: 205:     if(cmd != 0){
  4061     03CA  087A               	movf	LIN_getPacket@cmd,w
  4062     03CB  1903               	btfsc	3,2
  4063     03CC  2BCE               	goto	u931
  4064     03CD  2BCF               	goto	u930
  4065     03CE                     u931:
  4066     03CE  2BD2               	goto	l1786
  4067     03CF                     u930:
  4068     03CF                     l1784:
  4069                           
  4070                           ;mcc_generated_files/LINDrivers/lin_slave.c: 206:         __nop();
  4071     03CF  0000               	nop
  4072                           
  4073                           ;mcc_generated_files/LINDrivers/lin_slave.c: 207:         __nop();
  4074     03D0  0000               	nop
  4075                           
  4076                           ;mcc_generated_files/LINDrivers/lin_slave.c: 208:         __nop();
  4077     03D1  0000               	nop
  4078     03D2                     l1786:
  4079                           
  4080                           ;mcc_generated_files/LINDrivers/lin_slave.c: 211:     memcpy(data, LIN_packet.data, size
      +                          of(LIN_packet.data));
  4081     03D2  0879               	movf	LIN_getPacket@data,w
  4082     03D3  00F0               	movwf	memcpy@d1
  4083     03D4  01F1               	clrf	memcpy@d1+1
  4084     03D5  3057               	movlw	low (_LIN_packet+1)
  4085     03D6  00F2               	movwf	memcpy@s1
  4086     03D7  3000               	movlw	high (_LIN_packet+1)
  4087     03D8  00F3               	movwf	memcpy@s1+1
  4088     03D9  3008               	movlw	8
  4089     03DA  00F4               	movwf	memcpy@n
  4090     03DB  3000               	movlw	0
  4091     03DC  00F5               	movwf	memcpy@n+1
  4092     03DD  3184  245D  3183   	fcall	_memcpy
  4093                           
  4094                           ;mcc_generated_files/LINDrivers/lin_slave.c: 212:     memset(LIN_packet.rawPacket, 0, si
      +                          zeof(LIN_packet.rawPacket));
  4095     03E0  3056               	movlw	low _LIN_packet
  4096     03E1  00F0               	movwf	memset@dest
  4097     03E2  3000               	movlw	high _LIN_packet
  4098     03E3  00F1               	movwf	memset@dest+1
  4099     03E4  3000               	movlw	0
  4100     03E5  00F2               	movwf	memset@c
  4101     03E6  00F3               	movwf	memset@c+1
  4102     03E7  300D               	movlw	13
  4103     03E8  00F4               	movwf	memset@n
  4104     03E9  3000               	movlw	0
  4105     03EA  00F5               	movwf	memset@n+1
  4106     03EB  3184  24CF  3183   	fcall	_memset
  4107     03EE                     l1788:
  4108                           
  4109                           ;mcc_generated_files/LINDrivers/lin_slave.c: 216:     return cmd;
  4110     03EE  087A               	movf	LIN_getPacket@cmd,w
  4111     03EF                     l179:
  4112     03EF  0008               	return
  4113     03F0                     __end_of_LIN_getPacket:
  4114                           
  4115                           	psect	text19
  4116     04CF                     __ptext19:	
  4117 ;; *************** function _memset *****************
  4118 ;; Defined at:
  4119 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  dest            2    0[COMMON] PTR void 
  4122 ;;		 -> LIN_packet(13), 
  4123 ;;  c               2    2[COMMON] int 
  4124 ;;  n               2    4[COMMON] unsigned int 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  p               1    6[COMMON] PTR unsigned char 
  4127 ;;		 -> LIN_packet(13), 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  2    0[COMMON] PTR void 
  4130 ;; Registers used:
  4131 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4137 ;;      Params:         6       0       0       0       0       0       0       0
  4138 ;;      Locals:         1       0       0       0       0       0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0
  4140 ;;      Totals:         7       0       0       0       0       0       0       0
  4141 ;;Total ram usage:        7 bytes
  4142 ;; Hardware stack levels used: 1
  4143 ;; Hardware stack levels required when called: 4
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_LIN_handler
  4148 ;;		_LIN_getPacket
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152     04CF                     _memset:	
  4153                           ;psect for function _memset
  4154                           
  4155     04CF                     l1746:	
  4156                           ;incstack = 0
  4157                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4158                           
  4159     04CF  0870               	movf	memset@dest,w
  4160     04D0  00F6               	movwf	memset@p
  4161     04D1  2CD9               	goto	l1752
  4162     04D2                     l1748:
  4163     04D2  0876               	movf	memset@p,w
  4164     04D3  0086               	movwf	6
  4165     04D4  0187               	clrf	7
  4166     04D5  0872               	movf	memset@c,w
  4167     04D6  0081               	movwf	1
  4168     04D7                     l1750:
  4169     04D7  3001               	movlw	1
  4170     04D8  07F6               	addwf	memset@p,f
  4171     04D9                     l1752:
  4172     04D9  3001               	movlw	1
  4173     04DA  02F4               	subwf	memset@n,f
  4174     04DB  3000               	movlw	0
  4175     04DC  3BF5               	subwfb	memset@n+1,f
  4176     04DD  0A74               	incf	memset@n,w
  4177     04DE  1D03               	skipz
  4178     04DF  2CE4               	goto	u891
  4179     04E0  0A75               	incf	memset@n+1,w
  4180     04E1  1D03               	btfss	3,2
  4181     04E2  2CE4               	goto	u891
  4182     04E3  2CE5               	goto	u890
  4183     04E4                     u891:
  4184     04E4  2CD2               	goto	l1748
  4185     04E5                     u890:
  4186     04E5                     l1148:
  4187     04E5  0008               	return
  4188     04E6                     __end_of_memset:
  4189                           
  4190                           	psect	text20
  4191     05D9                     __ptext20:	
  4192 ;; *************** function _LIN_stopTimer *****************
  4193 ;; Defined at:
  4194 ;;		line 312 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		status,2
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4208 ;;      Params:         0       0       0       0       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0
  4211 ;;      Totals:         0       0       0       0       0       0       0       0
  4212 ;;Total ram usage:        0 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 4
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_LIN_init
  4219 ;;		_LIN_handler
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223     05D9                     _LIN_stopTimer:	
  4224                           ;psect for function _LIN_stopTimer
  4225                           
  4226     05D9                     l1710:	
  4227                           ;incstack = 0
  4228                           ; Regs used in _LIN_stopTimer: [status,2]
  4229                           
  4230                           
  4231                           ;mcc_generated_files/LINDrivers/lin_slave.c: 313:     __nop();
  4232     05D9  0000               	nop
  4233     05DA                     l1712:
  4234                           
  4235                           ;mcc_generated_files/LINDrivers/lin_slave.c: 315:     CountCallBack = 0;
  4236     05DA  0020               	movlb	0	; select bank0
  4237     05DB  01D2               	clrf	_CountCallBack	;volatile
  4238                           
  4239                           ;mcc_generated_files/LINDrivers/lin_slave.c: 316:     LIN_timerRunning = 0;
  4240     05DC  01D3               	clrf	_LIN_timerRunning
  4241     05DD                     l221:
  4242     05DD  0008               	return
  4243     05DE                     __end_of_LIN_stopTimer:
  4244                           
  4245                           	psect	text21
  4246     0568                     __ptext21:	
  4247 ;; *************** function _LIN_startTimer *****************
  4248 ;; Defined at:
  4249 ;;		line 291 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  timeout         1    wreg     unsigned char 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  timeout         1    1[COMMON] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, pclath, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4263 ;;      Params:         0       0       0       0       0       0       0       0
  4264 ;;      Locals:         1       0       0       0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0
  4266 ;;      Totals:         1       0       0       0       0       0       0       0
  4267 ;;Total ram usage:        1 bytes
  4268 ;; Hardware stack levels used: 1
  4269 ;; Hardware stack levels required when called: 5
  4270 ;; This function calls:
  4271 ;;		_TMR0_WriteTimer
  4272 ;; This function is called by:
  4273 ;;		_LIN_handler
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277     0568                     _LIN_startTimer:	
  4278                           ;psect for function _LIN_startTimer
  4279                           
  4280                           
  4281                           ;incstack = 0
  4282                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  4283                           ;LIN_startTimer@timeout stored from wreg
  4284     0568  00F1               	movwf	LIN_startTimer@timeout
  4285     0569                     l1946:
  4286                           
  4287                           ;mcc_generated_files/LINDrivers/lin_slave.c: 292:     LIN_timeout = timeout;
  4288     0569  0871               	movf	LIN_startTimer@timeout,w
  4289     056A  0020               	movlb	0	; select bank0
  4290     056B  00EC               	movwf	_LIN_timeout
  4291     056C                     l1948:
  4292                           
  4293                           ;mcc_generated_files/LINDrivers/lin_slave.c: 293:     TMR0_WriteTimer(0);
  4294     056C  3000               	movlw	0
  4295     056D  3185  25DE  3185   	fcall	_TMR0_WriteTimer
  4296     0570                     l1950:
  4297                           
  4298                           ;mcc_generated_files/LINDrivers/lin_slave.c: 294:     __nop();
  4299     0570  0000               	nop
  4300     0571                     l1952:
  4301                           
  4302                           ;mcc_generated_files/LINDrivers/lin_slave.c: 295:     LIN_timerRunning = 1;
  4303     0571  3001               	movlw	1
  4304     0572  0020               	movlb	0	; select bank0
  4305     0573  00D3               	movwf	_LIN_timerRunning
  4306     0574                     l211:
  4307     0574  0008               	return
  4308     0575                     __end_of_LIN_startTimer:
  4309                           
  4310                           	psect	text22
  4311     05DE                     __ptext22:	
  4312 ;; *************** function _TMR0_WriteTimer *****************
  4313 ;; Defined at:
  4314 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  timerVal        1    wreg     unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  timerVal        1    0[COMMON] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4328 ;;      Params:         0       0       0       0       0       0       0       0
  4329 ;;      Locals:         1       0       0       0       0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0
  4331 ;;      Totals:         1       0       0       0       0       0       0       0
  4332 ;;Total ram usage:        1 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 4
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_LIN_startTimer
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342     05DE                     _TMR0_WriteTimer:	
  4343                           ;psect for function _TMR0_WriteTimer
  4344                           
  4345                           
  4346                           ;incstack = 0
  4347                           ; Regs used in _TMR0_WriteTimer: [wreg]
  4348                           ;TMR0_WriteTimer@timerVal stored from wreg
  4349     05DE  00F0               	movwf	TMR0_WriteTimer@timerVal
  4350     05DF                     l1880:
  4351                           
  4352                           ;mcc_generated_files/tmr0.c: 96: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_fi
      +                          les/tmr0.c: 97: {;mcc_generated_files/tmr0.c: 99:     TMR0 = timerVal;
  4353     05DF  0870               	movf	TMR0_WriteTimer@timerVal,w
  4354     05E0  0020               	movlb	0	; select bank0
  4355     05E1  0095               	movwf	21	;volatile
  4356     05E2                     l432:
  4357     05E2  0008               	return
  4358     05E3                     __end_of_TMR0_WriteTimer:
  4359                           
  4360                           	psect	text23
  4361     0212                     __ptext23:	
  4362 ;; *************** function _LIN_queuePacket *****************
  4363 ;; Defined at:
  4364 ;;		line 66 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  cmd             1    wreg     unsigned char 
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  cmd             1    1[BANK0 ] unsigned char 
  4369 ;;  i               1    2[BANK0 ] unsigned char 
  4370 ;;  tempSchedule    2    3[BANK0 ] PTR const struct .
  4371 ;;		 -> NULL(0), scheduleTable(5), 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4381 ;;      Params:         0       0       0       0       0       0       0       0
  4382 ;;      Locals:         0       4       0       0       0       0       0       0
  4383 ;;      Temps:          0       1       0       0       0       0       0       0
  4384 ;;      Totals:         0       5       0       0       0       0       0       0
  4385 ;;Total ram usage:        5 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 6
  4388 ;; This function calls:
  4389 ;;		_LIN_getChecksum
  4390 ;;		_LIN_sendPacket
  4391 ;;		_memcpy
  4392 ;; This function is called by:
  4393 ;;		_LIN_handler
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397     0212                     _LIN_queuePacket:	
  4398                           ;psect for function _LIN_queuePacket
  4399                           
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4403                           ;LIN_queuePacket@cmd stored from wreg
  4404     0212  0020               	movlb	0	; select bank0
  4405     0213  00E4               	movwf	LIN_queuePacket@cmd
  4406     0214                     l2258:
  4407                           
  4408                           ;mcc_generated_files/LINDrivers/lin_slave.c: 67:     const lin_rx_cmd_t* tempSchedule = 
      +                          LIN_rxCommand;
  4409     0214  0845               	movf	_LIN_rxCommand+1,w
  4410     0215  00E7               	movwf	LIN_queuePacket@tempSchedule+1
  4411     0216  0844               	movf	_LIN_rxCommand,w
  4412     0217  00E6               	movwf	LIN_queuePacket@tempSchedule
  4413     0218                     l2260:
  4414                           
  4415                           ;mcc_generated_files/LINDrivers/lin_slave.c: 69:     cmd &= 0x3F;
  4416     0218  303F               	movlw	63
  4417     0219  05E4               	andwf	LIN_queuePacket@cmd,f
  4418     021A                     l2262:
  4419                           
  4420                           ;mcc_generated_files/LINDrivers/lin_slave.c: 70:     for(uint8_t i = 0; i < LIN_rxComman
      +                          dLength; i++){
  4421     021A  01E5               	clrf	LIN_queuePacket@i
  4422     021B  2A2D               	goto	l2272
  4423     021C                     l2264:
  4424                           
  4425                           ;mcc_generated_files/LINDrivers/lin_slave.c: 71:         if(cmd == tempSchedule->cmd){
  4426     021C  0866               	movf	LIN_queuePacket@tempSchedule,w
  4427     021D  0084               	movwf	4
  4428     021E  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4429     021F  0085               	movwf	5
  4430     0220  0800               	movf	0,w	;code access
  4431     0221  0664               	xorwf	LIN_queuePacket@cmd,w
  4432     0222  1D03               	skipz
  4433     0223  2A25               	goto	u1701
  4434     0224  2A26               	goto	u1700
  4435     0225                     u1701:
  4436     0225  2A27               	goto	l2268
  4437     0226                     u1700:
  4438     0226  2A33               	goto	l2274
  4439     0227                     l2268:
  4440                           
  4441                           ;mcc_generated_files/LINDrivers/lin_slave.c: 74:         tempSchedule++;
  4442     0227  3005               	movlw	5
  4443     0228  07E6               	addwf	LIN_queuePacket@tempSchedule,f
  4444     0229  3000               	movlw	0
  4445     022A  3DE7               	addwfc	LIN_queuePacket@tempSchedule+1,f
  4446     022B                     l2270:
  4447                           
  4448                           ;mcc_generated_files/LINDrivers/lin_slave.c: 75:     }
  4449     022B  3001               	movlw	1
  4450     022C  07E5               	addwf	LIN_queuePacket@i,f
  4451     022D                     l2272:
  4452     022D  0854               	movf	_LIN_rxCommandLength,w
  4453     022E  0265               	subwf	LIN_queuePacket@i,w
  4454     022F  1C03               	skipc
  4455     0230  2A32               	goto	u1711
  4456     0231  2A33               	goto	u1710
  4457     0232                     u1711:
  4458     0232  2A1C               	goto	l2264
  4459     0233                     u1710:
  4460     0233                     l2274:
  4461                           
  4462                           ;mcc_generated_files/LINDrivers/lin_slave.c: 77:     LIN_packet.type = tempSchedule->typ
      +                          e;
  4463     0233  3001               	movlw	1
  4464     0234  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4465     0235  0084               	movwf	4
  4466     0236  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4467     0237  1803               	skipnc
  4468     0238  3E01               	addlw	1
  4469     0239  0085               	movwf	5
  4470     023A  0800               	movf	0,w	;code access
  4471     023B  00E0               	movwf	_LIN_packet+10
  4472                           
  4473                           ;mcc_generated_files/LINDrivers/lin_slave.c: 78:     LIN_packet.length = tempSchedule->l
      +                          ength;
  4474     023C  3002               	movlw	2
  4475     023D  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4476     023E  0084               	movwf	4
  4477     023F  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4478     0240  1803               	skipnc
  4479     0241  3E01               	addlw	1
  4480     0242  0085               	movwf	5
  4481     0243  0800               	movf	0,w	;code access
  4482     0244  00E1               	movwf	_LIN_packet+11
  4483     0245                     l2276:
  4484                           
  4485                           ;mcc_generated_files/LINDrivers/lin_slave.c: 82:     memcpy(LIN_packet.data, tempSchedul
      +                          e->data, LIN_packet.length);
  4486     0245  3057               	movlw	low (_LIN_packet+1)
  4487     0246  00F0               	movwf	memcpy@d1
  4488     0247  3000               	movlw	high (_LIN_packet+1)
  4489     0248  00F1               	movwf	memcpy@d1+1
  4490     0249  3003               	movlw	3
  4491     024A  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4492     024B  0084               	movwf	4
  4493     024C  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4494     024D  1803               	skipnc
  4495     024E  3E01               	addlw	1
  4496     024F  0085               	movwf	5
  4497     0250  3F00               	moviw [0]fsr0
  4498     0251  00F2               	movwf	memcpy@s1
  4499     0252  3F01               	moviw [1]fsr0
  4500     0253  00F3               	movwf	memcpy@s1+1
  4501     0254  0861               	movf	_LIN_packet+11,w
  4502     0255  00F4               	movwf	memcpy@n
  4503     0256  01F5               	clrf	memcpy@n+1
  4504     0257  1BF4               	btfsc	memcpy@n,7
  4505     0258  03F5               	decf	memcpy@n+1,f
  4506     0259  3184  245D  3182   	fcall	_memcpy
  4507     025C                     l2278:
  4508                           
  4509                           ;mcc_generated_files/LINDrivers/lin_slave.c: 85:     LIN_packet.checksum = LIN_getChecks
      +                          um(LIN_packet.length, LIN_packet.PID, LIN_packet.data);
  4510     025C  0020               	movlb	0	; select bank0
  4511     025D  0856               	movf	_LIN_packet,w
  4512     025E  00F0               	movwf	LIN_getChecksum@pid
  4513     025F  3057               	movlw	low (_LIN_packet+1)
  4514     0260  00F1               	movwf	LIN_getChecksum@data
  4515     0261  3000               	movlw	high (_LIN_packet+1)
  4516     0262  00F2               	movwf	LIN_getChecksum@data+1
  4517     0263  0861               	movf	_LIN_packet+11,w
  4518     0264  3183  2394  3182   	fcall	_LIN_getChecksum
  4519     0267  0020               	movlb	0	; select bank0
  4520     0268  00DF               	movwf	_LIN_packet+9
  4521     0269                     l2280:
  4522                           
  4523                           ;mcc_generated_files/LINDrivers/lin_slave.c: 86:     LIN_sendPacket(LIN_packet.length, L
      +                          IN_packet.PID, LIN_packet.data);
  4524     0269  0856               	movf	_LIN_packet,w
  4525     026A  00F9               	movwf	LIN_sendPacket@pid
  4526     026B  3057               	movlw	low (_LIN_packet+1)
  4527     026C  00FA               	movwf	LIN_sendPacket@data
  4528     026D  3000               	movlw	high (_LIN_packet+1)
  4529     026E  00FB               	movwf	LIN_sendPacket@data+1
  4530     026F  0861               	movf	_LIN_packet+11,w
  4531     0270  3184  243A  3182   	fcall	_LIN_sendPacket
  4532     0273                     l130:
  4533     0273  0008               	return
  4534     0274                     __end_of_LIN_queuePacket:
  4535                           
  4536                           	psect	text24
  4537     045D                     __ptext24:	
  4538 ;; *************** function _memcpy *****************
  4539 ;; Defined at:
  4540 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  d1              2    0[COMMON] PTR void 
  4543 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4544 ;;  s1              2    2[COMMON] PTR const void 
  4545 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4546 ;;  n               2    4[COMMON] unsigned int 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  s               1    8[COMMON] PTR const unsigned char 
  4549 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4550 ;;  d               1    7[COMMON] PTR unsigned char 
  4551 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4552 ;;  tmp             1    6[COMMON] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  2    0[COMMON] PTR void 
  4555 ;; Registers used:
  4556 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4562 ;;      Params:         6       0       0       0       0       0       0       0
  4563 ;;      Locals:         3       0       0       0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0
  4565 ;;      Totals:         9       0       0       0       0       0       0       0
  4566 ;;Total ram usage:        9 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 4
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_LIN_queuePacket
  4573 ;;		_LIN_getPacket
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577     045D                     _memcpy:	
  4578                           ;psect for function _memcpy
  4579                           
  4580     045D                     l1718:	
  4581                           ;incstack = 0
  4582                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  4583                           
  4584     045D  0872               	movf	memcpy@s1,w
  4585     045E  00F8               	movwf	memcpy@s
  4586     045F  0870               	movf	memcpy@d1,w
  4587     0460  00F7               	movwf	memcpy@d
  4588     0461  2C70               	goto	l1139
  4589     0462                     l1720:
  4590     0462  0878               	movf	memcpy@s,w
  4591     0463  0086               	movwf	6
  4592     0464  0187               	clrf	7
  4593     0465  0801               	movf	1,w
  4594     0466  00F6               	movwf	memcpy@tmp
  4595     0467                     l1722:
  4596     0467  3001               	movlw	1
  4597     0468  07F8               	addwf	memcpy@s,f
  4598     0469                     l1724:
  4599     0469  0877               	movf	memcpy@d,w
  4600     046A  0086               	movwf	6
  4601     046B  0187               	clrf	7
  4602     046C  0876               	movf	memcpy@tmp,w
  4603     046D  0081               	movwf	1
  4604     046E  3001               	movlw	1
  4605     046F  07F7               	addwf	memcpy@d,f
  4606     0470                     l1139:
  4607     0470  3001               	movlw	1
  4608     0471  02F4               	subwf	memcpy@n,f
  4609     0472  3000               	movlw	0
  4610     0473  3BF5               	subwfb	memcpy@n+1,f
  4611     0474  0A74               	incf	memcpy@n,w
  4612     0475  1D03               	skipz
  4613     0476  2C7B               	goto	u861
  4614     0477  0A75               	incf	memcpy@n+1,w
  4615     0478  1D03               	btfss	3,2
  4616     0479  2C7B               	goto	u861
  4617     047A  2C7C               	goto	u860
  4618     047B                     u861:
  4619     047B  2C62               	goto	l1720
  4620     047C                     u860:
  4621     047C                     l1142:
  4622     047C  0008               	return
  4623     047D                     __end_of_memcpy:
  4624                           
  4625                           	psect	text25
  4626     043A                     __ptext25:	
  4627 ;; *************** function _LIN_sendPacket *****************
  4628 ;; Defined at:
  4629 ;;		line 192 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  length          1    wreg     unsigned char 
  4632 ;;  pid             1    9[COMMON] unsigned char 
  4633 ;;  data            2   10[COMMON] PTR unsigned char 
  4634 ;;		 -> LIN_packet(13), 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  length          1   12[COMMON] unsigned char 
  4637 ;;  i               1   13[COMMON] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4647 ;;      Params:         3       0       0       0       0       0       0       0
  4648 ;;      Locals:         2       0       0       0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0
  4650 ;;      Totals:         5       0       0       0       0       0       0       0
  4651 ;;Total ram usage:        5 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 5
  4654 ;; This function calls:
  4655 ;;		_EUSART_Write
  4656 ;;		_LIN_getChecksum
  4657 ;; This function is called by:
  4658 ;;		_LIN_queuePacket
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662     043A                     _LIN_sendPacket:	
  4663                           ;psect for function _LIN_sendPacket
  4664                           
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4668                           ;LIN_sendPacket@length stored from wreg
  4669     043A  00FC               	movwf	LIN_sendPacket@length
  4670     043B                     l1792:
  4671                           
  4672                           ;mcc_generated_files/LINDrivers/lin_slave.c: 195:     for(uint8_t i = 0; i < length; i++
      +                          ){
  4673     043B  01FD               	clrf	LIN_sendPacket@i
  4674     043C  2C49               	goto	l1798
  4675     043D                     l1794:
  4676                           
  4677                           ;mcc_generated_files/LINDrivers/lin_slave.c: 196:         EUSART_Write(*(data + i));
  4678     043D  087D               	movf	LIN_sendPacket@i,w
  4679     043E  077A               	addwf	LIN_sendPacket@data,w
  4680     043F  0086               	movwf	6
  4681     0440  3000               	movlw	0
  4682     0441  3D7B               	addwfc	LIN_sendPacket@data+1,w
  4683     0442  0087               	movwf	7
  4684     0443  0801               	movf	1,w
  4685     0444  3183  23F0  3184   	fcall	_EUSART_Write
  4686     0447                     l1796:
  4687                           
  4688                           ;mcc_generated_files/LINDrivers/lin_slave.c: 197:     }
  4689     0447  3001               	movlw	1
  4690     0448  07FD               	addwf	LIN_sendPacket@i,f
  4691     0449                     l1798:
  4692     0449  087C               	movf	LIN_sendPacket@length,w
  4693     044A  027D               	subwf	LIN_sendPacket@i,w
  4694     044B  1C03               	skipc
  4695     044C  2C4E               	goto	u941
  4696     044D  2C4F               	goto	u940
  4697     044E                     u941:
  4698     044E  2C3D               	goto	l1794
  4699     044F                     u940:
  4700     044F                     l1800:
  4701                           
  4702                           ;mcc_generated_files/LINDrivers/lin_slave.c: 199:     EUSART_Write(LIN_getChecksum(lengt
      +                          h, pid, data));
  4703     044F  0879               	movf	LIN_sendPacket@pid,w
  4704     0450  00F0               	movwf	LIN_getChecksum@pid
  4705     0451  087B               	movf	LIN_sendPacket@data+1,w
  4706     0452  00F2               	movwf	LIN_getChecksum@data+1
  4707     0453  087A               	movf	LIN_sendPacket@data,w
  4708     0454  00F1               	movwf	LIN_getChecksum@data
  4709     0455  087C               	movf	LIN_sendPacket@length,w
  4710     0456  3183  2394  3184   	fcall	_LIN_getChecksum
  4711     0459  3183  23F0  3184   	fcall	_EUSART_Write
  4712     045C                     l175:
  4713     045C  0008               	return
  4714     045D                     __end_of_LIN_sendPacket:
  4715                           
  4716                           	psect	text26
  4717     0394                     __ptext26:	
  4718 ;; *************** function _LIN_getChecksum *****************
  4719 ;; Defined at:
  4720 ;;		line 278 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  length          1    wreg     unsigned char 
  4723 ;;  pid             1    0[COMMON] unsigned char 
  4724 ;;  data            2    1[COMMON] PTR unsigned char 
  4725 ;;		 -> LIN_packet(13), 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  length          1    5[COMMON] unsigned char 
  4728 ;;  i               1    6[COMMON] unsigned char 
  4729 ;;  checksum        2    7[COMMON] unsigned short 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      unsigned char 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4739 ;;      Params:         3       0       0       0       0       0       0       0
  4740 ;;      Locals:         4       0       0       0       0       0       0       0
  4741 ;;      Temps:          2       0       0       0       0       0       0       0
  4742 ;;      Totals:         9       0       0       0       0       0       0       0
  4743 ;;Total ram usage:        9 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 4
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_LIN_queuePacket
  4750 ;;		_LIN_handler
  4751 ;;		_LIN_sendPacket
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755     0394                     _LIN_getChecksum:	
  4756                           ;psect for function _LIN_getChecksum
  4757                           
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4761                           ;LIN_getChecksum@length stored from wreg
  4762     0394  00F5               	movwf	LIN_getChecksum@length
  4763     0395                     l1726:
  4764                           
  4765                           ;mcc_generated_files/LINDrivers/lin_slave.c: 279:     uint16_t checksum = pid;
  4766     0395  0870               	movf	LIN_getChecksum@pid,w
  4767     0396  00F3               	movwf	??_LIN_getChecksum
  4768     0397  01F4               	clrf	??_LIN_getChecksum+1
  4769     0398  0873               	movf	??_LIN_getChecksum,w
  4770     0399  00F7               	movwf	LIN_getChecksum@checksum
  4771     039A  0874               	movf	??_LIN_getChecksum+1,w
  4772     039B  00F8               	movwf	LIN_getChecksum@checksum+1
  4773     039C                     l1728:
  4774                           
  4775                           ;mcc_generated_files/LINDrivers/lin_slave.c: 281:     for (uint8_t i = 0; i < length; i+
      +                          +){
  4776     039C  01F6               	clrf	LIN_getChecksum@i
  4777     039D  2BBC               	goto	l1740
  4778     039E                     l1730:
  4779                           
  4780                           ;mcc_generated_files/LINDrivers/lin_slave.c: 282:         checksum = checksum + *data++;
  4781     039E  0871               	movf	LIN_getChecksum@data,w
  4782     039F  0086               	movwf	6
  4783     03A0  0872               	movf	LIN_getChecksum@data+1,w
  4784     03A1  0087               	movwf	7
  4785     03A2  0801               	movf	1,w
  4786     03A3  0777               	addwf	LIN_getChecksum@checksum,w
  4787     03A4  00F7               	movwf	LIN_getChecksum@checksum
  4788     03A5  0878               	movf	LIN_getChecksum@checksum+1,w
  4789     03A6  1803               	skipnc
  4790     03A7  0A78               	incf	LIN_getChecksum@checksum+1,w
  4791     03A8  00F8               	movwf	LIN_getChecksum@checksum+1
  4792     03A9                     l1732:
  4793     03A9  3001               	movlw	1
  4794     03AA  07F1               	addwf	LIN_getChecksum@data,f
  4795     03AB  3000               	movlw	0
  4796     03AC  3DF2               	addwfc	LIN_getChecksum@data+1,f
  4797     03AD                     l1734:
  4798                           
  4799                           ;mcc_generated_files/LINDrivers/lin_slave.c: 283:         if(checksum > 0xFF)
  4800     03AD  3001               	movlw	1
  4801     03AE  0278               	subwf	LIN_getChecksum@checksum+1,w
  4802     03AF  3000               	movlw	0
  4803     03B0  1903               	skipnz
  4804     03B1  0277               	subwf	LIN_getChecksum@checksum,w
  4805     03B2  1C03               	skipc
  4806     03B3  2BB5               	goto	u871
  4807     03B4  2BB6               	goto	u870
  4808     03B5                     u871:
  4809     03B5  2BBA               	goto	l1738
  4810     03B6                     u870:
  4811     03B6                     l1736:
  4812                           
  4813                           ;mcc_generated_files/LINDrivers/lin_slave.c: 284:             checksum -= 0xFF;
  4814     03B6  30FF               	movlw	255
  4815     03B7  02F7               	subwf	LIN_getChecksum@checksum,f
  4816     03B8  3000               	movlw	0
  4817     03B9  3BF8               	subwfb	LIN_getChecksum@checksum+1,f
  4818     03BA                     l1738:
  4819                           
  4820                           ;mcc_generated_files/LINDrivers/lin_slave.c: 285:     }
  4821     03BA  3001               	movlw	1
  4822     03BB  07F6               	addwf	LIN_getChecksum@i,f
  4823     03BC                     l1740:
  4824     03BC  0875               	movf	LIN_getChecksum@length,w
  4825     03BD  0276               	subwf	LIN_getChecksum@i,w
  4826     03BE  1C03               	skipc
  4827     03BF  2BC1               	goto	u881
  4828     03C0  2BC2               	goto	u880
  4829     03C1                     u881:
  4830     03C1  2B9E               	goto	l1730
  4831     03C2                     u880:
  4832     03C2                     l207:
  4833                           
  4834                           ;mcc_generated_files/LINDrivers/lin_slave.c: 286:     checksum = ~checksum;
  4835     03C2  09F7               	comf	LIN_getChecksum@checksum,f
  4836     03C3  09F8               	comf	LIN_getChecksum@checksum+1,f
  4837     03C4                     l1742:
  4838                           
  4839                           ;mcc_generated_files/LINDrivers/lin_slave.c: 288:     return (uint8_t)checksum;
  4840     03C4  0877               	movf	LIN_getChecksum@checksum,w
  4841     03C5                     l208:
  4842     03C5  0008               	return
  4843     03C6                     __end_of_LIN_getChecksum:
  4844                           
  4845                           	psect	text27
  4846     03F0                     __ptext27:	
  4847 ;; *************** function _EUSART_Write *****************
  4848 ;; Defined at:
  4849 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  txData          1    wreg     unsigned char 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  txData          1    0[COMMON] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4863 ;;      Params:         0       0       0       0       0       0       0       0
  4864 ;;      Locals:         1       0       0       0       0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0       0
  4866 ;;      Totals:         1       0       0       0       0       0       0       0
  4867 ;;Total ram usage:        1 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 4
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_LIN_sendPacket
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877     03F0                     _EUSART_Write:	
  4878                           ;psect for function _EUSART_Write
  4879                           
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4883                           ;EUSART_Write@txData stored from wreg
  4884     03F0  00F0               	movwf	EUSART_Write@txData
  4885     03F1                     l1754:
  4886     03F1                     l1756:	
  4887                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4888                           
  4889                           
  4890                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4891     03F1  0020               	movlb	0	; select bank0
  4892     03F2  084D               	movf	_eusartTxBufferRemaining,w	;volatile
  4893     03F3  1903               	btfsc	3,2
  4894     03F4  2BF6               	goto	u901
  4895     03F5  2BF7               	goto	u900
  4896     03F6                     u901:
  4897     03F6  2BF1               	goto	l1756
  4898     03F7                     u900:
  4899     03F7                     l364:
  4900                           
  4901                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4902     03F7  0021               	movlb	1	; select bank1
  4903     03F8  1A11               	btfsc	17,4	;volatile
  4904     03F9  2BFB               	goto	u911
  4905     03FA  2BFC               	goto	u910
  4906     03FB                     u911:
  4907     03FB  2C00               	goto	l365
  4908     03FC                     u910:
  4909     03FC                     l1758:
  4910                           
  4911                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4912     03FC  0870               	movf	EUSART_Write@txData,w
  4913     03FD  0023               	movlb	3	; select bank3
  4914     03FE  009A               	movwf	26	;volatile
  4915                           
  4916                           ;mcc_generated_files/eusart.c: 182:     }
  4917     03FF  2C13               	goto	l1770
  4918     0400                     l365:	
  4919                           ;mcc_generated_files/eusart.c: 183:     else
  4920                           
  4921                           
  4922                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4923     0400  1211               	bcf	17,4	;volatile
  4924     0401                     l1760:
  4925                           
  4926                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4927     0401  0020               	movlb	0	; select bank0
  4928     0402  084F               	movf	_eusartTxHead,w
  4929     0403  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4930     0404  0086               	movwf	6
  4931     0405  0187               	clrf	7
  4932     0406  0870               	movf	EUSART_Write@txData,w
  4933     0407  0081               	movwf	1
  4934     0408                     l1762:
  4935     0408  3001               	movlw	1
  4936     0409  07CF               	addwf	_eusartTxHead,f	;volatile
  4937     040A                     l1764:
  4938                           
  4939                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4940     040A  3008               	movlw	8
  4941     040B  024F               	subwf	_eusartTxHead,w	;volatile
  4942     040C  1C03               	skipc
  4943     040D  2C0F               	goto	u921
  4944     040E  2C10               	goto	u920
  4945     040F                     u921:
  4946     040F  2C11               	goto	l1768
  4947     0410                     u920:
  4948     0410                     l1766:
  4949                           
  4950                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4951     0410  01CF               	clrf	_eusartTxHead	;volatile
  4952     0411                     l1768:
  4953                           
  4954                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4955     0411  3001               	movlw	1
  4956     0412  02CD               	subwf	_eusartTxBufferRemaining,f	;volatile
  4957     0413                     l1770:
  4958                           
  4959                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4960     0413  0021               	movlb	1	; select bank1
  4961     0414  1611               	bsf	17,4	;volatile
  4962     0415                     l368:
  4963     0415  0008               	return
  4964     0416                     __end_of_EUSART_Write:
  4965                           
  4966                           	psect	text28
  4967     05E3                     __ptext28:	
  4968 ;; *************** function _LIN_enableRx *****************
  4969 ;; Defined at:
  4970 ;;		line 319 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		None
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4984 ;;      Params:         0       0       0       0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0
  4987 ;;      Totals:         0       0       0       0       0       0       0       0
  4988 ;;Total ram usage:        0 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; Hardware stack levels required when called: 4
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_LIN_init
  4995 ;;		_LIN_handler
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999     05E3                     _LIN_enableRx:	
  5000                           ;psect for function _LIN_enableRx
  5001                           
  5002     05E3                     l1714:	
  5003                           ;incstack = 0
  5004                           ; Regs used in _LIN_enableRx: []
  5005                           
  5006                           
  5007                           ;mcc_generated_files/LINDrivers/lin_slave.c: 320:     RCSTAbits.CREN = 1;
  5008     05E3  0023               	movlb	3	; select bank3
  5009     05E4  161D               	bsf	29,4	;volatile
  5010                           
  5011                           ;mcc_generated_files/LINDrivers/lin_slave.c: 321:     PIE1bits.RCIE = 1;
  5012     05E5  0021               	movlb	1	; select bank1
  5013     05E6  1691               	bsf	17,5	;volatile
  5014     05E7                     l224:
  5015     05E7  0008               	return
  5016     05E8                     __end_of_LIN_enableRx:
  5017                           
  5018                           	psect	text29
  5019     05E8                     __ptext29:	
  5020 ;; *************** function _LIN_disableRx *****************
  5021 ;; Defined at:
  5022 ;;		line 324 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		None
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5036 ;;      Params:         0       0       0       0       0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0
  5039 ;;      Totals:         0       0       0       0       0       0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 4
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_LIN_handler
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050     05E8                     _LIN_disableRx:	
  5051                           ;psect for function _LIN_disableRx
  5052                           
  5053     05E8                     l1982:	
  5054                           ;incstack = 0
  5055                           ; Regs used in _LIN_disableRx: []
  5056                           
  5057                           
  5058                           ;mcc_generated_files/LINDrivers/lin_slave.c: 325:     RCSTAbits.CREN = 0;
  5059     05E8  0023               	movlb	3	; select bank3
  5060     05E9  121D               	bcf	29,4	;volatile
  5061                           
  5062                           ;mcc_generated_files/LINDrivers/lin_slave.c: 326:     PIE1bits.RCIE = 0;
  5063     05EA  0021               	movlb	1	; select bank1
  5064     05EB  1291               	bcf	17,5	;volatile
  5065     05EC                     l227:
  5066     05EC  0008               	return
  5067     05ED                     __end_of_LIN_disableRx:
  5068                           
  5069                           	psect	text30
  5070     04B5                     __ptext30:	
  5071 ;; *************** function _LIN_checkPID *****************
  5072 ;; Defined at:
  5073 ;;		line 249 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  pid             1    wreg     unsigned char 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  pid             1    7[COMMON] unsigned char 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      _Bool 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5087 ;;      Params:         0       0       0       0       0       0       0       0
  5088 ;;      Locals:         1       0       0       0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0
  5090 ;;      Totals:         1       0       0       0       0       0       0       0
  5091 ;;Total ram usage:        1 bytes
  5092 ;; Hardware stack levels used: 1
  5093 ;; Hardware stack levels required when called: 5
  5094 ;; This function calls:
  5095 ;;		_LIN_calcParity
  5096 ;;		_LIN_getFromTable
  5097 ;; This function is called by:
  5098 ;;		_LIN_handler
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102     04B5                     _LIN_checkPID:	
  5103                           ;psect for function _LIN_checkPID
  5104                           
  5105                           
  5106                           ;incstack = 0
  5107                           ; Regs used in _LIN_checkPID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5108                           ;LIN_checkPID@pid stored from wreg
  5109     04B5  00F7               	movwf	LIN_checkPID@pid
  5110     04B6                     l1966:
  5111                           
  5112                           ;mcc_generated_files/LINDrivers/lin_slave.c: 250:     if(LIN_getFromTable(pid, TYPE) == 
      +                          ERROR)
  5113     04B6  01F0               	clrf	LIN_getFromTable@param
  5114     04B7  0AF0               	incf	LIN_getFromTable@param,f
  5115     04B8  0877               	movf	LIN_checkPID@pid,w
  5116     04B9  3182  2274  3184   	fcall	_LIN_getFromTable
  5117     04BC  3A02               	xorlw	2
  5118     04BD  1D03               	skipz
  5119     04BE  2CC0               	goto	u1391
  5120     04BF  2CC1               	goto	u1390
  5121     04C0                     u1391:
  5122     04C0  2CC3               	goto	l1972
  5123     04C1                     u1390:
  5124     04C1                     l1968:
  5125                           
  5126                           ;mcc_generated_files/LINDrivers/lin_slave.c: 251:         return 0;
  5127     04C1  3000               	movlw	0
  5128     04C2  2CCE               	goto	l197
  5129     04C3                     l1972:
  5130                           
  5131                           ;mcc_generated_files/LINDrivers/lin_slave.c: 253:     if(pid == LIN_calcParity(pid & 0x3
      +                          F))
  5132     04C3  0877               	movf	LIN_checkPID@pid,w
  5133     04C4  393F               	andlw	63
  5134     04C5  3181  218C  3184   	fcall	_LIN_calcParity
  5135     04C8  0677               	xorwf	LIN_checkPID@pid,w
  5136     04C9  1D03               	skipz
  5137     04CA  2CCC               	goto	u1401
  5138     04CB  2CCD               	goto	u1400
  5139     04CC                     u1401:
  5140     04CC  2CC1               	goto	l1968
  5141     04CD                     u1400:
  5142     04CD                     l1974:
  5143                           
  5144                           ;mcc_generated_files/LINDrivers/lin_slave.c: 254:         return 1;
  5145     04CD  3001               	movlw	1
  5146     04CE                     l197:
  5147     04CE  0008               	return
  5148     04CF                     __end_of_LIN_checkPID:
  5149                           
  5150                           	psect	text31
  5151     0274                     __ptext31:	
  5152 ;; *************** function _LIN_getFromTable *****************
  5153 ;; Defined at:
  5154 ;;		line 219 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  cmd             1    wreg     unsigned char 
  5157 ;;  param           1    0[COMMON] enum E221
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  cmd             1    3[COMMON] unsigned char 
  5160 ;;  length          1    4[COMMON] unsigned char 
  5161 ;;  rxCommand       2    5[COMMON] PTR const struct .
  5162 ;;		 -> NULL(0), scheduleTable(5), 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      unsigned char 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5172 ;;      Params:         1       0       0       0       0       0       0       0
  5173 ;;      Locals:         4       0       0       0       0       0       0       0
  5174 ;;      Temps:          2       0       0       0       0       0       0       0
  5175 ;;      Totals:         7       0       0       0       0       0       0       0
  5176 ;;Total ram usage:        7 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 4
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_LIN_handler
  5183 ;;		_LIN_checkPID
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187     0274                     _LIN_getFromTable:	
  5188                           ;psect for function _LIN_getFromTable
  5189                           
  5190                           
  5191                           ;incstack = 0
  5192                           ; Regs used in _LIN_getFromTable: [wreg-fsr0h+status,2+status,0+pclath]
  5193                           ;LIN_getFromTable@cmd stored from wreg
  5194     0274  00F3               	movwf	LIN_getFromTable@cmd
  5195     0275                     l1824:
  5196                           
  5197                           ;mcc_generated_files/LINDrivers/lin_slave.c: 220:     const lin_rx_cmd_t* rxCommand = LI
      +                          N_rxCommand;
  5198     0275  0020               	movlb	0	; select bank0
  5199     0276  0845               	movf	_LIN_rxCommand+1,w
  5200     0277  00F6               	movwf	LIN_getFromTable@rxCommand+1
  5201     0278  0844               	movf	_LIN_rxCommand,w
  5202     0279  00F5               	movwf	LIN_getFromTable@rxCommand
  5203     027A                     l1826:
  5204                           
  5205                           ;mcc_generated_files/LINDrivers/lin_slave.c: 222:     cmd &= 0x3F;
  5206     027A  303F               	movlw	63
  5207     027B  05F3               	andwf	LIN_getFromTable@cmd,f
  5208     027C                     l1828:
  5209                           
  5210                           ;mcc_generated_files/LINDrivers/lin_slave.c: 224:     for(uint8_t length = 0; length < L
      +                          IN_rxCommandLength; length++){
  5211     027C  01F4               	clrf	LIN_getFromTable@length
  5212     027D  2A9F               	goto	l1842
  5213     027E                     l1830:
  5214                           
  5215                           ;mcc_generated_files/LINDrivers/lin_slave.c: 225:         if(cmd == rxCommand->cmd){
  5216     027E  0875               	movf	LIN_getFromTable@rxCommand,w
  5217     027F  0084               	movwf	4
  5218     0280  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5219     0281  0085               	movwf	5
  5220     0282  0800               	movf	0,w	;code access
  5221     0283  0673               	xorwf	LIN_getFromTable@cmd,w
  5222     0284  1D03               	skipz
  5223     0285  2A87               	goto	u971
  5224     0286  2A88               	goto	u970
  5225     0287                     u971:
  5226     0287  2A89               	goto	l1834
  5227     0288                     u970:
  5228     0288  2ABE               	goto	l1858
  5229     0289                     l1834:
  5230                           
  5231                           ;mcc_generated_files/LINDrivers/lin_slave.c: 228:         rxCommand++;
  5232     0289  3005               	movlw	5
  5233     028A  07F5               	addwf	LIN_getFromTable@rxCommand,f
  5234     028B  3000               	movlw	0
  5235     028C  3DF6               	addwfc	LIN_getFromTable@rxCommand+1,f
  5236                           
  5237                           ;mcc_generated_files/LINDrivers/lin_slave.c: 230:         if(length == (LIN_rxCommandLen
      +                          gth-1)){
  5238     028D  0854               	movf	_LIN_rxCommandLength,w
  5239     028E  3EFF               	addlw	255
  5240     028F  00F1               	movwf	??_LIN_getFromTable
  5241     0290  30FF               	movlw	255
  5242     0291  1803               	skipnc
  5243     0292  3000               	movlw	0
  5244     0293  00F2               	movwf	??_LIN_getFromTable+1
  5245     0294  0874               	movf	LIN_getFromTable@length,w
  5246     0295  0671               	xorwf	??_LIN_getFromTable,w
  5247     0296  0472               	iorwf	??_LIN_getFromTable+1,w
  5248     0297  1D03               	skipz
  5249     0298  2A9A               	goto	u981
  5250     0299  2A9B               	goto	u980
  5251     029A                     u981:
  5252     029A  2A9D               	goto	l1840
  5253     029B                     u980:
  5254     029B                     l1836:
  5255                           
  5256                           ;mcc_generated_files/LINDrivers/lin_slave.c: 231:             return ERROR;
  5257     029B  3002               	movlw	2
  5258     029C  2AD1               	goto	l187
  5259     029D                     l1840:
  5260                           
  5261                           ;mcc_generated_files/LINDrivers/lin_slave.c: 233:     }
  5262     029D  3001               	movlw	1
  5263     029E  07F4               	addwf	LIN_getFromTable@length,f
  5264     029F                     l1842:
  5265     029F  0854               	movf	_LIN_rxCommandLength,w
  5266     02A0  0274               	subwf	LIN_getFromTable@length,w
  5267     02A1  1C03               	skipc
  5268     02A2  2AA4               	goto	u991
  5269     02A3  2AA5               	goto	u990
  5270     02A4                     u991:
  5271     02A4  2A7E               	goto	l1830
  5272     02A5                     u990:
  5273     02A5  2ABE               	goto	l1858
  5274     02A6                     l1844:
  5275                           
  5276                           ;mcc_generated_files/LINDrivers/lin_slave.c: 237:             return rxCommand->cmd;
  5277     02A6  0875               	movf	LIN_getFromTable@rxCommand,w
  5278     02A7  0084               	movwf	4
  5279     02A8  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5280     02A9  0085               	movwf	5
  5281     02AA  0800               	movf	0,w	;code access
  5282     02AB  2AD1               	goto	l187
  5283     02AC                     l1848:
  5284                           
  5285                           ;mcc_generated_files/LINDrivers/lin_slave.c: 239:             return rxCommand->type;
  5286     02AC  3001               	movlw	1
  5287     02AD  0775               	addwf	LIN_getFromTable@rxCommand,w
  5288     02AE  0084               	movwf	4
  5289     02AF  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5290     02B0  1803               	skipnc
  5291     02B1  3E01               	addlw	1
  5292     02B2  0085               	movwf	5
  5293     02B3  0800               	movf	0,w	;code access
  5294     02B4  2AD1               	goto	l187
  5295     02B5                     l1852:
  5296                           
  5297                           ;mcc_generated_files/LINDrivers/lin_slave.c: 241:             return rxCommand->length;
  5298     02B5  3002               	movlw	2
  5299     02B6  0775               	addwf	LIN_getFromTable@rxCommand,w
  5300     02B7  0084               	movwf	4
  5301     02B8  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5302     02B9  1803               	skipnc
  5303     02BA  3E01               	addlw	1
  5304     02BB  0085               	movwf	5
  5305     02BC  0800               	movf	0,w	;code access
  5306     02BD  2AD1               	goto	l187
  5307     02BE                     l1858:
  5308     02BE  0870               	movf	LIN_getFromTable@param,w
  5309     02BF  00F1               	movwf	??_LIN_getFromTable
  5310     02C0  01F2               	clrf	??_LIN_getFromTable+1
  5311                           
  5312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5313                           ; Switch size 1, requested type "simple"
  5314                           ; Number of cases is 1, Range of values is 0 to 0
  5315                           ; switch strategies available:
  5316                           ; Name         Instructions Cycles
  5317                           ; simple_byte            4     3 (average)
  5318                           ; direct_byte            8     6 (fixed)
  5319                           ; jumptable            260     6 (fixed)
  5320                           ;	Chosen strategy is simple_byte
  5321     02C1  0872               	movf	??_LIN_getFromTable+1,w
  5322     02C2  3A00               	xorlw	0	; case 0
  5323     02C3  1903               	skipnz
  5324     02C4  2AC6               	goto	l2452
  5325     02C5  2A9B               	goto	l1836
  5326     02C6                     l2452:
  5327                           
  5328                           ; Switch size 1, requested type "simple"
  5329                           ; Number of cases is 3, Range of values is 0 to 2
  5330                           ; switch strategies available:
  5331                           ; Name         Instructions Cycles
  5332                           ; simple_byte           10     6 (average)
  5333                           ; direct_byte           12     6 (fixed)
  5334                           ; jumptable            260     6 (fixed)
  5335                           ;	Chosen strategy is simple_byte
  5336     02C6  0871               	movf	??_LIN_getFromTable,w
  5337     02C7  3A00               	xorlw	0	; case 0
  5338     02C8  1903               	skipnz
  5339     02C9  2AA6               	goto	l1844
  5340     02CA  3A01               	xorlw	1	; case 1
  5341     02CB  1903               	skipnz
  5342     02CC  2AAC               	goto	l1848
  5343     02CD  3A03               	xorlw	3	; case 2
  5344     02CE  1903               	skipnz
  5345     02CF  2AB5               	goto	l1852
  5346     02D0  2A9B               	goto	l1836
  5347     02D1                     l187:
  5348     02D1  0008               	return
  5349     02D2                     __end_of_LIN_getFromTable:
  5350                           
  5351                           	psect	text32
  5352     018C                     __ptext32:	
  5353 ;; *************** function _LIN_calcParity *****************
  5354 ;; Defined at:
  5355 ;;		line 260 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  CMD             1    wreg     unsigned char 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  CMD             1    1[COMMON] unsigned char 
  5360 ;;  PID             1    2[COMMON] struct .
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      unsigned char 
  5363 ;; Registers used:
  5364 ;;		wreg, status,0
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5370 ;;      Params:         0       0       0       0       0       0       0       0
  5371 ;;      Locals:         2       0       0       0       0       0       0       0
  5372 ;;      Temps:          1       0       0       0       0       0       0       0
  5373 ;;      Totals:         3       0       0       0       0       0       0       0
  5374 ;;Total ram usage:        3 bytes
  5375 ;; Hardware stack levels used: 1
  5376 ;; Hardware stack levels required when called: 4
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_LIN_checkPID
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384     018C                     _LIN_calcParity:	
  5385                           ;psect for function _LIN_calcParity
  5386                           
  5387                           
  5388                           ;incstack = 0
  5389                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  5390                           ;LIN_calcParity@CMD stored from wreg
  5391     018C  00F1               	movwf	LIN_calcParity@CMD
  5392     018D                     l1872:
  5393                           
  5394                           ;mcc_generated_files/LINDrivers/lin_slave.c: 261:     lin_pid_t PID;;mcc_generated_files
      +                          /LINDrivers/lin_slave.c: 262:     PID.rawPID = CMD;
  5395     018D  0871               	movf	LIN_calcParity@CMD,w
  5396     018E  00F2               	movwf	LIN_calcParity@PID
  5397                           
  5398                           ;mcc_generated_files/LINDrivers/lin_slave.c: 267:     PID.P0 = PID.ID0 ^ PID.ID1;
  5399     018F  18F2               	btfsc	LIN_calcParity@PID,1
  5400     0190  2992               	goto	u1001
  5401     0191  2994               	goto	u1000
  5402     0192                     u1001:
  5403     0192  3001               	movlw	1
  5404     0193  2995               	goto	u1002
  5405     0194                     u1000:
  5406     0194  3000               	movlw	0
  5407     0195                     u1002:
  5408     0195  00F0               	movwf	??_LIN_calcParity
  5409     0196  1872               	btfsc	LIN_calcParity@PID,0
  5410     0197  2999               	goto	u1011
  5411     0198  299B               	goto	u1010
  5412     0199                     u1011:
  5413     0199  3001               	movlw	1
  5414     019A  299C               	goto	u1012
  5415     019B                     u1010:
  5416     019B  3000               	movlw	0
  5417     019C                     u1012:
  5418     019C  0670               	xorwf	??_LIN_calcParity,w
  5419     019D  1D03               	skipz
  5420     019E  29A0               	goto	u1021
  5421     019F  29A2               	goto	u1020
  5422     01A0                     u1021:
  5423     01A0  1772               	bsf	LIN_calcParity@PID,6
  5424     01A1  29A3               	goto	u1034
  5425     01A2                     u1020:
  5426     01A2  1372               	bcf	LIN_calcParity@PID,6
  5427     01A3                     u1034:
  5428                           
  5429                           ;mcc_generated_files/LINDrivers/lin_slave.c: 268:     PID.P0 = PID.P0 ^ PID.ID2;
  5430     01A3  1972               	btfsc	LIN_calcParity@PID,2
  5431     01A4  29A6               	goto	u1041
  5432     01A5  29A8               	goto	u1040
  5433     01A6                     u1041:
  5434     01A6  3001               	movlw	1
  5435     01A7  29A9               	goto	u1042
  5436     01A8                     u1040:
  5437     01A8  3000               	movlw	0
  5438     01A9                     u1042:
  5439     01A9  00F0               	movwf	??_LIN_calcParity
  5440     01AA  1B72               	btfsc	LIN_calcParity@PID,6
  5441     01AB  29AD               	goto	u1051
  5442     01AC  29AF               	goto	u1050
  5443     01AD                     u1051:
  5444     01AD  3001               	movlw	1
  5445     01AE  29B0               	goto	u1052
  5446     01AF                     u1050:
  5447     01AF  3000               	movlw	0
  5448     01B0                     u1052:
  5449     01B0  0670               	xorwf	??_LIN_calcParity,w
  5450     01B1  1D03               	skipz
  5451     01B2  29B4               	goto	u1061
  5452     01B3  29B6               	goto	u1060
  5453     01B4                     u1061:
  5454     01B4  1772               	bsf	LIN_calcParity@PID,6
  5455     01B5  29B7               	goto	u1074
  5456     01B6                     u1060:
  5457     01B6  1372               	bcf	LIN_calcParity@PID,6
  5458     01B7                     u1074:
  5459                           
  5460                           ;mcc_generated_files/LINDrivers/lin_slave.c: 269:     PID.P0 = PID.P0 ^ PID.ID4;
  5461     01B7  1A72               	btfsc	LIN_calcParity@PID,4
  5462     01B8  29BA               	goto	u1081
  5463     01B9  29BC               	goto	u1080
  5464     01BA                     u1081:
  5465     01BA  3001               	movlw	1
  5466     01BB  29BD               	goto	u1082
  5467     01BC                     u1080:
  5468     01BC  3000               	movlw	0
  5469     01BD                     u1082:
  5470     01BD  00F0               	movwf	??_LIN_calcParity
  5471     01BE  1B72               	btfsc	LIN_calcParity@PID,6
  5472     01BF  29C1               	goto	u1091
  5473     01C0  29C3               	goto	u1090
  5474     01C1                     u1091:
  5475     01C1  3001               	movlw	1
  5476     01C2  29C4               	goto	u1092
  5477     01C3                     u1090:
  5478     01C3  3000               	movlw	0
  5479     01C4                     u1092:
  5480     01C4  0670               	xorwf	??_LIN_calcParity,w
  5481     01C5  1D03               	skipz
  5482     01C6  29C8               	goto	u1101
  5483     01C7  29CA               	goto	u1100
  5484     01C8                     u1101:
  5485     01C8  1772               	bsf	LIN_calcParity@PID,6
  5486     01C9  29CB               	goto	u1114
  5487     01CA                     u1100:
  5488     01CA  1372               	bcf	LIN_calcParity@PID,6
  5489     01CB                     u1114:
  5490                           
  5491                           ;mcc_generated_files/LINDrivers/lin_slave.c: 270:     PID.P1 = PID.ID1 ^ PID.ID3;
  5492     01CB  19F2               	btfsc	LIN_calcParity@PID,3
  5493     01CC  29CE               	goto	u1121
  5494     01CD  29D0               	goto	u1120
  5495     01CE                     u1121:
  5496     01CE  3001               	movlw	1
  5497     01CF  29D1               	goto	u1122
  5498     01D0                     u1120:
  5499     01D0  3000               	movlw	0
  5500     01D1                     u1122:
  5501     01D1  00F0               	movwf	??_LIN_calcParity
  5502     01D2  18F2               	btfsc	LIN_calcParity@PID,1
  5503     01D3  29D5               	goto	u1131
  5504     01D4  29D7               	goto	u1130
  5505     01D5                     u1131:
  5506     01D5  3001               	movlw	1
  5507     01D6  29D8               	goto	u1132
  5508     01D7                     u1130:
  5509     01D7  3000               	movlw	0
  5510     01D8                     u1132:
  5511     01D8  0670               	xorwf	??_LIN_calcParity,w
  5512     01D9  1D03               	skipz
  5513     01DA  29DC               	goto	u1141
  5514     01DB  29DE               	goto	u1140
  5515     01DC                     u1141:
  5516     01DC  17F2               	bsf	LIN_calcParity@PID,7
  5517     01DD  29DF               	goto	u1154
  5518     01DE                     u1140:
  5519     01DE  13F2               	bcf	LIN_calcParity@PID,7
  5520     01DF                     u1154:
  5521                           
  5522                           ;mcc_generated_files/LINDrivers/lin_slave.c: 271:     PID.P1 = PID.P1 ^ PID.ID4;
  5523     01DF  1A72               	btfsc	LIN_calcParity@PID,4
  5524     01E0  29E2               	goto	u1161
  5525     01E1  29E4               	goto	u1160
  5526     01E2                     u1161:
  5527     01E2  3001               	movlw	1
  5528     01E3  29E5               	goto	u1162
  5529     01E4                     u1160:
  5530     01E4  3000               	movlw	0
  5531     01E5                     u1162:
  5532     01E5  00F0               	movwf	??_LIN_calcParity
  5533     01E6  1BF2               	btfsc	LIN_calcParity@PID,7
  5534     01E7  29E9               	goto	u1171
  5535     01E8  29EB               	goto	u1170
  5536     01E9                     u1171:
  5537     01E9  3001               	movlw	1
  5538     01EA  29EC               	goto	u1172
  5539     01EB                     u1170:
  5540     01EB  3000               	movlw	0
  5541     01EC                     u1172:
  5542     01EC  0670               	xorwf	??_LIN_calcParity,w
  5543     01ED  1D03               	skipz
  5544     01EE  29F0               	goto	u1181
  5545     01EF  29F2               	goto	u1180
  5546     01F0                     u1181:
  5547     01F0  17F2               	bsf	LIN_calcParity@PID,7
  5548     01F1  29F3               	goto	u1194
  5549     01F2                     u1180:
  5550     01F2  13F2               	bcf	LIN_calcParity@PID,7
  5551     01F3                     u1194:
  5552                           
  5553                           ;mcc_generated_files/LINDrivers/lin_slave.c: 272:     PID.P1 = PID.P1 ^ PID.ID5;
  5554     01F3  1AF2               	btfsc	LIN_calcParity@PID,5
  5555     01F4  29F6               	goto	u1201
  5556     01F5  29F8               	goto	u1200
  5557     01F6                     u1201:
  5558     01F6  3001               	movlw	1
  5559     01F7  29F9               	goto	u1202
  5560     01F8                     u1200:
  5561     01F8  3000               	movlw	0
  5562     01F9                     u1202:
  5563     01F9  00F0               	movwf	??_LIN_calcParity
  5564     01FA  1BF2               	btfsc	LIN_calcParity@PID,7
  5565     01FB  29FD               	goto	u1211
  5566     01FC  29FF               	goto	u1210
  5567     01FD                     u1211:
  5568     01FD  3001               	movlw	1
  5569     01FE  2A00               	goto	u1212
  5570     01FF                     u1210:
  5571     01FF  3000               	movlw	0
  5572     0200                     u1212:
  5573     0200  0670               	xorwf	??_LIN_calcParity,w
  5574     0201  1D03               	skipz
  5575     0202  2A04               	goto	u1221
  5576     0203  2A06               	goto	u1220
  5577     0204                     u1221:
  5578     0204  17F2               	bsf	LIN_calcParity@PID,7
  5579     0205  2A07               	goto	u1234
  5580     0206                     u1220:
  5581     0206  13F2               	bcf	LIN_calcParity@PID,7
  5582     0207                     u1234:
  5583     0207                     l1874:
  5584                           
  5585                           ;mcc_generated_files/LINDrivers/lin_slave.c: 273:     PID.P1 = ~PID.P1;
  5586     0207  1003               	clrc
  5587     0208  1FF2               	btfss	LIN_calcParity@PID,7
  5588     0209  1403               	setc
  5589     020A  1803               	btfsc	3,0
  5590     020B  2A0D               	goto	u1241
  5591     020C  2A0F               	goto	u1240
  5592     020D                     u1241:
  5593     020D  17F2               	bsf	LIN_calcParity@PID,7
  5594     020E  2A10               	goto	u1254
  5595     020F                     u1240:
  5596     020F  13F2               	bcf	LIN_calcParity@PID,7
  5597     0210                     u1254:
  5598     0210                     l1876:
  5599                           
  5600                           ;mcc_generated_files/LINDrivers/lin_slave.c: 275:     return PID.rawPID;
  5601     0210  0872               	movf	LIN_calcParity@PID,w
  5602     0211                     l201:
  5603     0211  0008               	return
  5604     0212                     __end_of_LIN_calcParity:
  5605                           
  5606                           	psect	text33
  5607     0538                     __ptext33:	
  5608 ;; *************** function _LIN_breakCheck *****************
  5609 ;; Defined at:
  5610 ;;		line 329 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      _Bool 
  5617 ;; Registers used:
  5618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5624 ;;      Params:         0       0       0       0       0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0
  5627 ;;      Totals:         0       0       0       0       0       0       0       0
  5628 ;;Total ram usage:        0 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; Hardware stack levels required when called: 5
  5631 ;; This function calls:
  5632 ;;		_EUSART_Read
  5633 ;;		_EUSART_get_last_status
  5634 ;; This function is called by:
  5635 ;;		_LIN_handler
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639     0538                     _LIN_breakCheck:	
  5640                           ;psect for function _LIN_breakCheck
  5641                           
  5642     0538                     l1954:	
  5643                           ;incstack = 0
  5644                           ; Regs used in _LIN_breakCheck: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5645                           
  5646                           
  5647                           ;mcc_generated_files/LINDrivers/lin_slave.c: 331:     if((EUSART_Read() == 0x00) && (EUS
      +                          ART_get_last_status().ferr == 1)){
  5648     0538  3184  2416  3185   	fcall	_EUSART_Read
  5649     053B  3A00               	xorlw	0
  5650     053C  1D03               	skipz
  5651     053D  2D3F               	goto	u1371
  5652     053E  2D40               	goto	u1370
  5653     053F                     u1371:
  5654     053F  2D49               	goto	l1962
  5655     0540                     u1370:
  5656     0540                     l1956:
  5657     0540  3185  25FE  3185   	fcall	_EUSART_get_last_status
  5658     0543  1C89               	btfss	9,1
  5659     0544  2D46               	goto	u1381
  5660     0545  2D47               	goto	u1380
  5661     0546                     u1381:
  5662     0546  2D49               	goto	l1962
  5663     0547                     u1380:
  5664     0547                     l1958:
  5665                           
  5666                           ;mcc_generated_files/LINDrivers/lin_slave.c: 332:         return 1;
  5667     0547  3001               	movlw	1
  5668     0548  2D4A               	goto	l231
  5669     0549                     l1962:
  5670                           
  5671                           ;mcc_generated_files/LINDrivers/lin_slave.c: 335:     return 0;
  5672     0549  3000               	movlw	0
  5673     054A                     l231:
  5674     054A  0008               	return
  5675     054B                     __end_of_LIN_breakCheck:
  5676                           
  5677                           	psect	text34
  5678     05FE                     __ptext34:	
  5679 ;; *************** function _EUSART_get_last_status *****************
  5680 ;; Defined at:
  5681 ;;		line 147 in file "mcc_generated_files/eusart.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;		None
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;		None
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  1    wreg      struct .
  5688 ;; Registers used:
  5689 ;;		wreg
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5695 ;;      Params:         0       0       0       0       0       0       0       0
  5696 ;;      Locals:         0       0       0       0       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0       0       0       0
  5698 ;;      Totals:         0       0       0       0       0       0       0       0
  5699 ;;Total ram usage:        0 bytes
  5700 ;; Hardware stack levels used: 1
  5701 ;; Hardware stack levels required when called: 4
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_LIN_breakCheck
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709     05FE                     _EUSART_get_last_status:	
  5710                           ;psect for function _EUSART_get_last_status
  5711                           
  5712     05FE                     l1882:	
  5713                           ;incstack = 0
  5714                           ; Regs used in _EUSART_get_last_status: [wreg]
  5715                           
  5716                           
  5717                           ;mcc_generated_files/eusart.c: 148:     return eusartRxLastError;
  5718     05FE  0020               	movlb	0	; select bank0
  5719     05FF  0849               	movf	_eusartRxLastError,w	;volatile
  5720     0600                     l352:
  5721     0600  0008               	return
  5722     0601                     __end_of_EUSART_get_last_status:
  5723                           
  5724                           	psect	text35
  5725     0416                     __ptext35:	
  5726 ;; *************** function _EUSART_Read *****************
  5727 ;; Defined at:
  5728 ;;		line 151 in file "mcc_generated_files/eusart.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;		None
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  readValue       1    0[COMMON] unsigned char 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      unsigned char 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5742 ;;      Params:         0       0       0       0       0       0       0       0
  5743 ;;      Locals:         1       0       0       0       0       0       0       0
  5744 ;;      Temps:          0       0       0       0       0       0       0       0
  5745 ;;      Totals:         1       0       0       0       0       0       0       0
  5746 ;;Total ram usage:        1 bytes
  5747 ;; Hardware stack levels used: 1
  5748 ;; Hardware stack levels required when called: 4
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_LIN_handler
  5753 ;;		_LIN_breakCheck
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757     0416                     _EUSART_Read:	
  5758                           ;psect for function _EUSART_Read
  5759                           
  5760     0416                     l1802:	
  5761                           ;incstack = 0
  5762                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5763                           
  5764     0416                     l1804:	
  5765                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5766                           
  5767                           
  5768                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5769     0416  0020               	movlb	0	; select bank0
  5770     0417  084A               	movf	_eusartRxCount,w	;volatile
  5771     0418  1903               	btfsc	3,2
  5772     0419  2C1B               	goto	u951
  5773     041A  2C1C               	goto	u950
  5774     041B                     u951:
  5775     041B  2C16               	goto	l1804
  5776     041C                     u950:
  5777     041C                     l1806:
  5778                           
  5779                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  5780     041C  084B               	movf	_eusartRxTail,w	;volatile
  5781     041D  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5782     041E  0086               	movwf	6
  5783     041F  0187               	clrf	7
  5784     0420  0801               	movf	1,w
  5785     0421  00C9               	movwf	_eusartRxLastError	;volatile
  5786                           
  5787                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  5788     0422  084B               	movf	_eusartRxTail,w
  5789     0423  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5790     0424  0086               	movwf	6
  5791     0425  0187               	clrf	7
  5792     0426  0801               	movf	1,w
  5793     0427  00F0               	movwf	EUSART_Read@readValue
  5794     0428                     l1808:
  5795     0428  3001               	movlw	1
  5796     0429  07CB               	addwf	_eusartRxTail,f	;volatile
  5797     042A                     l1810:
  5798                           
  5799                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  5800     042A  3008               	movlw	8
  5801     042B  024B               	subwf	_eusartRxTail,w	;volatile
  5802     042C  1C03               	skipc
  5803     042D  2C2F               	goto	u961
  5804     042E  2C30               	goto	u960
  5805     042F                     u961:
  5806     042F  2C31               	goto	l1814
  5807     0430                     u960:
  5808     0430                     l1812:
  5809                           
  5810                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  5811     0430  01CB               	clrf	_eusartRxTail	;volatile
  5812     0431                     l1814:
  5813                           
  5814                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  5815     0431  0021               	movlb	1	; select bank1
  5816     0432  1291               	bcf	17,5	;volatile
  5817     0433                     l1816:
  5818                           
  5819                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  5820     0433  3001               	movlw	1
  5821     0434  0020               	movlb	0	; select bank0
  5822     0435  02CA               	subwf	_eusartRxCount,f	;volatile
  5823     0436                     l1818:
  5824                           
  5825                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  5826     0436  0021               	movlb	1	; select bank1
  5827     0437  1691               	bsf	17,5	;volatile
  5828     0438                     l1820:
  5829                           
  5830                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  5831     0438  0870               	movf	EUSART_Read@readValue,w
  5832     0439                     l359:
  5833     0439  0008               	return
  5834     043A                     __end_of_EUSART_Read:
  5835                           
  5836                           	psect	text36
  5837     0599                     __ptext36:	
  5838 ;; *************** function _EUSART_is_rx_ready *****************
  5839 ;; Defined at:
  5840 ;;		line 137 in file "mcc_generated_files/eusart.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      _Bool 
  5847 ;; Registers used:
  5848 ;;		wreg, status,2, status,0
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5854 ;;      Params:         0       0       0       0       0       0       0       0
  5855 ;;      Locals:         0       0       0       0       0       0       0       0
  5856 ;;      Temps:          0       0       0       0       0       0       0       0
  5857 ;;      Totals:         0       0       0       0       0       0       0       0
  5858 ;;Total ram usage:        0 bytes
  5859 ;; Hardware stack levels used: 1
  5860 ;; Hardware stack levels required when called: 4
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_LIN_handler
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868     0599                     _EUSART_is_rx_ready:	
  5869                           ;psect for function _EUSART_is_rx_ready
  5870                           
  5871     0599                     l1942:	
  5872                           ;incstack = 0
  5873                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5874                           
  5875                           
  5876                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  5877     0599  0020               	movlb	0	; select bank0
  5878     059A  084A               	movf	_eusartRxCount,w	;volatile
  5879     059B  1D03               	btfss	3,2
  5880     059C  2D9E               	goto	u1351
  5881     059D  2DA0               	goto	u1350
  5882     059E                     u1351:
  5883     059E  3001               	movlw	1
  5884     059F  2DA1               	goto	u1360
  5885     05A0                     u1350:
  5886     05A0  3000               	movlw	0
  5887     05A1                     u1360:
  5888     05A1                     l346:
  5889     05A1  0008               	return
  5890     05A2                     __end_of_EUSART_is_rx_ready:
  5891                           
  5892                           	psect	intentry
  5893     0004                     __pintentry:	
  5894 ;; *************** function _INTERRUPT_InterruptManager *****************
  5895 ;; Defined at:
  5896 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5910 ;;      Params:         0       0       0       0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 3
  5917 ;; This function calls:
  5918 ;;		NULL
  5919 ;;		_EUSART_Receive_ISR
  5920 ;;		_EUSART_Transmit_ISR
  5921 ;;		_TMR0_ISR
  5922 ;; This function is called by:
  5923 ;;		Interrupt level 1
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927     0004                     _INTERRUPT_InterruptManager:
  5928                           
  5929                           ;incstack = 0
  5930     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5931                           
  5932                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5933     0005  3180               	pagesel	$
  5934     0006                     i1l2174:
  5935                           
  5936                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5937     0006  1E8B               	btfss	11,5	;volatile
  5938     0007  2809               	goto	u163_21
  5939     0008  280A               	goto	u163_20
  5940     0009                     u163_21:
  5941     0009  2812               	goto	i1l466
  5942     000A                     u163_20:
  5943     000A                     i1l2176:
  5944     000A  1D0B               	btfss	11,2	;volatile
  5945     000B  280D               	goto	u164_21
  5946     000C  280E               	goto	u164_20
  5947     000D                     u164_21:
  5948     000D  2812               	goto	i1l466
  5949     000E                     u164_20:
  5950     000E                     i1l2178:
  5951                           
  5952                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5953     000E  3185  254B  3180   	fcall	_TMR0_ISR
  5954                           
  5955                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5956     0011  2836               	goto	i1l474
  5957     0012                     i1l466:	
  5958                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5959                           
  5960     0012  1F0B               	btfss	11,6	;volatile
  5961     0013  2815               	goto	u165_21
  5962     0014  2816               	goto	u165_20
  5963     0015                     u165_21:
  5964     0015  2836               	goto	i1l474
  5965     0016                     u165_20:
  5966     0016                     i1l2180:
  5967                           
  5968                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5969     0016  0021               	movlb	1	; select bank1
  5970     0017  1E11               	btfss	17,4	;volatile
  5971     0018  281A               	goto	u166_21
  5972     0019  281B               	goto	u166_20
  5973     001A                     u166_21:
  5974     001A  2826               	goto	i1l469
  5975     001B                     u166_20:
  5976     001B                     i1l2182:
  5977     001B  0020               	movlb	0	; select bank0
  5978     001C  1E11               	btfss	17,4	;volatile
  5979     001D  281F               	goto	u167_21
  5980     001E  2820               	goto	u167_20
  5981     001F                     u167_21:
  5982     001F  2826               	goto	i1l469
  5983     0020                     u167_20:
  5984     0020                     i1l2184:
  5985                           
  5986                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
  5987     0020  0843               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5988     0021  008A               	movwf	10
  5989     0022  0842               	movf	_EUSART_TxDefaultInterruptHandler,w
  5990     0023  000A               	callw
  5991     0024  3180               	pagesel	$
  5992                           
  5993                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5994     0025  2836               	goto	i1l474
  5995     0026                     i1l469:	
  5996                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5997                           
  5998     0026  0021               	movlb	1	; select bank1
  5999     0027  1E91               	btfss	17,5	;volatile
  6000     0028  282A               	goto	u168_21
  6001     0029  282B               	goto	u168_20
  6002     002A                     u168_21:
  6003     002A  2836               	goto	i1l473
  6004     002B                     u168_20:
  6005     002B                     i1l2186:
  6006     002B  0020               	movlb	0	; select bank0
  6007     002C  1E91               	btfss	17,5	;volatile
  6008     002D  282F               	goto	u169_21
  6009     002E  2830               	goto	u169_20
  6010     002F                     u169_21:
  6011     002F  2836               	goto	i1l473
  6012     0030                     u169_20:
  6013     0030                     i1l2188:
  6014                           
  6015                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
  6016     0030  0841               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  6017     0031  008A               	movwf	10
  6018     0032  0840               	movf	_EUSART_RxDefaultInterruptHandler,w
  6019     0033  000A               	callw
  6020     0034  3180               	pagesel	$
  6021                           
  6022                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  6023     0035  2836               	goto	i1l474
  6024     0036                     i1l473:	
  6025                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  6026                           
  6027     0036                     i1l474:
  6028     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6029     0037  0009               	retfie
  6030     0038                     __end_of_INTERRUPT_InterruptManager:
  6031                           
  6032                           	psect	text38
  6033     054B                     __ptext38:	
  6034 ;; *************** function _TMR0_ISR *****************
  6035 ;; Defined at:
  6036 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0, pclath, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6050 ;;      Params:         0       0       0       0       0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0
  6053 ;;      Totals:         0       0       0       0       0       0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; Hardware stack levels required when called: 2
  6057 ;; This function calls:
  6058 ;;		NULL
  6059 ;;		_LIN_timerHandler
  6060 ;;		_TMR0_DefaultInterruptHandler
  6061 ;; This function is called by:
  6062 ;;		_INTERRUPT_InterruptManager
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066     054B                     _TMR0_ISR:	
  6067                           ;psect for function _TMR0_ISR
  6068                           
  6069     054B                     i1l2156:	
  6070                           ;incstack = 0
  6071                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6072                           
  6073                           
  6074                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  6075     054B  110B               	bcf	11,2	;volatile
  6076     054C                     i1l2158:
  6077                           
  6078                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  6079     054C  0020               	movlb	0	; select bank0
  6080     054D  0848               	movf	_timer0ReloadVal,w	;volatile
  6081     054E  0095               	movwf	21	;volatile
  6082     054F                     i1l2160:
  6083                           
  6084                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  6085     054F  0838               	movf	_TMR0_InterruptHandler,w
  6086     0550  0439               	iorwf	_TMR0_InterruptHandler+1,w
  6087     0551  1903               	btfsc	3,2
  6088     0552  2D54               	goto	u162_21
  6089     0553  2D55               	goto	u162_20
  6090     0554                     u162_21:
  6091     0554  2D5A               	goto	i1l439
  6092     0555                     u162_20:
  6093     0555                     i1l2162:
  6094                           
  6095                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  6096     0555  0839               	movf	_TMR0_InterruptHandler+1,w
  6097     0556  008A               	movwf	10
  6098     0557  0838               	movf	_TMR0_InterruptHandler,w
  6099     0558  000A               	callw
  6100     0559  3185               	pagesel	$
  6101     055A                     i1l439:
  6102     055A  0008               	return
  6103     055B                     __end_of_TMR0_ISR:
  6104                           
  6105                           	psect	text39
  6106     0575                     __ptext39:	
  6107 ;; *************** function _LIN_timerHandler *****************
  6108 ;; Defined at:
  6109 ;;		line 298 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;		None
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      void 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2, status,0, pclath, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6123 ;;      Params:         0       0       0       0       0       0       0       0
  6124 ;;      Locals:         0       0       0       0       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0       0       0       0
  6126 ;;      Totals:         0       0       0       0       0       0       0       0
  6127 ;;Total ram usage:        0 bytes
  6128 ;; Hardware stack levels used: 1
  6129 ;; Hardware stack levels required when called: 1
  6130 ;; This function calls:
  6131 ;;		i1_LIN_stopTimer
  6132 ;; This function is called by:
  6133 ;;		_LIN_setTimerHandler
  6134 ;;		_TMR0_ISR
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138     0575                     _LIN_timerHandler:	
  6139                           ;psect for function _LIN_timerHandler
  6140                           
  6141     0575                     i1l1984:	
  6142                           ;incstack = 0
  6143                           ; Regs used in _LIN_timerHandler: [wreg+status,2+status,0+pclath+cstack]
  6144                           
  6145                           
  6146                           ;mcc_generated_files/LINDrivers/lin_slave.c: 301:     if (++CountCallBack >= LIN_timeout
      +                          )
  6147     0575  3001               	movlw	1
  6148     0576  0020               	movlb	0	; select bank0
  6149     0577  07D2               	addwf	_CountCallBack,f	;volatile
  6150     0578  086C               	movf	_LIN_timeout,w
  6151     0579  0252               	subwf	_CountCallBack,w	;volatile
  6152     057A  1C03               	skipc
  6153     057B  2D7D               	goto	u141_21
  6154     057C  2D7E               	goto	u141_20
  6155     057D                     u141_21:
  6156     057D  2D81               	goto	i1l215
  6157     057E                     u141_20:
  6158     057E                     i1l1986:
  6159                           
  6160                           ;mcc_generated_files/LINDrivers/lin_slave.c: 302:     {;mcc_generated_files/LINDrivers/l
      +                          in_slave.c: 304:         LIN_stopTimer();
  6161     057E  3185  25ED  3185   	fcall	i1_LIN_stopTimer
  6162     0581                     i1l215:
  6163     0581  0008               	return
  6164     0582                     __end_of_LIN_timerHandler:
  6165                           
  6166                           	psect	text40
  6167     0602                     __ptext40:	
  6168 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6169 ;; Defined at:
  6170 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      void 
  6177 ;; Registers used:
  6178 ;;		None
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6184 ;;      Params:         0       0       0       0       0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0       0
  6187 ;;      Totals:         0       0       0       0       0       0       0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; This function calls:
  6191 ;;		Nothing
  6192 ;; This function is called by:
  6193 ;;		_TMR0_Initialize
  6194 ;;		_TMR0_ISR
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198     0602                     _TMR0_DefaultInterruptHandler:	
  6199                           ;psect for function _TMR0_DefaultInterruptHandler
  6200                           
  6201     0602                     i1l445:	
  6202                           ;incstack = 0
  6203                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6204                           
  6205     0602  0008               	return
  6206     0603                     __end_of_TMR0_DefaultInterruptHandler:
  6207                           
  6208                           	psect	text41
  6209     05ED                     __ptext41:	
  6210 ;; *************** function i1_LIN_stopTimer *****************
  6211 ;; Defined at:
  6212 ;;		line 312 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		status,2
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6226 ;;      Params:         0       0       0       0       0       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0
  6229 ;;      Totals:         0       0       0       0       0       0       0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_LIN_timerHandler
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239     05ED                     i1_LIN_stopTimer:	
  6240                           ;psect for function i1_LIN_stopTimer
  6241                           
  6242     05ED                     i1l1906:	
  6243                           ;incstack = 0
  6244                           ; Regs used in i1_LIN_stopTimer: [status,2]
  6245                           
  6246                           
  6247                           ;mcc_generated_files/LINDrivers/lin_slave.c: 313:     __nop();
  6248     05ED  0000               	nop
  6249     05EE                     i1l1908:
  6250                           
  6251                           ;mcc_generated_files/LINDrivers/lin_slave.c: 315:     CountCallBack = 0;
  6252     05EE  0020               	movlb	0	; select bank0
  6253     05EF  01D2               	clrf	_CountCallBack	;volatile
  6254                           
  6255                           ;mcc_generated_files/LINDrivers/lin_slave.c: 316:     LIN_timerRunning = 0;
  6256     05F0  01D3               	clrf	_LIN_timerRunning
  6257     05F1                     i1l221:
  6258     05F1  0008               	return
  6259     05F2                     __end_ofi1_LIN_stopTimer:
  6260                           
  6261                           	psect	text42
  6262     047D                     __ptext42:	
  6263 ;; *************** function _EUSART_Transmit_ISR *****************
  6264 ;; Defined at:
  6265 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6279 ;;      Params:         0       0       0       0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_EUSART_Initialize
  6289 ;;		_INTERRUPT_InterruptManager
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293     047D                     _EUSART_Transmit_ISR:	
  6294                           ;psect for function _EUSART_Transmit_ISR
  6295                           
  6296     047D                     i1l2124:	
  6297                           ;incstack = 0
  6298                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6299                           
  6300                           
  6301                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6302     047D  3008               	movlw	8
  6303     047E  0020               	movlb	0	; select bank0
  6304     047F  024D               	subwf	_eusartTxBufferRemaining,w	;volatile
  6305     0480  1803               	skipnc
  6306     0481  2C83               	goto	u157_21
  6307     0482  2C84               	goto	u157_20
  6308     0483                     u157_21:
  6309     0483  2C98               	goto	i1l371
  6310     0484                     u157_20:
  6311     0484                     i1l2126:
  6312                           
  6313                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6314     0484  084E               	movf	_eusartTxTail,w
  6315     0485  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6316     0486  0086               	movwf	6
  6317     0487  0187               	clrf	7
  6318     0488  0801               	movf	1,w
  6319     0489  0023               	movlb	3	; select bank3
  6320     048A  009A               	movwf	26	;volatile
  6321     048B                     i1l2128:
  6322     048B  3001               	movlw	1
  6323     048C  0020               	movlb	0	; select bank0
  6324     048D  07CE               	addwf	_eusartTxTail,f	;volatile
  6325     048E                     i1l2130:
  6326                           
  6327                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6328     048E  3008               	movlw	8
  6329     048F  024E               	subwf	_eusartTxTail,w	;volatile
  6330     0490  1C03               	skipc
  6331     0491  2C93               	goto	u158_21
  6332     0492  2C94               	goto	u158_20
  6333     0493                     u158_21:
  6334     0493  2C95               	goto	i1l2134
  6335     0494                     u158_20:
  6336     0494                     i1l2132:
  6337                           
  6338                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6339     0494  01CE               	clrf	_eusartTxTail	;volatile
  6340     0495                     i1l2134:
  6341                           
  6342                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6343     0495  3001               	movlw	1
  6344     0496  07CD               	addwf	_eusartTxBufferRemaining,f	;volatile
  6345                           
  6346                           ;mcc_generated_files/eusart.c: 209:     }
  6347     0497  2C9A               	goto	i1l374
  6348     0498                     i1l371:	
  6349                           ;mcc_generated_files/eusart.c: 210:     else
  6350                           
  6351                           
  6352                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  6353     0498  0021               	movlb	1	; select bank1
  6354     0499  1211               	bcf	17,4	;volatile
  6355     049A                     i1l374:
  6356     049A  0008               	return
  6357     049B                     __end_of_EUSART_Transmit_ISR:
  6358                           
  6359                           	psect	text43
  6360     035A                     __ptext43:	
  6361 ;; *************** function _EUSART_Receive_ISR *****************
  6362 ;; Defined at:
  6363 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6377 ;;      Params:         0       0       0       0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0
  6380 ;;      Totals:         0       0       0       0       0       0       0       0
  6381 ;;Total ram usage:        0 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 2
  6384 ;; This function calls:
  6385 ;;		NULL
  6386 ;;		_EUSART_DefaultErrorHandler
  6387 ;;		_EUSART_DefaultFramingErrorHandler
  6388 ;;		_EUSART_DefaultOverrunErrorHandler
  6389 ;;		_EUSART_RxDataHandler
  6390 ;; This function is called by:
  6391 ;;		_EUSART_Initialize
  6392 ;;		_INTERRUPT_InterruptManager
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396     035A                     _EUSART_Receive_ISR:	
  6397                           ;psect for function _EUSART_Receive_ISR
  6398                           
  6399     035A                     i1l2136:	
  6400                           ;incstack = 0
  6401                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6402                           
  6403                           
  6404                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  6405     035A  0020               	movlb	0	; select bank0
  6406     035B  084C               	movf	_eusartRxHead,w	;volatile
  6407     035C  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6408     035D  0086               	movwf	6
  6409     035E  0187               	clrf	7
  6410     035F  0181               	clrf	1
  6411     0360                     i1l2138:
  6412                           
  6413                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  6414     0360  0023               	movlb	3	; select bank3
  6415     0361  1D1D               	btfss	29,2	;volatile
  6416     0362  2B64               	goto	u159_21
  6417     0363  2B65               	goto	u159_20
  6418     0364                     u159_21:
  6419     0364  2B70               	goto	i1l2144
  6420     0365                     u159_20:
  6421     0365                     i1l2140:
  6422                           
  6423                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6424     0365  0020               	movlb	0	; select bank0
  6425     0366  084C               	movf	_eusartRxHead,w	;volatile
  6426     0367  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6427     0368  0086               	movwf	6
  6428     0369  0187               	clrf	7
  6429     036A  1481               	bsf	1,1
  6430     036B                     i1l2142:
  6431                           
  6432                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  6433     036B  083F               	movf	_EUSART_FramingErrorHandler+1,w
  6434     036C  008A               	movwf	10
  6435     036D  083E               	movf	_EUSART_FramingErrorHandler,w
  6436     036E  000A               	callw
  6437     036F  3183               	pagesel	$
  6438     0370                     i1l2144:
  6439                           
  6440                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  6441     0370  0023               	movlb	3	; select bank3
  6442     0371  1C9D               	btfss	29,1	;volatile
  6443     0372  2B74               	goto	u160_21
  6444     0373  2B75               	goto	u160_20
  6445     0374                     u160_21:
  6446     0374  2B80               	goto	i1l2150
  6447     0375                     u160_20:
  6448     0375                     i1l2146:
  6449                           
  6450                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6451     0375  0020               	movlb	0	; select bank0
  6452     0376  084C               	movf	_eusartRxHead,w	;volatile
  6453     0377  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6454     0378  0086               	movwf	6
  6455     0379  0187               	clrf	7
  6456     037A  1501               	bsf	1,2
  6457     037B                     i1l2148:
  6458                           
  6459                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  6460     037B  083D               	movf	_EUSART_OverrunErrorHandler+1,w
  6461     037C  008A               	movwf	10
  6462     037D  083C               	movf	_EUSART_OverrunErrorHandler,w
  6463     037E  000A               	callw
  6464     037F  3183               	pagesel	$
  6465     0380                     i1l2150:
  6466                           
  6467                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  6468     0380  0020               	movlb	0	; select bank0
  6469     0381  084C               	movf	_eusartRxHead,w	;volatile
  6470     0382  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6471     0383  0086               	movwf	6
  6472     0384  0187               	clrf	7
  6473     0385  0801               	movf	1,w
  6474     0386  1903               	btfsc	3,2
  6475     0387  2B89               	goto	u161_21
  6476     0388  2B8A               	goto	u161_20
  6477     0389                     u161_21:
  6478     0389  2B90               	goto	i1l2154
  6479     038A                     u161_20:
  6480     038A                     i1l2152:
  6481                           
  6482                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  6483     038A  083B               	movf	_EUSART_ErrorHandler+1,w
  6484     038B  008A               	movwf	10
  6485     038C  083A               	movf	_EUSART_ErrorHandler,w
  6486     038D  000A               	callw
  6487     038E  3183               	pagesel	$
  6488                           
  6489                           ;mcc_generated_files/eusart.c: 233:     } else {
  6490     038F  2B93               	goto	i1l381
  6491     0390                     i1l2154:
  6492                           
  6493                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  6494     0390  3184  24FC  3183   	fcall	_EUSART_RxDataHandler
  6495     0393                     i1l381:
  6496     0393  0008               	return
  6497     0394                     __end_of_EUSART_Receive_ISR:
  6498                           
  6499                           	psect	text44
  6500     05F6                     __ptext44:	
  6501 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6502 ;; Defined at:
  6503 ;;		line 252 in file "mcc_generated_files/eusart.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      void 
  6510 ;; Registers used:
  6511 ;;		None
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6517 ;;      Params:         0       0       0       0       0       0       0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0
  6520 ;;      Totals:         0       0       0       0       0       0       0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used: 1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_EUSART_Initialize
  6527 ;;		_EUSART_Receive_ISR
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531     05F6                     _EUSART_DefaultOverrunErrorHandler:	
  6532                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6533                           
  6534     05F6                     i1l2020:	
  6535                           ;incstack = 0
  6536                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6537                           
  6538                           
  6539                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  6540     05F6  0023               	movlb	3	; select bank3
  6541     05F7  121D               	bcf	29,4	;volatile
  6542                           
  6543                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  6544     05F8  161D               	bsf	29,4	;volatile
  6545     05F9                     i1l391:
  6546     05F9  0008               	return
  6547     05FA                     __end_of_EUSART_DefaultOverrunErrorHandler:
  6548                           
  6549                           	psect	text45
  6550     0603                     __ptext45:	
  6551 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6552 ;; Defined at:
  6553 ;;		line 250 in file "mcc_generated_files/eusart.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;		None
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  1    wreg      void 
  6560 ;; Registers used:
  6561 ;;		None
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6567 ;;      Params:         0       0       0       0       0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0       0       0       0
  6569 ;;      Temps:          0       0       0       0       0       0       0       0
  6570 ;;      Totals:         0       0       0       0       0       0       0       0
  6571 ;;Total ram usage:        0 bytes
  6572 ;; Hardware stack levels used: 1
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_EUSART_Initialize
  6577 ;;		_EUSART_Receive_ISR
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581     0603                     _EUSART_DefaultFramingErrorHandler:	
  6582                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6583                           
  6584     0603                     i1l388:	
  6585                           ;incstack = 0
  6586                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6587                           
  6588     0603  0008               	return
  6589     0604                     __end_of_EUSART_DefaultFramingErrorHandler:
  6590                           
  6591                           	psect	text46
  6592     05FA                     __ptext46:	
  6593 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6594 ;; Defined at:
  6595 ;;		line 260 in file "mcc_generated_files/eusart.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;		None
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6609 ;;      Params:         0       0       0       0       0       0       0       0
  6610 ;;      Locals:         0       0       0       0       0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0
  6612 ;;      Totals:         0       0       0       0       0       0       0       0
  6613 ;;Total ram usage:        0 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 1
  6616 ;; This function calls:
  6617 ;;		_EUSART_RxDataHandler
  6618 ;; This function is called by:
  6619 ;;		_EUSART_Initialize
  6620 ;;		_EUSART_Receive_ISR
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624     05FA                     _EUSART_DefaultErrorHandler:	
  6625                           ;psect for function _EUSART_DefaultErrorHandler
  6626                           
  6627     05FA                     i1l2022:	
  6628                           ;incstack = 0
  6629                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6630                           
  6631                           
  6632                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  6633     05FA  3184  24FC  3185   	fcall	_EUSART_RxDataHandler
  6634     05FD                     i1l394:
  6635     05FD  0008               	return
  6636     05FE                     __end_of_EUSART_DefaultErrorHandler:
  6637                           
  6638                           	psect	text47
  6639     04FC                     __ptext47:	
  6640 ;; *************** function _EUSART_RxDataHandler *****************
  6641 ;; Defined at:
  6642 ;;		line 240 in file "mcc_generated_files/eusart.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;		None
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;		None
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6656 ;;      Params:         0       0       0       0       0       0       0       0
  6657 ;;      Locals:         0       0       0       0       0       0       0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0
  6659 ;;      Totals:         0       0       0       0       0       0       0       0
  6660 ;;Total ram usage:        0 bytes
  6661 ;; Hardware stack levels used: 1
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_EUSART_Receive_ISR
  6666 ;;		_EUSART_DefaultErrorHandler
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670     04FC                     _EUSART_RxDataHandler:	
  6671                           ;psect for function _EUSART_RxDataHandler
  6672                           
  6673     04FC                     i1l1896:	
  6674                           ;incstack = 0
  6675                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6676                           
  6677                           
  6678                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  6679     04FC  0020               	movlb	0	; select bank0
  6680     04FD  084C               	movf	_eusartRxHead,w
  6681     04FE  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6682     04FF  0086               	movwf	6
  6683     0500  0187               	clrf	7
  6684     0501  0023               	movlb	3	; select bank3
  6685     0502  0819               	movf	25,w	;volatile
  6686     0503  0081               	movwf	1
  6687     0504                     i1l1898:
  6688     0504  3001               	movlw	1
  6689     0505  0020               	movlb	0	; select bank0
  6690     0506  07CC               	addwf	_eusartRxHead,f	;volatile
  6691     0507                     i1l1900:
  6692                           
  6693                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6694     0507  3008               	movlw	8
  6695     0508  024C               	subwf	_eusartRxHead,w	;volatile
  6696     0509  1C03               	skipc
  6697     050A  2D0C               	goto	u126_21
  6698     050B  2D0D               	goto	u126_20
  6699     050C                     u126_21:
  6700     050C  2D0E               	goto	i1l1904
  6701     050D                     u126_20:
  6702     050D                     i1l1902:
  6703                           
  6704                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  6705     050D  01CC               	clrf	_eusartRxHead	;volatile
  6706     050E                     i1l1904:
  6707                           
  6708                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  6709     050E  3001               	movlw	1
  6710     050F  07CA               	addwf	_eusartRxCount,f	;volatile
  6711     0510                     i1l385:
  6712     0510  0008               	return
  6713     0511                     __end_of_EUSART_RxDataHandler:
  6714     0002                     ___latbits      equ	2
  6715     007E                     btemp           set	126	;btemp
  6716     007E                     int$flags       set	126
  6717     007E                     wtemp0          set	126
  6718                           
  6719                           	psect	config
  6720                           
  6721                           ;Config register CONFIG1 @ 0x8007
  6722                           ;	Oscillator Selection
  6723                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6724                           ;	Watchdog Timer Enable
  6725                           ;	WDTE = OFF, WDT disabled
  6726                           ;	Power-up Timer Enable
  6727                           ;	PWRTE = OFF, PWRT disabled
  6728                           ;	MCLR Pin Function Select
  6729                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6730                           ;	Flash Program Memory Code Protection
  6731                           ;	CP = OFF, Program memory code protection is disabled
  6732                           ;	Data Memory Code Protection
  6733                           ;	CPD = OFF, Data memory code protection is disabled
  6734                           ;	Brown-out Reset Enable
  6735                           ;	BOREN = ON, Brown-out Reset enabled
  6736                           ;	Clock Out Enable
  6737                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6738                           ;	Internal/External Switchover
  6739                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6740                           ;	Fail-Safe Clock Monitor Enable
  6741                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6742     8007                     	org	32775
  6743     8007  3FE4               	dw	16356
  6744                           
  6745                           ;Config register CONFIG2 @ 0x8008
  6746                           ;	Flash Memory Self-Write Protection
  6747                           ;	WRT = OFF, Write protection off
  6748                           ;	Voltage Regulator Capacitor Enable
  6749                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  6750                           ;	PLL Enable
  6751                           ;	PLLEN = ON, 4x PLL enabled
  6752                           ;	Stack Overflow/Underflow Reset Enable
  6753                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6754                           ;	Brown-out Reset Voltage Selection
  6755                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6756                           ;	Low-Voltage Programming Enable
  6757                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6758     8008                     	org	32776
  6759     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    5
    Data        1
    BSS         75
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      77
    BANK1            80      5      13
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    LIN_getChecksum@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    LIN_getFromTable@rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_getFromTable@rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK0[8]), 

    LIN_init@command	const PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), NULL(), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_queuePacket@tempSchedule$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_sendPacket@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@d1	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memset@dest	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memset@p	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    S26$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    scheduleTable$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    sp__memcpy	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    sp__memset	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Slave_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_queuePacket->_LIN_sendPacket
    _LIN_sendPacket->_LIN_getChecksum
    _LIN_checkPID->_LIN_getFromTable
    _LIN_breakCheck->_EUSART_Read

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _LIN_handler->_processLIN

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LIN_handler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2953
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     238
                  _EUSART_Initialize
               _LIN_Slave_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Slave_Initialize                                 0     0      0      99
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             5     1      4      99
                                              2 COMMON     5     1      4
                       _LIN_enableRx
                _LIN_setTimerHandler
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      24
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     115
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          5     5      0    2715
                                              0 BANK1      5     5      0
                                NULL *
                        _EUSART_Read
                 _EUSART_is_rx_ready
                     _LIN_breakCheck
                       _LIN_checkPID
                      _LIN_disableRx
                       _LIN_enableRx
                    _LIN_getChecksum
                   _LIN_getFromTable
                    _LIN_queuePacket
                     _LIN_startTimer
                      _LIN_stopTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                           9     9      0     504
                                              0 BANK0      9     9      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        2     1      1     319
                                              9 COMMON     2     1      1
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     1      6     102
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       1     1      0      58
                                              1 COMMON     1     1      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LIN_queuePacket                                      5     5      0     991
                                              0 BANK0      5     5      0
                    _LIN_getChecksum
                     _LIN_sendPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               9     3      6     149
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) _LIN_sendPacket                                       5     2      3     426
                                              9 COMMON     5     2      3
                       _EUSART_Write
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (4) _LIN_getChecksum                                      9     6      3     196
                                              0 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      58
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_checkPID                                         1     1      0     624
                                              7 COMMON     1     1      0
                     _LIN_calcParity
                   _LIN_getFromTable
 ---------------------------------------------------------------------------------
 (2) _LIN_getFromTable                                     7     6      1     192
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (3) _LIN_calcParity                                       3     3      0     345
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LIN_breakCheck                                       0     0      0      24
                        _EUSART_Read
             _EUSART_get_last_status
 ---------------------------------------------------------------------------------
 (3) _EUSART_get_last_status                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                                NULL *
                   _LIN_timerHandler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     0     0      0       0
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_handler
     NULL(Fake) *
     _EUSART_Read *
     _EUSART_is_rx_ready *
     _LIN_breakCheck *
       _EUSART_Read
       _EUSART_get_last_status
     _LIN_checkPID *
       _LIN_calcParity
       _LIN_getFromTable
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_getChecksum *
     _LIN_getFromTable *
     _LIN_queuePacket *
       _LIN_getChecksum
       _LIN_sendPacket
         _EUSART_Write
         _LIN_getChecksum
       _memcpy
     _LIN_startTimer *
       _TMR0_WriteTimer
     _LIN_stopTimer *
     _memset *
     _processLIN *
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _LIN_Slave_Initialize
       _LIN_init
         _LIN_enableRx
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _LIN_timerHandler *
       i1_LIN_stopTimer
     _TMR0_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      9      77     96.2%
BANK1               80      5      13     16.2%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      99      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jul 11 16:31:52 2025

                       __end_of_LIN_breakCheck 054B                  ?_EUSART_SetRxInterruptHandler 0070  
                        __end_of_LIN_getPacket 03F0                          ??_LIN_setTimerHandler 0072  
                        __end_of_LIN_disableRx 05ED                                             l21 02DE  
                                           l30 02EB                                             l23 02E3  
                                           l15 0567                                             l24 02E1  
                                           l41 0301                                             l33 02F2  
                                           l42 02FF                                             l51 0310  
                                           l35 02F7                                             l27 02E8  
                                           l19 02DA                                             l36 02F5  
                                           l45 0306                                             l29 02ED  
                                           l54 0313                                             l47 030B  
                                           l39 02FC                                             l48 0309  
                                           l58 031B                                _timer0ReloadVal 0048  
                              ?_LIN_calcParity 0070                                            l201 0211  
                                          l130 0273                                            l211 0574  
                                          l123 04FB                                            l221 05DD  
                                          l231 054A                                            l207 03C2  
                                          l224 05E7                                            l208 03C5  
                                          l400 05C7                                            l161 012E  
                                          l145 0086                                            l218 05A9  
                                          l227 05EC                                            l403 05D3  
                                          l164 0139                                            l340 0359  
                                          l406 05BB                                            l262 04B4  
                                          l175 045C                                            l167 015E  
                                          l503 0537                                            l352 0600  
                                          l432 05E2                                            l512 05F5  
                                          l169 018B                                            l409 05C1  
                                          l346 05A1                                            l442 05B5  
                                          l506 0588                                            l426 0524  
                                          l187 02D1                                            l179 03EF  
                                          l364 03F7                                            l197 04CE  
                                          l365 0400                                            l509 058D  
                                          l359 0439                                            l368 0415  
                                          l397 05CD                                            u570 058D  
                                          u571 058C                                            u900 03F7  
                                          u901 03F6                                            u910 03FC  
                                          u911 03FB                                            u920 0410  
                                          u921 040F                                            u930 03CF  
                                          u931 03CE                                            u940 044F  
                                          u860 047C                                            u941 044E  
                                          u861 047B                                            u950 041C  
                                          u870 03B6                                            u951 041B  
                                          u871 03B5                                            u960 0430  
                                          u880 03C2                                            u961 042F  
                                          u881 03C1                                            u970 0288  
                                          u890 04E5                                            u971 0287  
                                          u891 04E4                                            u980 029B  
                                          u981 029A                                            u990 02A5  
                                          u991 02A4                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 0070                       __end_of_LIN_getFromTable 02D2  
                                          wreg 0009                 __end_of_EUSART_get_last_status 0601  
                        __end_of_scheduleTable 05D9                                   ?_EUSART_Read 0070  
                                         l2000 0335                                           l2010 0352  
                                         l2002 0337                                           l2012 0354  
                                         l2004 034E                                           l1142 047C  
                                         l2014 0355                                           l2006 0350  
                                         l2030 051B                                           l2016 0356  
                                         l2008 0351                                           l2032 051C  
                                         l2024 0511                                           l2018 0357  
                                         l2034 051D                                           l2026 0516  
                                         l1139 0470                                           l1148 04E5  
                                         l2300 0082                                           l2028 0519  
                                         l2310 00A6                                           l2302 008A  
                                         l1430 04A0                                           l2320 00C3  
                                         l2312 00AB                                           l2304 0092  
                                         l1440 04B0                                           l1432 04A3  
                                         l2330 00DD                                           l2322 00CB  
                                         l2306 009A                                           l1434 04A5  
                                         l2170 0534                                           l2260 0218  
                                         l2340 0118                                           l2332 00F4  
                                         l2324 00CE                                           l2316 00B5  
                                         l2308 009E                                           l1436 04A7  
                                         l1428 049B                                           l2164 0525  
                                         l2270 022B                                           l2262 021A  
                                         l1710 05D9                                           l2350 0142  
                                         l2334 010B                                           l2326 00D1  
                                         l2318 00BE                                           l1438 04AB  
                                         l2166 052E                                           l1800 044F  
                                         l1720 0462                                           l2280 0269  
                                         l2264 021C                                           l2272 022D  
                                         l1712 05DA                                           l2360 015B  
                                         l2352 0144                                           l2344 0131  
                                         l2336 010D                                           l2328 00D5  
                                         l2168 0531                                           l1810 042A  
                                         l1802 0416                                           l1714 05E3  
                                         l1730 039E                                           l1722 0467  
                                         l2274 0233                                           l2258 0214  
                                         l2450 016B                                           l2354 0145  
                                         l2346 0136                                           l2338 0110  
                                         l2290 0068                                           l2282 0052  
                                         l1490 0582                                           l1820 0438  
                                         l1812 0430                                           l1804 0416  
                                         l2452 02C6                                           l1732 03A9  
                                         l1740 03BC                                           l1724 0469  
                                         l2276 0245                                           l2268 0227  
                                         l2356 0153                                           l2348 013F  
                                         l2292 006C                                           l2284 0058  
                                         l2364 0162                                           l1708 05B0  
                                         l1716 05A2                                           l1492 0585  
                                         l2372 058E                                           l1814 0431  
                                         l1806 041C                                           l1830 027E  
                                         l1742 03C4                                           l1734 03AD  
                                         l1726 0395                                           l1718 045D  
                                         l2278 025C                                           l1750 04D7  
                                         l2358 0158                                           l2294 006F  
                                         l2286 005D                                           l1910 055B  
                                         l1494 05F2                                           l2374 0591  
                                         l1816 0433                                           l1808 0428  
                                         l1840 029D                                           l1824 0275  
                                         l1760 0401                                           l1736 03B6  
                                         l1728 039C                                           l1752 04D9  
                                         l1912 02D2                                           l2296 0072  
                                         l2288 0060                                           l2376 0592  
                                         l1818 0436                                           l1834 0289  
                                         l1842 029F                                           l1826 027A  
                                         l1762 0408                                           l1770 0413  
                                         l1754 03F1                                           l1738 03BA  
                                         l1746 04CF                                           l2298 007A  
                                         l2378 0593                                           l1852 02B5  
                                         l1844 02A6                                           l1836 029B  
                                         l1828 027C                                           l1764 040A  
                                         l1756 03F1                                           l1748 04D2  
                                         l1780 03C6                                           l1916 0316  
                                         l1772 04E7                                           l1942 0599  
                                         l1766 0410                                           l1758 03FC  
                                         l1950 0570                                           l1782 03CA  
                                         l1774 04F2                                           l1872 018D  
                                         l1848 02AC                                           l1768 0411  
                                         l1792 043B                                           l1880 05DF  
                                         l1952 0571                                           l1784 03CF  
                                         l1776 04F5                                           l1882 05FE  
                                         l1962 0549                                           l1954 0538  
                                         l1874 0207                                           l1858 02BE  
                                         l1794 043D                                           l1946 0569  
                                         l1786 03D2                                           l1890 05C8  
                                         l1778 04F8                                           l1956 0540  
                                         l1876 0210                                           l1972 04C3  
                                         l1796 0447                                           l1948 056C  
                                         l1788 03EE                                           l1892 05C2  
                                         l1958 0547                                           l1974 04CD  
                                         l1966 04B6                                           l1982 05E8  
                                         l1798 0449                                           l1894 05CE  
                                         l1886 05BC                                           l1990 031E  
                                         l1968 04C1                                           l1888 05B6  
                                         l1992 0325                                           l1994 032E  
                                         l1996 0331                                           l1988 031C  
                                         l1998 0333                                           u1000 0194  
                                         u1001 0192                                           u1010 019B  
                                         u1002 0195                                           u1011 0199  
                                         u1100 01CA                                           u1020 01A2  
                                         u1012 019C                                           u1101 01C8  
                                         u1021 01A0                                           u1200 01F8  
                                         u1120 01D0                                           u1040 01A8  
                                         u1201 01F6                                           u1121 01CE  
                                         u1041 01A6                                           u1210 01FF  
                                         u1202 01F9                                           u1130 01D7  
                                         u1122 01D1                                           u1114 01CB  
                                         u1050 01AF                                           u1042 01A9  
                                         u1034 01A3                                           u1211 01FD  
                                         u1131 01D5                                           u1051 01AD  
                                         u1220 0206                                           u1212 0200  
                                         u1140 01DE                                           u1132 01D8  
                                         u1060 01B6                                           u1052 01B0  
                                         u1300 02FC                                           u1221 0204  
                                         u1141 01DC                                           u1061 01B4  
                                         u1301 02FB                                           u1310 0306  
                                         u1311 0305                                           u1240 020F  
                                         u1160 01E4                                           u1080 01BC  
                                         u1400 04CD                                           u1320 0310  
                                         u1241 020D                                           u1161 01E2  
                                         u1081 01BA                                           u1401 04CC  
                                         u1321 030F                                           u1234 0207  
                                         u1170 01EB                                           u1162 01E5  
                                         u1154 01DF                                           u1090 01C3  
                                         u1082 01BD                                           u1074 01B7  
                                         u1171 01E9                                           u1091 01C1  
                                         u1180 01F2                                           u1172 01EC  
                                         u1092 01C4                                           u1181 01F0  
                                         _LATA 010C                                           u1350 05A0  
                                         u1254 0210                                           u1270 02DE  
                                         _LATB 010D                                           u1351 059E  
                                         u1271 02DD                                           _LATC 010E  
                                         u1360 05A1                                           u1280 02E8  
                                         u1281 02E7                                           _LATE 0110  
                                         u1370 0540                                           u1194 01F3  
                                         u1290 02F2                                           u1371 053F  
                                         u1291 02F1                                           u1380 0547  
                                         u1700 0226                                           u1381 0546  
                                         u1701 0225                                           u1390 04C1  
                                         u1710 0233                                           u1391 04C0  
                                         u1711 0232                                           u1800 00B4  
                                         u1720 0058                                           u1801 00B3  
                                         u1721 0057                                           u1810 00C3  
                                         u1730 005D                                           u1811 00C2  
                                         u1731 005C                                           u1820 00DD  
                                         u1740 0068                                           u1821 00DC  
                                         u1741 0067                                           u1830 010B  
                                         u1750 007A                                           u1831 010A  
                                         u1751 0079                                           u1840 0118  
                                         u1760 0082                                           u1841 0117  
                                         u1761 0081                                           u1850 012D  
                                         u1770 0092                                           u1851 012C  
                                         u1835 0107                                           u1771 0091  
                                         u1860 0158                                           u1780 009A  
                                         u1861 0157                                           u1781 0099  
                                         u1790 00A6                                           u1791 00A5  
                                         _PLLR 04D6                                           _TMR0 0015  
                                         _WPUB 020D                                           _WPUE 0210  
                               _LIN_sendPacket 043A                                           _main 058E  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0038  
                                processLIN@cmd 006B                                ?_LIN_breakCheck 0070  
                      __end_of_TMR0_Initialize 0525                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 058E  
                            LIN_sendPacket@pid 0079                                          ?_main 0070  
                              LIN_init@command 0072                                          i1l221 05F1  
                                        i1l215 0581                                          i1l371 0498  
                                        i1l381 0393                                          i1l445 0602  
                                        i1l374 049A                                          i1l391 05F9  
                                        i1l439 055A                                          i1l385 0510  
                                        i1l473 0036                                          i1l394 05FD  
                                        i1l474 0036                                          i1l466 0012  
                                        i1l388 0603                                          i1l469 0026  
                              _TMR0_WriteTimer 05DE                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          _TXREG 019A  
                             __end_of_LIN_init 04FC                          __end_of_LIN_stopTimer 05DE  
                                        _TXSTA 019E                      ?_TMR0_SetInterruptHandler 0070  
                             __end_of_TMR0_ISR 055B                                 _WDT_Initialize 05F2  
                       __end_of_LIN_sendPacket 045D                                          pclath 000A  
                               _LIN_startTimer 0568                                          status 0003  
                                        wtemp0 007E                               ?_LIN_getChecksum 0070  
                  LIN_queuePacket@tempSchedule 0066                                __initialization 003A  
                                 ?_LIN_handler 0070                                   __end_of_main 0599  
                               ??_EUSART_Write 0070                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0072                                         ??_main 007E  
                       __end_of_WDT_Initialize 05F6                             LIN_sendPacket@data 007A  
    __end_of_EUSART_DefaultFramingErrorHandler 0604            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0603  
                   _EUSART_OverrunErrorHandler 003C                         __end_of_LIN_startTimer 0575  
                              ?_LIN_sendPacket 0079                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 05A2                                         _BORCON 0116  
                                       i1l2020 05F6                                         i1l2022 05FA  
                                       i1l2130 048E                                         i1l2140 0365  
                                       i1l2132 0494                                         i1l2124 047D  
                                       i1l2150 0380                                         i1l2142 036B  
                                       i1l2134 0495                                         i1l2126 0484  
                                       i1l2152 038A                                         i1l2144 0370  
                                       i1l2136 035A                                         i1l2128 048B  
                                       i1l2160 054F                                         i1l2154 0390  
                                       i1l2146 0375                                         i1l2138 0360  
                                       i1l2162 0555                                         i1l2148 037B  
                                       i1l2156 054B                                         i1l2180 0016  
                                       i1l2158 054C                                         i1l2182 001B  
                                       i1l2174 0006                                         i1l2184 0020  
                                       i1l2176 000A                                         i1l2186 002B  
                                       i1l2178 000E                                         i1l1900 0507  
                                       i1l2188 0030                                         i1l1902 050D  
                                       i1l1904 050E                                         i1l1906 05ED  
                                       i1l1908 05EE                                         i1l1896 04FC  
                                       i1l1984 0575                                         i1l1898 0504  
                                       i1l1986 057E                                         u141_20 057E  
                                       u141_21 057D                                         u126_20 050D  
                                       u126_21 050C                                         u160_20 0375  
                                       u160_21 0374                                         u161_20 038A  
                                       u161_21 0389                                         u162_20 0555  
                                       u162_21 0554                                         u163_20 000A  
                                       u163_21 0009                                         u164_20 000E  
                                       u164_21 000D                                         u157_20 0484  
                                       u165_20 0016                                         u157_21 0483  
                                       u165_21 0015                                         u158_20 0494  
                                       u166_20 001B                                         u158_21 0493  
                                       u166_21 001A                                         u159_20 0365  
                                       u167_20 0020                                         u159_21 0364  
                                       u167_21 001F                                         u168_20 002B  
                                       u168_21 002A                                         u169_20 0030  
                                       u169_21 002F                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                _LIN_processData 0046  
                              _LIN_queuePacket 0212                        __end_of_TMR0_WriteTimer 05E3  
                          _EUSART_Transmit_ISR 047D                                         _memcpy 045D  
                             ?_TMR0_Initialize 0070                                         _memset 04CF  
                              ?_WDT_Initialize 0070                               _LIN_rxInProgress 0055  
     TMR0_SetInterruptHandler@InterruptHandler 0070                                ?_LIN_startTimer 0070  
                         ?_EUSART_Transmit_ISR 0070                              _SYSTEM_Initialize 0525  
                      __end_of__initialization 004E                             ?_SYSTEM_Initialize 0070  
                                ?_LIN_checkPID 0070           __end_of_EUSART_SetTxInterruptHandler 05BC  
                 _EUSART_SetTxInterruptHandler 05B6                                      ?_LIN_init 0072  
                               __pcstackCOMMON 0070                                  ?_LIN_enableRx 0070  
                             ??_LIN_calcParity 0070                                LIN_sendPacket@i 007D  
                                 __pidataBANK0 0601                            ??_SYSTEM_Initialize 0077  
                                    ?_TMR0_ISR 0070                         LIN_handler@rxDataIndex 0050  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 0020  
                            ?_LIN_getFromTable 0070                         LIN_handler@LIN_rxState 0051  
              ??_EUSART_SetOverrunErrorHandler 0072                             ??_LIN_getFromTable 0071  
                    __end_of_SYSTEM_Initialize 0538                          ??_EUSART_Transmit_ISR 0070  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 0416                               ??_LIN_breakCheck 0071  
                               ??_LIN_checkPID 0077                    __end_of_LIN_setTimerHandler 05AA  
                      __end_of_LIN_queuePacket 0274                                 ??_LIN_enableRx 0070  
                                   __pmaintext 058E                               _LIN_timerHandler 0575  
                                   ??_LIN_init 0076                            LIN_getChecksum@data 0071  
                ?_EUSART_SetTxInterruptHandler 0070               _EUSART_TxDefaultInterruptHandler 0042  
             __end_of_TMR0_SetInterruptHandler 05B6                                     ??_TMR0_ISR 0070  
                                   __pintentry 0004                               ?_TMR0_WriteTimer 0070  
                                      ?_memcpy 0070                                        _BAUDCON 019F  
                                      ?_memset 0070                   ??_EUSART_DefaultErrorHandler 0070  
                        LIN_getChecksum@length 0075                               _LIN_timerRunning 0053  
                                _eusartRxCount 004A                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0072                        LIN_getChecksum@checksum 0077  
                 __end_of_LIN_Slave_Initialize 0568                                  _SW_STATE_Data 00A0  
                                      __ptext1 0525                                        __ptext2 05F2  
                                      __ptext3 0511                                        __ptext4 049B  
                                      __ptext5 0582                                        __ptext6 055B  
                                      __ptext7 04E6                                        __ptext8 05A2  
                                      __ptext9 05B0                          _OSCILLATOR_Initialize 0582  
                             ??_LIN_sendPacket 007C                       ??_PIN_MANAGER_Initialize 0070  
                                      clrloop0 05AB                      LIN_getFromTable@rxCommand 0075  
                         end_of_initialization 004E          __end_of_EUSART_SetOverrunErrorHandler 05C8  
                _EUSART_SetOverrunErrorHandler 05C2                                        memcpy@d 0077  
                                      memcpy@n 0074                                        memcpy@s 0078  
                                      memset@c 0072                                        memset@n 0074  
                                      memset@p 0076                              _EUSART_Initialize 031C  
                             ?_LIN_queuePacket 0070                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                              ??i1_LIN_stopTimer 0070  
                           _EUSART_is_rx_ready 0599                                  _LIN_getPacket 03C6  
                                _LIN_disableRx 05E8                       ??_EUSART_get_last_status 0070  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
               ??_EUSART_SetTxInterruptHandler 0072                              LIN_getPacket@data 0079  
                     _TMR0_SetInterruptHandler 05B0                            ?_EUSART_is_rx_ready 0070  
                                   _processLIN 02D2                           __end_of_LIN_checkPID 04CF  
                          LIN_init@tableLength 0076                               ??_LIN_startTimer 0071  
                         __end_of_LIN_enableRx 05E8                                  _scheduleTable 05D4  
                    __end_of_EUSART_Initialize 035A                           ??_EUSART_is_rx_ready 0070  
                                    _TXSTAbits 019E                                  _LIN_rxCommand 0044  
                               ?_LIN_getPacket 0079                                 ?_LIN_disableRx 0070  
           __end_of_EUSART_DefaultErrorHandler 05FE                     _EUSART_DefaultErrorHandler 05FA  
                                 _EUSART_Write 03F0                                 __end_of_memcpy 047D  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_memset 04E6  
                          start_initialization 003A                                  _LIN_stopTimer 05D9  
                     __end_of_LIN_timerHandler 0582                           _LIN_Slave_Initialize 055B  
                                ??_EUSART_Read 0070   EUSART_SetRxInterruptHandler@interruptHandler 0070  
 EUSART_SetTxInterruptHandler@interruptHandler 0070                          LIN_startTimer@timeout 0071  
                            LIN_calcParity@CMD 0071                 ?_EUSART_SetOverrunErrorHandler 0070  
                            LIN_calcParity@PID 0072                     _EUSART_FramingErrorHandler 003E  
                       _EUSART_SetErrorHandler 05CE                                    __pdataBANK0 006C  
                                     ??_memcpy 0076                                       ??_memset 0076  
                         processLIN@tempRxData 0063                                     memset@dest 0070  
                                  ?_processLIN 0070                            LIN_init@processData 0074  
                  __end_of_EUSART_Transmit_ISR 049B                                 ?_LIN_stopTimer 0070  
                                    ___latbits 0002                                  __pcstackBANK0 0063  
                                __pcstackBANK1 00A8                              ??_LIN_getChecksum 0073  
                        ?_LIN_Slave_Initialize 0070                     __end_of_EUSART_Receive_ISR 0394  
             _EUSART_RxDefaultInterruptHandler 0040                            __end_of_EUSART_Read 043A  
                        _TMR0_InterruptHandler 0038                   __end_of_EUSART_RxDataHandler 0511  
                              ??_LIN_getPacket 007A                         _PIN_MANAGER_Initialize 049B  
                                ??_LIN_handler 00A8                               LIN_getChecksum@i 0076  
                              ??_LIN_disableRx 0070                           EUSART_Read@readValue 0070  
                           LIN_getChecksum@pid 0070                           LIN_sendPacket@length 007C  
                                 _eusartRxHead 004C                                   _eusartTxHead 004F  
                                 _eusartRxTail 004B                                   _eusartTxTail 004E  
                 ??_INTERRUPT_InterruptManager 0070                        _eusartTxBufferRemaining 004D  
                              LIN_checkPID@pid 0077                                i1_LIN_stopTimer 05ED  
                               _eusartRxBuffer 0028                         _EUSART_get_last_status 05FE  
                            ??_TMR0_Initialize 0072                                 _eusartTxBuffer 0030  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 010D  
                                    clear_ram0 05AA                                       _PIE1bits 0091  
                            _eusartRxLastError 0049                                   _LIN_checkPID 04B5  
                   ??_TMR0_SetInterruptHandler 0072                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                       _LIN_init 04E6  
                                 _LIN_enableRx 05E3                                       _TMR0_ISR 054B  
    __end_of_EUSART_DefaultOverrunErrorHandler 05FA            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 05F6  
                             LIN_getPacket@cmd 007A                            __end_of_LIN_handler 018C  
                              ??_LIN_stopTimer 0070                         ??_LIN_Slave_Initialize 0077  
                                  _EUSART_Read 0416                               _LIN_getFromTable 0274  
                                    memcpy@tmp 0076                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 003A                    ?_EUSART_DefaultErrorHandler 0070  
                      __end_ofi1_LIN_stopTimer 05F2                           _EUSART_RxDataHandler 04FC  
                                     __ptext10 031C                                       __ptext11 05B6  
                                     __ptext20 05D9                                       __ptext12 05BC  
                                     __ptext21 0568                                       __ptext13 05C2  
                                     __ptext30 04B5                                       __ptext22 05DE  
                                     __ptext14 05C8                                       __ptext31 0274  
                                     __ptext23 0212                                       __ptext15 05CE  
                                     __ptext40 0602                                       __ptext32 018C  
                                     __ptext24 045D                                       __ptext16 0052  
                                     __ptext41 05ED                                       __ptext33 0538  
                                     __ptext25 043A                                       __ptext17 02D2  
                                     __ptext42 047D                                       __ptext34 05FE  
                                     __ptext26 0394                                       __ptext18 03C6  
                                     __ptext43 035A                                       __ptext35 0416  
                                     __ptext27 03F0                                       __ptext19 04CF  
                                     __ptext44 05F6                                       __ptext36 0599  
                                     __ptext28 05E3                                       __ptext45 0603  
                                     __ptext29 05E8                                       __ptext46 05FA  
                                     __ptext38 054B                                       __ptext47 04FC  
                                     __ptext39 0575                              ?_LIN_timerHandler 0070  
                      TMR0_WriteTimer@timerVal 0070                             ??_LIN_timerHandler 0070  
                            ??_TMR0_WriteTimer 0070                         LIN_getFromTable@length 0074  
         __end_of_TMR0_DefaultInterruptHandler 0603                   _TMR0_DefaultInterruptHandler 0602  
                      ?_EUSART_SetErrorHandler 0070                            _LIN_rxCommandLength 0054  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                    _LIN_handler 0052  
                                     int$flags 007E                                _LIN_getChecksum 0394  
           __end_of_INTERRUPT_InterruptManager 0038                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 05CE                  _EUSART_SetFramingErrorHandler 05C8  
                                 ??_processLIN 007B                                    _LIN_timeout 006C  
                               _LIN_calcParity 018C                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                       memcpy@d1 0070  
                                     memcpy@s1 0072                            _LIN_setTimerHandler 05A2  
                                     intlevel1 0000                                  _CountCallBack 0052  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 05D4  
                        LIN_getFromTable@param 0070                             __end_of_processLIN 031C  
         __end_of_EUSART_SetRxInterruptHandler 05C2                   _EUSART_SetRxInterruptHandler 05BC  
                ?_TMR0_DefaultInterruptHandler 0070                                     _LIN_packet 0056  
                           _EUSART_Receive_ISR 035A                           ?_LIN_setTimerHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                 _LIN_breakCheck 0538  
                       __end_of_LIN_calcParity 0212                                  __pstringtext1 05D4  
                           LIN_queuePacket@cmd 0064                                     _OPTION_REG 0095  
                          ?_EUSART_Receive_ISR 0070                                _TMR0_Initialize 0511  
                            ??_LIN_queuePacket 0063                               ?i1_LIN_stopTimer 0070  
                      ?_EUSART_get_last_status 0070                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 04B5                            LIN_getFromTable@cmd 0073  
                             LIN_queuePacket@i 0065                           ??_EUSART_Receive_ISR 0070  
                      __end_of_LIN_getChecksum 03C6  
