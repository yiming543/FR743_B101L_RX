

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jul 15 10:56:01 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,space=0,delta=2
    51                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63     0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F1936 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98     0008                     bsr             equ	8
    99     0005                     fsr0h           equ	5
   100     0004                     fsr0l           equ	4
   101     0007                     fsr1h           equ	7
   102     0006                     fsr1l           equ	6
   103     0000                     indf            equ	0
   104     0000                     indf0           equ	0
   105     0001                     indf1           equ	1
   106     000B                     intcon          equ	11
   107     0002                     pc              equ	2
   108     0002                     pcl             equ	2
   109     000A                     pclath          equ	10
   110     0003                     status          equ	3
   111     0009                     wreg            equ	9
   112     0000                     INDF0           equ	0	;# 
   113     0001                     INDF1           equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR0L           equ	4	;# 
   117     0005                     FSR0H           equ	5	;# 
   118     0006                     FSR1L           equ	6	;# 
   119     0007                     FSR1H           equ	7	;# 
   120     0008                     BSR             equ	8	;# 
   121     0009                     WREG            equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PORTA           equ	12	;# 
   125     000D                     PORTB           equ	13	;# 
   126     000E                     PORTC           equ	14	;# 
   127     0010                     PORTE           equ	16	;# 
   128     0011                     PIR1            equ	17	;# 
   129     0012                     PIR2            equ	18	;# 
   130     0013                     PIR3            equ	19	;# 
   131     0015                     TMR0            equ	21	;# 
   132     0016                     TMR1            equ	22	;# 
   133     0016                     TMR1L           equ	22	;# 
   134     0017                     TMR1H           equ	23	;# 
   135     0018                     T1CON           equ	24	;# 
   136     0019                     T1GCON          equ	25	;# 
   137     001A                     TMR2            equ	26	;# 
   138     001B                     PR2             equ	27	;# 
   139     001C                     T2CON           equ	28	;# 
   140     001E                     CPSCON0         equ	30	;# 
   141     001F                     CPSCON1         equ	31	;# 
   142     008C                     TRISA           equ	140	;# 
   143     008D                     TRISB           equ	141	;# 
   144     008E                     TRISC           equ	142	;# 
   145     0090                     TRISE           equ	144	;# 
   146     0091                     PIE1            equ	145	;# 
   147     0092                     PIE2            equ	146	;# 
   148     0093                     PIE3            equ	147	;# 
   149     0095                     OPTION_REG      equ	149	;# 
   150     0096                     PCON            equ	150	;# 
   151     0097                     WDTCON          equ	151	;# 
   152     0098                     OSCTUNE         equ	152	;# 
   153     0099                     OSCCON          equ	153	;# 
   154     009A                     OSCSTAT         equ	154	;# 
   155     009B                     ADRES           equ	155	;# 
   156     009B                     ADRESL          equ	155	;# 
   157     009C                     ADRESH          equ	156	;# 
   158     009D                     ADCON0          equ	157	;# 
   159     009E                     ADCON1          equ	158	;# 
   160     010C                     LATA            equ	268	;# 
   161     010D                     LATB            equ	269	;# 
   162     010E                     LATC            equ	270	;# 
   163     0110                     LATE            equ	272	;# 
   164     0111                     CM1CON0         equ	273	;# 
   165     0112                     CM1CON1         equ	274	;# 
   166     0113                     CM2CON0         equ	275	;# 
   167     0114                     CM2CON1         equ	276	;# 
   168     0115                     CMOUT           equ	277	;# 
   169     0116                     BORCON          equ	278	;# 
   170     0117                     FVRCON          equ	279	;# 
   171     0118                     DACCON0         equ	280	;# 
   172     0119                     DACCON1         equ	281	;# 
   173     011A                     SRCON0          equ	282	;# 
   174     011B                     SRCON1          equ	283	;# 
   175     011D                     APFCON          equ	285	;# 
   176     018C                     ANSELA          equ	396	;# 
   177     018D                     ANSELB          equ	397	;# 
   178     0191                     EEADR           equ	401	;# 
   179     0191                     EEADRL          equ	401	;# 
   180     0192                     EEADRH          equ	402	;# 
   181     0193                     EEDAT           equ	403	;# 
   182     0193                     EEDATL          equ	403	;# 
   183     0193                     EEDATA          equ	403	;# 
   184     0194                     EEDATH          equ	404	;# 
   185     0195                     EECON1          equ	405	;# 
   186     0196                     EECON2          equ	406	;# 
   187     0199                     RCREG           equ	409	;# 
   188     019A                     TXREG           equ	410	;# 
   189     019B                     SP1BRG          equ	411	;# 
   190     019B                     SP1BRGL         equ	411	;# 
   191     019B                     SPBRG           equ	411	;# 
   192     019B                     SPBRGL          equ	411	;# 
   193     019C                     SP1BRGH         equ	412	;# 
   194     019C                     SPBRGH          equ	412	;# 
   195     019D                     RCSTA           equ	413	;# 
   196     019E                     TXSTA           equ	414	;# 
   197     019F                     BAUDCON         equ	415	;# 
   198     020D                     WPUB            equ	525	;# 
   199     0210                     WPUE            equ	528	;# 
   200     0211                     SSPBUF          equ	529	;# 
   201     0212                     SSPADD          equ	530	;# 
   202     0213                     SSPMSK          equ	531	;# 
   203     0214                     SSPSTAT         equ	532	;# 
   204     0215                     SSPCON1         equ	533	;# 
   205     0215                     SSPCON          equ	533	;# 
   206     0216                     SSPCON2         equ	534	;# 
   207     0217                     SSPCON3         equ	535	;# 
   208     0291                     CCPR1           equ	657	;# 
   209     0291                     CCPR1L          equ	657	;# 
   210     0292                     CCPR1H          equ	658	;# 
   211     0293                     CCP1CON         equ	659	;# 
   212     0294                     PWM1CON         equ	660	;# 
   213     0295                     CCP1AS          equ	661	;# 
   214     0295                     ECCP1AS         equ	661	;# 
   215     0296                     PSTR1CON        equ	662	;# 
   216     0298                     CCPR2           equ	664	;# 
   217     0298                     CCPR2L          equ	664	;# 
   218     0299                     CCPR2H          equ	665	;# 
   219     029A                     CCP2CON         equ	666	;# 
   220     029B                     PWM2CON         equ	667	;# 
   221     029C                     CCP2AS          equ	668	;# 
   222     029C                     ECCP2AS         equ	668	;# 
   223     029D                     PSTR2CON        equ	669	;# 
   224     029E                     CCPTMRS0        equ	670	;# 
   225     029F                     CCPTMRS1        equ	671	;# 
   226     0311                     CCPR3           equ	785	;# 
   227     0311                     CCPR3L          equ	785	;# 
   228     0312                     CCPR3H          equ	786	;# 
   229     0313                     CCP3CON         equ	787	;# 
   230     0314                     PWM3CON         equ	788	;# 
   231     0315                     CCP3AS          equ	789	;# 
   232     0315                     ECCP3AS         equ	789	;# 
   233     0316                     PSTR3CON        equ	790	;# 
   234     0318                     CCPR4           equ	792	;# 
   235     0318                     CCPR4L          equ	792	;# 
   236     0319                     CCPR4H          equ	793	;# 
   237     031A                     CCP4CON         equ	794	;# 
   238     031C                     CCPR5           equ	796	;# 
   239     031C                     CCPR5L          equ	796	;# 
   240     031D                     CCPR5H          equ	797	;# 
   241     031E                     CCP5CON         equ	798	;# 
   242     0394                     IOCBP           equ	916	;# 
   243     0395                     IOCBN           equ	917	;# 
   244     0396                     IOCBF           equ	918	;# 
   245     0415                     TMR4            equ	1045	;# 
   246     0416                     PR4             equ	1046	;# 
   247     0417                     T4CON           equ	1047	;# 
   248     041C                     TMR6            equ	1052	;# 
   249     041D                     PR6             equ	1053	;# 
   250     041E                     T6CON           equ	1054	;# 
   251     0791                     LCDCON          equ	1937	;# 
   252     0792                     LCDPS           equ	1938	;# 
   253     0793                     LCDREF          equ	1939	;# 
   254     0794                     LCDCST          equ	1940	;# 
   255     0795                     LCDRL           equ	1941	;# 
   256     0798                     LCDSE0          equ	1944	;# 
   257     0799                     LCDSE1          equ	1945	;# 
   258     07A0                     LCDDATA0        equ	1952	;# 
   259     07A1                     LCDDATA1        equ	1953	;# 
   260     07A3                     LCDDATA3        equ	1955	;# 
   261     07A4                     LCDDATA4        equ	1956	;# 
   262     07A6                     LCDDATA6        equ	1958	;# 
   263     07A7                     LCDDATA7        equ	1959	;# 
   264     07A9                     LCDDATA9        equ	1961	;# 
   265     07AA                     LCDDATA10       equ	1962	;# 
   266     0FE4                     STATUS_SHAD     equ	4068	;# 
   267     0FE5                     WREG_SHAD       equ	4069	;# 
   268     0FE6                     BSR_SHAD        equ	4070	;# 
   269     0FE7                     PCLATH_SHAD     equ	4071	;# 
   270     0FE8                     FSR0L_SHAD      equ	4072	;# 
   271     0FE9                     FSR0H_SHAD      equ	4073	;# 
   272     0FEA                     FSR1L_SHAD      equ	4074	;# 
   273     0FEB                     FSR1H_SHAD      equ	4075	;# 
   274     0FED                     STKPTR          equ	4077	;# 
   275     0FEE                     TOSL            equ	4078	;# 
   276     0FEF                     TOSH            equ	4079	;# 
   277     0000                     INDF0           equ	0	;# 
   278     0001                     INDF1           equ	1	;# 
   279     0002                     PCL             equ	2	;# 
   280     0003                     STATUS          equ	3	;# 
   281     0004                     FSR0L           equ	4	;# 
   282     0005                     FSR0H           equ	5	;# 
   283     0006                     FSR1L           equ	6	;# 
   284     0007                     FSR1H           equ	7	;# 
   285     0008                     BSR             equ	8	;# 
   286     0009                     WREG            equ	9	;# 
   287     000A                     PCLATH          equ	10	;# 
   288     000B                     INTCON          equ	11	;# 
   289     000C                     PORTA           equ	12	;# 
   290     000D                     PORTB           equ	13	;# 
   291     000E                     PORTC           equ	14	;# 
   292     0010                     PORTE           equ	16	;# 
   293     0011                     PIR1            equ	17	;# 
   294     0012                     PIR2            equ	18	;# 
   295     0013                     PIR3            equ	19	;# 
   296     0015                     TMR0            equ	21	;# 
   297     0016                     TMR1            equ	22	;# 
   298     0016                     TMR1L           equ	22	;# 
   299     0017                     TMR1H           equ	23	;# 
   300     0018                     T1CON           equ	24	;# 
   301     0019                     T1GCON          equ	25	;# 
   302     001A                     TMR2            equ	26	;# 
   303     001B                     PR2             equ	27	;# 
   304     001C                     T2CON           equ	28	;# 
   305     001E                     CPSCON0         equ	30	;# 
   306     001F                     CPSCON1         equ	31	;# 
   307     008C                     TRISA           equ	140	;# 
   308     008D                     TRISB           equ	141	;# 
   309     008E                     TRISC           equ	142	;# 
   310     0090                     TRISE           equ	144	;# 
   311     0091                     PIE1            equ	145	;# 
   312     0092                     PIE2            equ	146	;# 
   313     0093                     PIE3            equ	147	;# 
   314     0095                     OPTION_REG      equ	149	;# 
   315     0096                     PCON            equ	150	;# 
   316     0097                     WDTCON          equ	151	;# 
   317     0098                     OSCTUNE         equ	152	;# 
   318     0099                     OSCCON          equ	153	;# 
   319     009A                     OSCSTAT         equ	154	;# 
   320     009B                     ADRES           equ	155	;# 
   321     009B                     ADRESL          equ	155	;# 
   322     009C                     ADRESH          equ	156	;# 
   323     009D                     ADCON0          equ	157	;# 
   324     009E                     ADCON1          equ	158	;# 
   325     010C                     LATA            equ	268	;# 
   326     010D                     LATB            equ	269	;# 
   327     010E                     LATC            equ	270	;# 
   328     0110                     LATE            equ	272	;# 
   329     0111                     CM1CON0         equ	273	;# 
   330     0112                     CM1CON1         equ	274	;# 
   331     0113                     CM2CON0         equ	275	;# 
   332     0114                     CM2CON1         equ	276	;# 
   333     0115                     CMOUT           equ	277	;# 
   334     0116                     BORCON          equ	278	;# 
   335     0117                     FVRCON          equ	279	;# 
   336     0118                     DACCON0         equ	280	;# 
   337     0119                     DACCON1         equ	281	;# 
   338     011A                     SRCON0          equ	282	;# 
   339     011B                     SRCON1          equ	283	;# 
   340     011D                     APFCON          equ	285	;# 
   341     018C                     ANSELA          equ	396	;# 
   342     018D                     ANSELB          equ	397	;# 
   343     0191                     EEADR           equ	401	;# 
   344     0191                     EEADRL          equ	401	;# 
   345     0192                     EEADRH          equ	402	;# 
   346     0193                     EEDAT           equ	403	;# 
   347     0193                     EEDATL          equ	403	;# 
   348     0193                     EEDATA          equ	403	;# 
   349     0194                     EEDATH          equ	404	;# 
   350     0195                     EECON1          equ	405	;# 
   351     0196                     EECON2          equ	406	;# 
   352     0199                     RCREG           equ	409	;# 
   353     019A                     TXREG           equ	410	;# 
   354     019B                     SP1BRG          equ	411	;# 
   355     019B                     SP1BRGL         equ	411	;# 
   356     019B                     SPBRG           equ	411	;# 
   357     019B                     SPBRGL          equ	411	;# 
   358     019C                     SP1BRGH         equ	412	;# 
   359     019C                     SPBRGH          equ	412	;# 
   360     019D                     RCSTA           equ	413	;# 
   361     019E                     TXSTA           equ	414	;# 
   362     019F                     BAUDCON         equ	415	;# 
   363     020D                     WPUB            equ	525	;# 
   364     0210                     WPUE            equ	528	;# 
   365     0211                     SSPBUF          equ	529	;# 
   366     0212                     SSPADD          equ	530	;# 
   367     0213                     SSPMSK          equ	531	;# 
   368     0214                     SSPSTAT         equ	532	;# 
   369     0215                     SSPCON1         equ	533	;# 
   370     0215                     SSPCON          equ	533	;# 
   371     0216                     SSPCON2         equ	534	;# 
   372     0217                     SSPCON3         equ	535	;# 
   373     0291                     CCPR1           equ	657	;# 
   374     0291                     CCPR1L          equ	657	;# 
   375     0292                     CCPR1H          equ	658	;# 
   376     0293                     CCP1CON         equ	659	;# 
   377     0294                     PWM1CON         equ	660	;# 
   378     0295                     CCP1AS          equ	661	;# 
   379     0295                     ECCP1AS         equ	661	;# 
   380     0296                     PSTR1CON        equ	662	;# 
   381     0298                     CCPR2           equ	664	;# 
   382     0298                     CCPR2L          equ	664	;# 
   383     0299                     CCPR2H          equ	665	;# 
   384     029A                     CCP2CON         equ	666	;# 
   385     029B                     PWM2CON         equ	667	;# 
   386     029C                     CCP2AS          equ	668	;# 
   387     029C                     ECCP2AS         equ	668	;# 
   388     029D                     PSTR2CON        equ	669	;# 
   389     029E                     CCPTMRS0        equ	670	;# 
   390     029F                     CCPTMRS1        equ	671	;# 
   391     0311                     CCPR3           equ	785	;# 
   392     0311                     CCPR3L          equ	785	;# 
   393     0312                     CCPR3H          equ	786	;# 
   394     0313                     CCP3CON         equ	787	;# 
   395     0314                     PWM3CON         equ	788	;# 
   396     0315                     CCP3AS          equ	789	;# 
   397     0315                     ECCP3AS         equ	789	;# 
   398     0316                     PSTR3CON        equ	790	;# 
   399     0318                     CCPR4           equ	792	;# 
   400     0318                     CCPR4L          equ	792	;# 
   401     0319                     CCPR4H          equ	793	;# 
   402     031A                     CCP4CON         equ	794	;# 
   403     031C                     CCPR5           equ	796	;# 
   404     031C                     CCPR5L          equ	796	;# 
   405     031D                     CCPR5H          equ	797	;# 
   406     031E                     CCP5CON         equ	798	;# 
   407     0394                     IOCBP           equ	916	;# 
   408     0395                     IOCBN           equ	917	;# 
   409     0396                     IOCBF           equ	918	;# 
   410     0415                     TMR4            equ	1045	;# 
   411     0416                     PR4             equ	1046	;# 
   412     0417                     T4CON           equ	1047	;# 
   413     041C                     TMR6            equ	1052	;# 
   414     041D                     PR6             equ	1053	;# 
   415     041E                     T6CON           equ	1054	;# 
   416     0791                     LCDCON          equ	1937	;# 
   417     0792                     LCDPS           equ	1938	;# 
   418     0793                     LCDREF          equ	1939	;# 
   419     0794                     LCDCST          equ	1940	;# 
   420     0795                     LCDRL           equ	1941	;# 
   421     0798                     LCDSE0          equ	1944	;# 
   422     0799                     LCDSE1          equ	1945	;# 
   423     07A0                     LCDDATA0        equ	1952	;# 
   424     07A1                     LCDDATA1        equ	1953	;# 
   425     07A3                     LCDDATA3        equ	1955	;# 
   426     07A4                     LCDDATA4        equ	1956	;# 
   427     07A6                     LCDDATA6        equ	1958	;# 
   428     07A7                     LCDDATA7        equ	1959	;# 
   429     07A9                     LCDDATA9        equ	1961	;# 
   430     07AA                     LCDDATA10       equ	1962	;# 
   431     0FE4                     STATUS_SHAD     equ	4068	;# 
   432     0FE5                     WREG_SHAD       equ	4069	;# 
   433     0FE6                     BSR_SHAD        equ	4070	;# 
   434     0FE7                     PCLATH_SHAD     equ	4071	;# 
   435     0FE8                     FSR0L_SHAD      equ	4072	;# 
   436     0FE9                     FSR0H_SHAD      equ	4073	;# 
   437     0FEA                     FSR1L_SHAD      equ	4074	;# 
   438     0FEB                     FSR1H_SHAD      equ	4075	;# 
   439     0FED                     STKPTR          equ	4077	;# 
   440     0FEE                     TOSL            equ	4078	;# 
   441     0FEF                     TOSH            equ	4079	;# 
   442     0000                     INDF0           equ	0	;# 
   443     0001                     INDF1           equ	1	;# 
   444     0002                     PCL             equ	2	;# 
   445     0003                     STATUS          equ	3	;# 
   446     0004                     FSR0L           equ	4	;# 
   447     0005                     FSR0H           equ	5	;# 
   448     0006                     FSR1L           equ	6	;# 
   449     0007                     FSR1H           equ	7	;# 
   450     0008                     BSR             equ	8	;# 
   451     0009                     WREG            equ	9	;# 
   452     000A                     PCLATH          equ	10	;# 
   453     000B                     INTCON          equ	11	;# 
   454     000C                     PORTA           equ	12	;# 
   455     000D                     PORTB           equ	13	;# 
   456     000E                     PORTC           equ	14	;# 
   457     0010                     PORTE           equ	16	;# 
   458     0011                     PIR1            equ	17	;# 
   459     0012                     PIR2            equ	18	;# 
   460     0013                     PIR3            equ	19	;# 
   461     0015                     TMR0            equ	21	;# 
   462     0016                     TMR1            equ	22	;# 
   463     0016                     TMR1L           equ	22	;# 
   464     0017                     TMR1H           equ	23	;# 
   465     0018                     T1CON           equ	24	;# 
   466     0019                     T1GCON          equ	25	;# 
   467     001A                     TMR2            equ	26	;# 
   468     001B                     PR2             equ	27	;# 
   469     001C                     T2CON           equ	28	;# 
   470     001E                     CPSCON0         equ	30	;# 
   471     001F                     CPSCON1         equ	31	;# 
   472     008C                     TRISA           equ	140	;# 
   473     008D                     TRISB           equ	141	;# 
   474     008E                     TRISC           equ	142	;# 
   475     0090                     TRISE           equ	144	;# 
   476     0091                     PIE1            equ	145	;# 
   477     0092                     PIE2            equ	146	;# 
   478     0093                     PIE3            equ	147	;# 
   479     0095                     OPTION_REG      equ	149	;# 
   480     0096                     PCON            equ	150	;# 
   481     0097                     WDTCON          equ	151	;# 
   482     0098                     OSCTUNE         equ	152	;# 
   483     0099                     OSCCON          equ	153	;# 
   484     009A                     OSCSTAT         equ	154	;# 
   485     009B                     ADRES           equ	155	;# 
   486     009B                     ADRESL          equ	155	;# 
   487     009C                     ADRESH          equ	156	;# 
   488     009D                     ADCON0          equ	157	;# 
   489     009E                     ADCON1          equ	158	;# 
   490     010C                     LATA            equ	268	;# 
   491     010D                     LATB            equ	269	;# 
   492     010E                     LATC            equ	270	;# 
   493     0110                     LATE            equ	272	;# 
   494     0111                     CM1CON0         equ	273	;# 
   495     0112                     CM1CON1         equ	274	;# 
   496     0113                     CM2CON0         equ	275	;# 
   497     0114                     CM2CON1         equ	276	;# 
   498     0115                     CMOUT           equ	277	;# 
   499     0116                     BORCON          equ	278	;# 
   500     0117                     FVRCON          equ	279	;# 
   501     0118                     DACCON0         equ	280	;# 
   502     0119                     DACCON1         equ	281	;# 
   503     011A                     SRCON0          equ	282	;# 
   504     011B                     SRCON1          equ	283	;# 
   505     011D                     APFCON          equ	285	;# 
   506     018C                     ANSELA          equ	396	;# 
   507     018D                     ANSELB          equ	397	;# 
   508     0191                     EEADR           equ	401	;# 
   509     0191                     EEADRL          equ	401	;# 
   510     0192                     EEADRH          equ	402	;# 
   511     0193                     EEDAT           equ	403	;# 
   512     0193                     EEDATL          equ	403	;# 
   513     0193                     EEDATA          equ	403	;# 
   514     0194                     EEDATH          equ	404	;# 
   515     0195                     EECON1          equ	405	;# 
   516     0196                     EECON2          equ	406	;# 
   517     0199                     RCREG           equ	409	;# 
   518     019A                     TXREG           equ	410	;# 
   519     019B                     SP1BRG          equ	411	;# 
   520     019B                     SP1BRGL         equ	411	;# 
   521     019B                     SPBRG           equ	411	;# 
   522     019B                     SPBRGL          equ	411	;# 
   523     019C                     SP1BRGH         equ	412	;# 
   524     019C                     SPBRGH          equ	412	;# 
   525     019D                     RCSTA           equ	413	;# 
   526     019E                     TXSTA           equ	414	;# 
   527     019F                     BAUDCON         equ	415	;# 
   528     020D                     WPUB            equ	525	;# 
   529     0210                     WPUE            equ	528	;# 
   530     0211                     SSPBUF          equ	529	;# 
   531     0212                     SSPADD          equ	530	;# 
   532     0213                     SSPMSK          equ	531	;# 
   533     0214                     SSPSTAT         equ	532	;# 
   534     0215                     SSPCON1         equ	533	;# 
   535     0215                     SSPCON          equ	533	;# 
   536     0216                     SSPCON2         equ	534	;# 
   537     0217                     SSPCON3         equ	535	;# 
   538     0291                     CCPR1           equ	657	;# 
   539     0291                     CCPR1L          equ	657	;# 
   540     0292                     CCPR1H          equ	658	;# 
   541     0293                     CCP1CON         equ	659	;# 
   542     0294                     PWM1CON         equ	660	;# 
   543     0295                     CCP1AS          equ	661	;# 
   544     0295                     ECCP1AS         equ	661	;# 
   545     0296                     PSTR1CON        equ	662	;# 
   546     0298                     CCPR2           equ	664	;# 
   547     0298                     CCPR2L          equ	664	;# 
   548     0299                     CCPR2H          equ	665	;# 
   549     029A                     CCP2CON         equ	666	;# 
   550     029B                     PWM2CON         equ	667	;# 
   551     029C                     CCP2AS          equ	668	;# 
   552     029C                     ECCP2AS         equ	668	;# 
   553     029D                     PSTR2CON        equ	669	;# 
   554     029E                     CCPTMRS0        equ	670	;# 
   555     029F                     CCPTMRS1        equ	671	;# 
   556     0311                     CCPR3           equ	785	;# 
   557     0311                     CCPR3L          equ	785	;# 
   558     0312                     CCPR3H          equ	786	;# 
   559     0313                     CCP3CON         equ	787	;# 
   560     0314                     PWM3CON         equ	788	;# 
   561     0315                     CCP3AS          equ	789	;# 
   562     0315                     ECCP3AS         equ	789	;# 
   563     0316                     PSTR3CON        equ	790	;# 
   564     0318                     CCPR4           equ	792	;# 
   565     0318                     CCPR4L          equ	792	;# 
   566     0319                     CCPR4H          equ	793	;# 
   567     031A                     CCP4CON         equ	794	;# 
   568     031C                     CCPR5           equ	796	;# 
   569     031C                     CCPR5L          equ	796	;# 
   570     031D                     CCPR5H          equ	797	;# 
   571     031E                     CCP5CON         equ	798	;# 
   572     0394                     IOCBP           equ	916	;# 
   573     0395                     IOCBN           equ	917	;# 
   574     0396                     IOCBF           equ	918	;# 
   575     0415                     TMR4            equ	1045	;# 
   576     0416                     PR4             equ	1046	;# 
   577     0417                     T4CON           equ	1047	;# 
   578     041C                     TMR6            equ	1052	;# 
   579     041D                     PR6             equ	1053	;# 
   580     041E                     T6CON           equ	1054	;# 
   581     0791                     LCDCON          equ	1937	;# 
   582     0792                     LCDPS           equ	1938	;# 
   583     0793                     LCDREF          equ	1939	;# 
   584     0794                     LCDCST          equ	1940	;# 
   585     0795                     LCDRL           equ	1941	;# 
   586     0798                     LCDSE0          equ	1944	;# 
   587     0799                     LCDSE1          equ	1945	;# 
   588     07A0                     LCDDATA0        equ	1952	;# 
   589     07A1                     LCDDATA1        equ	1953	;# 
   590     07A3                     LCDDATA3        equ	1955	;# 
   591     07A4                     LCDDATA4        equ	1956	;# 
   592     07A6                     LCDDATA6        equ	1958	;# 
   593     07A7                     LCDDATA7        equ	1959	;# 
   594     07A9                     LCDDATA9        equ	1961	;# 
   595     07AA                     LCDDATA10       equ	1962	;# 
   596     0FE4                     STATUS_SHAD     equ	4068	;# 
   597     0FE5                     WREG_SHAD       equ	4069	;# 
   598     0FE6                     BSR_SHAD        equ	4070	;# 
   599     0FE7                     PCLATH_SHAD     equ	4071	;# 
   600     0FE8                     FSR0L_SHAD      equ	4072	;# 
   601     0FE9                     FSR0H_SHAD      equ	4073	;# 
   602     0FEA                     FSR1L_SHAD      equ	4074	;# 
   603     0FEB                     FSR1H_SHAD      equ	4075	;# 
   604     0FED                     STKPTR          equ	4077	;# 
   605     0FEE                     TOSL            equ	4078	;# 
   606     0FEF                     TOSH            equ	4079	;# 
   607     0000                     INDF0           equ	0	;# 
   608     0001                     INDF1           equ	1	;# 
   609     0002                     PCL             equ	2	;# 
   610     0003                     STATUS          equ	3	;# 
   611     0004                     FSR0L           equ	4	;# 
   612     0005                     FSR0H           equ	5	;# 
   613     0006                     FSR1L           equ	6	;# 
   614     0007                     FSR1H           equ	7	;# 
   615     0008                     BSR             equ	8	;# 
   616     0009                     WREG            equ	9	;# 
   617     000A                     PCLATH          equ	10	;# 
   618     000B                     INTCON          equ	11	;# 
   619     000C                     PORTA           equ	12	;# 
   620     000D                     PORTB           equ	13	;# 
   621     000E                     PORTC           equ	14	;# 
   622     0010                     PORTE           equ	16	;# 
   623     0011                     PIR1            equ	17	;# 
   624     0012                     PIR2            equ	18	;# 
   625     0013                     PIR3            equ	19	;# 
   626     0015                     TMR0            equ	21	;# 
   627     0016                     TMR1            equ	22	;# 
   628     0016                     TMR1L           equ	22	;# 
   629     0017                     TMR1H           equ	23	;# 
   630     0018                     T1CON           equ	24	;# 
   631     0019                     T1GCON          equ	25	;# 
   632     001A                     TMR2            equ	26	;# 
   633     001B                     PR2             equ	27	;# 
   634     001C                     T2CON           equ	28	;# 
   635     001E                     CPSCON0         equ	30	;# 
   636     001F                     CPSCON1         equ	31	;# 
   637     008C                     TRISA           equ	140	;# 
   638     008D                     TRISB           equ	141	;# 
   639     008E                     TRISC           equ	142	;# 
   640     0090                     TRISE           equ	144	;# 
   641     0091                     PIE1            equ	145	;# 
   642     0092                     PIE2            equ	146	;# 
   643     0093                     PIE3            equ	147	;# 
   644     0095                     OPTION_REG      equ	149	;# 
   645     0096                     PCON            equ	150	;# 
   646     0097                     WDTCON          equ	151	;# 
   647     0098                     OSCTUNE         equ	152	;# 
   648     0099                     OSCCON          equ	153	;# 
   649     009A                     OSCSTAT         equ	154	;# 
   650     009B                     ADRES           equ	155	;# 
   651     009B                     ADRESL          equ	155	;# 
   652     009C                     ADRESH          equ	156	;# 
   653     009D                     ADCON0          equ	157	;# 
   654     009E                     ADCON1          equ	158	;# 
   655     010C                     LATA            equ	268	;# 
   656     010D                     LATB            equ	269	;# 
   657     010E                     LATC            equ	270	;# 
   658     0110                     LATE            equ	272	;# 
   659     0111                     CM1CON0         equ	273	;# 
   660     0112                     CM1CON1         equ	274	;# 
   661     0113                     CM2CON0         equ	275	;# 
   662     0114                     CM2CON1         equ	276	;# 
   663     0115                     CMOUT           equ	277	;# 
   664     0116                     BORCON          equ	278	;# 
   665     0117                     FVRCON          equ	279	;# 
   666     0118                     DACCON0         equ	280	;# 
   667     0119                     DACCON1         equ	281	;# 
   668     011A                     SRCON0          equ	282	;# 
   669     011B                     SRCON1          equ	283	;# 
   670     011D                     APFCON          equ	285	;# 
   671     018C                     ANSELA          equ	396	;# 
   672     018D                     ANSELB          equ	397	;# 
   673     0191                     EEADR           equ	401	;# 
   674     0191                     EEADRL          equ	401	;# 
   675     0192                     EEADRH          equ	402	;# 
   676     0193                     EEDAT           equ	403	;# 
   677     0193                     EEDATL          equ	403	;# 
   678     0193                     EEDATA          equ	403	;# 
   679     0194                     EEDATH          equ	404	;# 
   680     0195                     EECON1          equ	405	;# 
   681     0196                     EECON2          equ	406	;# 
   682     0199                     RCREG           equ	409	;# 
   683     019A                     TXREG           equ	410	;# 
   684     019B                     SP1BRG          equ	411	;# 
   685     019B                     SP1BRGL         equ	411	;# 
   686     019B                     SPBRG           equ	411	;# 
   687     019B                     SPBRGL          equ	411	;# 
   688     019C                     SP1BRGH         equ	412	;# 
   689     019C                     SPBRGH          equ	412	;# 
   690     019D                     RCSTA           equ	413	;# 
   691     019E                     TXSTA           equ	414	;# 
   692     019F                     BAUDCON         equ	415	;# 
   693     020D                     WPUB            equ	525	;# 
   694     0210                     WPUE            equ	528	;# 
   695     0211                     SSPBUF          equ	529	;# 
   696     0212                     SSPADD          equ	530	;# 
   697     0213                     SSPMSK          equ	531	;# 
   698     0214                     SSPSTAT         equ	532	;# 
   699     0215                     SSPCON1         equ	533	;# 
   700     0215                     SSPCON          equ	533	;# 
   701     0216                     SSPCON2         equ	534	;# 
   702     0217                     SSPCON3         equ	535	;# 
   703     0291                     CCPR1           equ	657	;# 
   704     0291                     CCPR1L          equ	657	;# 
   705     0292                     CCPR1H          equ	658	;# 
   706     0293                     CCP1CON         equ	659	;# 
   707     0294                     PWM1CON         equ	660	;# 
   708     0295                     CCP1AS          equ	661	;# 
   709     0295                     ECCP1AS         equ	661	;# 
   710     0296                     PSTR1CON        equ	662	;# 
   711     0298                     CCPR2           equ	664	;# 
   712     0298                     CCPR2L          equ	664	;# 
   713     0299                     CCPR2H          equ	665	;# 
   714     029A                     CCP2CON         equ	666	;# 
   715     029B                     PWM2CON         equ	667	;# 
   716     029C                     CCP2AS          equ	668	;# 
   717     029C                     ECCP2AS         equ	668	;# 
   718     029D                     PSTR2CON        equ	669	;# 
   719     029E                     CCPTMRS0        equ	670	;# 
   720     029F                     CCPTMRS1        equ	671	;# 
   721     0311                     CCPR3           equ	785	;# 
   722     0311                     CCPR3L          equ	785	;# 
   723     0312                     CCPR3H          equ	786	;# 
   724     0313                     CCP3CON         equ	787	;# 
   725     0314                     PWM3CON         equ	788	;# 
   726     0315                     CCP3AS          equ	789	;# 
   727     0315                     ECCP3AS         equ	789	;# 
   728     0316                     PSTR3CON        equ	790	;# 
   729     0318                     CCPR4           equ	792	;# 
   730     0318                     CCPR4L          equ	792	;# 
   731     0319                     CCPR4H          equ	793	;# 
   732     031A                     CCP4CON         equ	794	;# 
   733     031C                     CCPR5           equ	796	;# 
   734     031C                     CCPR5L          equ	796	;# 
   735     031D                     CCPR5H          equ	797	;# 
   736     031E                     CCP5CON         equ	798	;# 
   737     0394                     IOCBP           equ	916	;# 
   738     0395                     IOCBN           equ	917	;# 
   739     0396                     IOCBF           equ	918	;# 
   740     0415                     TMR4            equ	1045	;# 
   741     0416                     PR4             equ	1046	;# 
   742     0417                     T4CON           equ	1047	;# 
   743     041C                     TMR6            equ	1052	;# 
   744     041D                     PR6             equ	1053	;# 
   745     041E                     T6CON           equ	1054	;# 
   746     0791                     LCDCON          equ	1937	;# 
   747     0792                     LCDPS           equ	1938	;# 
   748     0793                     LCDREF          equ	1939	;# 
   749     0794                     LCDCST          equ	1940	;# 
   750     0795                     LCDRL           equ	1941	;# 
   751     0798                     LCDSE0          equ	1944	;# 
   752     0799                     LCDSE1          equ	1945	;# 
   753     07A0                     LCDDATA0        equ	1952	;# 
   754     07A1                     LCDDATA1        equ	1953	;# 
   755     07A3                     LCDDATA3        equ	1955	;# 
   756     07A4                     LCDDATA4        equ	1956	;# 
   757     07A6                     LCDDATA6        equ	1958	;# 
   758     07A7                     LCDDATA7        equ	1959	;# 
   759     07A9                     LCDDATA9        equ	1961	;# 
   760     07AA                     LCDDATA10       equ	1962	;# 
   761     0FE4                     STATUS_SHAD     equ	4068	;# 
   762     0FE5                     WREG_SHAD       equ	4069	;# 
   763     0FE6                     BSR_SHAD        equ	4070	;# 
   764     0FE7                     PCLATH_SHAD     equ	4071	;# 
   765     0FE8                     FSR0L_SHAD      equ	4072	;# 
   766     0FE9                     FSR0H_SHAD      equ	4073	;# 
   767     0FEA                     FSR1L_SHAD      equ	4074	;# 
   768     0FEB                     FSR1H_SHAD      equ	4075	;# 
   769     0FED                     STKPTR          equ	4077	;# 
   770     0FEE                     TOSL            equ	4078	;# 
   771     0FEF                     TOSH            equ	4079	;# 
   772     0000                     INDF0           equ	0	;# 
   773     0001                     INDF1           equ	1	;# 
   774     0002                     PCL             equ	2	;# 
   775     0003                     STATUS          equ	3	;# 
   776     0004                     FSR0L           equ	4	;# 
   777     0005                     FSR0H           equ	5	;# 
   778     0006                     FSR1L           equ	6	;# 
   779     0007                     FSR1H           equ	7	;# 
   780     0008                     BSR             equ	8	;# 
   781     0009                     WREG            equ	9	;# 
   782     000A                     PCLATH          equ	10	;# 
   783     000B                     INTCON          equ	11	;# 
   784     000C                     PORTA           equ	12	;# 
   785     000D                     PORTB           equ	13	;# 
   786     000E                     PORTC           equ	14	;# 
   787     0010                     PORTE           equ	16	;# 
   788     0011                     PIR1            equ	17	;# 
   789     0012                     PIR2            equ	18	;# 
   790     0013                     PIR3            equ	19	;# 
   791     0015                     TMR0            equ	21	;# 
   792     0016                     TMR1            equ	22	;# 
   793     0016                     TMR1L           equ	22	;# 
   794     0017                     TMR1H           equ	23	;# 
   795     0018                     T1CON           equ	24	;# 
   796     0019                     T1GCON          equ	25	;# 
   797     001A                     TMR2            equ	26	;# 
   798     001B                     PR2             equ	27	;# 
   799     001C                     T2CON           equ	28	;# 
   800     001E                     CPSCON0         equ	30	;# 
   801     001F                     CPSCON1         equ	31	;# 
   802     008C                     TRISA           equ	140	;# 
   803     008D                     TRISB           equ	141	;# 
   804     008E                     TRISC           equ	142	;# 
   805     0090                     TRISE           equ	144	;# 
   806     0091                     PIE1            equ	145	;# 
   807     0092                     PIE2            equ	146	;# 
   808     0093                     PIE3            equ	147	;# 
   809     0095                     OPTION_REG      equ	149	;# 
   810     0096                     PCON            equ	150	;# 
   811     0097                     WDTCON          equ	151	;# 
   812     0098                     OSCTUNE         equ	152	;# 
   813     0099                     OSCCON          equ	153	;# 
   814     009A                     OSCSTAT         equ	154	;# 
   815     009B                     ADRES           equ	155	;# 
   816     009B                     ADRESL          equ	155	;# 
   817     009C                     ADRESH          equ	156	;# 
   818     009D                     ADCON0          equ	157	;# 
   819     009E                     ADCON1          equ	158	;# 
   820     010C                     LATA            equ	268	;# 
   821     010D                     LATB            equ	269	;# 
   822     010E                     LATC            equ	270	;# 
   823     0110                     LATE            equ	272	;# 
   824     0111                     CM1CON0         equ	273	;# 
   825     0112                     CM1CON1         equ	274	;# 
   826     0113                     CM2CON0         equ	275	;# 
   827     0114                     CM2CON1         equ	276	;# 
   828     0115                     CMOUT           equ	277	;# 
   829     0116                     BORCON          equ	278	;# 
   830     0117                     FVRCON          equ	279	;# 
   831     0118                     DACCON0         equ	280	;# 
   832     0119                     DACCON1         equ	281	;# 
   833     011A                     SRCON0          equ	282	;# 
   834     011B                     SRCON1          equ	283	;# 
   835     011D                     APFCON          equ	285	;# 
   836     018C                     ANSELA          equ	396	;# 
   837     018D                     ANSELB          equ	397	;# 
   838     0191                     EEADR           equ	401	;# 
   839     0191                     EEADRL          equ	401	;# 
   840     0192                     EEADRH          equ	402	;# 
   841     0193                     EEDAT           equ	403	;# 
   842     0193                     EEDATL          equ	403	;# 
   843     0193                     EEDATA          equ	403	;# 
   844     0194                     EEDATH          equ	404	;# 
   845     0195                     EECON1          equ	405	;# 
   846     0196                     EECON2          equ	406	;# 
   847     0199                     RCREG           equ	409	;# 
   848     019A                     TXREG           equ	410	;# 
   849     019B                     SP1BRG          equ	411	;# 
   850     019B                     SP1BRGL         equ	411	;# 
   851     019B                     SPBRG           equ	411	;# 
   852     019B                     SPBRGL          equ	411	;# 
   853     019C                     SP1BRGH         equ	412	;# 
   854     019C                     SPBRGH          equ	412	;# 
   855     019D                     RCSTA           equ	413	;# 
   856     019E                     TXSTA           equ	414	;# 
   857     019F                     BAUDCON         equ	415	;# 
   858     020D                     WPUB            equ	525	;# 
   859     0210                     WPUE            equ	528	;# 
   860     0211                     SSPBUF          equ	529	;# 
   861     0212                     SSPADD          equ	530	;# 
   862     0213                     SSPMSK          equ	531	;# 
   863     0214                     SSPSTAT         equ	532	;# 
   864     0215                     SSPCON1         equ	533	;# 
   865     0215                     SSPCON          equ	533	;# 
   866     0216                     SSPCON2         equ	534	;# 
   867     0217                     SSPCON3         equ	535	;# 
   868     0291                     CCPR1           equ	657	;# 
   869     0291                     CCPR1L          equ	657	;# 
   870     0292                     CCPR1H          equ	658	;# 
   871     0293                     CCP1CON         equ	659	;# 
   872     0294                     PWM1CON         equ	660	;# 
   873     0295                     CCP1AS          equ	661	;# 
   874     0295                     ECCP1AS         equ	661	;# 
   875     0296                     PSTR1CON        equ	662	;# 
   876     0298                     CCPR2           equ	664	;# 
   877     0298                     CCPR2L          equ	664	;# 
   878     0299                     CCPR2H          equ	665	;# 
   879     029A                     CCP2CON         equ	666	;# 
   880     029B                     PWM2CON         equ	667	;# 
   881     029C                     CCP2AS          equ	668	;# 
   882     029C                     ECCP2AS         equ	668	;# 
   883     029D                     PSTR2CON        equ	669	;# 
   884     029E                     CCPTMRS0        equ	670	;# 
   885     029F                     CCPTMRS1        equ	671	;# 
   886     0311                     CCPR3           equ	785	;# 
   887     0311                     CCPR3L          equ	785	;# 
   888     0312                     CCPR3H          equ	786	;# 
   889     0313                     CCP3CON         equ	787	;# 
   890     0314                     PWM3CON         equ	788	;# 
   891     0315                     CCP3AS          equ	789	;# 
   892     0315                     ECCP3AS         equ	789	;# 
   893     0316                     PSTR3CON        equ	790	;# 
   894     0318                     CCPR4           equ	792	;# 
   895     0318                     CCPR4L          equ	792	;# 
   896     0319                     CCPR4H          equ	793	;# 
   897     031A                     CCP4CON         equ	794	;# 
   898     031C                     CCPR5           equ	796	;# 
   899     031C                     CCPR5L          equ	796	;# 
   900     031D                     CCPR5H          equ	797	;# 
   901     031E                     CCP5CON         equ	798	;# 
   902     0394                     IOCBP           equ	916	;# 
   903     0395                     IOCBN           equ	917	;# 
   904     0396                     IOCBF           equ	918	;# 
   905     0415                     TMR4            equ	1045	;# 
   906     0416                     PR4             equ	1046	;# 
   907     0417                     T4CON           equ	1047	;# 
   908     041C                     TMR6            equ	1052	;# 
   909     041D                     PR6             equ	1053	;# 
   910     041E                     T6CON           equ	1054	;# 
   911     0791                     LCDCON          equ	1937	;# 
   912     0792                     LCDPS           equ	1938	;# 
   913     0793                     LCDREF          equ	1939	;# 
   914     0794                     LCDCST          equ	1940	;# 
   915     0795                     LCDRL           equ	1941	;# 
   916     0798                     LCDSE0          equ	1944	;# 
   917     0799                     LCDSE1          equ	1945	;# 
   918     07A0                     LCDDATA0        equ	1952	;# 
   919     07A1                     LCDDATA1        equ	1953	;# 
   920     07A3                     LCDDATA3        equ	1955	;# 
   921     07A4                     LCDDATA4        equ	1956	;# 
   922     07A6                     LCDDATA6        equ	1958	;# 
   923     07A7                     LCDDATA7        equ	1959	;# 
   924     07A9                     LCDDATA9        equ	1961	;# 
   925     07AA                     LCDDATA10       equ	1962	;# 
   926     0FE4                     STATUS_SHAD     equ	4068	;# 
   927     0FE5                     WREG_SHAD       equ	4069	;# 
   928     0FE6                     BSR_SHAD        equ	4070	;# 
   929     0FE7                     PCLATH_SHAD     equ	4071	;# 
   930     0FE8                     FSR0L_SHAD      equ	4072	;# 
   931     0FE9                     FSR0H_SHAD      equ	4073	;# 
   932     0FEA                     FSR1L_SHAD      equ	4074	;# 
   933     0FEB                     FSR1H_SHAD      equ	4075	;# 
   934     0FED                     STKPTR          equ	4077	;# 
   935     0FEE                     TOSL            equ	4078	;# 
   936     0FEF                     TOSH            equ	4079	;# 
   937     0000                     INDF0           equ	0	;# 
   938     0001                     INDF1           equ	1	;# 
   939     0002                     PCL             equ	2	;# 
   940     0003                     STATUS          equ	3	;# 
   941     0004                     FSR0L           equ	4	;# 
   942     0005                     FSR0H           equ	5	;# 
   943     0006                     FSR1L           equ	6	;# 
   944     0007                     FSR1H           equ	7	;# 
   945     0008                     BSR             equ	8	;# 
   946     0009                     WREG            equ	9	;# 
   947     000A                     PCLATH          equ	10	;# 
   948     000B                     INTCON          equ	11	;# 
   949     000C                     PORTA           equ	12	;# 
   950     000D                     PORTB           equ	13	;# 
   951     000E                     PORTC           equ	14	;# 
   952     0010                     PORTE           equ	16	;# 
   953     0011                     PIR1            equ	17	;# 
   954     0012                     PIR2            equ	18	;# 
   955     0013                     PIR3            equ	19	;# 
   956     0015                     TMR0            equ	21	;# 
   957     0016                     TMR1            equ	22	;# 
   958     0016                     TMR1L           equ	22	;# 
   959     0017                     TMR1H           equ	23	;# 
   960     0018                     T1CON           equ	24	;# 
   961     0019                     T1GCON          equ	25	;# 
   962     001A                     TMR2            equ	26	;# 
   963     001B                     PR2             equ	27	;# 
   964     001C                     T2CON           equ	28	;# 
   965     001E                     CPSCON0         equ	30	;# 
   966     001F                     CPSCON1         equ	31	;# 
   967     008C                     TRISA           equ	140	;# 
   968     008D                     TRISB           equ	141	;# 
   969     008E                     TRISC           equ	142	;# 
   970     0090                     TRISE           equ	144	;# 
   971     0091                     PIE1            equ	145	;# 
   972     0092                     PIE2            equ	146	;# 
   973     0093                     PIE3            equ	147	;# 
   974     0095                     OPTION_REG      equ	149	;# 
   975     0096                     PCON            equ	150	;# 
   976     0097                     WDTCON          equ	151	;# 
   977     0098                     OSCTUNE         equ	152	;# 
   978     0099                     OSCCON          equ	153	;# 
   979     009A                     OSCSTAT         equ	154	;# 
   980     009B                     ADRES           equ	155	;# 
   981     009B                     ADRESL          equ	155	;# 
   982     009C                     ADRESH          equ	156	;# 
   983     009D                     ADCON0          equ	157	;# 
   984     009E                     ADCON1          equ	158	;# 
   985     010C                     LATA            equ	268	;# 
   986     010D                     LATB            equ	269	;# 
   987     010E                     LATC            equ	270	;# 
   988     0110                     LATE            equ	272	;# 
   989     0111                     CM1CON0         equ	273	;# 
   990     0112                     CM1CON1         equ	274	;# 
   991     0113                     CM2CON0         equ	275	;# 
   992     0114                     CM2CON1         equ	276	;# 
   993     0115                     CMOUT           equ	277	;# 
   994     0116                     BORCON          equ	278	;# 
   995     0117                     FVRCON          equ	279	;# 
   996     0118                     DACCON0         equ	280	;# 
   997     0119                     DACCON1         equ	281	;# 
   998     011A                     SRCON0          equ	282	;# 
   999     011B                     SRCON1          equ	283	;# 
  1000     011D                     APFCON          equ	285	;# 
  1001     018C                     ANSELA          equ	396	;# 
  1002     018D                     ANSELB          equ	397	;# 
  1003     0191                     EEADR           equ	401	;# 
  1004     0191                     EEADRL          equ	401	;# 
  1005     0192                     EEADRH          equ	402	;# 
  1006     0193                     EEDAT           equ	403	;# 
  1007     0193                     EEDATL          equ	403	;# 
  1008     0193                     EEDATA          equ	403	;# 
  1009     0194                     EEDATH          equ	404	;# 
  1010     0195                     EECON1          equ	405	;# 
  1011     0196                     EECON2          equ	406	;# 
  1012     0199                     RCREG           equ	409	;# 
  1013     019A                     TXREG           equ	410	;# 
  1014     019B                     SP1BRG          equ	411	;# 
  1015     019B                     SP1BRGL         equ	411	;# 
  1016     019B                     SPBRG           equ	411	;# 
  1017     019B                     SPBRGL          equ	411	;# 
  1018     019C                     SP1BRGH         equ	412	;# 
  1019     019C                     SPBRGH          equ	412	;# 
  1020     019D                     RCSTA           equ	413	;# 
  1021     019E                     TXSTA           equ	414	;# 
  1022     019F                     BAUDCON         equ	415	;# 
  1023     020D                     WPUB            equ	525	;# 
  1024     0210                     WPUE            equ	528	;# 
  1025     0211                     SSPBUF          equ	529	;# 
  1026     0212                     SSPADD          equ	530	;# 
  1027     0213                     SSPMSK          equ	531	;# 
  1028     0214                     SSPSTAT         equ	532	;# 
  1029     0215                     SSPCON1         equ	533	;# 
  1030     0215                     SSPCON          equ	533	;# 
  1031     0216                     SSPCON2         equ	534	;# 
  1032     0217                     SSPCON3         equ	535	;# 
  1033     0291                     CCPR1           equ	657	;# 
  1034     0291                     CCPR1L          equ	657	;# 
  1035     0292                     CCPR1H          equ	658	;# 
  1036     0293                     CCP1CON         equ	659	;# 
  1037     0294                     PWM1CON         equ	660	;# 
  1038     0295                     CCP1AS          equ	661	;# 
  1039     0295                     ECCP1AS         equ	661	;# 
  1040     0296                     PSTR1CON        equ	662	;# 
  1041     0298                     CCPR2           equ	664	;# 
  1042     0298                     CCPR2L          equ	664	;# 
  1043     0299                     CCPR2H          equ	665	;# 
  1044     029A                     CCP2CON         equ	666	;# 
  1045     029B                     PWM2CON         equ	667	;# 
  1046     029C                     CCP2AS          equ	668	;# 
  1047     029C                     ECCP2AS         equ	668	;# 
  1048     029D                     PSTR2CON        equ	669	;# 
  1049     029E                     CCPTMRS0        equ	670	;# 
  1050     029F                     CCPTMRS1        equ	671	;# 
  1051     0311                     CCPR3           equ	785	;# 
  1052     0311                     CCPR3L          equ	785	;# 
  1053     0312                     CCPR3H          equ	786	;# 
  1054     0313                     CCP3CON         equ	787	;# 
  1055     0314                     PWM3CON         equ	788	;# 
  1056     0315                     CCP3AS          equ	789	;# 
  1057     0315                     ECCP3AS         equ	789	;# 
  1058     0316                     PSTR3CON        equ	790	;# 
  1059     0318                     CCPR4           equ	792	;# 
  1060     0318                     CCPR4L          equ	792	;# 
  1061     0319                     CCPR4H          equ	793	;# 
  1062     031A                     CCP4CON         equ	794	;# 
  1063     031C                     CCPR5           equ	796	;# 
  1064     031C                     CCPR5L          equ	796	;# 
  1065     031D                     CCPR5H          equ	797	;# 
  1066     031E                     CCP5CON         equ	798	;# 
  1067     0394                     IOCBP           equ	916	;# 
  1068     0395                     IOCBN           equ	917	;# 
  1069     0396                     IOCBF           equ	918	;# 
  1070     0415                     TMR4            equ	1045	;# 
  1071     0416                     PR4             equ	1046	;# 
  1072     0417                     T4CON           equ	1047	;# 
  1073     041C                     TMR6            equ	1052	;# 
  1074     041D                     PR6             equ	1053	;# 
  1075     041E                     T6CON           equ	1054	;# 
  1076     0791                     LCDCON          equ	1937	;# 
  1077     0792                     LCDPS           equ	1938	;# 
  1078     0793                     LCDREF          equ	1939	;# 
  1079     0794                     LCDCST          equ	1940	;# 
  1080     0795                     LCDRL           equ	1941	;# 
  1081     0798                     LCDSE0          equ	1944	;# 
  1082     0799                     LCDSE1          equ	1945	;# 
  1083     07A0                     LCDDATA0        equ	1952	;# 
  1084     07A1                     LCDDATA1        equ	1953	;# 
  1085     07A3                     LCDDATA3        equ	1955	;# 
  1086     07A4                     LCDDATA4        equ	1956	;# 
  1087     07A6                     LCDDATA6        equ	1958	;# 
  1088     07A7                     LCDDATA7        equ	1959	;# 
  1089     07A9                     LCDDATA9        equ	1961	;# 
  1090     07AA                     LCDDATA10       equ	1962	;# 
  1091     0FE4                     STATUS_SHAD     equ	4068	;# 
  1092     0FE5                     WREG_SHAD       equ	4069	;# 
  1093     0FE6                     BSR_SHAD        equ	4070	;# 
  1094     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1095     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1096     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1097     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1098     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1099     0FED                     STKPTR          equ	4077	;# 
  1100     0FEE                     TOSL            equ	4078	;# 
  1101     0FEF                     TOSH            equ	4079	;# 
  1102     0000                     INDF0           equ	0	;# 
  1103     0001                     INDF1           equ	1	;# 
  1104     0002                     PCL             equ	2	;# 
  1105     0003                     STATUS          equ	3	;# 
  1106     0004                     FSR0L           equ	4	;# 
  1107     0005                     FSR0H           equ	5	;# 
  1108     0006                     FSR1L           equ	6	;# 
  1109     0007                     FSR1H           equ	7	;# 
  1110     0008                     BSR             equ	8	;# 
  1111     0009                     WREG            equ	9	;# 
  1112     000A                     PCLATH          equ	10	;# 
  1113     000B                     INTCON          equ	11	;# 
  1114     000C                     PORTA           equ	12	;# 
  1115     000D                     PORTB           equ	13	;# 
  1116     000E                     PORTC           equ	14	;# 
  1117     0010                     PORTE           equ	16	;# 
  1118     0011                     PIR1            equ	17	;# 
  1119     0012                     PIR2            equ	18	;# 
  1120     0013                     PIR3            equ	19	;# 
  1121     0015                     TMR0            equ	21	;# 
  1122     0016                     TMR1            equ	22	;# 
  1123     0016                     TMR1L           equ	22	;# 
  1124     0017                     TMR1H           equ	23	;# 
  1125     0018                     T1CON           equ	24	;# 
  1126     0019                     T1GCON          equ	25	;# 
  1127     001A                     TMR2            equ	26	;# 
  1128     001B                     PR2             equ	27	;# 
  1129     001C                     T2CON           equ	28	;# 
  1130     001E                     CPSCON0         equ	30	;# 
  1131     001F                     CPSCON1         equ	31	;# 
  1132     008C                     TRISA           equ	140	;# 
  1133     008D                     TRISB           equ	141	;# 
  1134     008E                     TRISC           equ	142	;# 
  1135     0090                     TRISE           equ	144	;# 
  1136     0091                     PIE1            equ	145	;# 
  1137     0092                     PIE2            equ	146	;# 
  1138     0093                     PIE3            equ	147	;# 
  1139     0095                     OPTION_REG      equ	149	;# 
  1140     0096                     PCON            equ	150	;# 
  1141     0097                     WDTCON          equ	151	;# 
  1142     0098                     OSCTUNE         equ	152	;# 
  1143     0099                     OSCCON          equ	153	;# 
  1144     009A                     OSCSTAT         equ	154	;# 
  1145     009B                     ADRES           equ	155	;# 
  1146     009B                     ADRESL          equ	155	;# 
  1147     009C                     ADRESH          equ	156	;# 
  1148     009D                     ADCON0          equ	157	;# 
  1149     009E                     ADCON1          equ	158	;# 
  1150     010C                     LATA            equ	268	;# 
  1151     010D                     LATB            equ	269	;# 
  1152     010E                     LATC            equ	270	;# 
  1153     0110                     LATE            equ	272	;# 
  1154     0111                     CM1CON0         equ	273	;# 
  1155     0112                     CM1CON1         equ	274	;# 
  1156     0113                     CM2CON0         equ	275	;# 
  1157     0114                     CM2CON1         equ	276	;# 
  1158     0115                     CMOUT           equ	277	;# 
  1159     0116                     BORCON          equ	278	;# 
  1160     0117                     FVRCON          equ	279	;# 
  1161     0118                     DACCON0         equ	280	;# 
  1162     0119                     DACCON1         equ	281	;# 
  1163     011A                     SRCON0          equ	282	;# 
  1164     011B                     SRCON1          equ	283	;# 
  1165     011D                     APFCON          equ	285	;# 
  1166     018C                     ANSELA          equ	396	;# 
  1167     018D                     ANSELB          equ	397	;# 
  1168     0191                     EEADR           equ	401	;# 
  1169     0191                     EEADRL          equ	401	;# 
  1170     0192                     EEADRH          equ	402	;# 
  1171     0193                     EEDAT           equ	403	;# 
  1172     0193                     EEDATL          equ	403	;# 
  1173     0193                     EEDATA          equ	403	;# 
  1174     0194                     EEDATH          equ	404	;# 
  1175     0195                     EECON1          equ	405	;# 
  1176     0196                     EECON2          equ	406	;# 
  1177     0199                     RCREG           equ	409	;# 
  1178     019A                     TXREG           equ	410	;# 
  1179     019B                     SP1BRG          equ	411	;# 
  1180     019B                     SP1BRGL         equ	411	;# 
  1181     019B                     SPBRG           equ	411	;# 
  1182     019B                     SPBRGL          equ	411	;# 
  1183     019C                     SP1BRGH         equ	412	;# 
  1184     019C                     SPBRGH          equ	412	;# 
  1185     019D                     RCSTA           equ	413	;# 
  1186     019E                     TXSTA           equ	414	;# 
  1187     019F                     BAUDCON         equ	415	;# 
  1188     020D                     WPUB            equ	525	;# 
  1189     0210                     WPUE            equ	528	;# 
  1190     0211                     SSPBUF          equ	529	;# 
  1191     0212                     SSPADD          equ	530	;# 
  1192     0213                     SSPMSK          equ	531	;# 
  1193     0214                     SSPSTAT         equ	532	;# 
  1194     0215                     SSPCON1         equ	533	;# 
  1195     0215                     SSPCON          equ	533	;# 
  1196     0216                     SSPCON2         equ	534	;# 
  1197     0217                     SSPCON3         equ	535	;# 
  1198     0291                     CCPR1           equ	657	;# 
  1199     0291                     CCPR1L          equ	657	;# 
  1200     0292                     CCPR1H          equ	658	;# 
  1201     0293                     CCP1CON         equ	659	;# 
  1202     0294                     PWM1CON         equ	660	;# 
  1203     0295                     CCP1AS          equ	661	;# 
  1204     0295                     ECCP1AS         equ	661	;# 
  1205     0296                     PSTR1CON        equ	662	;# 
  1206     0298                     CCPR2           equ	664	;# 
  1207     0298                     CCPR2L          equ	664	;# 
  1208     0299                     CCPR2H          equ	665	;# 
  1209     029A                     CCP2CON         equ	666	;# 
  1210     029B                     PWM2CON         equ	667	;# 
  1211     029C                     CCP2AS          equ	668	;# 
  1212     029C                     ECCP2AS         equ	668	;# 
  1213     029D                     PSTR2CON        equ	669	;# 
  1214     029E                     CCPTMRS0        equ	670	;# 
  1215     029F                     CCPTMRS1        equ	671	;# 
  1216     0311                     CCPR3           equ	785	;# 
  1217     0311                     CCPR3L          equ	785	;# 
  1218     0312                     CCPR3H          equ	786	;# 
  1219     0313                     CCP3CON         equ	787	;# 
  1220     0314                     PWM3CON         equ	788	;# 
  1221     0315                     CCP3AS          equ	789	;# 
  1222     0315                     ECCP3AS         equ	789	;# 
  1223     0316                     PSTR3CON        equ	790	;# 
  1224     0318                     CCPR4           equ	792	;# 
  1225     0318                     CCPR4L          equ	792	;# 
  1226     0319                     CCPR4H          equ	793	;# 
  1227     031A                     CCP4CON         equ	794	;# 
  1228     031C                     CCPR5           equ	796	;# 
  1229     031C                     CCPR5L          equ	796	;# 
  1230     031D                     CCPR5H          equ	797	;# 
  1231     031E                     CCP5CON         equ	798	;# 
  1232     0394                     IOCBP           equ	916	;# 
  1233     0395                     IOCBN           equ	917	;# 
  1234     0396                     IOCBF           equ	918	;# 
  1235     0415                     TMR4            equ	1045	;# 
  1236     0416                     PR4             equ	1046	;# 
  1237     0417                     T4CON           equ	1047	;# 
  1238     041C                     TMR6            equ	1052	;# 
  1239     041D                     PR6             equ	1053	;# 
  1240     041E                     T6CON           equ	1054	;# 
  1241     0791                     LCDCON          equ	1937	;# 
  1242     0792                     LCDPS           equ	1938	;# 
  1243     0793                     LCDREF          equ	1939	;# 
  1244     0794                     LCDCST          equ	1940	;# 
  1245     0795                     LCDRL           equ	1941	;# 
  1246     0798                     LCDSE0          equ	1944	;# 
  1247     0799                     LCDSE1          equ	1945	;# 
  1248     07A0                     LCDDATA0        equ	1952	;# 
  1249     07A1                     LCDDATA1        equ	1953	;# 
  1250     07A3                     LCDDATA3        equ	1955	;# 
  1251     07A4                     LCDDATA4        equ	1956	;# 
  1252     07A6                     LCDDATA6        equ	1958	;# 
  1253     07A7                     LCDDATA7        equ	1959	;# 
  1254     07A9                     LCDDATA9        equ	1961	;# 
  1255     07AA                     LCDDATA10       equ	1962	;# 
  1256     0FE4                     STATUS_SHAD     equ	4068	;# 
  1257     0FE5                     WREG_SHAD       equ	4069	;# 
  1258     0FE6                     BSR_SHAD        equ	4070	;# 
  1259     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1260     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1261     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1262     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1263     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1264     0FED                     STKPTR          equ	4077	;# 
  1265     0FEE                     TOSL            equ	4078	;# 
  1266     0FEF                     TOSH            equ	4079	;# 
  1267     0000                     INDF0           equ	0	;# 
  1268     0001                     INDF1           equ	1	;# 
  1269     0002                     PCL             equ	2	;# 
  1270     0003                     STATUS          equ	3	;# 
  1271     0004                     FSR0L           equ	4	;# 
  1272     0005                     FSR0H           equ	5	;# 
  1273     0006                     FSR1L           equ	6	;# 
  1274     0007                     FSR1H           equ	7	;# 
  1275     0008                     BSR             equ	8	;# 
  1276     0009                     WREG            equ	9	;# 
  1277     000A                     PCLATH          equ	10	;# 
  1278     000B                     INTCON          equ	11	;# 
  1279     000C                     PORTA           equ	12	;# 
  1280     000D                     PORTB           equ	13	;# 
  1281     000E                     PORTC           equ	14	;# 
  1282     0010                     PORTE           equ	16	;# 
  1283     0011                     PIR1            equ	17	;# 
  1284     0012                     PIR2            equ	18	;# 
  1285     0013                     PIR3            equ	19	;# 
  1286     0015                     TMR0            equ	21	;# 
  1287     0016                     TMR1            equ	22	;# 
  1288     0016                     TMR1L           equ	22	;# 
  1289     0017                     TMR1H           equ	23	;# 
  1290     0018                     T1CON           equ	24	;# 
  1291     0019                     T1GCON          equ	25	;# 
  1292     001A                     TMR2            equ	26	;# 
  1293     001B                     PR2             equ	27	;# 
  1294     001C                     T2CON           equ	28	;# 
  1295     001E                     CPSCON0         equ	30	;# 
  1296     001F                     CPSCON1         equ	31	;# 
  1297     008C                     TRISA           equ	140	;# 
  1298     008D                     TRISB           equ	141	;# 
  1299     008E                     TRISC           equ	142	;# 
  1300     0090                     TRISE           equ	144	;# 
  1301     0091                     PIE1            equ	145	;# 
  1302     0092                     PIE2            equ	146	;# 
  1303     0093                     PIE3            equ	147	;# 
  1304     0095                     OPTION_REG      equ	149	;# 
  1305     0096                     PCON            equ	150	;# 
  1306     0097                     WDTCON          equ	151	;# 
  1307     0098                     OSCTUNE         equ	152	;# 
  1308     0099                     OSCCON          equ	153	;# 
  1309     009A                     OSCSTAT         equ	154	;# 
  1310     009B                     ADRES           equ	155	;# 
  1311     009B                     ADRESL          equ	155	;# 
  1312     009C                     ADRESH          equ	156	;# 
  1313     009D                     ADCON0          equ	157	;# 
  1314     009E                     ADCON1          equ	158	;# 
  1315     010C                     LATA            equ	268	;# 
  1316     010D                     LATB            equ	269	;# 
  1317     010E                     LATC            equ	270	;# 
  1318     0110                     LATE            equ	272	;# 
  1319     0111                     CM1CON0         equ	273	;# 
  1320     0112                     CM1CON1         equ	274	;# 
  1321     0113                     CM2CON0         equ	275	;# 
  1322     0114                     CM2CON1         equ	276	;# 
  1323     0115                     CMOUT           equ	277	;# 
  1324     0116                     BORCON          equ	278	;# 
  1325     0117                     FVRCON          equ	279	;# 
  1326     0118                     DACCON0         equ	280	;# 
  1327     0119                     DACCON1         equ	281	;# 
  1328     011A                     SRCON0          equ	282	;# 
  1329     011B                     SRCON1          equ	283	;# 
  1330     011D                     APFCON          equ	285	;# 
  1331     018C                     ANSELA          equ	396	;# 
  1332     018D                     ANSELB          equ	397	;# 
  1333     0191                     EEADR           equ	401	;# 
  1334     0191                     EEADRL          equ	401	;# 
  1335     0192                     EEADRH          equ	402	;# 
  1336     0193                     EEDAT           equ	403	;# 
  1337     0193                     EEDATL          equ	403	;# 
  1338     0193                     EEDATA          equ	403	;# 
  1339     0194                     EEDATH          equ	404	;# 
  1340     0195                     EECON1          equ	405	;# 
  1341     0196                     EECON2          equ	406	;# 
  1342     0199                     RCREG           equ	409	;# 
  1343     019A                     TXREG           equ	410	;# 
  1344     019B                     SP1BRG          equ	411	;# 
  1345     019B                     SP1BRGL         equ	411	;# 
  1346     019B                     SPBRG           equ	411	;# 
  1347     019B                     SPBRGL          equ	411	;# 
  1348     019C                     SP1BRGH         equ	412	;# 
  1349     019C                     SPBRGH          equ	412	;# 
  1350     019D                     RCSTA           equ	413	;# 
  1351     019E                     TXSTA           equ	414	;# 
  1352     019F                     BAUDCON         equ	415	;# 
  1353     020D                     WPUB            equ	525	;# 
  1354     0210                     WPUE            equ	528	;# 
  1355     0211                     SSPBUF          equ	529	;# 
  1356     0212                     SSPADD          equ	530	;# 
  1357     0213                     SSPMSK          equ	531	;# 
  1358     0214                     SSPSTAT         equ	532	;# 
  1359     0215                     SSPCON1         equ	533	;# 
  1360     0215                     SSPCON          equ	533	;# 
  1361     0216                     SSPCON2         equ	534	;# 
  1362     0217                     SSPCON3         equ	535	;# 
  1363     0291                     CCPR1           equ	657	;# 
  1364     0291                     CCPR1L          equ	657	;# 
  1365     0292                     CCPR1H          equ	658	;# 
  1366     0293                     CCP1CON         equ	659	;# 
  1367     0294                     PWM1CON         equ	660	;# 
  1368     0295                     CCP1AS          equ	661	;# 
  1369     0295                     ECCP1AS         equ	661	;# 
  1370     0296                     PSTR1CON        equ	662	;# 
  1371     0298                     CCPR2           equ	664	;# 
  1372     0298                     CCPR2L          equ	664	;# 
  1373     0299                     CCPR2H          equ	665	;# 
  1374     029A                     CCP2CON         equ	666	;# 
  1375     029B                     PWM2CON         equ	667	;# 
  1376     029C                     CCP2AS          equ	668	;# 
  1377     029C                     ECCP2AS         equ	668	;# 
  1378     029D                     PSTR2CON        equ	669	;# 
  1379     029E                     CCPTMRS0        equ	670	;# 
  1380     029F                     CCPTMRS1        equ	671	;# 
  1381     0311                     CCPR3           equ	785	;# 
  1382     0311                     CCPR3L          equ	785	;# 
  1383     0312                     CCPR3H          equ	786	;# 
  1384     0313                     CCP3CON         equ	787	;# 
  1385     0314                     PWM3CON         equ	788	;# 
  1386     0315                     CCP3AS          equ	789	;# 
  1387     0315                     ECCP3AS         equ	789	;# 
  1388     0316                     PSTR3CON        equ	790	;# 
  1389     0318                     CCPR4           equ	792	;# 
  1390     0318                     CCPR4L          equ	792	;# 
  1391     0319                     CCPR4H          equ	793	;# 
  1392     031A                     CCP4CON         equ	794	;# 
  1393     031C                     CCPR5           equ	796	;# 
  1394     031C                     CCPR5L          equ	796	;# 
  1395     031D                     CCPR5H          equ	797	;# 
  1396     031E                     CCP5CON         equ	798	;# 
  1397     0394                     IOCBP           equ	916	;# 
  1398     0395                     IOCBN           equ	917	;# 
  1399     0396                     IOCBF           equ	918	;# 
  1400     0415                     TMR4            equ	1045	;# 
  1401     0416                     PR4             equ	1046	;# 
  1402     0417                     T4CON           equ	1047	;# 
  1403     041C                     TMR6            equ	1052	;# 
  1404     041D                     PR6             equ	1053	;# 
  1405     041E                     T6CON           equ	1054	;# 
  1406     0791                     LCDCON          equ	1937	;# 
  1407     0792                     LCDPS           equ	1938	;# 
  1408     0793                     LCDREF          equ	1939	;# 
  1409     0794                     LCDCST          equ	1940	;# 
  1410     0795                     LCDRL           equ	1941	;# 
  1411     0798                     LCDSE0          equ	1944	;# 
  1412     0799                     LCDSE1          equ	1945	;# 
  1413     07A0                     LCDDATA0        equ	1952	;# 
  1414     07A1                     LCDDATA1        equ	1953	;# 
  1415     07A3                     LCDDATA3        equ	1955	;# 
  1416     07A4                     LCDDATA4        equ	1956	;# 
  1417     07A6                     LCDDATA6        equ	1958	;# 
  1418     07A7                     LCDDATA7        equ	1959	;# 
  1419     07A9                     LCDDATA9        equ	1961	;# 
  1420     07AA                     LCDDATA10       equ	1962	;# 
  1421     0FE4                     STATUS_SHAD     equ	4068	;# 
  1422     0FE5                     WREG_SHAD       equ	4069	;# 
  1423     0FE6                     BSR_SHAD        equ	4070	;# 
  1424     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1425     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1426     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1427     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1428     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1429     0FED                     STKPTR          equ	4077	;# 
  1430     0FEE                     TOSL            equ	4078	;# 
  1431     0FEF                     TOSH            equ	4079	;# 
  1432     0000                     INDF0           equ	0	;# 
  1433     0001                     INDF1           equ	1	;# 
  1434     0002                     PCL             equ	2	;# 
  1435     0003                     STATUS          equ	3	;# 
  1436     0004                     FSR0L           equ	4	;# 
  1437     0005                     FSR0H           equ	5	;# 
  1438     0006                     FSR1L           equ	6	;# 
  1439     0007                     FSR1H           equ	7	;# 
  1440     0008                     BSR             equ	8	;# 
  1441     0009                     WREG            equ	9	;# 
  1442     000A                     PCLATH          equ	10	;# 
  1443     000B                     INTCON          equ	11	;# 
  1444     000C                     PORTA           equ	12	;# 
  1445     000D                     PORTB           equ	13	;# 
  1446     000E                     PORTC           equ	14	;# 
  1447     0010                     PORTE           equ	16	;# 
  1448     0011                     PIR1            equ	17	;# 
  1449     0012                     PIR2            equ	18	;# 
  1450     0013                     PIR3            equ	19	;# 
  1451     0015                     TMR0            equ	21	;# 
  1452     0016                     TMR1            equ	22	;# 
  1453     0016                     TMR1L           equ	22	;# 
  1454     0017                     TMR1H           equ	23	;# 
  1455     0018                     T1CON           equ	24	;# 
  1456     0019                     T1GCON          equ	25	;# 
  1457     001A                     TMR2            equ	26	;# 
  1458     001B                     PR2             equ	27	;# 
  1459     001C                     T2CON           equ	28	;# 
  1460     001E                     CPSCON0         equ	30	;# 
  1461     001F                     CPSCON1         equ	31	;# 
  1462     008C                     TRISA           equ	140	;# 
  1463     008D                     TRISB           equ	141	;# 
  1464     008E                     TRISC           equ	142	;# 
  1465     0090                     TRISE           equ	144	;# 
  1466     0091                     PIE1            equ	145	;# 
  1467     0092                     PIE2            equ	146	;# 
  1468     0093                     PIE3            equ	147	;# 
  1469     0095                     OPTION_REG      equ	149	;# 
  1470     0096                     PCON            equ	150	;# 
  1471     0097                     WDTCON          equ	151	;# 
  1472     0098                     OSCTUNE         equ	152	;# 
  1473     0099                     OSCCON          equ	153	;# 
  1474     009A                     OSCSTAT         equ	154	;# 
  1475     009B                     ADRES           equ	155	;# 
  1476     009B                     ADRESL          equ	155	;# 
  1477     009C                     ADRESH          equ	156	;# 
  1478     009D                     ADCON0          equ	157	;# 
  1479     009E                     ADCON1          equ	158	;# 
  1480     010C                     LATA            equ	268	;# 
  1481     010D                     LATB            equ	269	;# 
  1482     010E                     LATC            equ	270	;# 
  1483     0110                     LATE            equ	272	;# 
  1484     0111                     CM1CON0         equ	273	;# 
  1485     0112                     CM1CON1         equ	274	;# 
  1486     0113                     CM2CON0         equ	275	;# 
  1487     0114                     CM2CON1         equ	276	;# 
  1488     0115                     CMOUT           equ	277	;# 
  1489     0116                     BORCON          equ	278	;# 
  1490     0117                     FVRCON          equ	279	;# 
  1491     0118                     DACCON0         equ	280	;# 
  1492     0119                     DACCON1         equ	281	;# 
  1493     011A                     SRCON0          equ	282	;# 
  1494     011B                     SRCON1          equ	283	;# 
  1495     011D                     APFCON          equ	285	;# 
  1496     018C                     ANSELA          equ	396	;# 
  1497     018D                     ANSELB          equ	397	;# 
  1498     0191                     EEADR           equ	401	;# 
  1499     0191                     EEADRL          equ	401	;# 
  1500     0192                     EEADRH          equ	402	;# 
  1501     0193                     EEDAT           equ	403	;# 
  1502     0193                     EEDATL          equ	403	;# 
  1503     0193                     EEDATA          equ	403	;# 
  1504     0194                     EEDATH          equ	404	;# 
  1505     0195                     EECON1          equ	405	;# 
  1506     0196                     EECON2          equ	406	;# 
  1507     0199                     RCREG           equ	409	;# 
  1508     019A                     TXREG           equ	410	;# 
  1509     019B                     SP1BRG          equ	411	;# 
  1510     019B                     SP1BRGL         equ	411	;# 
  1511     019B                     SPBRG           equ	411	;# 
  1512     019B                     SPBRGL          equ	411	;# 
  1513     019C                     SP1BRGH         equ	412	;# 
  1514     019C                     SPBRGH          equ	412	;# 
  1515     019D                     RCSTA           equ	413	;# 
  1516     019E                     TXSTA           equ	414	;# 
  1517     019F                     BAUDCON         equ	415	;# 
  1518     020D                     WPUB            equ	525	;# 
  1519     0210                     WPUE            equ	528	;# 
  1520     0211                     SSPBUF          equ	529	;# 
  1521     0212                     SSPADD          equ	530	;# 
  1522     0213                     SSPMSK          equ	531	;# 
  1523     0214                     SSPSTAT         equ	532	;# 
  1524     0215                     SSPCON1         equ	533	;# 
  1525     0215                     SSPCON          equ	533	;# 
  1526     0216                     SSPCON2         equ	534	;# 
  1527     0217                     SSPCON3         equ	535	;# 
  1528     0291                     CCPR1           equ	657	;# 
  1529     0291                     CCPR1L          equ	657	;# 
  1530     0292                     CCPR1H          equ	658	;# 
  1531     0293                     CCP1CON         equ	659	;# 
  1532     0294                     PWM1CON         equ	660	;# 
  1533     0295                     CCP1AS          equ	661	;# 
  1534     0295                     ECCP1AS         equ	661	;# 
  1535     0296                     PSTR1CON        equ	662	;# 
  1536     0298                     CCPR2           equ	664	;# 
  1537     0298                     CCPR2L          equ	664	;# 
  1538     0299                     CCPR2H          equ	665	;# 
  1539     029A                     CCP2CON         equ	666	;# 
  1540     029B                     PWM2CON         equ	667	;# 
  1541     029C                     CCP2AS          equ	668	;# 
  1542     029C                     ECCP2AS         equ	668	;# 
  1543     029D                     PSTR2CON        equ	669	;# 
  1544     029E                     CCPTMRS0        equ	670	;# 
  1545     029F                     CCPTMRS1        equ	671	;# 
  1546     0311                     CCPR3           equ	785	;# 
  1547     0311                     CCPR3L          equ	785	;# 
  1548     0312                     CCPR3H          equ	786	;# 
  1549     0313                     CCP3CON         equ	787	;# 
  1550     0314                     PWM3CON         equ	788	;# 
  1551     0315                     CCP3AS          equ	789	;# 
  1552     0315                     ECCP3AS         equ	789	;# 
  1553     0316                     PSTR3CON        equ	790	;# 
  1554     0318                     CCPR4           equ	792	;# 
  1555     0318                     CCPR4L          equ	792	;# 
  1556     0319                     CCPR4H          equ	793	;# 
  1557     031A                     CCP4CON         equ	794	;# 
  1558     031C                     CCPR5           equ	796	;# 
  1559     031C                     CCPR5L          equ	796	;# 
  1560     031D                     CCPR5H          equ	797	;# 
  1561     031E                     CCP5CON         equ	798	;# 
  1562     0394                     IOCBP           equ	916	;# 
  1563     0395                     IOCBN           equ	917	;# 
  1564     0396                     IOCBF           equ	918	;# 
  1565     0415                     TMR4            equ	1045	;# 
  1566     0416                     PR4             equ	1046	;# 
  1567     0417                     T4CON           equ	1047	;# 
  1568     041C                     TMR6            equ	1052	;# 
  1569     041D                     PR6             equ	1053	;# 
  1570     041E                     T6CON           equ	1054	;# 
  1571     0791                     LCDCON          equ	1937	;# 
  1572     0792                     LCDPS           equ	1938	;# 
  1573     0793                     LCDREF          equ	1939	;# 
  1574     0794                     LCDCST          equ	1940	;# 
  1575     0795                     LCDRL           equ	1941	;# 
  1576     0798                     LCDSE0          equ	1944	;# 
  1577     0799                     LCDSE1          equ	1945	;# 
  1578     07A0                     LCDDATA0        equ	1952	;# 
  1579     07A1                     LCDDATA1        equ	1953	;# 
  1580     07A3                     LCDDATA3        equ	1955	;# 
  1581     07A4                     LCDDATA4        equ	1956	;# 
  1582     07A6                     LCDDATA6        equ	1958	;# 
  1583     07A7                     LCDDATA7        equ	1959	;# 
  1584     07A9                     LCDDATA9        equ	1961	;# 
  1585     07AA                     LCDDATA10       equ	1962	;# 
  1586     0FE4                     STATUS_SHAD     equ	4068	;# 
  1587     0FE5                     WREG_SHAD       equ	4069	;# 
  1588     0FE6                     BSR_SHAD        equ	4070	;# 
  1589     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1590     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1591     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1592     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1593     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1594     0FED                     STKPTR          equ	4077	;# 
  1595     0FEE                     TOSL            equ	4078	;# 
  1596     0FEF                     TOSH            equ	4079	;# 
  1597                           
  1598                           	psect	idataBANK0
  1599     05E5                     __pidataBANK0:
  1600                           
  1601                           ;initializer for _LIN_timeout
  1602     05E5  340A               	retlw	10
  1603                           
  1604                           	psect	stringtext1
  1605     05BB                     __pstringtext1:
  1606     05BB                     _scheduleTable:
  1607     05BB  3401               	retlw	1
  1608     05BC  3401               	retlw	1
  1609     05BD  3408               	retlw	8
  1610     05BE  34A0               	retlw	low (_SW_STATE_Data| 0)
  1611     05BF  3400               	retlw	high (_SW_STATE_Data| 0)
  1612     05C0                     __end_of_scheduleTable:
  1613     0011                     _PIR1bits       set	17
  1614     000B                     _INTCONbits     set	11
  1615     0015                     _TMR0           set	21
  1616     0097                     _WDTCON         set	151
  1617     0098                     _OSCTUNE        set	152
  1618     0099                     _OSCCON         set	153
  1619     0095                     _OPTION_REG     set	149
  1620     0095                     _OPTION_REGbits set	149
  1621     008E                     _TRISC          set	142
  1622     008D                     _TRISB          set	141
  1623     008C                     _TRISA          set	140
  1624     0090                     _TRISE          set	144
  1625     0091                     _PIE1bits       set	145
  1626     04D6                     _PLLR           set	1238
  1627     0116                     _BORCON         set	278
  1628     011D                     _APFCON         set	285
  1629     010E                     _LATC           set	270
  1630     010D                     _LATB           set	269
  1631     010C                     _LATA           set	268
  1632     0110                     _LATE           set	272
  1633     010D                     _LATBbits       set	269
  1634     019A                     _TXREG          set	410
  1635     018C                     _ANSELA         set	396
  1636     018D                     _ANSELB         set	397
  1637     019D                     _RCSTAbits      set	413
  1638     019E                     _TXSTAbits      set	414
  1639     019F                     _BAUDCON        set	415
  1640     019E                     _TXSTA          set	414
  1641     019D                     _RCSTA          set	413
  1642     0199                     _RCREG          set	409
  1643     019F                     _BAUDCONbits    set	415
  1644     020D                     _WPUB           set	525
  1645     0210                     _WPUE           set	528
  1646                           
  1647                           	psect	cinit
  1648     003A                     start_initialization:	
  1649                           ; #config settings
  1650                           
  1651     003A                     __initialization:
  1652                           
  1653                           ; Initialize objects allocated to BANK0
  1654     003A  3185  25E5  3180   	fcall	__pidataBANK0	;fetch initializer
  1655     003D  00EC               	movwf	__pdataBANK0& (0+127)
  1656                           
  1657                           ; Clear objects allocated to BANK0
  1658     003E  3020               	movlw	low __pbssBANK0
  1659     003F  0084               	movwf	4
  1660     0040  3000               	movlw	high __pbssBANK0
  1661     0041  0085               	movwf	5
  1662     0042  3043               	movlw	67
  1663     0043  3185  2591  3180   	fcall	clear_ram0
  1664                           
  1665                           ; Clear objects allocated to BANK1
  1666     0046  30A0               	movlw	low __pbssBANK1
  1667     0047  0084               	movwf	4
  1668     0048  3000               	movlw	high __pbssBANK1
  1669     0049  0085               	movwf	5
  1670     004A  3008               	movlw	8
  1671     004B  3185  2591  3180   	fcall	clear_ram0
  1672     004E                     end_of_initialization:	
  1673                           ;End of C runtime variable initialization code
  1674                           
  1675     004E                     __end_of__initialization:
  1676     004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1677     004F  0020               	movlb	0
  1678     0050  3185  2D75         	ljmp	_main	;jump to C main() function
  1679                           
  1680                           	psect	bssBANK0
  1681     0020                     __pbssBANK0:
  1682     0020                     _eusartRxStatusBuffer:
  1683     0020                     	ds	8
  1684     0028                     _eusartRxBuffer:
  1685     0028                     	ds	8
  1686     0030                     _eusartTxBuffer:
  1687     0030                     	ds	8
  1688     0038                     _TMR0_InterruptHandler:
  1689     0038                     	ds	2
  1690     003A                     _EUSART_ErrorHandler:
  1691     003A                     	ds	2
  1692     003C                     _EUSART_OverrunErrorHandler:
  1693     003C                     	ds	2
  1694     003E                     _EUSART_FramingErrorHandler:
  1695     003E                     	ds	2
  1696     0040                     _EUSART_RxDefaultInterruptHandler:
  1697     0040                     	ds	2
  1698     0042                     _EUSART_TxDefaultInterruptHandler:
  1699     0042                     	ds	2
  1700     0044                     _LIN_rxCommand:
  1701     0044                     	ds	2
  1702     0046                     _LIN_processData:
  1703     0046                     	ds	2
  1704     0048                     _timer0ReloadVal:
  1705     0048                     	ds	1
  1706     0049                     _eusartRxLastError:
  1707     0049                     	ds	1
  1708     004A                     _eusartRxCount:
  1709     004A                     	ds	1
  1710     004B                     _eusartRxTail:
  1711     004B                     	ds	1
  1712     004C                     _eusartRxHead:
  1713     004C                     	ds	1
  1714     004D                     _eusartTxBufferRemaining:
  1715     004D                     	ds	1
  1716     004E                     _eusartTxTail:
  1717     004E                     	ds	1
  1718     004F                     _eusartTxHead:
  1719     004F                     	ds	1
  1720     0050                     LIN_handler@rxDataIndex:
  1721     0050                     	ds	1
  1722     0051                     LIN_handler@LIN_rxState:
  1723     0051                     	ds	1
  1724     0052                     _CountCallBack:
  1725     0052                     	ds	1
  1726     0053                     _LIN_timerRunning:
  1727     0053                     	ds	1
  1728     0054                     _LIN_rxCommandLength:
  1729     0054                     	ds	1
  1730     0055                     _LIN_rxInProgress:
  1731     0055                     	ds	1
  1732     0056                     _LIN_packet:
  1733     0056                     	ds	13
  1734                           
  1735                           	psect	dataBANK0
  1736     006C                     __pdataBANK0:
  1737     006C                     _LIN_timeout:
  1738     006C                     	ds	1
  1739                           
  1740                           	psect	bssBANK1
  1741     00A0                     __pbssBANK1:
  1742     00A0                     _SW_STATE_Data:
  1743     00A0                     	ds	8
  1744                           
  1745                           	psect	clrtext
  1746     0591                     clear_ram0:	
  1747                           ;	Called with FSR0 containing the base address, and
  1748                           ;	WREG with the size to clear
  1749                           
  1750     0591  0064               	clrwdt	;clear the watchdog before getting into this loop
  1751     0592                     clrloop0:
  1752     0592  0180               	clrf	0	;clear RAM location pointed to by FSR
  1753     0593  3101               	addfsr 0,1
  1754     0594  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1755     0595  2D92               	goto	clrloop0	;have we reached the end yet?
  1756     0596  3400               	retlw	0	;all done for this memory range, return
  1757                           
  1758                           	psect	cstackBANK1
  1759     00A8                     __pcstackBANK1:
  1760     00A8                     ??_LIN_handler:
  1761                           
  1762                           ; 1 bytes @ 0x0
  1763     00A8                     	ds	5
  1764                           
  1765                           	psect	cstackCOMMON
  1766     0070                     __pcstackCOMMON:
  1767     0070                     ?_processLIN:
  1768     0070                     ?_LIN_stopTimer:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771     0070                     ?_LIN_enableRx:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774     0070                     ?_LIN_setTimerHandler:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777     0070                     ?_LIN_getChecksum:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780     0070                     ?_LIN_startTimer:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783     0070                     ?_EUSART_Initialize:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786     0070                     ?_EUSART_is_rx_ready:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789     0070                     ?_EUSART_Read:	
  1790                           ; 1 bytes @ 0x0
  1791                           
  1792     0070                     ?_LIN_checkPID:	
  1793                           ; 1 bytes @ 0x0
  1794                           
  1795     0070                     ?_LIN_getFromTable:	
  1796                           ; 1 bytes @ 0x0
  1797                           
  1798     0070                     ?_LIN_disableRx:	
  1799                           ; 1 bytes @ 0x0
  1800                           
  1801     0070                     ?_EUSART_Write:	
  1802                           ; 1 bytes @ 0x0
  1803                           
  1804     0070                     ?_LIN_calcParity:	
  1805                           ; 1 bytes @ 0x0
  1806                           
  1807     0070                     ?_TMR0_WriteTimer:	
  1808                           ; 1 bytes @ 0x0
  1809                           
  1810     0070                     ?_TMR0_SetInterruptHandler:	
  1811                           ; 1 bytes @ 0x0
  1812                           
  1813     0070                     ?_EUSART_SetRxInterruptHandler:	
  1814                           ; 1 bytes @ 0x0
  1815                           
  1816     0070                     ?_EUSART_Receive_ISR:	
  1817                           ; 1 bytes @ 0x0
  1818                           
  1819     0070                     ?_EUSART_SetTxInterruptHandler:	
  1820                           ; 1 bytes @ 0x0
  1821                           
  1822     0070                     ?_EUSART_Transmit_ISR:	
  1823                           ; 1 bytes @ 0x0
  1824                           
  1825     0070                     ?_EUSART_SetFramingErrorHandler:	
  1826                           ; 1 bytes @ 0x0
  1827                           
  1828     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1829                           ; 1 bytes @ 0x0
  1830                           
  1831     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1832                           ; 1 bytes @ 0x0
  1833                           
  1834     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1835                           ; 1 bytes @ 0x0
  1836                           
  1837     0070                     ?_EUSART_SetErrorHandler:	
  1838                           ; 1 bytes @ 0x0
  1839                           
  1840     0070                     ?_EUSART_DefaultErrorHandler:	
  1841                           ; 1 bytes @ 0x0
  1842                           
  1843     0070                     ?_EUSART_RxDataHandler:	
  1844                           ; 1 bytes @ 0x0
  1845                           
  1846     0070                     ?_TMR0_DefaultInterruptHandler:	
  1847                           ; 1 bytes @ 0x0
  1848                           
  1849     0070                     ?_OSCILLATOR_Initialize:	
  1850                           ; 1 bytes @ 0x0
  1851                           
  1852     0070                     ?_WDT_Initialize:	
  1853                           ; 1 bytes @ 0x0
  1854                           
  1855     0070                     ?_LIN_Slave_Initialize:	
  1856                           ; 1 bytes @ 0x0
  1857                           
  1858     0070                     ?_LIN_queuePacket:	
  1859                           ; 1 bytes @ 0x0
  1860                           
  1861     0070                     ?_AutoBaud_Detect:	
  1862                           ; 1 bytes @ 0x0
  1863                           
  1864     0070                     ?_LIN_handler:	
  1865                           ; 1 bytes @ 0x0
  1866                           
  1867     0070                     ?_LIN_timerHandler:	
  1868                           ; 1 bytes @ 0x0
  1869                           
  1870     0070                     ?_PIN_MANAGER_Initialize:	
  1871                           ; 1 bytes @ 0x0
  1872                           
  1873     0070                     ?_TMR0_Initialize:	
  1874                           ; 1 bytes @ 0x0
  1875                           
  1876     0070                     ?_TMR0_ISR:	
  1877                           ; 1 bytes @ 0x0
  1878                           
  1879     0070                     ?_INTERRUPT_InterruptManager:	
  1880                           ; 1 bytes @ 0x0
  1881                           
  1882     0070                     ?_SYSTEM_Initialize:	
  1883                           ; 1 bytes @ 0x0
  1884                           
  1885     0070                     ?_main:	
  1886                           ; 1 bytes @ 0x0
  1887                           
  1888     0070                     ?i1_LIN_stopTimer:	
  1889                           ; 1 bytes @ 0x0
  1890                           
  1891     0070                     ?_memcpy:	
  1892                           ; 1 bytes @ 0x0
  1893                           
  1894     0070                     ?_memset:	
  1895                           ; 2 bytes @ 0x0
  1896                           
  1897     0070                     LIN_getFromTable@param:	
  1898                           ; 2 bytes @ 0x0
  1899                           
  1900     0070                     LIN_getChecksum@pid:	
  1901                           ; 1 bytes @ 0x0
  1902                           
  1903     0070                     EUSART_Read@readValue:	
  1904                           ; 1 bytes @ 0x0
  1905                           
  1906     0070                     EUSART_Write@txData:	
  1907                           ; 1 bytes @ 0x0
  1908                           
  1909     0070                     TMR0_WriteTimer@timerVal:	
  1910                           ; 1 bytes @ 0x0
  1911                           
  1912     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1913                           ; 1 bytes @ 0x0
  1914                           
  1915     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1916                           ; 2 bytes @ 0x0
  1917                           
  1918     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1919                           ; 2 bytes @ 0x0
  1920                           
  1921     0070                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1922                           ; 2 bytes @ 0x0
  1923                           
  1924     0070                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1925                           ; 2 bytes @ 0x0
  1926                           
  1927     0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  1928                           ; 2 bytes @ 0x0
  1929                           
  1930     0070                     memcpy@d1:	
  1931                           ; 2 bytes @ 0x0
  1932                           
  1933     0070                     memset@dest:	
  1934                           ; 2 bytes @ 0x0
  1935                           
  1936     0070                     ??_LIN_stopTimer:	
  1937                           ; 2 bytes @ 0x0
  1938                           
  1939     0070                     ??_LIN_enableRx:	
  1940                           ; 1 bytes @ 0x0
  1941                           
  1942     0070                     ??_EUSART_is_rx_ready:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945     0070                     ??_EUSART_Read:	
  1946                           ; 1 bytes @ 0x0
  1947                           
  1948     0070                     ??_LIN_disableRx:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951     0070                     ??_EUSART_Write:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954     0070                     ??_LIN_calcParity:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957     0070                     ??_TMR0_WriteTimer:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960     0070                     ??_EUSART_Receive_ISR:	
  1961                           ; 1 bytes @ 0x0
  1962                           
  1963     0070                     ??_EUSART_Transmit_ISR:	
  1964                           ; 1 bytes @ 0x0
  1965                           
  1966     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972     0070                     ??_EUSART_DefaultErrorHandler:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975     0070                     ??_EUSART_RxDataHandler:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978     0070                     ??_TMR0_DefaultInterruptHandler:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981     0070                     ??_OSCILLATOR_Initialize:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984     0070                     ??_WDT_Initialize:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987     0070                     ??_AutoBaud_Detect:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990     0070                     ??_LIN_timerHandler:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993     0070                     ??_PIN_MANAGER_Initialize:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996     0070                     ??_TMR0_ISR:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999     0070                     ??_INTERRUPT_InterruptManager:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002     0070                     ??i1_LIN_stopTimer:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005                           
  2006                           ; 1 bytes @ 0x0
  2007     0070                     	ds	1
  2008     0071                     LIN_calcParity@CMD:
  2009     0071                     LIN_startTimer@timeout:	
  2010                           ; 1 bytes @ 0x1
  2011                           
  2012     0071                     LIN_getChecksum@data:	
  2013                           ; 1 bytes @ 0x1
  2014                           
  2015     0071                     ??_LIN_startTimer:	
  2016                           ; 2 bytes @ 0x1
  2017                           
  2018     0071                     ??_LIN_getFromTable:	
  2019                           ; 1 bytes @ 0x1
  2020                           
  2021                           
  2022                           ; 1 bytes @ 0x1
  2023     0071                     	ds	1
  2024     0072                     ?_LIN_init:
  2025     0072                     LIN_calcParity@PID:	
  2026                           ; 1 bytes @ 0x2
  2027                           
  2028     0072                     LIN_init@command:	
  2029                           ; 1 bytes @ 0x2
  2030                           
  2031     0072                     memcpy@s1:	
  2032                           ; 2 bytes @ 0x2
  2033                           
  2034     0072                     memset@c:	
  2035                           ; 2 bytes @ 0x2
  2036                           
  2037     0072                     ??_LIN_setTimerHandler:	
  2038                           ; 2 bytes @ 0x2
  2039                           
  2040     0072                     ??_EUSART_Initialize:	
  2041                           ; 1 bytes @ 0x2
  2042                           
  2043     0072                     ??_TMR0_SetInterruptHandler:	
  2044                           ; 1 bytes @ 0x2
  2045                           
  2046     0072                     ??_EUSART_SetRxInterruptHandler:	
  2047                           ; 1 bytes @ 0x2
  2048                           
  2049     0072                     ??_EUSART_SetTxInterruptHandler:	
  2050                           ; 1 bytes @ 0x2
  2051                           
  2052     0072                     ??_EUSART_SetFramingErrorHandler:	
  2053                           ; 1 bytes @ 0x2
  2054                           
  2055     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2056                           ; 1 bytes @ 0x2
  2057                           
  2058     0072                     ??_EUSART_SetErrorHandler:	
  2059                           ; 1 bytes @ 0x2
  2060                           
  2061     0072                     ??_TMR0_Initialize:	
  2062                           ; 1 bytes @ 0x2
  2063                           
  2064                           
  2065                           ; 1 bytes @ 0x2
  2066     0072                     	ds	1
  2067     0073                     LIN_getFromTable@cmd:
  2068     0073                     ??_LIN_getChecksum:	
  2069                           ; 1 bytes @ 0x3
  2070                           
  2071                           
  2072                           ; 1 bytes @ 0x3
  2073     0073                     	ds	1
  2074     0074                     LIN_getFromTable@length:
  2075     0074                     LIN_init@processData:	
  2076                           ; 1 bytes @ 0x4
  2077                           
  2078     0074                     memcpy@n:	
  2079                           ; 2 bytes @ 0x4
  2080                           
  2081     0074                     memset@n:	
  2082                           ; 2 bytes @ 0x4
  2083                           
  2084                           
  2085                           ; 2 bytes @ 0x4
  2086     0074                     	ds	1
  2087     0075                     LIN_getChecksum@length:
  2088     0075                     LIN_getFromTable@rxCommand:	
  2089                           ; 1 bytes @ 0x5
  2090                           
  2091                           
  2092                           ; 2 bytes @ 0x5
  2093     0075                     	ds	1
  2094     0076                     LIN_init@tableLength:
  2095     0076                     LIN_getChecksum@i:	
  2096                           ; 1 bytes @ 0x6
  2097                           
  2098     0076                     memcpy@tmp:	
  2099                           ; 1 bytes @ 0x6
  2100                           
  2101     0076                     memset@p:	
  2102                           ; 1 bytes @ 0x6
  2103                           
  2104     0076                     ??_LIN_init:	
  2105                           ; 1 bytes @ 0x6
  2106                           
  2107     0076                     ??_memcpy:	
  2108                           ; 1 bytes @ 0x6
  2109                           
  2110     0076                     ??_memset:	
  2111                           ; 1 bytes @ 0x6
  2112                           
  2113                           
  2114                           ; 1 bytes @ 0x6
  2115     0076                     	ds	1
  2116     0077                     LIN_checkPID@pid:
  2117     0077                     memcpy@d:	
  2118                           ; 1 bytes @ 0x7
  2119                           
  2120     0077                     LIN_getChecksum@checksum:	
  2121                           ; 1 bytes @ 0x7
  2122                           
  2123     0077                     ??_LIN_checkPID:	
  2124                           ; 2 bytes @ 0x7
  2125                           
  2126     0077                     ??_LIN_Slave_Initialize:	
  2127                           ; 1 bytes @ 0x7
  2128                           
  2129     0077                     ??_SYSTEM_Initialize:	
  2130                           ; 1 bytes @ 0x7
  2131                           
  2132                           
  2133                           ; 1 bytes @ 0x7
  2134     0077                     	ds	1
  2135     0078                     memcpy@s:
  2136                           
  2137                           ; 1 bytes @ 0x8
  2138     0078                     	ds	1
  2139     0079                     ?_LIN_getPacket:
  2140     0079                     ?_LIN_sendPacket:	
  2141                           ; 1 bytes @ 0x9
  2142                           
  2143     0079                     LIN_sendPacket@pid:	
  2144                           ; 1 bytes @ 0x9
  2145                           
  2146     0079                     LIN_getPacket@data:	
  2147                           ; 1 bytes @ 0x9
  2148                           
  2149                           
  2150                           ; 1 bytes @ 0x9
  2151     0079                     	ds	1
  2152     007A                     LIN_getPacket@cmd:
  2153     007A                     LIN_sendPacket@data:	
  2154                           ; 1 bytes @ 0xA
  2155                           
  2156     007A                     ??_LIN_getPacket:	
  2157                           ; 2 bytes @ 0xA
  2158                           
  2159                           
  2160                           ; 1 bytes @ 0xA
  2161     007A                     	ds	1
  2162     007B                     ??_processLIN:
  2163                           
  2164                           ; 1 bytes @ 0xB
  2165     007B                     	ds	1
  2166     007C                     LIN_sendPacket@length:
  2167     007C                     ??_LIN_sendPacket:	
  2168                           ; 1 bytes @ 0xC
  2169                           
  2170                           
  2171                           ; 1 bytes @ 0xC
  2172     007C                     	ds	1
  2173     007D                     LIN_sendPacket@i:
  2174                           
  2175                           ; 1 bytes @ 0xD
  2176     007D                     	ds	1
  2177     007E                     ??_main:
  2178                           
  2179                           	psect	cstackBANK0
  2180     0063                     __pcstackBANK0:	
  2181                           ; 1 bytes @ 0xE
  2182                           
  2183     0063                     processLIN@tempRxData:
  2184     0063                     ??_LIN_queuePacket:	
  2185                           ; 8 bytes @ 0x0
  2186                           
  2187                           
  2188                           ; 1 bytes @ 0x0
  2189     0063                     	ds	1
  2190     0064                     LIN_queuePacket@cmd:
  2191                           
  2192                           ; 1 bytes @ 0x1
  2193     0064                     	ds	1
  2194     0065                     LIN_queuePacket@i:
  2195                           
  2196                           ; 1 bytes @ 0x2
  2197     0065                     	ds	1
  2198     0066                     LIN_queuePacket@tempSchedule:
  2199                           
  2200                           ; 2 bytes @ 0x3
  2201     0066                     	ds	5
  2202     006B                     processLIN@cmd:
  2203                           
  2204                           ; 1 bytes @ 0x8
  2205     006B                     	ds	1
  2206                           
  2207                           	psect	maintext
  2208     0575                     __pmaintext:	
  2209 ;;
  2210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2211 ;;
  2212 ;; *************** function _main *****************
  2213 ;; Defined at:
  2214 ;;		line 93 in file "main.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : B1F/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2228 ;;      Params:         0       0       0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels required when called: 9
  2234 ;; This function calls:
  2235 ;;		_LIN_handler
  2236 ;;		_SYSTEM_Initialize
  2237 ;; This function is called by:
  2238 ;;		Startup code after reset
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242     0575                     _main:	
  2243                           ;psect for function _main
  2244                           
  2245     0575                     l2379:	
  2246                           ;incstack = 0
  2247                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2248                           
  2249                           
  2250                           ;main.c: 95:   SYSTEM_Initialize();
  2251     0575  3185  251F  3185   	fcall	_SYSTEM_Initialize
  2252     0578                     l2381:
  2253                           
  2254                           ;main.c: 104:   (INTCONbits.GIE = 1);
  2255     0578  178B               	bsf	11,7	;volatile
  2256     0579                     l2383:
  2257                           
  2258                           ;main.c: 107:   (INTCONbits.PEIE = 1);
  2259     0579  170B               	bsf	11,6	;volatile
  2260     057A                     l2385:
  2261                           
  2262                           ;main.c: 117:     LIN_handler();
  2263     057A  3180  2052  3185   	fcall	_LIN_handler
  2264     057D  2D7A               	goto	l2385
  2265     057E  3180  2838         	ljmp	start
  2266     0580                     __end_of_main:
  2267                           
  2268                           	psect	text1
  2269     051F                     __ptext1:	
  2270 ;; *************** function _SYSTEM_Initialize *****************
  2271 ;; Defined at:
  2272 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, pclath, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2286 ;;      Params:         0       0       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 8
  2293 ;; This function calls:
  2294 ;;		_EUSART_Initialize
  2295 ;;		_LIN_Slave_Initialize
  2296 ;;		_OSCILLATOR_Initialize
  2297 ;;		_PIN_MANAGER_Initialize
  2298 ;;		_TMR0_Initialize
  2299 ;;		_WDT_Initialize
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305     051F                     _SYSTEM_Initialize:	
  2306                           ;psect for function _SYSTEM_Initialize
  2307                           
  2308     051F                     l2161:	
  2309                           ;incstack = 0
  2310                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2311                           
  2312                           
  2313                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2314     051F  3184  2480  3185   	fcall	_PIN_MANAGER_Initialize
  2315                           
  2316                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2317     0522  3185  2569  3185   	fcall	_OSCILLATOR_Initialize
  2318                           
  2319                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2320     0525  3185  25D9  3185   	fcall	_WDT_Initialize
  2321     0528                     l2163:
  2322                           
  2323                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2324     0528  3185  250B  3185   	fcall	_TMR0_Initialize
  2325     052B                     l2165:
  2326                           
  2327                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2328     052B  3183  2305  3185   	fcall	_EUSART_Initialize
  2329     052E                     l2167:
  2330                           
  2331                           ;mcc_generated_files/mcc.c: 58:     LIN_Slave_Initialize();
  2332     052E  3185  2542  3185   	fcall	_LIN_Slave_Initialize
  2333     0531                     l510:
  2334     0531  0008               	return
  2335     0532                     __end_of_SYSTEM_Initialize:
  2336                           
  2337                           	psect	text2
  2338     05D9                     __ptext2:	
  2339 ;; *************** function _WDT_Initialize *****************
  2340 ;; Defined at:
  2341 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		None
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2355 ;;      Params:         0       0       0       0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 4
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_SYSTEM_Initialize
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369     05D9                     _WDT_Initialize:	
  2370                           ;psect for function _WDT_Initialize
  2371                           
  2372     05D9                     l1491:	
  2373                           ;incstack = 0
  2374                           ; Regs used in _WDT_Initialize: []
  2375                           
  2376                           
  2377                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  2378     05D9  3016               	movlw	22
  2379     05DA  0021               	movlb	1	; select bank1
  2380     05DB  0097               	movwf	23	;volatile
  2381     05DC                     l519:
  2382     05DC  0008               	return
  2383     05DD                     __end_of_WDT_Initialize:
  2384                           
  2385                           	psect	text3
  2386     050B                     __ptext3:	
  2387 ;; *************** function _TMR0_Initialize *****************
  2388 ;; Defined at:
  2389 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2403 ;;      Params:         0       0       0       0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 5
  2410 ;; This function calls:
  2411 ;;		_TMR0_SetInterruptHandler
  2412 ;; This function is called by:
  2413 ;;		_SYSTEM_Initialize
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417     050B                     _TMR0_Initialize:	
  2418                           ;psect for function _TMR0_Initialize
  2419                           
  2420     050B                     l2021:	
  2421                           ;incstack = 0
  2422                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2423                           
  2424                           
  2425                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  2426     050B  0021               	movlb	1	; select bank1
  2427     050C  0815               	movf	21,w	;volatile
  2428     050D  39C0               	andlw	192
  2429     050E  3814               	iorlw	20
  2430     050F  0095               	movwf	21	;volatile
  2431     0510                     l2023:
  2432                           
  2433                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  2434     0510  3006               	movlw	6
  2435     0511  0020               	movlb	0	; select bank0
  2436     0512  0095               	movwf	21	;volatile
  2437     0513                     l2025:
  2438                           
  2439                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  2440     0513  3006               	movlw	6
  2441     0514  00C8               	movwf	_timer0ReloadVal	;volatile
  2442     0515                     l2027:
  2443                           
  2444                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2445     0515  110B               	bcf	11,2	;volatile
  2446     0516                     l2029:
  2447                           
  2448                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2449     0516  168B               	bsf	11,5	;volatile
  2450     0517                     l2031:
  2451                           
  2452                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2453     0517  30E6               	movlw	low _TMR0_DefaultInterruptHandler
  2454     0518  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2455     0519  3005               	movlw	high _TMR0_DefaultInterruptHandler
  2456     051A  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2457     051B  3185  2597  3185   	fcall	_TMR0_SetInterruptHandler
  2458     051E                     l433:
  2459     051E  0008               	return
  2460     051F                     __end_of_TMR0_Initialize:
  2461                           
  2462                           	psect	text4
  2463     0480                     __ptext4:	
  2464 ;; *************** function _PIN_MANAGER_Initialize *****************
  2465 ;; Defined at:
  2466 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		status,2
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2480 ;;      Params:         0       0       0       0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 4
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_SYSTEM_Initialize
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494     0480                     _PIN_MANAGER_Initialize:	
  2495                           ;psect for function _PIN_MANAGER_Initialize
  2496                           
  2497     0480                     l1457:	
  2498                           ;incstack = 0
  2499                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2500                           
  2501                           
  2502                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2503     0480  0022               	movlb	2	; select bank2
  2504     0481  0190               	clrf	16	;volatile
  2505                           
  2506                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2507     0482  018C               	clrf	12	;volatile
  2508                           
  2509                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2510     0483  018D               	clrf	13	;volatile
  2511                           
  2512                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  2513     0484  018E               	clrf	14	;volatile
  2514     0485                     l1459:
  2515                           
  2516                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2517     0485  3008               	movlw	8
  2518     0486  0021               	movlb	1	; select bank1
  2519     0487  0090               	movwf	16	;volatile
  2520     0488                     l1461:
  2521                           
  2522                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2523     0488  30FF               	movlw	255
  2524     0489  008C               	movwf	12	;volatile
  2525     048A                     l1463:
  2526                           
  2527                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
  2528     048A  30C0               	movlw	192
  2529     048B  008D               	movwf	13	;volatile
  2530     048C                     l1465:
  2531                           
  2532                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xBF;
  2533     048C  30BF               	movlw	191
  2534     048D  008E               	movwf	14	;volatile
  2535                           
  2536                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  2537     048E  0023               	movlb	3	; select bank3
  2538     048F  018D               	clrf	13	;volatile
  2539     0490                     l1467:
  2540                           
  2541                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  2542     0490  303F               	movlw	63
  2543     0491  008C               	movwf	12	;volatile
  2544                           
  2545                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2546     0492  0024               	movlb	4	; select bank4
  2547     0493  0190               	clrf	16	;volatile
  2548                           
  2549                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2550     0494  018D               	clrf	13	;volatile
  2551     0495                     l1469:
  2552                           
  2553                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2554     0495  0021               	movlb	1	; select bank1
  2555     0496  1795               	bsf	21,7	;volatile
  2556                           
  2557                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2558     0497  0022               	movlb	2	; select bank2
  2559     0498  019D               	clrf	29	;volatile
  2560     0499                     l273:
  2561     0499  0008               	return
  2562     049A                     __end_of_PIN_MANAGER_Initialize:
  2563                           
  2564                           	psect	text5
  2565     0569                     __ptext5:	
  2566 ;; *************** function _OSCILLATOR_Initialize *****************
  2567 ;; Defined at:
  2568 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		status,2
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2582 ;;      Params:         0       0       0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; Hardware stack levels required when called: 4
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_SYSTEM_Initialize
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596     0569                     _OSCILLATOR_Initialize:	
  2597                           ;psect for function _OSCILLATOR_Initialize
  2598                           
  2599     0569                     l1487:	
  2600                           ;incstack = 0
  2601                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2602                           
  2603                           
  2604                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2605     0569  3070               	movlw	112
  2606     056A  0021               	movlb	1	; select bank1
  2607     056B  0099               	movwf	25	;volatile
  2608     056C                     l1489:
  2609                           
  2610                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2611     056C  0198               	clrf	24	;volatile
  2612                           
  2613                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2614     056D  0022               	movlb	2	; select bank2
  2615     056E  0196               	clrf	22	;volatile
  2616     056F                     l513:	
  2617                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2618                           
  2619                           
  2620                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2621     056F  0021               	movlb	1	; select bank1
  2622     0570  1F1A               	btfss	26,6	;volatile
  2623     0571  2D73               	goto	u571
  2624     0572  2D74               	goto	u570
  2625     0573                     u571:
  2626     0573  2D6F               	goto	l513
  2627     0574                     u570:
  2628     0574                     l516:
  2629     0574  0008               	return
  2630     0575                     __end_of_OSCILLATOR_Initialize:
  2631                           
  2632                           	psect	text6
  2633     0542                     __ptext6:	
  2634 ;; *************** function _LIN_Slave_Initialize *****************
  2635 ;; Defined at:
  2636 ;;		line 60 in file "mcc_generated_files/LINDrivers/lin_app.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0, pclath, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2650 ;;      Params:         0       0       0       0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0
  2653 ;;      Totals:         0       0       0       0       0       0       0       0
  2654 ;;Total ram usage:        0 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; Hardware stack levels required when called: 7
  2657 ;; This function calls:
  2658 ;;		_LIN_init
  2659 ;; This function is called by:
  2660 ;;		_SYSTEM_Initialize
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664     0542                     _LIN_Slave_Initialize:	
  2665                           ;psect for function _LIN_Slave_Initialize
  2666                           
  2667     0542                     l1891:	
  2668                           ;incstack = 0
  2669                           ; Regs used in _LIN_Slave_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2670                           
  2671                           
  2672                           ;mcc_generated_files/LINDrivers/lin_app.c: 62:     LIN_init((sizeof(scheduleTable)/sizeo
      +                          f(lin_rx_cmd_t)), scheduleTable, processLIN);
  2673     0542  30BB               	movlw	low (_scheduleTable| (0+32768))
  2674     0543  00F2               	movwf	LIN_init@command
  2675     0544  3085               	movlw	high (_scheduleTable| (0+32768))
  2676     0545  00F3               	movwf	LIN_init@command+1
  2677     0546  30BB               	movlw	low _processLIN
  2678     0547  00F4               	movwf	LIN_init@processData
  2679     0548  3002               	movlw	high _processLIN
  2680     0549  00F5               	movwf	LIN_init@processData+1
  2681     054A  3001               	movlw	1
  2682     054B  3184  24CB  3185   	fcall	_LIN_init
  2683     054E                     l15:
  2684     054E  0008               	return
  2685     054F                     __end_of_LIN_Slave_Initialize:
  2686                           
  2687                           	psect	text7
  2688     04CB                     __ptext7:	
  2689 ;; *************** function _LIN_init *****************
  2690 ;; Defined at:
  2691 ;;		line 57 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  tableLength     1    wreg     unsigned char 
  2694 ;;  command         2    2[COMMON] const PTR const struct .
  2695 ;;		 -> scheduleTable(5), 
  2696 ;;  processData     2    4[COMMON] PTR FTN()void 
  2697 ;;		 -> processLIN(1), 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  tableLength     1    6[COMMON] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2709 ;;      Params:         4       0       0       0       0       0       0       0
  2710 ;;      Locals:         1       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0
  2712 ;;      Totals:         5       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        5 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 6
  2716 ;; This function calls:
  2717 ;;		_LIN_enableRx
  2718 ;;		_LIN_setTimerHandler
  2719 ;;		_LIN_stopTimer
  2720 ;; This function is called by:
  2721 ;;		_LIN_Slave_Initialize
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725     04CB                     _LIN_init:	
  2726                           ;psect for function _LIN_init
  2727                           
  2728                           
  2729                           ;incstack = 0
  2730                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2731                           ;LIN_init@tableLength stored from wreg
  2732     04CB  00F6               	movwf	LIN_init@tableLength
  2733     04CC                     l1779:
  2734                           
  2735                           ;mcc_generated_files/LINDrivers/lin_slave.c: 57: void LIN_init(uint8_t tableLength, cons
      +                          t lin_rx_cmd_t *const command,;mcc_generated_files/LINDrivers/lin_slave.c: 58:          
      +                               void (*processData)(void)) {;mcc_generated_files/LINDrivers/lin_slave.c: 59:   LIN_
      +                          rxCommand = command;
  2736     04CC  0873               	movf	LIN_init@command+1,w
  2737     04CD  0020               	movlb	0	; select bank0
  2738     04CE  00C5               	movwf	_LIN_rxCommand+1
  2739     04CF  0872               	movf	LIN_init@command,w
  2740     04D0  00C4               	movwf	_LIN_rxCommand
  2741                           
  2742                           ;mcc_generated_files/LINDrivers/lin_slave.c: 60:   LIN_rxCommandLength = tableLength;
  2743     04D1  0876               	movf	LIN_init@tableLength,w
  2744     04D2  00D4               	movwf	_LIN_rxCommandLength
  2745                           
  2746                           ;mcc_generated_files/LINDrivers/lin_slave.c: 61:   LIN_processData = processData;
  2747     04D3  0875               	movf	LIN_init@processData+1,w
  2748     04D4  00C7               	movwf	_LIN_processData+1
  2749     04D5  0874               	movf	LIN_init@processData,w
  2750     04D6  00C6               	movwf	_LIN_processData
  2751     04D7                     l1781:
  2752                           
  2753                           ;mcc_generated_files/LINDrivers/lin_slave.c: 62:   LIN_stopTimer();
  2754     04D7  3185  25C0  3184   	fcall	_LIN_stopTimer
  2755     04DA                     l1783:
  2756                           
  2757                           ;mcc_generated_files/LINDrivers/lin_slave.c: 63:   LIN_enableRx();
  2758     04DA  3185  25CA  3184   	fcall	_LIN_enableRx
  2759     04DD                     l1785:
  2760                           
  2761                           ;mcc_generated_files/LINDrivers/lin_slave.c: 64:   LIN_setTimerHandler();
  2762     04DD  3185  2589  3184   	fcall	_LIN_setTimerHandler
  2763     04E0                     l133:
  2764     04E0  0008               	return
  2765     04E1                     __end_of_LIN_init:
  2766                           
  2767                           	psect	text8
  2768     0589                     __ptext8:	
  2769 ;; *************** function _LIN_setTimerHandler *****************
  2770 ;; Defined at:
  2771 ;;		line 346 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2785 ;;      Params:         0       0       0       0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0       0
  2788 ;;      Totals:         0       0       0       0       0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 5
  2792 ;; This function calls:
  2793 ;;		_TMR0_SetInterruptHandler
  2794 ;; This function is called by:
  2795 ;;		_LIN_init
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799     0589                     _LIN_setTimerHandler:	
  2800                           ;psect for function _LIN_setTimerHandler
  2801                           
  2802     0589                     l1723:	
  2803                           ;incstack = 0
  2804                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  2805                           
  2806     0589  305C               	movlw	low _LIN_timerHandler
  2807     058A  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2808     058B  3005               	movlw	high _LIN_timerHandler
  2809     058C  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2810     058D  3185  2597  3185   	fcall	_TMR0_SetInterruptHandler
  2811     0590                     l229:
  2812     0590  0008               	return
  2813     0591                     __end_of_LIN_setTimerHandler:
  2814                           
  2815                           	psect	text9
  2816     0597                     __ptext9:	
  2817 ;; *************** function _TMR0_SetInterruptHandler *****************
  2818 ;; Defined at:
  2819 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2822 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2834 ;;      Params:         2       0       0       0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0
  2837 ;;      Totals:         2       0       0       0       0       0       0       0
  2838 ;;Total ram usage:        2 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 4
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_LIN_setTimerHandler
  2845 ;;		_TMR0_Initialize
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849     0597                     _TMR0_SetInterruptHandler:	
  2850                           ;psect for function _TMR0_SetInterruptHandler
  2851                           
  2852     0597                     l1715:	
  2853                           ;incstack = 0
  2854                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2855                           
  2856                           
  2857                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2858     0597  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2859     0598  0020               	movlb	0	; select bank0
  2860     0599  00B9               	movwf	_TMR0_InterruptHandler+1
  2861     059A  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2862     059B  00B8               	movwf	_TMR0_InterruptHandler
  2863     059C                     l449:
  2864     059C  0008               	return
  2865     059D                     __end_of_TMR0_SetInterruptHandler:
  2866                           
  2867                           	psect	text10
  2868     0052                     __ptext10:	
  2869 ;; *************** function _LIN_handler *****************
  2870 ;; Defined at:
  2871 ;;		line 112 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      enum E204
  2878 ;; Registers used:
  2879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2885 ;;      Params:         0       0       0       0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0
  2887 ;;      Temps:          0       0       5       0       0       0       0       0
  2888 ;;      Totals:         0       0       5       0       0       0       0       0
  2889 ;;Total ram usage:        5 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 7
  2892 ;; This function calls:
  2893 ;;		NULL
  2894 ;;		_AutoBaud_Detect
  2895 ;;		_EUSART_Initialize
  2896 ;;		_EUSART_Read
  2897 ;;		_EUSART_is_rx_ready
  2898 ;;		_LIN_checkPID
  2899 ;;		_LIN_disableRx
  2900 ;;		_LIN_enableRx
  2901 ;;		_LIN_getChecksum
  2902 ;;		_LIN_getFromTable
  2903 ;;		_LIN_queuePacket
  2904 ;;		_LIN_startTimer
  2905 ;;		_LIN_stopTimer
  2906 ;;		_memset
  2907 ;;		_processLIN
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913     0052                     _LIN_handler:	
  2914                           ;psect for function _LIN_handler
  2915                           
  2916     0052                     l2289:	
  2917                           ;incstack = 0
  2918                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2919                           
  2920                           
  2921                           ;mcc_generated_files/LINDrivers/lin_slave.c: 113:   static lin_rx_state_t LIN_rxState = 
      +                          LIN_RX_IDLE;;mcc_generated_files/LINDrivers/lin_slave.c: 114:   static uint8_t rxDataInd
      +                          ex = 0;;mcc_generated_files/LINDrivers/lin_slave.c: 116:   if (LIN_rxInProgress == 1) {
  2922     0052  0020               	movlb	0	; select bank0
  2923     0053  0355               	decf	_LIN_rxInProgress,w
  2924     0054  1D03               	btfss	3,2
  2925     0055  2857               	goto	u1661
  2926     0056  2858               	goto	u1660
  2927     0057                     u1661:
  2928     0057  294E               	goto	l2371
  2929     0058                     u1660:
  2930     0058                     l2291:
  2931                           
  2932                           ;mcc_generated_files/LINDrivers/lin_slave.c: 117:     if (LIN_timerRunning == 0) {
  2933     0058  0853               	movf	_LIN_timerRunning,w
  2934     0059  1D03               	btfss	3,2
  2935     005A  285C               	goto	u1671
  2936     005B  285D               	goto	u1670
  2937     005C                     u1671:
  2938     005C  294E               	goto	l2371
  2939     005D                     u1670:
  2940     005D                     l2293:
  2941                           
  2942                           ;mcc_generated_files/LINDrivers/lin_slave.c: 119:       LIN_rxState = LIN_RX_ERROR;
  2943     005D  3008               	movlw	8
  2944     005E  00D1               	movwf	LIN_handler@LIN_rxState
  2945     005F  294E               	goto	l2371
  2946     0060                     l2295:
  2947                           
  2948                           ;mcc_generated_files/LINDrivers/lin_slave.c: 127:       LIN_startTimer(41);
  2949     0060  3029               	movlw	41
  2950     0061  3185  254F  3180   	fcall	_LIN_startTimer
  2951     0064                     l2297:
  2952                           
  2953                           ;mcc_generated_files/LINDrivers/lin_slave.c: 128:       LIN_rxInProgress = 1;
  2954     0064  3001               	movlw	1
  2955     0065  0020               	movlb	0	; select bank0
  2956     0066  00D5               	movwf	_LIN_rxInProgress
  2957     0067                     l2299:
  2958                           
  2959                           ;mcc_generated_files/LINDrivers/lin_slave.c: 130:       LIN_rxState = LIN_RX_SYNC;
  2960     0067  3002               	movlw	2
  2961     0068  00D1               	movwf	LIN_handler@LIN_rxState
  2962                           
  2963                           ;mcc_generated_files/LINDrivers/lin_slave.c: 142:     break;
  2964     0069  2974               	goto	l180
  2965     006A                     l2301:
  2966                           
  2967                           ;mcc_generated_files/LINDrivers/lin_slave.c: 144:     AutoBaud_Detect();
  2968     006A  3184  24E1  3180   	fcall	_AutoBaud_Detect
  2969     006D                     l2303:
  2970                           
  2971                           ;mcc_generated_files/LINDrivers/lin_slave.c: 145:     if (BAUDCONbits.ABDOVF == 1) {
  2972     006D  0023               	movlb	3	; select bank3
  2973     006E  1F9F               	btfss	31,7	;volatile
  2974     006F  2871               	goto	u1681
  2975     0070  2872               	goto	u1680
  2976     0071                     u1681:
  2977     0071  2878               	goto	l160
  2978     0072                     u1680:
  2979     0072                     l2305:
  2980                           
  2981                           ;mcc_generated_files/LINDrivers/lin_slave.c: 146:       BAUDCONbits.ABDEN = 0;
  2982     0072  101F               	bcf	31,0	;volatile
  2983                           
  2984                           ;mcc_generated_files/LINDrivers/lin_slave.c: 147:       BAUDCONbits.ABDOVF =0;
  2985     0073  139F               	bcf	31,7	;volatile
  2986                           
  2987                           ;mcc_generated_files/LINDrivers/lin_slave.c: 148:       LIN_rxState = LIN_RX_ERROR;
  2988     0074  3008               	movlw	8
  2989     0075  0020               	movlb	0	; select bank0
  2990     0076  00D1               	movwf	LIN_handler@LIN_rxState
  2991                           
  2992                           ;mcc_generated_files/LINDrivers/lin_slave.c: 149:     } else {
  2993     0077  2974               	goto	l180
  2994     0078                     l160:
  2995                           
  2996                           ;mcc_generated_files/LINDrivers/lin_slave.c: 150:       LIN_rxState = LIN_RX_PID;
  2997     0078  3003               	movlw	3
  2998     0079  0020               	movlb	0	; select bank0
  2999     007A  00D1               	movwf	LIN_handler@LIN_rxState
  3000     007B                     l2307:
  3001                           
  3002                           ;mcc_generated_files/LINDrivers/lin_slave.c: 153:       RCSTA=0;
  3003     007B  0023               	movlb	3	; select bank3
  3004     007C  019D               	clrf	29	;volatile
  3005                           
  3006                           ;mcc_generated_files/LINDrivers/lin_slave.c: 154:       TXSTA=0;
  3007     007D  019E               	clrf	30	;volatile
  3008                           
  3009                           ;mcc_generated_files/LINDrivers/lin_slave.c: 155:       BAUDCON=0;
  3010     007E  019F               	clrf	31	;volatile
  3011     007F                     l2309:
  3012                           
  3013                           ;mcc_generated_files/LINDrivers/lin_slave.c: 156:       EUSART_Initialize();
  3014     007F  3183  2305  3180   	fcall	_EUSART_Initialize
  3015     0082                     l2311:
  3016                           
  3017                           ;mcc_generated_files/LINDrivers/lin_slave.c: 157:       PIE1bits.RCIE = 1;
  3018     0082  0021               	movlb	1	; select bank1
  3019     0083  1691               	bsf	17,5	;volatile
  3020     0084  2974               	goto	l180
  3021     0085                     l2313:
  3022                           
  3023                           ;mcc_generated_files/LINDrivers/lin_slave.c: 169:     if (EUSART_is_rx_ready() > 0) {
  3024     0085  3185  2580  3180   	fcall	_EUSART_is_rx_ready
  3025     0088  3A00               	xorlw	0
  3026     0089  1903               	skipnz
  3027     008A  288C               	goto	u1691
  3028     008B  288D               	goto	u1690
  3029     008C                     u1691:
  3030     008C  2974               	goto	l180
  3031     008D                     u1690:
  3032     008D                     l2315:
  3033                           
  3034                           ;mcc_generated_files/LINDrivers/lin_slave.c: 170:       LIN_packet.PID = EUSART_Read();
  3035     008D  3183  23FB  3180   	fcall	_EUSART_Read
  3036     0090  0020               	movlb	0	; select bank0
  3037     0091  00D6               	movwf	_LIN_packet
  3038     0092                     l2317:
  3039                           
  3040                           ;mcc_generated_files/LINDrivers/lin_slave.c: 173:       if (LIN_checkPID(LIN_packet.PID)
      +                           == 0) {
  3041     0092  0856               	movf	_LIN_packet,w
  3042     0093  3184  249A  3180   	fcall	_LIN_checkPID
  3043     0096  3A00               	xorlw	0
  3044     0097  1D03               	skipz
  3045     0098  289A               	goto	u1701
  3046     0099  289B               	goto	u1700
  3047     009A                     u1701:
  3048     009A  289F               	goto	l2321
  3049     009B                     u1700:
  3050     009B                     l2319:
  3051                           
  3052                           ;mcc_generated_files/LINDrivers/lin_slave.c: 174:         LIN_rxState = LIN_RX_ERROR;
  3053     009B  3008               	movlw	8
  3054     009C  0020               	movlb	0	; select bank0
  3055     009D  00D1               	movwf	LIN_handler@LIN_rxState
  3056                           
  3057                           ;mcc_generated_files/LINDrivers/lin_slave.c: 175:         break;
  3058     009E  2974               	goto	l180
  3059     009F                     l2321:
  3060                           
  3061                           ;mcc_generated_files/LINDrivers/lin_slave.c: 177:       LIN_packet.type = LIN_getFromTab
      +                          le(LIN_packet.PID, TYPE);
  3062     009F  01F0               	clrf	LIN_getFromTable@param
  3063     00A0  0AF0               	incf	LIN_getFromTable@param,f
  3064     00A1  0020               	movlb	0	; select bank0
  3065     00A2  0856               	movf	_LIN_packet,w
  3066     00A3  3182  225D  3180   	fcall	_LIN_getFromTable
  3067     00A6  0020               	movlb	0	; select bank0
  3068     00A7  00E0               	movwf	_LIN_packet+10
  3069     00A8                     l2323:
  3070                           
  3071                           ;mcc_generated_files/LINDrivers/lin_slave.c: 178:       if (LIN_packet.type == RECEIVE) 
      +                          {
  3072     00A8  0360               	decf	_LIN_packet+10,w
  3073     00A9  1D03               	btfss	3,2
  3074     00AA  28AC               	goto	u1711
  3075     00AB  28AD               	goto	u1710
  3076     00AC                     u1711:
  3077     00AC  28B8               	goto	l2329
  3078     00AD                     u1710:
  3079     00AD                     l2325:
  3080                           
  3081                           ;mcc_generated_files/LINDrivers/lin_slave.c: 179:         LIN_packet.length = LIN_getFro
      +                          mTable(LIN_packet.PID, LENGTH);
  3082     00AD  3002               	movlw	2
  3083     00AE  00F0               	movwf	LIN_getFromTable@param
  3084     00AF  0856               	movf	_LIN_packet,w
  3085     00B0  3182  225D  3180   	fcall	_LIN_getFromTable
  3086     00B3  0020               	movlb	0	; select bank0
  3087     00B4  00E1               	movwf	_LIN_packet+11
  3088     00B5                     l2327:
  3089                           
  3090                           ;mcc_generated_files/LINDrivers/lin_slave.c: 180:         LIN_rxState = LIN_RX_DATA;
  3091     00B5  3004               	movlw	4
  3092     00B6  00D1               	movwf	LIN_handler@LIN_rxState
  3093                           
  3094                           ;mcc_generated_files/LINDrivers/lin_slave.c: 181:       } else {
  3095     00B7  2974               	goto	l180
  3096     00B8                     l2329:
  3097                           
  3098                           ;mcc_generated_files/LINDrivers/lin_slave.c: 182:         LIN_disableRx();
  3099     00B8  3185  25CF  3180   	fcall	_LIN_disableRx
  3100     00BB                     l2331:
  3101                           
  3102                           ;mcc_generated_files/LINDrivers/lin_slave.c: 183:         LIN_rxState = LIN_RX_TX_DATA;
  3103     00BB  3006               	movlw	6
  3104     00BC  0020               	movlb	0	; select bank0
  3105     00BD  00D1               	movwf	LIN_handler@LIN_rxState
  3106     00BE  2974               	goto	l180
  3107     00BF                     l2333:
  3108                           
  3109                           ;mcc_generated_files/LINDrivers/lin_slave.c: 188:     if (EUSART_is_rx_ready() > 0) {
  3110     00BF  3185  2580  3180   	fcall	_EUSART_is_rx_ready
  3111     00C2  3A00               	xorlw	0
  3112     00C3  1903               	skipnz
  3113     00C4  28C6               	goto	u1721
  3114     00C5  28C7               	goto	u1720
  3115     00C6                     u1721:
  3116     00C6  2974               	goto	l180
  3117     00C7                     u1720:
  3118     00C7                     l2335:
  3119                           
  3120                           ;mcc_generated_files/LINDrivers/lin_slave.c: 189:       LIN_packet.data[rxDataIndex] = E
      +                          USART_Read();
  3121     00C7  3183  23FB  3180   	fcall	_EUSART_Read
  3122     00CA  0021               	movlb	1	; select bank1
  3123     00CB  00A8               	movwf	??_LIN_handler^(0+128)
  3124     00CC  3057               	movlw	low (_LIN_packet+1)
  3125     00CD  00A9               	movwf	(??_LIN_handler+1)^(0+128)
  3126     00CE  3000               	movlw	high (_LIN_packet+1)
  3127     00CF  00AA               	movwf	((??_LIN_handler+1)^(0+128)+1)
  3128     00D0  0020               	movlb	0	; select bank0
  3129     00D1  0850               	movf	LIN_handler@rxDataIndex,w
  3130     00D2  0021               	movlb	1	; select bank1
  3131     00D3  0729               	addwf	(??_LIN_handler+1)^(0+128),w
  3132     00D4  00AB               	movwf	(??_LIN_handler+3)^(0+128)
  3133     00D5  3000               	movlw	0
  3134     00D6  3D2A               	addwfc	(??_LIN_handler+2)^(0+128),w
  3135     00D7  00AC               	movwf	(??_LIN_handler+4)^(0+128)
  3136     00D8  082B               	movf	(??_LIN_handler+3)^(0+128),w
  3137     00D9  0086               	movwf	6
  3138     00DA  082C               	movf	(??_LIN_handler+4)^(0+128),w
  3139     00DB  0087               	movwf	7
  3140     00DC  0828               	movf	??_LIN_handler^(0+128),w
  3141     00DD  0081               	movwf	1
  3142     00DE                     l2337:
  3143                           
  3144                           ;mcc_generated_files/LINDrivers/lin_slave.c: 190:       if (++rxDataIndex >= LIN_packet.
      +                          length) {
  3145     00DE  0020               	movlb	0	; select bank0
  3146     00DF  0861               	movf	_LIN_packet+11,w
  3147     00E0  0021               	movlb	1	; select bank1
  3148     00E1  00A8               	movwf	??_LIN_handler^(0+128)
  3149     00E2  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3150     00E3  1BA8               	btfsc	??_LIN_handler^(0+128),7
  3151     00E4  03A9               	decf	(??_LIN_handler^(0+128)+1),f
  3152     00E5  3001               	movlw	1
  3153     00E6  0020               	movlb	0	; select bank0
  3154     00E7  07D0               	addwf	LIN_handler@rxDataIndex,f
  3155     00E8  0021               	movlb	1	; select bank1
  3156     00E9  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3157     00EA  3A80               	xorlw	128
  3158     00EB  3C80               	sublw	128
  3159     00EC  1D03               	skipz
  3160     00ED  28F1               	goto	u1735
  3161     00EE  0828               	movf	??_LIN_handler^(0+128),w
  3162     00EF  0020               	movlb	0	; select bank0
  3163     00F0  0250               	subwf	LIN_handler@rxDataIndex,w
  3164     00F1                     u1735:
  3165     00F1  1C03               	skipc
  3166     00F2  28F4               	goto	u1731
  3167     00F3  28F5               	goto	u1730
  3168     00F4                     u1731:
  3169     00F4  2974               	goto	l180
  3170     00F5                     u1730:
  3171     00F5                     l2339:
  3172                           
  3173                           ;mcc_generated_files/LINDrivers/lin_slave.c: 192:         rxDataIndex = 0;
  3174     00F5  0020               	movlb	0	; select bank0
  3175     00F6  01D0               	clrf	LIN_handler@rxDataIndex
  3176     00F7                     l2341:
  3177                           
  3178                           ;mcc_generated_files/LINDrivers/lin_slave.c: 193:         LIN_rxState = LIN_RX_CHECKSUM;
  3179     00F7  3005               	movlw	5
  3180     00F8  00D1               	movwf	LIN_handler@LIN_rxState
  3181     00F9  2974               	goto	l180
  3182     00FA                     l2343:
  3183                           
  3184                           ;mcc_generated_files/LINDrivers/lin_slave.c: 198:     if (EUSART_is_rx_ready() > 0) {
  3185     00FA  3185  2580  3180   	fcall	_EUSART_is_rx_ready
  3186     00FD  3A00               	xorlw	0
  3187     00FE  1903               	skipnz
  3188     00FF  2901               	goto	u1741
  3189     0100  2902               	goto	u1740
  3190     0101                     u1741:
  3191     0101  2974               	goto	l180
  3192     0102                     u1740:
  3193     0102                     l2345:
  3194                           
  3195                           ;mcc_generated_files/LINDrivers/lin_slave.c: 199:       LIN_packet.checksum = EUSART_Rea
      +                          d();
  3196     0102  3183  23FB  3180   	fcall	_EUSART_Read
  3197     0105  0020               	movlb	0	; select bank0
  3198     0106  00DF               	movwf	_LIN_packet+9
  3199                           
  3200                           ;mcc_generated_files/LINDrivers/lin_slave.c: 200:       if (LIN_packet.checksum !=
  3201     0107  0856               	movf	_LIN_packet,w
  3202     0108  00F0               	movwf	LIN_getChecksum@pid
  3203     0109  3057               	movlw	low (_LIN_packet+1)
  3204     010A  00F1               	movwf	LIN_getChecksum@data
  3205     010B  3000               	movlw	high (_LIN_packet+1)
  3206     010C  00F2               	movwf	LIN_getChecksum@data+1
  3207     010D  0861               	movf	_LIN_packet+11,w
  3208     010E  3183  2379  3180   	fcall	_LIN_getChecksum
  3209     0111  0020               	movlb	0	; select bank0
  3210     0112  065F               	xorwf	_LIN_packet+9,w
  3211     0113  1903               	skipnz
  3212     0114  2916               	goto	u1751
  3213     0115  2917               	goto	u1750
  3214     0116                     u1751:
  3215     0116  2918               	goto	l172
  3216     0117                     u1750:
  3217     0117  289B               	goto	l2319
  3218     0118                     l172:
  3219                           
  3220                           ;mcc_generated_files/LINDrivers/lin_slave.c: 204:         LIN_rxState = LIN_RX_RDY;
  3221     0118  3007               	movlw	7
  3222     0119  00D1               	movwf	LIN_handler@LIN_rxState
  3223     011A  2974               	goto	l180
  3224     011B                     l2349:
  3225                           
  3226                           ;mcc_generated_files/LINDrivers/lin_slave.c: 209:     LIN_queuePacket(LIN_packet.PID);
  3227     011B  0020               	movlb	0	; select bank0
  3228     011C  0856               	movf	_LIN_packet,w
  3229     011D  3181  21FB  3180   	fcall	_LIN_queuePacket
  3230     0120                     l2351:
  3231                           
  3232                           ;mcc_generated_files/LINDrivers/lin_slave.c: 210:     LIN_rxState = LIN_RX_RDY;
  3233     0120  3007               	movlw	7
  3234     0121  0020               	movlb	0	; select bank0
  3235     0122  00D1               	movwf	LIN_handler@LIN_rxState
  3236     0123                     l175:	
  3237                           ;mcc_generated_files/LINDrivers/lin_slave.c: 211:   case LIN_RX_RDY:
  3238                           
  3239                           
  3240                           ;mcc_generated_files/LINDrivers/lin_slave.c: 212:     LIN_processData();
  3241     0123  0020               	movlb	0	; select bank0
  3242     0124  0847               	movf	_LIN_processData+1,w
  3243     0125  008A               	movwf	10
  3244     0126  0846               	movf	_LIN_processData,w
  3245     0127  000A               	callw
  3246     0128  3180               	pagesel	$
  3247     0129                     l2353:
  3248                           
  3249                           ;mcc_generated_files/LINDrivers/lin_slave.c: 214:     LIN_stopTimer();
  3250     0129  3185  25C0  3180   	fcall	_LIN_stopTimer
  3251     012C                     l2355:
  3252                           
  3253                           ;mcc_generated_files/LINDrivers/lin_slave.c: 215:     rxDataIndex = 0;
  3254     012C  0020               	movlb	0	; select bank0
  3255     012D  01D0               	clrf	LIN_handler@rxDataIndex
  3256     012E                     l2357:
  3257                           
  3258                           ;mcc_generated_files/LINDrivers/lin_slave.c: 216:     LIN_rxInProgress = 0;
  3259     012E  01D5               	clrf	_LIN_rxInProgress
  3260     012F                     l2359:
  3261                           
  3262                           ;mcc_generated_files/LINDrivers/lin_slave.c: 217:     PIE1bits.RCIE = 0;
  3263     012F  0021               	movlb	1	; select bank1
  3264     0130  1291               	bcf	17,5	;volatile
  3265     0131                     l2361:
  3266                           
  3267                           ;mcc_generated_files/LINDrivers/lin_slave.c: 218:     memset(LIN_packet.rawPacket, 0,
  3268     0131  3056               	movlw	low _LIN_packet
  3269     0132  00F0               	movwf	memset@dest
  3270     0133  3000               	movlw	high _LIN_packet
  3271     0134  00F1               	movwf	memset@dest+1
  3272     0135  3000               	movlw	0
  3273     0136  00F2               	movwf	memset@c
  3274     0137  00F3               	movwf	memset@c+1
  3275     0138  300D               	movlw	13
  3276     0139  00F4               	movwf	memset@n
  3277     013A  3000               	movlw	0
  3278     013B  00F5               	movwf	memset@n+1
  3279     013C  3184  24B4  3180   	fcall	_memset
  3280     013F                     l2363:
  3281                           
  3282                           ;mcc_generated_files/LINDrivers/lin_slave.c: 222:     if (TXSTAbits.TRMT) {
  3283     013F  0023               	movlb	3	; select bank3
  3284     0140  1C9E               	btfss	30,1	;volatile
  3285     0141  2943               	goto	u1761
  3286     0142  2944               	goto	u1760
  3287     0143                     u1761:
  3288     0143  294A               	goto	l178
  3289     0144                     u1760:
  3290     0144                     l2365:
  3291                           
  3292                           ;mcc_generated_files/LINDrivers/lin_slave.c: 223:       LIN_enableRx();
  3293     0144  3185  25CA  3180   	fcall	_LIN_enableRx
  3294     0147                     l2367:
  3295                           
  3296                           ;mcc_generated_files/LINDrivers/lin_slave.c: 224:       LIN_rxState = LIN_RX_IDLE;
  3297     0147  0020               	movlb	0	; select bank0
  3298     0148  01D1               	clrf	LIN_handler@LIN_rxState
  3299                           
  3300                           ;mcc_generated_files/LINDrivers/lin_slave.c: 225:     } else {
  3301     0149  2974               	goto	l180
  3302     014A                     l178:
  3303                           
  3304                           ;mcc_generated_files/LINDrivers/lin_slave.c: 226:       LIN_rxState = LIN_RX_WAIT;
  3305     014A  3009               	movlw	9
  3306     014B  0020               	movlb	0	; select bank0
  3307     014C  00D1               	movwf	LIN_handler@LIN_rxState
  3308     014D  2974               	goto	l180
  3309     014E                     l2371:
  3310     014E  0851               	movf	LIN_handler@LIN_rxState,w
  3311     014F  0021               	movlb	1	; select bank1
  3312     0150  00A8               	movwf	??_LIN_handler^(0+128)
  3313     0151  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3314                           
  3315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3316                           ; Switch size 1, requested type "simple"
  3317                           ; Number of cases is 1, Range of values is 0 to 0
  3318                           ; switch strategies available:
  3319                           ; Name         Instructions Cycles
  3320                           ; simple_byte            4     3 (average)
  3321                           ; direct_byte            8     6 (fixed)
  3322                           ; jumptable            260     6 (fixed)
  3323                           ;	Chosen strategy is simple_byte
  3324     0152  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3325     0153  3A00               	xorlw	0	; case 0
  3326     0154  1903               	skipnz
  3327     0155  2957               	goto	l2457
  3328     0156  2974               	goto	l180
  3329     0157                     l2457:
  3330                           
  3331                           ; Switch size 1, requested type "simple"
  3332                           ; Number of cases is 9, Range of values is 0 to 9
  3333                           ; switch strategies available:
  3334                           ; Name         Instructions Cycles
  3335                           ; direct_byte           26     6 (fixed)
  3336                           ; simple_byte           28    15 (average)
  3337                           ; jumptable            260     6 (fixed)
  3338                           ;	Chosen strategy is simple_byte
  3339     0157  0828               	movf	??_LIN_handler^(0+128),w
  3340     0158  3A00               	xorlw	0	; case 0
  3341     0159  1903               	skipnz
  3342     015A  2860               	goto	l2295
  3343     015B  3A02               	xorlw	2	; case 2
  3344     015C  1903               	skipnz
  3345     015D  286A               	goto	l2301
  3346     015E  3A01               	xorlw	1	; case 3
  3347     015F  1903               	skipnz
  3348     0160  2885               	goto	l2313
  3349     0161  3A07               	xorlw	7	; case 4
  3350     0162  1903               	skipnz
  3351     0163  28BF               	goto	l2333
  3352     0164  3A01               	xorlw	1	; case 5
  3353     0165  1903               	skipnz
  3354     0166  28FA               	goto	l2343
  3355     0167  3A03               	xorlw	3	; case 6
  3356     0168  1903               	skipnz
  3357     0169  291B               	goto	l2349
  3358     016A  3A01               	xorlw	1	; case 7
  3359     016B  1903               	skipnz
  3360     016C  2923               	goto	l175
  3361     016D  3A0F               	xorlw	15	; case 8
  3362     016E  1903               	skipnz
  3363     016F  2929               	goto	l2353
  3364     0170  3A01               	xorlw	1	; case 9
  3365     0171  1903               	skipnz
  3366     0172  293F               	goto	l2363
  3367     0173  2974               	goto	l180
  3368     0174                     l180:
  3369     0174  0008               	return
  3370     0175                     __end_of_LIN_handler:
  3371                           
  3372                           	psect	text11
  3373     02BB                     __ptext11:	
  3374 ;; *************** function _processLIN *****************
  3375 ;; Defined at:
  3376 ;;		line 65 in file "mcc_generated_files/LINDrivers/lin_app.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  tempRxData      8    0[BANK0 ] unsigned char [8]
  3381 ;;  cmd             1    8[BANK0 ] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3391 ;;      Params:         0       0       0       0       0       0       0       0
  3392 ;;      Locals:         0       9       0       0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0
  3394 ;;      Totals:         0       9       0       0       0       0       0       0
  3395 ;;Total ram usage:        9 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 6
  3398 ;; This function calls:
  3399 ;;		_LIN_getPacket
  3400 ;; This function is called by:
  3401 ;;		_LIN_Slave_Initialize
  3402 ;;		_LIN_handler
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406     02BB                     _processLIN:	
  3407                           ;psect for function _processLIN
  3408                           
  3409     02BB                     l1893:	
  3410                           ;incstack = 0
  3411                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3412                           
  3413                           
  3414                           ;mcc_generated_files/LINDrivers/lin_app.c: 66:     uint8_t tempRxData[8];;mcc_generated_
      +                          files/LINDrivers/lin_app.c: 67:     uint8_t cmd;;mcc_generated_files/LINDrivers/lin_app.
      +                          c: 69:     cmd = LIN_getPacket(tempRxData);
  3415     02BB  3063               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3416     02BC  00F9               	movwf	LIN_getPacket@data
  3417     02BD  3183  23AB  3182   	fcall	_LIN_getPacket
  3418     02C0  0020               	movlb	0	; select bank0
  3419     02C1  00EB               	movwf	processLIN@cmd
  3420                           
  3421                           ;mcc_generated_files/LINDrivers/lin_app.c: 70:     switch (cmd) {
  3422     02C2  2AFF               	goto	l1897
  3423     02C3                     l19:	
  3424                           ;mcc_generated_files/LINDrivers/lin_app.c: 72:         case SW_STATE:
  3425                           
  3426                           
  3427                           ;mcc_generated_files/LINDrivers/lin_app.c: 73:             if ( (tempRxData[5] & 0B00100
      +                          000) == 0B00100000) {
  3428     02C3  1EE8               	btfss	processLIN@tempRxData+5,5
  3429     02C4  2AC6               	goto	u1221
  3430     02C5  2AC7               	goto	u1220
  3431     02C6                     u1221:
  3432     02C6  2ACA               	goto	l24
  3433     02C7                     u1220:
  3434     02C7                     l21:	
  3435                           ;mcc_generated_files/LINDrivers/lin_app.c: 74:                 do { LATBbits.LATB5 = 1; 
      +                          } while(0);
  3436                           
  3437     02C7  0022               	movlb	2	; select bank2
  3438     02C8  168D               	bsf	13,5	;volatile
  3439     02C9  2ACC               	goto	l23
  3440     02CA                     l24:	
  3441                           ;mcc_generated_files/LINDrivers/lin_app.c: 76:                 do { LATBbits.LATB5 = 0; 
      +                          } while(0);
  3442                           
  3443     02CA  0022               	movlb	2	; select bank2
  3444     02CB  128D               	bcf	13,5	;volatile
  3445     02CC                     l23:	
  3446                           ;mcc_generated_files/LINDrivers/lin_app.c: 77:             }
  3447                           
  3448                           
  3449                           ;mcc_generated_files/LINDrivers/lin_app.c: 79:             if ( (tempRxData[2] & 0B00000
      +                          001) == 0B00000001) {
  3450     02CC  0020               	movlb	0	; select bank0
  3451     02CD  1C65               	btfss	processLIN@tempRxData+2,0
  3452     02CE  2AD0               	goto	u1231
  3453     02CF  2AD1               	goto	u1230
  3454     02D0                     u1231:
  3455     02D0  2AD4               	goto	l30
  3456     02D1                     u1230:
  3457     02D1                     l27:	
  3458                           ;mcc_generated_files/LINDrivers/lin_app.c: 80:                 do { LATBbits.LATB4 = 1; 
      +                          } while(0);
  3459                           
  3460     02D1  0022               	movlb	2	; select bank2
  3461     02D2  160D               	bsf	13,4	;volatile
  3462     02D3  2AD6               	goto	l29
  3463     02D4                     l30:	
  3464                           ;mcc_generated_files/LINDrivers/lin_app.c: 82:                 do { LATBbits.LATB4 = 0; 
      +                          } while(0);
  3465                           
  3466     02D4  0022               	movlb	2	; select bank2
  3467     02D5  120D               	bcf	13,4	;volatile
  3468     02D6                     l29:	
  3469                           ;mcc_generated_files/LINDrivers/lin_app.c: 83:             }
  3470                           
  3471                           
  3472                           ;mcc_generated_files/LINDrivers/lin_app.c: 85:             if ( (tempRxData[1] & 0B00001
      +                          000) == 0B00001000) {
  3473     02D6  0020               	movlb	0	; select bank0
  3474     02D7  1DE4               	btfss	processLIN@tempRxData+1,3
  3475     02D8  2ADA               	goto	u1241
  3476     02D9  2ADB               	goto	u1240
  3477     02DA                     u1241:
  3478     02DA  2ADE               	goto	l36
  3479     02DB                     u1240:
  3480     02DB                     l33:	
  3481                           ;mcc_generated_files/LINDrivers/lin_app.c: 86:                 do { LATBbits.LATB3 = 1; 
      +                          } while(0);
  3482                           
  3483     02DB  0022               	movlb	2	; select bank2
  3484     02DC  158D               	bsf	13,3	;volatile
  3485     02DD  2AE0               	goto	l35
  3486     02DE                     l36:	
  3487                           ;mcc_generated_files/LINDrivers/lin_app.c: 88:                 do { LATBbits.LATB3 = 0; 
      +                          } while(0);
  3488                           
  3489     02DE  0022               	movlb	2	; select bank2
  3490     02DF  118D               	bcf	13,3	;volatile
  3491     02E0                     l35:	
  3492                           ;mcc_generated_files/LINDrivers/lin_app.c: 89:             }
  3493                           
  3494                           
  3495                           ;mcc_generated_files/LINDrivers/lin_app.c: 91:             if ( (tempRxData[1] & 0B01000
      +                          000) == 0B01000000) {
  3496     02E0  0020               	movlb	0	; select bank0
  3497     02E1  1F64               	btfss	processLIN@tempRxData+1,6
  3498     02E2  2AE4               	goto	u1251
  3499     02E3  2AE5               	goto	u1250
  3500     02E4                     u1251:
  3501     02E4  2AE8               	goto	l42
  3502     02E5                     u1250:
  3503     02E5                     l39:	
  3504                           ;mcc_generated_files/LINDrivers/lin_app.c: 92:                 do { LATBbits.LATB2 = 1; 
      +                          } while(0);
  3505                           
  3506     02E5  0022               	movlb	2	; select bank2
  3507     02E6  150D               	bsf	13,2	;volatile
  3508     02E7  2AEA               	goto	l41
  3509     02E8                     l42:	
  3510                           ;mcc_generated_files/LINDrivers/lin_app.c: 94:                 do { LATBbits.LATB2 = 0; 
      +                          } while(0);
  3511                           
  3512     02E8  0022               	movlb	2	; select bank2
  3513     02E9  110D               	bcf	13,2	;volatile
  3514     02EA                     l41:	
  3515                           ;mcc_generated_files/LINDrivers/lin_app.c: 95:             }
  3516                           
  3517                           
  3518                           ;mcc_generated_files/LINDrivers/lin_app.c: 97:             if ( (tempRxData[1] & 0B00010
      +                          000) == 0B00010000) {
  3519     02EA  0020               	movlb	0	; select bank0
  3520     02EB  1E64               	btfss	processLIN@tempRxData+1,4
  3521     02EC  2AEE               	goto	u1261
  3522     02ED  2AEF               	goto	u1260
  3523     02EE                     u1261:
  3524     02EE  2AF2               	goto	l48
  3525     02EF                     u1260:
  3526     02EF                     l45:	
  3527                           ;mcc_generated_files/LINDrivers/lin_app.c: 98:                 do { LATBbits.LATB1 = 1; 
      +                          } while(0);
  3528                           
  3529     02EF  0022               	movlb	2	; select bank2
  3530     02F0  148D               	bsf	13,1	;volatile
  3531     02F1  2AF4               	goto	l47
  3532     02F2                     l48:	
  3533                           ;mcc_generated_files/LINDrivers/lin_app.c: 100:                 do { LATBbits.LATB1 = 0;
      +                           } while(0);
  3534                           
  3535     02F2  0022               	movlb	2	; select bank2
  3536     02F3  108D               	bcf	13,1	;volatile
  3537     02F4                     l47:	
  3538                           ;mcc_generated_files/LINDrivers/lin_app.c: 101:             }
  3539                           
  3540                           
  3541                           ;mcc_generated_files/LINDrivers/lin_app.c: 103:             if ( (tempRxData[1] & 0B0010
      +                          0000) == 0B00100000) {
  3542     02F4  0020               	movlb	0	; select bank0
  3543     02F5  1EE4               	btfss	processLIN@tempRxData+1,5
  3544     02F6  2AF8               	goto	u1271
  3545     02F7  2AF9               	goto	u1270
  3546     02F8                     u1271:
  3547     02F8  2AFC               	goto	l54
  3548     02F9                     u1270:
  3549     02F9                     l51:	
  3550                           ;mcc_generated_files/LINDrivers/lin_app.c: 104:                 do { LATBbits.LATB0 = 1;
      +                           } while(0);
  3551                           
  3552     02F9  0022               	movlb	2	; select bank2
  3553     02FA  140D               	bsf	13,0	;volatile
  3554     02FB  2B04               	goto	l58
  3555     02FC                     l54:	
  3556                           ;mcc_generated_files/LINDrivers/lin_app.c: 106:                 do { LATBbits.LATB0 = 0;
      +                           } while(0);
  3557                           
  3558     02FC  0022               	movlb	2	; select bank2
  3559     02FD  100D               	bcf	13,0	;volatile
  3560     02FE  2B04               	goto	l58
  3561     02FF                     l1897:
  3562     02FF  086B               	movf	processLIN@cmd,w
  3563                           
  3564                           ; Switch size 1, requested type "simple"
  3565                           ; Number of cases is 1, Range of values is 1 to 1
  3566                           ; switch strategies available:
  3567                           ; Name         Instructions Cycles
  3568                           ; simple_byte            4     3 (average)
  3569                           ; direct_byte           11     9 (fixed)
  3570                           ; jumptable            263     9 (fixed)
  3571                           ;	Chosen strategy is simple_byte
  3572     0300  3A01               	xorlw	1	; case 1
  3573     0301  1903               	skipnz
  3574     0302  2AC3               	goto	l19
  3575     0303  2B04               	goto	l58
  3576     0304                     l58:
  3577     0304  0008               	return
  3578     0305                     __end_of_processLIN:
  3579                           
  3580                           	psect	text12
  3581     03AB                     __ptext12:	
  3582 ;; *************** function _LIN_getPacket *****************
  3583 ;; Defined at:
  3584 ;;		line 243 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  data            1    9[COMMON] PTR unsigned char 
  3587 ;;		 -> processLIN@tempRxData(8), 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  cmd             1   10[COMMON] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      unsigned char 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3599 ;;      Params:         1       0       0       0       0       0       0       0
  3600 ;;      Locals:         1       0       0       0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0
  3602 ;;      Totals:         2       0       0       0       0       0       0       0
  3603 ;;Total ram usage:        2 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 5
  3606 ;; This function calls:
  3607 ;;		_memcpy
  3608 ;;		_memset
  3609 ;; This function is called by:
  3610 ;;		_processLIN
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614     03AB                     _LIN_getPacket:	
  3615                           ;psect for function _LIN_getPacket
  3616                           
  3617     03AB                     l1787:	
  3618                           ;incstack = 0
  3619                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3620                           
  3621                           
  3622                           ;mcc_generated_files/LINDrivers/lin_slave.c: 244:   uint8_t cmd = LIN_packet.PID & 0x3F;
  3623     03AB  0020               	movlb	0	; select bank0
  3624     03AC  0856               	movf	_LIN_packet,w
  3625     03AD  393F               	andlw	63
  3626     03AE  00FA               	movwf	LIN_getPacket@cmd
  3627     03AF                     l1789:
  3628                           
  3629                           ;mcc_generated_files/LINDrivers/lin_slave.c: 246:   if (cmd != 0) {
  3630     03AF  087A               	movf	LIN_getPacket@cmd,w
  3631     03B0  1903               	btfsc	3,2
  3632     03B1  2BB3               	goto	u901
  3633     03B2  2BB4               	goto	u900
  3634     03B3                     u901:
  3635     03B3  2BB7               	goto	l1793
  3636     03B4                     u900:
  3637     03B4                     l1791:
  3638                           
  3639                           ;mcc_generated_files/LINDrivers/lin_slave.c: 247:     __nop();
  3640     03B4  0000               	nop
  3641                           
  3642                           ;mcc_generated_files/LINDrivers/lin_slave.c: 248:     __nop();
  3643     03B5  0000               	nop
  3644                           
  3645                           ;mcc_generated_files/LINDrivers/lin_slave.c: 249:     __nop();
  3646     03B6  0000               	nop
  3647     03B7                     l1793:
  3648                           
  3649                           ;mcc_generated_files/LINDrivers/lin_slave.c: 252:   memcpy(data, LIN_packet.data, sizeof
      +                          (LIN_packet.data));
  3650     03B7  0879               	movf	LIN_getPacket@data,w
  3651     03B8  00F0               	movwf	memcpy@d1
  3652     03B9  01F1               	clrf	memcpy@d1+1
  3653     03BA  3057               	movlw	low (_LIN_packet+1)
  3654     03BB  00F2               	movwf	memcpy@s1
  3655     03BC  3000               	movlw	high (_LIN_packet+1)
  3656     03BD  00F3               	movwf	memcpy@s1+1
  3657     03BE  3008               	movlw	8
  3658     03BF  00F4               	movwf	memcpy@n
  3659     03C0  3000               	movlw	0
  3660     03C1  00F5               	movwf	memcpy@n+1
  3661     03C2  3184  2442  3183   	fcall	_memcpy
  3662                           
  3663                           ;mcc_generated_files/LINDrivers/lin_slave.c: 253:   memset(LIN_packet.rawPacket, 0, size
      +                          of(LIN_packet.rawPacket));
  3664     03C5  3056               	movlw	low _LIN_packet
  3665     03C6  00F0               	movwf	memset@dest
  3666     03C7  3000               	movlw	high _LIN_packet
  3667     03C8  00F1               	movwf	memset@dest+1
  3668     03C9  3000               	movlw	0
  3669     03CA  00F2               	movwf	memset@c
  3670     03CB  00F3               	movwf	memset@c+1
  3671     03CC  300D               	movlw	13
  3672     03CD  00F4               	movwf	memset@n
  3673     03CE  3000               	movlw	0
  3674     03CF  00F5               	movwf	memset@n+1
  3675     03D0  3184  24B4  3183   	fcall	_memset
  3676     03D3                     l1795:
  3677                           
  3678                           ;mcc_generated_files/LINDrivers/lin_slave.c: 255:   return cmd;
  3679     03D3  087A               	movf	LIN_getPacket@cmd,w
  3680     03D4                     l190:
  3681     03D4  0008               	return
  3682     03D5                     __end_of_LIN_getPacket:
  3683                           
  3684                           	psect	text13
  3685     04B4                     __ptext13:	
  3686 ;; *************** function _memset *****************
  3687 ;; Defined at:
  3688 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  dest            2    0[COMMON] PTR void 
  3691 ;;		 -> LIN_packet(13), 
  3692 ;;  c               2    2[COMMON] int 
  3693 ;;  n               2    4[COMMON] unsigned int 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  p               1    6[COMMON] PTR unsigned char 
  3696 ;;		 -> LIN_packet(13), 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  2    0[COMMON] PTR void 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3706 ;;      Params:         6       0       0       0       0       0       0       0
  3707 ;;      Locals:         1       0       0       0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0
  3709 ;;      Totals:         7       0       0       0       0       0       0       0
  3710 ;;Total ram usage:        7 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; Hardware stack levels required when called: 4
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_LIN_handler
  3717 ;;		_LIN_getPacket
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721     04B4                     _memset:	
  3722                           ;psect for function _memset
  3723                           
  3724     04B4                     l1753:	
  3725                           ;incstack = 0
  3726                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3727                           
  3728     04B4  0870               	movf	memset@dest,w
  3729     04B5  00F6               	movwf	memset@p
  3730     04B6  2CBE               	goto	l1759
  3731     04B7                     l1755:
  3732     04B7  0876               	movf	memset@p,w
  3733     04B8  0086               	movwf	6
  3734     04B9  0187               	clrf	7
  3735     04BA  0872               	movf	memset@c,w
  3736     04BB  0081               	movwf	1
  3737     04BC                     l1757:
  3738     04BC  3001               	movlw	1
  3739     04BD  07F6               	addwf	memset@p,f
  3740     04BE                     l1759:
  3741     04BE  3001               	movlw	1
  3742     04BF  02F4               	subwf	memset@n,f
  3743     04C0  3000               	movlw	0
  3744     04C1  3BF5               	subwfb	memset@n+1,f
  3745     04C2  0A74               	incf	memset@n,w
  3746     04C3  1D03               	skipz
  3747     04C4  2CC9               	goto	u861
  3748     04C5  0A75               	incf	memset@n+1,w
  3749     04C6  1D03               	btfss	3,2
  3750     04C7  2CC9               	goto	u861
  3751     04C8  2CCA               	goto	u860
  3752     04C9                     u861:
  3753     04C9  2CB7               	goto	l1755
  3754     04CA                     u860:
  3755     04CA                     l1155:
  3756     04CA  0008               	return
  3757     04CB                     __end_of_memset:
  3758                           
  3759                           	psect	text14
  3760     05C0                     __ptext14:	
  3761 ;; *************** function _LIN_stopTimer *****************
  3762 ;; Defined at:
  3763 ;;		line 348 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		status,2
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3777 ;;      Params:         0       0       0       0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 4
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_LIN_init
  3788 ;;		_LIN_handler
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792     05C0                     _LIN_stopTimer:	
  3793                           ;psect for function _LIN_stopTimer
  3794                           
  3795     05C0                     l1717:	
  3796                           ;incstack = 0
  3797                           ; Regs used in _LIN_stopTimer: [status,2]
  3798                           
  3799                           
  3800                           ;mcc_generated_files/LINDrivers/lin_slave.c: 349:   __nop();
  3801     05C0  0000               	nop
  3802     05C1                     l1719:
  3803                           
  3804                           ;mcc_generated_files/LINDrivers/lin_slave.c: 351:   CountCallBack = 0;
  3805     05C1  0020               	movlb	0	; select bank0
  3806     05C2  01D2               	clrf	_CountCallBack	;volatile
  3807                           
  3808                           ;mcc_generated_files/LINDrivers/lin_slave.c: 352:   LIN_timerRunning = 0;
  3809     05C3  01D3               	clrf	_LIN_timerRunning
  3810     05C4                     l232:
  3811     05C4  0008               	return
  3812     05C5                     __end_of_LIN_stopTimer:
  3813                           
  3814                           	psect	text15
  3815     054F                     __ptext15:	
  3816 ;; *************** function _LIN_startTimer *****************
  3817 ;; Defined at:
  3818 ;;		line 330 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  timeout         1    wreg     unsigned char 
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  timeout         1    1[COMMON] unsigned char 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0, pclath, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3832 ;;      Params:         0       0       0       0       0       0       0       0
  3833 ;;      Locals:         1       0       0       0       0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0       0
  3835 ;;      Totals:         1       0       0       0       0       0       0       0
  3836 ;;Total ram usage:        1 bytes
  3837 ;; Hardware stack levels used: 1
  3838 ;; Hardware stack levels required when called: 5
  3839 ;; This function calls:
  3840 ;;		_TMR0_WriteTimer
  3841 ;; This function is called by:
  3842 ;;		_LIN_handler
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846     054F                     _LIN_startTimer:	
  3847                           ;psect for function _LIN_startTimer
  3848                           
  3849                           
  3850                           ;incstack = 0
  3851                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  3852                           ;LIN_startTimer@timeout stored from wreg
  3853     054F  00F1               	movwf	LIN_startTimer@timeout
  3854     0550                     l1933:
  3855                           
  3856                           ;mcc_generated_files/LINDrivers/lin_slave.c: 331:   LIN_timeout = timeout;
  3857     0550  0871               	movf	LIN_startTimer@timeout,w
  3858     0551  0020               	movlb	0	; select bank0
  3859     0552  00EC               	movwf	_LIN_timeout
  3860     0553                     l1935:
  3861                           
  3862                           ;mcc_generated_files/LINDrivers/lin_slave.c: 332:   TMR0_WriteTimer(0);
  3863     0553  3000               	movlw	0
  3864     0554  3185  25C5  3185   	fcall	_TMR0_WriteTimer
  3865     0557                     l1937:
  3866                           
  3867                           ;mcc_generated_files/LINDrivers/lin_slave.c: 333:   __nop();
  3868     0557  0000               	nop
  3869     0558                     l1939:
  3870                           
  3871                           ;mcc_generated_files/LINDrivers/lin_slave.c: 334:   LIN_timerRunning = 1;
  3872     0558  3001               	movlw	1
  3873     0559  0020               	movlb	0	; select bank0
  3874     055A  00D3               	movwf	_LIN_timerRunning
  3875     055B                     l222:
  3876     055B  0008               	return
  3877     055C                     __end_of_LIN_startTimer:
  3878                           
  3879                           	psect	text16
  3880     05C5                     __ptext16:	
  3881 ;; *************** function _TMR0_WriteTimer *****************
  3882 ;; Defined at:
  3883 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  timerVal        1    wreg     unsigned char 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  timerVal        1    0[COMMON] unsigned char 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3897 ;;      Params:         0       0       0       0       0       0       0       0
  3898 ;;      Locals:         1       0       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0
  3900 ;;      Totals:         1       0       0       0       0       0       0       0
  3901 ;;Total ram usage:        1 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; Hardware stack levels required when called: 4
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_LIN_startTimer
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911     05C5                     _TMR0_WriteTimer:	
  3912                           ;psect for function _TMR0_WriteTimer
  3913                           
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _TMR0_WriteTimer: [wreg]
  3917                           ;TMR0_WriteTimer@timerVal stored from wreg
  3918     05C5  00F0               	movwf	TMR0_WriteTimer@timerVal
  3919     05C6                     l1865:
  3920                           
  3921                           ;mcc_generated_files/tmr0.c: 96: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_fi
      +                          les/tmr0.c: 97: {;mcc_generated_files/tmr0.c: 99:     TMR0 = timerVal;
  3922     05C6  0870               	movf	TMR0_WriteTimer@timerVal,w
  3923     05C7  0020               	movlb	0	; select bank0
  3924     05C8  0095               	movwf	21	;volatile
  3925     05C9                     l439:
  3926     05C9  0008               	return
  3927     05CA                     __end_of_TMR0_WriteTimer:
  3928                           
  3929                           	psect	text17
  3930     01FB                     __ptext17:	
  3931 ;; *************** function _LIN_queuePacket *****************
  3932 ;; Defined at:
  3933 ;;		line 67 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  cmd             1    wreg     unsigned char 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  cmd             1    1[BANK0 ] unsigned char 
  3938 ;;  i               1    2[BANK0 ] unsigned char 
  3939 ;;  tempSchedule    2    3[BANK0 ] PTR const struct .
  3940 ;;		 -> NULL(0), scheduleTable(5), 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      void 
  3943 ;; Registers used:
  3944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3950 ;;      Params:         0       0       0       0       0       0       0       0
  3951 ;;      Locals:         0       4       0       0       0       0       0       0
  3952 ;;      Temps:          0       1       0       0       0       0       0       0
  3953 ;;      Totals:         0       5       0       0       0       0       0       0
  3954 ;;Total ram usage:        5 bytes
  3955 ;; Hardware stack levels used: 1
  3956 ;; Hardware stack levels required when called: 6
  3957 ;; This function calls:
  3958 ;;		_LIN_getChecksum
  3959 ;;		_LIN_sendPacket
  3960 ;;		_memcpy
  3961 ;; This function is called by:
  3962 ;;		_LIN_handler
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966     01FB                     _LIN_queuePacket:	
  3967                           ;psect for function _LIN_queuePacket
  3968                           
  3969                           
  3970                           ;incstack = 0
  3971                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3972                           ;LIN_queuePacket@cmd stored from wreg
  3973     01FB  0020               	movlb	0	; select bank0
  3974     01FC  00E4               	movwf	LIN_queuePacket@cmd
  3975     01FD                     l2265:
  3976                           
  3977                           ;mcc_generated_files/LINDrivers/lin_slave.c: 68:   const lin_rx_cmd_t *tempSchedule =
  3978     01FD  0845               	movf	_LIN_rxCommand+1,w
  3979     01FE  00E7               	movwf	LIN_queuePacket@tempSchedule+1
  3980     01FF  0844               	movf	_LIN_rxCommand,w
  3981     0200  00E6               	movwf	LIN_queuePacket@tempSchedule
  3982     0201                     l2267:
  3983                           
  3984                           ;mcc_generated_files/LINDrivers/lin_slave.c: 71:   cmd &= 0x3F;
  3985     0201  303F               	movlw	63
  3986     0202  05E4               	andwf	LIN_queuePacket@cmd,f
  3987     0203                     l2269:
  3988                           
  3989                           ;mcc_generated_files/LINDrivers/lin_slave.c: 72:   for (uint8_t i = 0; i < LIN_rxCommand
      +                          Length; i++) {
  3990     0203  01E5               	clrf	LIN_queuePacket@i
  3991     0204  2A16               	goto	l2279
  3992     0205                     l2271:
  3993                           
  3994                           ;mcc_generated_files/LINDrivers/lin_slave.c: 73:     if (cmd == tempSchedule->cmd) {
  3995     0205  0866               	movf	LIN_queuePacket@tempSchedule,w
  3996     0206  0084               	movwf	4
  3997     0207  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  3998     0208  0085               	movwf	5
  3999     0209  0800               	movf	0,w	;code access
  4000     020A  0664               	xorwf	LIN_queuePacket@cmd,w
  4001     020B  1D03               	skipz
  4002     020C  2A0E               	goto	u1641
  4003     020D  2A0F               	goto	u1640
  4004     020E                     u1641:
  4005     020E  2A10               	goto	l2275
  4006     020F                     u1640:
  4007     020F  2A1C               	goto	l2281
  4008     0210                     l2275:
  4009                           
  4010                           ;mcc_generated_files/LINDrivers/lin_slave.c: 76:     tempSchedule++;
  4011     0210  3005               	movlw	5
  4012     0211  07E6               	addwf	LIN_queuePacket@tempSchedule,f
  4013     0212  3000               	movlw	0
  4014     0213  3DE7               	addwfc	LIN_queuePacket@tempSchedule+1,f
  4015     0214                     l2277:
  4016                           
  4017                           ;mcc_generated_files/LINDrivers/lin_slave.c: 77:   }
  4018     0214  3001               	movlw	1
  4019     0215  07E5               	addwf	LIN_queuePacket@i,f
  4020     0216                     l2279:
  4021     0216  0854               	movf	_LIN_rxCommandLength,w
  4022     0217  0265               	subwf	LIN_queuePacket@i,w
  4023     0218  1C03               	skipc
  4024     0219  2A1B               	goto	u1651
  4025     021A  2A1C               	goto	u1650
  4026     021B                     u1651:
  4027     021B  2A05               	goto	l2271
  4028     021C                     u1650:
  4029     021C                     l2281:
  4030                           
  4031                           ;mcc_generated_files/LINDrivers/lin_slave.c: 79:   LIN_packet.type = tempSchedule->type;
  4032     021C  3001               	movlw	1
  4033     021D  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4034     021E  0084               	movwf	4
  4035     021F  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4036     0220  1803               	skipnc
  4037     0221  3E01               	addlw	1
  4038     0222  0085               	movwf	5
  4039     0223  0800               	movf	0,w	;code access
  4040     0224  00E0               	movwf	_LIN_packet+10
  4041                           
  4042                           ;mcc_generated_files/LINDrivers/lin_slave.c: 80:   LIN_packet.length = tempSchedule->len
      +                          gth;
  4043     0225  3002               	movlw	2
  4044     0226  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4045     0227  0084               	movwf	4
  4046     0228  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4047     0229  1803               	skipnc
  4048     022A  3E01               	addlw	1
  4049     022B  0085               	movwf	5
  4050     022C  0800               	movf	0,w	;code access
  4051     022D  00E1               	movwf	_LIN_packet+11
  4052     022E                     l2283:
  4053                           
  4054                           ;mcc_generated_files/LINDrivers/lin_slave.c: 84:   memcpy(LIN_packet.data, tempSchedule-
      +                          >data, LIN_packet.length);
  4055     022E  3057               	movlw	low (_LIN_packet+1)
  4056     022F  00F0               	movwf	memcpy@d1
  4057     0230  3000               	movlw	high (_LIN_packet+1)
  4058     0231  00F1               	movwf	memcpy@d1+1
  4059     0232  3003               	movlw	3
  4060     0233  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4061     0234  0084               	movwf	4
  4062     0235  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4063     0236  1803               	skipnc
  4064     0237  3E01               	addlw	1
  4065     0238  0085               	movwf	5
  4066     0239  3F00               	moviw [0]fsr0
  4067     023A  00F2               	movwf	memcpy@s1
  4068     023B  3F01               	moviw [1]fsr0
  4069     023C  00F3               	movwf	memcpy@s1+1
  4070     023D  0861               	movf	_LIN_packet+11,w
  4071     023E  00F4               	movwf	memcpy@n
  4072     023F  01F5               	clrf	memcpy@n+1
  4073     0240  1BF4               	btfsc	memcpy@n,7
  4074     0241  03F5               	decf	memcpy@n+1,f
  4075     0242  3184  2442  3181   	fcall	_memcpy
  4076     0245                     l2285:
  4077                           
  4078                           ;mcc_generated_files/LINDrivers/lin_slave.c: 87:   LIN_packet.checksum =
  4079     0245  0020               	movlb	0	; select bank0
  4080     0246  0856               	movf	_LIN_packet,w
  4081     0247  00F0               	movwf	LIN_getChecksum@pid
  4082     0248  3057               	movlw	low (_LIN_packet+1)
  4083     0249  00F1               	movwf	LIN_getChecksum@data
  4084     024A  3000               	movlw	high (_LIN_packet+1)
  4085     024B  00F2               	movwf	LIN_getChecksum@data+1
  4086     024C  0861               	movf	_LIN_packet+11,w
  4087     024D  3183  2379  3181   	fcall	_LIN_getChecksum
  4088     0250  0020               	movlb	0	; select bank0
  4089     0251  00DF               	movwf	_LIN_packet+9
  4090     0252                     l2287:
  4091                           
  4092                           ;mcc_generated_files/LINDrivers/lin_slave.c: 89:   LIN_sendPacket(LIN_packet.length, LIN
      +                          _packet.PID, LIN_packet.data);
  4093     0252  0856               	movf	_LIN_packet,w
  4094     0253  00F9               	movwf	LIN_sendPacket@pid
  4095     0254  3057               	movlw	low (_LIN_packet+1)
  4096     0255  00FA               	movwf	LIN_sendPacket@data
  4097     0256  3000               	movlw	high (_LIN_packet+1)
  4098     0257  00FB               	movwf	LIN_sendPacket@data+1
  4099     0258  0861               	movf	_LIN_packet+11,w
  4100     0259  3184  241F  3181   	fcall	_LIN_sendPacket
  4101     025C                     l140:
  4102     025C  0008               	return
  4103     025D                     __end_of_LIN_queuePacket:
  4104                           
  4105                           	psect	text18
  4106     0442                     __ptext18:	
  4107 ;; *************** function _memcpy *****************
  4108 ;; Defined at:
  4109 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  d1              2    0[COMMON] PTR void 
  4112 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4113 ;;  s1              2    2[COMMON] PTR const void 
  4114 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4115 ;;  n               2    4[COMMON] unsigned int 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  s               1    8[COMMON] PTR const unsigned char 
  4118 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4119 ;;  d               1    7[COMMON] PTR unsigned char 
  4120 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4121 ;;  tmp             1    6[COMMON] unsigned char 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  2    0[COMMON] PTR void 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4131 ;;      Params:         6       0       0       0       0       0       0       0
  4132 ;;      Locals:         3       0       0       0       0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0
  4134 ;;      Totals:         9       0       0       0       0       0       0       0
  4135 ;;Total ram usage:        9 bytes
  4136 ;; Hardware stack levels used: 1
  4137 ;; Hardware stack levels required when called: 4
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_LIN_queuePacket
  4142 ;;		_LIN_getPacket
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146     0442                     _memcpy:	
  4147                           ;psect for function _memcpy
  4148                           
  4149     0442                     l1725:	
  4150                           ;incstack = 0
  4151                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  4152                           
  4153     0442  0872               	movf	memcpy@s1,w
  4154     0443  00F8               	movwf	memcpy@s
  4155     0444  0870               	movf	memcpy@d1,w
  4156     0445  00F7               	movwf	memcpy@d
  4157     0446  2C55               	goto	l1146
  4158     0447                     l1727:
  4159     0447  0878               	movf	memcpy@s,w
  4160     0448  0086               	movwf	6
  4161     0449  0187               	clrf	7
  4162     044A  0801               	movf	1,w
  4163     044B  00F6               	movwf	memcpy@tmp
  4164     044C                     l1729:
  4165     044C  3001               	movlw	1
  4166     044D  07F8               	addwf	memcpy@s,f
  4167     044E                     l1731:
  4168     044E  0877               	movf	memcpy@d,w
  4169     044F  0086               	movwf	6
  4170     0450  0187               	clrf	7
  4171     0451  0876               	movf	memcpy@tmp,w
  4172     0452  0081               	movwf	1
  4173     0453  3001               	movlw	1
  4174     0454  07F7               	addwf	memcpy@d,f
  4175     0455                     l1146:
  4176     0455  3001               	movlw	1
  4177     0456  02F4               	subwf	memcpy@n,f
  4178     0457  3000               	movlw	0
  4179     0458  3BF5               	subwfb	memcpy@n+1,f
  4180     0459  0A74               	incf	memcpy@n,w
  4181     045A  1D03               	skipz
  4182     045B  2C60               	goto	u831
  4183     045C  0A75               	incf	memcpy@n+1,w
  4184     045D  1D03               	btfss	3,2
  4185     045E  2C60               	goto	u831
  4186     045F  2C61               	goto	u830
  4187     0460                     u831:
  4188     0460  2C47               	goto	l1727
  4189     0461                     u830:
  4190     0461                     l1149:
  4191     0461  0008               	return
  4192     0462                     __end_of_memcpy:
  4193                           
  4194                           	psect	text19
  4195     041F                     __ptext19:	
  4196 ;; *************** function _LIN_sendPacket *****************
  4197 ;; Defined at:
  4198 ;;		line 233 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  length          1    wreg     unsigned char 
  4201 ;;  pid             1    9[COMMON] unsigned char 
  4202 ;;  data            2   10[COMMON] PTR unsigned char 
  4203 ;;		 -> LIN_packet(13), 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  length          1   12[COMMON] unsigned char 
  4206 ;;  i               1   13[COMMON] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4216 ;;      Params:         3       0       0       0       0       0       0       0
  4217 ;;      Locals:         2       0       0       0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0       0
  4219 ;;      Totals:         5       0       0       0       0       0       0       0
  4220 ;;Total ram usage:        5 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 5
  4223 ;; This function calls:
  4224 ;;		_EUSART_Write
  4225 ;;		_LIN_getChecksum
  4226 ;; This function is called by:
  4227 ;;		_LIN_queuePacket
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231     041F                     _LIN_sendPacket:	
  4232                           ;psect for function _LIN_sendPacket
  4233                           
  4234                           
  4235                           ;incstack = 0
  4236                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4237                           ;LIN_sendPacket@length stored from wreg
  4238     041F  00FC               	movwf	LIN_sendPacket@length
  4239     0420                     l1799:
  4240                           
  4241                           ;mcc_generated_files/LINDrivers/lin_slave.c: 236:   for (uint8_t i = 0; i < length; i++)
      +                           {
  4242     0420  01FD               	clrf	LIN_sendPacket@i
  4243     0421  2C2E               	goto	l1805
  4244     0422                     l1801:
  4245                           
  4246                           ;mcc_generated_files/LINDrivers/lin_slave.c: 237:     EUSART_Write(*(data + i));
  4247     0422  087D               	movf	LIN_sendPacket@i,w
  4248     0423  077A               	addwf	LIN_sendPacket@data,w
  4249     0424  0086               	movwf	6
  4250     0425  3000               	movlw	0
  4251     0426  3D7B               	addwfc	LIN_sendPacket@data+1,w
  4252     0427  0087               	movwf	7
  4253     0428  0801               	movf	1,w
  4254     0429  3183  23D5  3184   	fcall	_EUSART_Write
  4255     042C                     l1803:
  4256                           
  4257                           ;mcc_generated_files/LINDrivers/lin_slave.c: 238:   }
  4258     042C  3001               	movlw	1
  4259     042D  07FD               	addwf	LIN_sendPacket@i,f
  4260     042E                     l1805:
  4261     042E  087C               	movf	LIN_sendPacket@length,w
  4262     042F  027D               	subwf	LIN_sendPacket@i,w
  4263     0430  1C03               	skipc
  4264     0431  2C33               	goto	u911
  4265     0432  2C34               	goto	u910
  4266     0433                     u911:
  4267     0433  2C22               	goto	l1801
  4268     0434                     u910:
  4269     0434                     l1807:
  4270                           
  4271                           ;mcc_generated_files/LINDrivers/lin_slave.c: 240:   EUSART_Write(LIN_getChecksum(length,
      +                           pid, data));
  4272     0434  0879               	movf	LIN_sendPacket@pid,w
  4273     0435  00F0               	movwf	LIN_getChecksum@pid
  4274     0436  087B               	movf	LIN_sendPacket@data+1,w
  4275     0437  00F2               	movwf	LIN_getChecksum@data+1
  4276     0438  087A               	movf	LIN_sendPacket@data,w
  4277     0439  00F1               	movwf	LIN_getChecksum@data
  4278     043A  087C               	movf	LIN_sendPacket@length,w
  4279     043B  3183  2379  3184   	fcall	_LIN_getChecksum
  4280     043E  3183  23D5  3184   	fcall	_EUSART_Write
  4281     0441                     l186:
  4282     0441  0008               	return
  4283     0442                     __end_of_LIN_sendPacket:
  4284                           
  4285                           	psect	text20
  4286     0379                     __ptext20:	
  4287 ;; *************** function _LIN_getChecksum *****************
  4288 ;; Defined at:
  4289 ;;		line 317 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  length          1    wreg     unsigned char 
  4292 ;;  pid             1    0[COMMON] unsigned char 
  4293 ;;  data            2    1[COMMON] PTR unsigned char 
  4294 ;;		 -> LIN_packet(13), 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  length          1    5[COMMON] unsigned char 
  4297 ;;  i               1    6[COMMON] unsigned char 
  4298 ;;  checksum        2    7[COMMON] unsigned short 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      unsigned char 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4308 ;;      Params:         3       0       0       0       0       0       0       0
  4309 ;;      Locals:         4       0       0       0       0       0       0       0
  4310 ;;      Temps:          2       0       0       0       0       0       0       0
  4311 ;;      Totals:         9       0       0       0       0       0       0       0
  4312 ;;Total ram usage:        9 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 4
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_LIN_queuePacket
  4319 ;;		_LIN_handler
  4320 ;;		_LIN_sendPacket
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324     0379                     _LIN_getChecksum:	
  4325                           ;psect for function _LIN_getChecksum
  4326                           
  4327                           
  4328                           ;incstack = 0
  4329                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4330                           ;LIN_getChecksum@length stored from wreg
  4331     0379  00F5               	movwf	LIN_getChecksum@length
  4332     037A                     l1733:
  4333                           
  4334                           ;mcc_generated_files/LINDrivers/lin_slave.c: 318:   uint16_t checksum = pid;
  4335     037A  0870               	movf	LIN_getChecksum@pid,w
  4336     037B  00F3               	movwf	??_LIN_getChecksum
  4337     037C  01F4               	clrf	??_LIN_getChecksum+1
  4338     037D  0873               	movf	??_LIN_getChecksum,w
  4339     037E  00F7               	movwf	LIN_getChecksum@checksum
  4340     037F  0874               	movf	??_LIN_getChecksum+1,w
  4341     0380  00F8               	movwf	LIN_getChecksum@checksum+1
  4342     0381                     l1735:
  4343                           
  4344                           ;mcc_generated_files/LINDrivers/lin_slave.c: 320:   for (uint8_t i = 0; i < length; i++)
      +                           {
  4345     0381  01F6               	clrf	LIN_getChecksum@i
  4346     0382  2BA1               	goto	l1747
  4347     0383                     l1737:
  4348                           
  4349                           ;mcc_generated_files/LINDrivers/lin_slave.c: 321:     checksum = checksum + *data++;
  4350     0383  0871               	movf	LIN_getChecksum@data,w
  4351     0384  0086               	movwf	6
  4352     0385  0872               	movf	LIN_getChecksum@data+1,w
  4353     0386  0087               	movwf	7
  4354     0387  0801               	movf	1,w
  4355     0388  0777               	addwf	LIN_getChecksum@checksum,w
  4356     0389  00F7               	movwf	LIN_getChecksum@checksum
  4357     038A  0878               	movf	LIN_getChecksum@checksum+1,w
  4358     038B  1803               	skipnc
  4359     038C  0A78               	incf	LIN_getChecksum@checksum+1,w
  4360     038D  00F8               	movwf	LIN_getChecksum@checksum+1
  4361     038E                     l1739:
  4362     038E  3001               	movlw	1
  4363     038F  07F1               	addwf	LIN_getChecksum@data,f
  4364     0390  3000               	movlw	0
  4365     0391  3DF2               	addwfc	LIN_getChecksum@data+1,f
  4366     0392                     l1741:
  4367                           
  4368                           ;mcc_generated_files/LINDrivers/lin_slave.c: 322:     if (checksum > 0xFF)
  4369     0392  3001               	movlw	1
  4370     0393  0278               	subwf	LIN_getChecksum@checksum+1,w
  4371     0394  3000               	movlw	0
  4372     0395  1903               	skipnz
  4373     0396  0277               	subwf	LIN_getChecksum@checksum,w
  4374     0397  1C03               	skipc
  4375     0398  2B9A               	goto	u841
  4376     0399  2B9B               	goto	u840
  4377     039A                     u841:
  4378     039A  2B9F               	goto	l1745
  4379     039B                     u840:
  4380     039B                     l1743:
  4381                           
  4382                           ;mcc_generated_files/LINDrivers/lin_slave.c: 323:       checksum -= 0xFF;
  4383     039B  30FF               	movlw	255
  4384     039C  02F7               	subwf	LIN_getChecksum@checksum,f
  4385     039D  3000               	movlw	0
  4386     039E  3BF8               	subwfb	LIN_getChecksum@checksum+1,f
  4387     039F                     l1745:
  4388                           
  4389                           ;mcc_generated_files/LINDrivers/lin_slave.c: 324:   }
  4390     039F  3001               	movlw	1
  4391     03A0  07F6               	addwf	LIN_getChecksum@i,f
  4392     03A1                     l1747:
  4393     03A1  0875               	movf	LIN_getChecksum@length,w
  4394     03A2  0276               	subwf	LIN_getChecksum@i,w
  4395     03A3  1C03               	skipc
  4396     03A4  2BA6               	goto	u851
  4397     03A5  2BA7               	goto	u850
  4398     03A6                     u851:
  4399     03A6  2B83               	goto	l1737
  4400     03A7                     u850:
  4401     03A7                     l218:
  4402                           
  4403                           ;mcc_generated_files/LINDrivers/lin_slave.c: 325:   checksum = ~checksum;
  4404     03A7  09F7               	comf	LIN_getChecksum@checksum,f
  4405     03A8  09F8               	comf	LIN_getChecksum@checksum+1,f
  4406     03A9                     l1749:
  4407                           
  4408                           ;mcc_generated_files/LINDrivers/lin_slave.c: 327:   return (uint8_t)checksum;
  4409     03A9  0877               	movf	LIN_getChecksum@checksum,w
  4410     03AA                     l219:
  4411     03AA  0008               	return
  4412     03AB                     __end_of_LIN_getChecksum:
  4413                           
  4414                           	psect	text21
  4415     03D5                     __ptext21:	
  4416 ;; *************** function _EUSART_Write *****************
  4417 ;; Defined at:
  4418 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  txData          1    wreg     unsigned char 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  txData          1    0[COMMON] unsigned char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      void 
  4425 ;; Registers used:
  4426 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4432 ;;      Params:         0       0       0       0       0       0       0       0
  4433 ;;      Locals:         1       0       0       0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0       0
  4435 ;;      Totals:         1       0       0       0       0       0       0       0
  4436 ;;Total ram usage:        1 bytes
  4437 ;; Hardware stack levels used: 1
  4438 ;; Hardware stack levels required when called: 4
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_LIN_sendPacket
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446     03D5                     _EUSART_Write:	
  4447                           ;psect for function _EUSART_Write
  4448                           
  4449                           
  4450                           ;incstack = 0
  4451                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4452                           ;EUSART_Write@txData stored from wreg
  4453     03D5  00F0               	movwf	EUSART_Write@txData
  4454     03D6                     l1761:
  4455     03D6                     l1763:	
  4456                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4457                           
  4458                           
  4459                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4460     03D6  0020               	movlb	0	; select bank0
  4461     03D7  084D               	movf	_eusartTxBufferRemaining,w	;volatile
  4462     03D8  1903               	btfsc	3,2
  4463     03D9  2BDB               	goto	u871
  4464     03DA  2BDC               	goto	u870
  4465     03DB                     u871:
  4466     03DB  2BD6               	goto	l1763
  4467     03DC                     u870:
  4468     03DC                     l371:
  4469                           
  4470                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4471     03DC  0021               	movlb	1	; select bank1
  4472     03DD  1A11               	btfsc	17,4	;volatile
  4473     03DE  2BE0               	goto	u881
  4474     03DF  2BE1               	goto	u880
  4475     03E0                     u881:
  4476     03E0  2BE5               	goto	l372
  4477     03E1                     u880:
  4478     03E1                     l1765:
  4479                           
  4480                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4481     03E1  0870               	movf	EUSART_Write@txData,w
  4482     03E2  0023               	movlb	3	; select bank3
  4483     03E3  009A               	movwf	26	;volatile
  4484                           
  4485                           ;mcc_generated_files/eusart.c: 182:     }
  4486     03E4  2BF8               	goto	l1777
  4487     03E5                     l372:	
  4488                           ;mcc_generated_files/eusart.c: 183:     else
  4489                           
  4490                           
  4491                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4492     03E5  1211               	bcf	17,4	;volatile
  4493     03E6                     l1767:
  4494                           
  4495                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4496     03E6  0020               	movlb	0	; select bank0
  4497     03E7  084F               	movf	_eusartTxHead,w
  4498     03E8  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4499     03E9  0086               	movwf	6
  4500     03EA  0187               	clrf	7
  4501     03EB  0870               	movf	EUSART_Write@txData,w
  4502     03EC  0081               	movwf	1
  4503     03ED                     l1769:
  4504     03ED  3001               	movlw	1
  4505     03EE  07CF               	addwf	_eusartTxHead,f	;volatile
  4506     03EF                     l1771:
  4507                           
  4508                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4509     03EF  3008               	movlw	8
  4510     03F0  024F               	subwf	_eusartTxHead,w	;volatile
  4511     03F1  1C03               	skipc
  4512     03F2  2BF4               	goto	u891
  4513     03F3  2BF5               	goto	u890
  4514     03F4                     u891:
  4515     03F4  2BF6               	goto	l1775
  4516     03F5                     u890:
  4517     03F5                     l1773:
  4518                           
  4519                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4520     03F5  01CF               	clrf	_eusartTxHead	;volatile
  4521     03F6                     l1775:
  4522                           
  4523                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4524     03F6  3001               	movlw	1
  4525     03F7  02CD               	subwf	_eusartTxBufferRemaining,f	;volatile
  4526     03F8                     l1777:
  4527                           
  4528                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4529     03F8  0021               	movlb	1	; select bank1
  4530     03F9  1611               	bsf	17,4	;volatile
  4531     03FA                     l375:
  4532     03FA  0008               	return
  4533     03FB                     __end_of_EUSART_Write:
  4534                           
  4535                           	psect	text22
  4536     05CA                     __ptext22:	
  4537 ;; *************** function _LIN_enableRx *****************
  4538 ;; Defined at:
  4539 ;;		line 355 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		None
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4553 ;;      Params:         0       0       0       0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 4
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_LIN_init
  4564 ;;		_LIN_handler
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568     05CA                     _LIN_enableRx:	
  4569                           ;psect for function _LIN_enableRx
  4570                           
  4571     05CA                     l1721:	
  4572                           ;incstack = 0
  4573                           ; Regs used in _LIN_enableRx: []
  4574                           
  4575                           
  4576                           ;mcc_generated_files/LINDrivers/lin_slave.c: 356:   RCSTAbits.CREN = 1;
  4577     05CA  0023               	movlb	3	; select bank3
  4578     05CB  161D               	bsf	29,4	;volatile
  4579                           
  4580                           ;mcc_generated_files/LINDrivers/lin_slave.c: 357:   PIE1bits.RCIE = 1;
  4581     05CC  0021               	movlb	1	; select bank1
  4582     05CD  1691               	bsf	17,5	;volatile
  4583     05CE                     l235:
  4584     05CE  0008               	return
  4585     05CF                     __end_of_LIN_enableRx:
  4586                           
  4587                           	psect	text23
  4588     05CF                     __ptext23:	
  4589 ;; *************** function _LIN_disableRx *****************
  4590 ;; Defined at:
  4591 ;;		line 360 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		None
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4605 ;;      Params:         0       0       0       0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0
  4608 ;;      Totals:         0       0       0       0       0       0       0       0
  4609 ;;Total ram usage:        0 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; Hardware stack levels required when called: 4
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_LIN_handler
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619     05CF                     _LIN_disableRx:	
  4620                           ;psect for function _LIN_disableRx
  4621                           
  4622     05CF                     l2011:	
  4623                           ;incstack = 0
  4624                           ; Regs used in _LIN_disableRx: []
  4625                           
  4626                           
  4627                           ;mcc_generated_files/LINDrivers/lin_slave.c: 361:   RCSTAbits.CREN = 0;
  4628     05CF  0023               	movlb	3	; select bank3
  4629     05D0  121D               	bcf	29,4	;volatile
  4630                           
  4631                           ;mcc_generated_files/LINDrivers/lin_slave.c: 362:   PIE1bits.RCIE = 0;
  4632     05D1  0021               	movlb	1	; select bank1
  4633     05D2  1291               	bcf	17,5	;volatile
  4634     05D3                     l238:
  4635     05D3  0008               	return
  4636     05D4                     __end_of_LIN_disableRx:
  4637                           
  4638                           	psect	text24
  4639     049A                     __ptext24:	
  4640 ;; *************** function _LIN_checkPID *****************
  4641 ;; Defined at:
  4642 ;;		line 289 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  pid             1    wreg     unsigned char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  pid             1    7[COMMON] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      _Bool 
  4649 ;; Registers used:
  4650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4656 ;;      Params:         0       0       0       0       0       0       0       0
  4657 ;;      Locals:         1       0       0       0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0
  4659 ;;      Totals:         1       0       0       0       0       0       0       0
  4660 ;;Total ram usage:        1 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; Hardware stack levels required when called: 5
  4663 ;; This function calls:
  4664 ;;		_LIN_calcParity
  4665 ;;		_LIN_getFromTable
  4666 ;; This function is called by:
  4667 ;;		_LIN_handler
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671     049A                     _LIN_checkPID:	
  4672                           ;psect for function _LIN_checkPID
  4673                           
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _LIN_checkPID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4677                           ;LIN_checkPID@pid stored from wreg
  4678     049A  00F7               	movwf	LIN_checkPID@pid
  4679     049B                     l1995:
  4680                           
  4681                           ;mcc_generated_files/LINDrivers/lin_slave.c: 290:   if (LIN_getFromTable(pid, TYPE) == E
      +                          RROR)
  4682     049B  01F0               	clrf	LIN_getFromTable@param
  4683     049C  0AF0               	incf	LIN_getFromTable@param,f
  4684     049D  0877               	movf	LIN_checkPID@pid,w
  4685     049E  3182  225D  3184   	fcall	_LIN_getFromTable
  4686     04A1  3A02               	xorlw	2
  4687     04A2  1D03               	skipz
  4688     04A3  2CA5               	goto	u1361
  4689     04A4  2CA6               	goto	u1360
  4690     04A5                     u1361:
  4691     04A5  2CA8               	goto	l2001
  4692     04A6                     u1360:
  4693     04A6                     l1997:
  4694                           
  4695                           ;mcc_generated_files/LINDrivers/lin_slave.c: 291:     return 0;
  4696     04A6  3000               	movlw	0
  4697     04A7  2CB3               	goto	l208
  4698     04A8                     l2001:
  4699                           
  4700                           ;mcc_generated_files/LINDrivers/lin_slave.c: 293:   if (pid == LIN_calcParity(pid & 0x3F
      +                          ))
  4701     04A8  0877               	movf	LIN_checkPID@pid,w
  4702     04A9  393F               	andlw	63
  4703     04AA  3181  2175  3184   	fcall	_LIN_calcParity
  4704     04AD  0677               	xorwf	LIN_checkPID@pid,w
  4705     04AE  1D03               	skipz
  4706     04AF  2CB1               	goto	u1371
  4707     04B0  2CB2               	goto	u1370
  4708     04B1                     u1371:
  4709     04B1  2CA6               	goto	l1997
  4710     04B2                     u1370:
  4711     04B2                     l2003:
  4712                           
  4713                           ;mcc_generated_files/LINDrivers/lin_slave.c: 294:     return 1;
  4714     04B2  3001               	movlw	1
  4715     04B3                     l208:
  4716     04B3  0008               	return
  4717     04B4                     __end_of_LIN_checkPID:
  4718                           
  4719                           	psect	text25
  4720     025D                     __ptext25:	
  4721 ;; *************** function _LIN_getFromTable *****************
  4722 ;; Defined at:
  4723 ;;		line 258 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  cmd             1    wreg     unsigned char 
  4726 ;;  param           1    0[COMMON] enum E221
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  cmd             1    3[COMMON] unsigned char 
  4729 ;;  length          1    4[COMMON] unsigned char 
  4730 ;;  rxCommand       2    5[COMMON] PTR const struct .
  4731 ;;		 -> NULL(0), scheduleTable(5), 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      unsigned char 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4741 ;;      Params:         1       0       0       0       0       0       0       0
  4742 ;;      Locals:         4       0       0       0       0       0       0       0
  4743 ;;      Temps:          2       0       0       0       0       0       0       0
  4744 ;;      Totals:         7       0       0       0       0       0       0       0
  4745 ;;Total ram usage:        7 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; Hardware stack levels required when called: 4
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_LIN_handler
  4752 ;;		_LIN_checkPID
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756     025D                     _LIN_getFromTable:	
  4757                           ;psect for function _LIN_getFromTable
  4758                           
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _LIN_getFromTable: [wreg-fsr0h+status,2+status,0+pclath]
  4762                           ;LIN_getFromTable@cmd stored from wreg
  4763     025D  00F3               	movwf	LIN_getFromTable@cmd
  4764     025E                     l1809:
  4765                           
  4766                           ;mcc_generated_files/LINDrivers/lin_slave.c: 259:   const lin_rx_cmd_t *rxCommand =
  4767     025E  0020               	movlb	0	; select bank0
  4768     025F  0845               	movf	_LIN_rxCommand+1,w
  4769     0260  00F6               	movwf	LIN_getFromTable@rxCommand+1
  4770     0261  0844               	movf	_LIN_rxCommand,w
  4771     0262  00F5               	movwf	LIN_getFromTable@rxCommand
  4772     0263                     l1811:
  4773                           
  4774                           ;mcc_generated_files/LINDrivers/lin_slave.c: 262:   cmd &= 0x3F;
  4775     0263  303F               	movlw	63
  4776     0264  05F3               	andwf	LIN_getFromTable@cmd,f
  4777     0265                     l1813:
  4778                           
  4779                           ;mcc_generated_files/LINDrivers/lin_slave.c: 264:   for (uint8_t length = 0; length < LI
      +                          N_rxCommandLength; length++) {
  4780     0265  01F4               	clrf	LIN_getFromTable@length
  4781     0266  2A88               	goto	l1827
  4782     0267                     l1815:
  4783                           
  4784                           ;mcc_generated_files/LINDrivers/lin_slave.c: 265:     if (cmd == rxCommand->cmd) {
  4785     0267  0875               	movf	LIN_getFromTable@rxCommand,w
  4786     0268  0084               	movwf	4
  4787     0269  0876               	movf	LIN_getFromTable@rxCommand+1,w
  4788     026A  0085               	movwf	5
  4789     026B  0800               	movf	0,w	;code access
  4790     026C  0673               	xorwf	LIN_getFromTable@cmd,w
  4791     026D  1D03               	skipz
  4792     026E  2A70               	goto	u921
  4793     026F  2A71               	goto	u920
  4794     0270                     u921:
  4795     0270  2A72               	goto	l1819
  4796     0271                     u920:
  4797     0271  2AA7               	goto	l1843
  4798     0272                     l1819:
  4799                           
  4800                           ;mcc_generated_files/LINDrivers/lin_slave.c: 268:     rxCommand++;
  4801     0272  3005               	movlw	5
  4802     0273  07F5               	addwf	LIN_getFromTable@rxCommand,f
  4803     0274  3000               	movlw	0
  4804     0275  3DF6               	addwfc	LIN_getFromTable@rxCommand+1,f
  4805                           
  4806                           ;mcc_generated_files/LINDrivers/lin_slave.c: 270:     if (length == (LIN_rxCommandLength
      +                           - 1)) {
  4807     0276  0854               	movf	_LIN_rxCommandLength,w
  4808     0277  3EFF               	addlw	255
  4809     0278  00F1               	movwf	??_LIN_getFromTable
  4810     0279  30FF               	movlw	255
  4811     027A  1803               	skipnc
  4812     027B  3000               	movlw	0
  4813     027C  00F2               	movwf	??_LIN_getFromTable+1
  4814     027D  0874               	movf	LIN_getFromTable@length,w
  4815     027E  0671               	xorwf	??_LIN_getFromTable,w
  4816     027F  0472               	iorwf	??_LIN_getFromTable+1,w
  4817     0280  1D03               	skipz
  4818     0281  2A83               	goto	u931
  4819     0282  2A84               	goto	u930
  4820     0283                     u931:
  4821     0283  2A86               	goto	l1825
  4822     0284                     u930:
  4823     0284                     l1821:
  4824                           
  4825                           ;mcc_generated_files/LINDrivers/lin_slave.c: 271:       return ERROR;
  4826     0284  3002               	movlw	2
  4827     0285  2ABA               	goto	l198
  4828     0286                     l1825:
  4829                           
  4830                           ;mcc_generated_files/LINDrivers/lin_slave.c: 273:   }
  4831     0286  3001               	movlw	1
  4832     0287  07F4               	addwf	LIN_getFromTable@length,f
  4833     0288                     l1827:
  4834     0288  0854               	movf	_LIN_rxCommandLength,w
  4835     0289  0274               	subwf	LIN_getFromTable@length,w
  4836     028A  1C03               	skipc
  4837     028B  2A8D               	goto	u941
  4838     028C  2A8E               	goto	u940
  4839     028D                     u941:
  4840     028D  2A67               	goto	l1815
  4841     028E                     u940:
  4842     028E  2AA7               	goto	l1843
  4843     028F                     l1829:
  4844                           
  4845                           ;mcc_generated_files/LINDrivers/lin_slave.c: 277:     return rxCommand->cmd;
  4846     028F  0875               	movf	LIN_getFromTable@rxCommand,w
  4847     0290  0084               	movwf	4
  4848     0291  0876               	movf	LIN_getFromTable@rxCommand+1,w
  4849     0292  0085               	movwf	5
  4850     0293  0800               	movf	0,w	;code access
  4851     0294  2ABA               	goto	l198
  4852     0295                     l1833:
  4853                           
  4854                           ;mcc_generated_files/LINDrivers/lin_slave.c: 279:     return rxCommand->type;
  4855     0295  3001               	movlw	1
  4856     0296  0775               	addwf	LIN_getFromTable@rxCommand,w
  4857     0297  0084               	movwf	4
  4858     0298  0876               	movf	LIN_getFromTable@rxCommand+1,w
  4859     0299  1803               	skipnc
  4860     029A  3E01               	addlw	1
  4861     029B  0085               	movwf	5
  4862     029C  0800               	movf	0,w	;code access
  4863     029D  2ABA               	goto	l198
  4864     029E                     l1837:
  4865                           
  4866                           ;mcc_generated_files/LINDrivers/lin_slave.c: 281:     return rxCommand->length;
  4867     029E  3002               	movlw	2
  4868     029F  0775               	addwf	LIN_getFromTable@rxCommand,w
  4869     02A0  0084               	movwf	4
  4870     02A1  0876               	movf	LIN_getFromTable@rxCommand+1,w
  4871     02A2  1803               	skipnc
  4872     02A3  3E01               	addlw	1
  4873     02A4  0085               	movwf	5
  4874     02A5  0800               	movf	0,w	;code access
  4875     02A6  2ABA               	goto	l198
  4876     02A7                     l1843:
  4877     02A7  0870               	movf	LIN_getFromTable@param,w
  4878     02A8  00F1               	movwf	??_LIN_getFromTable
  4879     02A9  01F2               	clrf	??_LIN_getFromTable+1
  4880                           
  4881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4882                           ; Switch size 1, requested type "simple"
  4883                           ; Number of cases is 1, Range of values is 0 to 0
  4884                           ; switch strategies available:
  4885                           ; Name         Instructions Cycles
  4886                           ; simple_byte            4     3 (average)
  4887                           ; direct_byte            8     6 (fixed)
  4888                           ; jumptable            260     6 (fixed)
  4889                           ;	Chosen strategy is simple_byte
  4890     02AA  0872               	movf	??_LIN_getFromTable+1,w
  4891     02AB  3A00               	xorlw	0	; case 0
  4892     02AC  1903               	skipnz
  4893     02AD  2AAF               	goto	l2459
  4894     02AE  2A84               	goto	l1821
  4895     02AF                     l2459:
  4896                           
  4897                           ; Switch size 1, requested type "simple"
  4898                           ; Number of cases is 3, Range of values is 0 to 2
  4899                           ; switch strategies available:
  4900                           ; Name         Instructions Cycles
  4901                           ; simple_byte           10     6 (average)
  4902                           ; direct_byte           12     6 (fixed)
  4903                           ; jumptable            260     6 (fixed)
  4904                           ;	Chosen strategy is simple_byte
  4905     02AF  0871               	movf	??_LIN_getFromTable,w
  4906     02B0  3A00               	xorlw	0	; case 0
  4907     02B1  1903               	skipnz
  4908     02B2  2A8F               	goto	l1829
  4909     02B3  3A01               	xorlw	1	; case 1
  4910     02B4  1903               	skipnz
  4911     02B5  2A95               	goto	l1833
  4912     02B6  3A03               	xorlw	3	; case 2
  4913     02B7  1903               	skipnz
  4914     02B8  2A9E               	goto	l1837
  4915     02B9  2A84               	goto	l1821
  4916     02BA                     l198:
  4917     02BA  0008               	return
  4918     02BB                     __end_of_LIN_getFromTable:
  4919                           
  4920                           	psect	text26
  4921     0175                     __ptext26:	
  4922 ;; *************** function _LIN_calcParity *****************
  4923 ;; Defined at:
  4924 ;;		line 299 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  CMD             1    wreg     unsigned char 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  CMD             1    1[COMMON] unsigned char 
  4929 ;;  PID             1    2[COMMON] struct .
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      unsigned char 
  4932 ;; Registers used:
  4933 ;;		wreg, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4939 ;;      Params:         0       0       0       0       0       0       0       0
  4940 ;;      Locals:         2       0       0       0       0       0       0       0
  4941 ;;      Temps:          1       0       0       0       0       0       0       0
  4942 ;;      Totals:         3       0       0       0       0       0       0       0
  4943 ;;Total ram usage:        3 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 4
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_LIN_checkPID
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953     0175                     _LIN_calcParity:	
  4954                           ;psect for function _LIN_calcParity
  4955                           
  4956                           
  4957                           ;incstack = 0
  4958                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  4959                           ;LIN_calcParity@CMD stored from wreg
  4960     0175  00F1               	movwf	LIN_calcParity@CMD
  4961     0176                     l1857:
  4962                           
  4963                           ;mcc_generated_files/LINDrivers/lin_slave.c: 300:   lin_pid_t PID;;mcc_generated_files/L
      +                          INDrivers/lin_slave.c: 301:   PID.rawPID = CMD;
  4964     0176  0871               	movf	LIN_calcParity@CMD,w
  4965     0177  00F2               	movwf	LIN_calcParity@PID
  4966                           
  4967                           ;mcc_generated_files/LINDrivers/lin_slave.c: 306:   PID.P0 = PID.ID0 ^ PID.ID1;
  4968     0178  18F2               	btfsc	LIN_calcParity@PID,1
  4969     0179  297B               	goto	u951
  4970     017A  297D               	goto	u950
  4971     017B                     u951:
  4972     017B  3001               	movlw	1
  4973     017C  297E               	goto	u952
  4974     017D                     u950:
  4975     017D  3000               	movlw	0
  4976     017E                     u952:
  4977     017E  00F0               	movwf	??_LIN_calcParity
  4978     017F  1872               	btfsc	LIN_calcParity@PID,0
  4979     0180  2982               	goto	u961
  4980     0181  2984               	goto	u960
  4981     0182                     u961:
  4982     0182  3001               	movlw	1
  4983     0183  2985               	goto	u962
  4984     0184                     u960:
  4985     0184  3000               	movlw	0
  4986     0185                     u962:
  4987     0185  0670               	xorwf	??_LIN_calcParity,w
  4988     0186  1D03               	skipz
  4989     0187  2989               	goto	u971
  4990     0188  298B               	goto	u970
  4991     0189                     u971:
  4992     0189  1772               	bsf	LIN_calcParity@PID,6
  4993     018A  298C               	goto	u984
  4994     018B                     u970:
  4995     018B  1372               	bcf	LIN_calcParity@PID,6
  4996     018C                     u984:
  4997                           
  4998                           ;mcc_generated_files/LINDrivers/lin_slave.c: 307:   PID.P0 = PID.P0 ^ PID.ID2;
  4999     018C  1972               	btfsc	LIN_calcParity@PID,2
  5000     018D  298F               	goto	u991
  5001     018E  2991               	goto	u990
  5002     018F                     u991:
  5003     018F  3001               	movlw	1
  5004     0190  2992               	goto	u992
  5005     0191                     u990:
  5006     0191  3000               	movlw	0
  5007     0192                     u992:
  5008     0192  00F0               	movwf	??_LIN_calcParity
  5009     0193  1B72               	btfsc	LIN_calcParity@PID,6
  5010     0194  2996               	goto	u1001
  5011     0195  2998               	goto	u1000
  5012     0196                     u1001:
  5013     0196  3001               	movlw	1
  5014     0197  2999               	goto	u1002
  5015     0198                     u1000:
  5016     0198  3000               	movlw	0
  5017     0199                     u1002:
  5018     0199  0670               	xorwf	??_LIN_calcParity,w
  5019     019A  1D03               	skipz
  5020     019B  299D               	goto	u1011
  5021     019C  299F               	goto	u1010
  5022     019D                     u1011:
  5023     019D  1772               	bsf	LIN_calcParity@PID,6
  5024     019E  29A0               	goto	u1024
  5025     019F                     u1010:
  5026     019F  1372               	bcf	LIN_calcParity@PID,6
  5027     01A0                     u1024:
  5028                           
  5029                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:   PID.P0 = PID.P0 ^ PID.ID4;
  5030     01A0  1A72               	btfsc	LIN_calcParity@PID,4
  5031     01A1  29A3               	goto	u1031
  5032     01A2  29A5               	goto	u1030
  5033     01A3                     u1031:
  5034     01A3  3001               	movlw	1
  5035     01A4  29A6               	goto	u1032
  5036     01A5                     u1030:
  5037     01A5  3000               	movlw	0
  5038     01A6                     u1032:
  5039     01A6  00F0               	movwf	??_LIN_calcParity
  5040     01A7  1B72               	btfsc	LIN_calcParity@PID,6
  5041     01A8  29AA               	goto	u1041
  5042     01A9  29AC               	goto	u1040
  5043     01AA                     u1041:
  5044     01AA  3001               	movlw	1
  5045     01AB  29AD               	goto	u1042
  5046     01AC                     u1040:
  5047     01AC  3000               	movlw	0
  5048     01AD                     u1042:
  5049     01AD  0670               	xorwf	??_LIN_calcParity,w
  5050     01AE  1D03               	skipz
  5051     01AF  29B1               	goto	u1051
  5052     01B0  29B3               	goto	u1050
  5053     01B1                     u1051:
  5054     01B1  1772               	bsf	LIN_calcParity@PID,6
  5055     01B2  29B4               	goto	u1064
  5056     01B3                     u1050:
  5057     01B3  1372               	bcf	LIN_calcParity@PID,6
  5058     01B4                     u1064:
  5059                           
  5060                           ;mcc_generated_files/LINDrivers/lin_slave.c: 309:   PID.P1 = PID.ID1 ^ PID.ID3;
  5061     01B4  19F2               	btfsc	LIN_calcParity@PID,3
  5062     01B5  29B7               	goto	u1071
  5063     01B6  29B9               	goto	u1070
  5064     01B7                     u1071:
  5065     01B7  3001               	movlw	1
  5066     01B8  29BA               	goto	u1072
  5067     01B9                     u1070:
  5068     01B9  3000               	movlw	0
  5069     01BA                     u1072:
  5070     01BA  00F0               	movwf	??_LIN_calcParity
  5071     01BB  18F2               	btfsc	LIN_calcParity@PID,1
  5072     01BC  29BE               	goto	u1081
  5073     01BD  29C0               	goto	u1080
  5074     01BE                     u1081:
  5075     01BE  3001               	movlw	1
  5076     01BF  29C1               	goto	u1082
  5077     01C0                     u1080:
  5078     01C0  3000               	movlw	0
  5079     01C1                     u1082:
  5080     01C1  0670               	xorwf	??_LIN_calcParity,w
  5081     01C2  1D03               	skipz
  5082     01C3  29C5               	goto	u1091
  5083     01C4  29C7               	goto	u1090
  5084     01C5                     u1091:
  5085     01C5  17F2               	bsf	LIN_calcParity@PID,7
  5086     01C6  29C8               	goto	u1104
  5087     01C7                     u1090:
  5088     01C7  13F2               	bcf	LIN_calcParity@PID,7
  5089     01C8                     u1104:
  5090                           
  5091                           ;mcc_generated_files/LINDrivers/lin_slave.c: 310:   PID.P1 = PID.P1 ^ PID.ID4;
  5092     01C8  1A72               	btfsc	LIN_calcParity@PID,4
  5093     01C9  29CB               	goto	u1111
  5094     01CA  29CD               	goto	u1110
  5095     01CB                     u1111:
  5096     01CB  3001               	movlw	1
  5097     01CC  29CE               	goto	u1112
  5098     01CD                     u1110:
  5099     01CD  3000               	movlw	0
  5100     01CE                     u1112:
  5101     01CE  00F0               	movwf	??_LIN_calcParity
  5102     01CF  1BF2               	btfsc	LIN_calcParity@PID,7
  5103     01D0  29D2               	goto	u1121
  5104     01D1  29D4               	goto	u1120
  5105     01D2                     u1121:
  5106     01D2  3001               	movlw	1
  5107     01D3  29D5               	goto	u1122
  5108     01D4                     u1120:
  5109     01D4  3000               	movlw	0
  5110     01D5                     u1122:
  5111     01D5  0670               	xorwf	??_LIN_calcParity,w
  5112     01D6  1D03               	skipz
  5113     01D7  29D9               	goto	u1131
  5114     01D8  29DB               	goto	u1130
  5115     01D9                     u1131:
  5116     01D9  17F2               	bsf	LIN_calcParity@PID,7
  5117     01DA  29DC               	goto	u1144
  5118     01DB                     u1130:
  5119     01DB  13F2               	bcf	LIN_calcParity@PID,7
  5120     01DC                     u1144:
  5121                           
  5122                           ;mcc_generated_files/LINDrivers/lin_slave.c: 311:   PID.P1 = PID.P1 ^ PID.ID5;
  5123     01DC  1AF2               	btfsc	LIN_calcParity@PID,5
  5124     01DD  29DF               	goto	u1151
  5125     01DE  29E1               	goto	u1150
  5126     01DF                     u1151:
  5127     01DF  3001               	movlw	1
  5128     01E0  29E2               	goto	u1152
  5129     01E1                     u1150:
  5130     01E1  3000               	movlw	0
  5131     01E2                     u1152:
  5132     01E2  00F0               	movwf	??_LIN_calcParity
  5133     01E3  1BF2               	btfsc	LIN_calcParity@PID,7
  5134     01E4  29E6               	goto	u1161
  5135     01E5  29E8               	goto	u1160
  5136     01E6                     u1161:
  5137     01E6  3001               	movlw	1
  5138     01E7  29E9               	goto	u1162
  5139     01E8                     u1160:
  5140     01E8  3000               	movlw	0
  5141     01E9                     u1162:
  5142     01E9  0670               	xorwf	??_LIN_calcParity,w
  5143     01EA  1D03               	skipz
  5144     01EB  29ED               	goto	u1171
  5145     01EC  29EF               	goto	u1170
  5146     01ED                     u1171:
  5147     01ED  17F2               	bsf	LIN_calcParity@PID,7
  5148     01EE  29F0               	goto	u1184
  5149     01EF                     u1170:
  5150     01EF  13F2               	bcf	LIN_calcParity@PID,7
  5151     01F0                     u1184:
  5152     01F0                     l1859:
  5153                           
  5154                           ;mcc_generated_files/LINDrivers/lin_slave.c: 312:   PID.P1 = ~PID.P1;
  5155     01F0  1003               	clrc
  5156     01F1  1FF2               	btfss	LIN_calcParity@PID,7
  5157     01F2  1403               	setc
  5158     01F3  1803               	btfsc	3,0
  5159     01F4  29F6               	goto	u1191
  5160     01F5  29F8               	goto	u1190
  5161     01F6                     u1191:
  5162     01F6  17F2               	bsf	LIN_calcParity@PID,7
  5163     01F7  29F9               	goto	u1204
  5164     01F8                     u1190:
  5165     01F8  13F2               	bcf	LIN_calcParity@PID,7
  5166     01F9                     u1204:
  5167     01F9                     l1861:
  5168                           
  5169                           ;mcc_generated_files/LINDrivers/lin_slave.c: 314:   return PID.rawPID;
  5170     01F9  0872               	movf	LIN_calcParity@PID,w
  5171     01FA                     l212:
  5172     01FA  0008               	return
  5173     01FB                     __end_of_LIN_calcParity:
  5174                           
  5175                           	psect	text27
  5176     0580                     __ptext27:	
  5177 ;; *************** function _EUSART_is_rx_ready *****************
  5178 ;; Defined at:
  5179 ;;		line 137 in file "mcc_generated_files/eusart.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      _Bool 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5193 ;;      Params:         0       0       0       0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0
  5196 ;;      Totals:         0       0       0       0       0       0       0       0
  5197 ;;Total ram usage:        0 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 4
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_LIN_handler
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207     0580                     _EUSART_is_rx_ready:	
  5208                           ;psect for function _EUSART_is_rx_ready
  5209                           
  5210     0580                     l1969:	
  5211                           ;incstack = 0
  5212                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5213                           
  5214                           
  5215                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  5216     0580  0020               	movlb	0	; select bank0
  5217     0581  084A               	movf	_eusartRxCount,w	;volatile
  5218     0582  1D03               	btfss	3,2
  5219     0583  2D85               	goto	u1321
  5220     0584  2D87               	goto	u1320
  5221     0585                     u1321:
  5222     0585  3001               	movlw	1
  5223     0586  2D88               	goto	u1330
  5224     0587                     u1320:
  5225     0587  3000               	movlw	0
  5226     0588                     u1330:
  5227     0588                     l353:
  5228     0588  0008               	return
  5229     0589                     __end_of_EUSART_is_rx_ready:
  5230                           
  5231                           	psect	text28
  5232     03FB                     __ptext28:	
  5233 ;; *************** function _EUSART_Read *****************
  5234 ;; Defined at:
  5235 ;;		line 151 in file "mcc_generated_files/eusart.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;		None
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  readValue       1    0[COMMON] unsigned char 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      unsigned char 
  5242 ;; Registers used:
  5243 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5249 ;;      Params:         0       0       0       0       0       0       0       0
  5250 ;;      Locals:         1       0       0       0       0       0       0       0
  5251 ;;      Temps:          0       0       0       0       0       0       0       0
  5252 ;;      Totals:         1       0       0       0       0       0       0       0
  5253 ;;Total ram usage:        1 bytes
  5254 ;; Hardware stack levels used: 1
  5255 ;; Hardware stack levels required when called: 4
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_LIN_handler
  5260 ;;		_LIN_breakCheck
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264     03FB                     _EUSART_Read:	
  5265                           ;psect for function _EUSART_Read
  5266                           
  5267     03FB                     l1973:	
  5268                           ;incstack = 0
  5269                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5270                           
  5271     03FB                     l1975:	
  5272                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5273                           
  5274                           
  5275                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5276     03FB  0020               	movlb	0	; select bank0
  5277     03FC  084A               	movf	_eusartRxCount,w	;volatile
  5278     03FD  1903               	btfsc	3,2
  5279     03FE  2C00               	goto	u1341
  5280     03FF  2C01               	goto	u1340
  5281     0400                     u1341:
  5282     0400  2BFB               	goto	l1975
  5283     0401                     u1340:
  5284     0401                     l1977:
  5285                           
  5286                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  5287     0401  084B               	movf	_eusartRxTail,w	;volatile
  5288     0402  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5289     0403  0086               	movwf	6
  5290     0404  0187               	clrf	7
  5291     0405  0801               	movf	1,w
  5292     0406  00C9               	movwf	_eusartRxLastError	;volatile
  5293                           
  5294                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  5295     0407  084B               	movf	_eusartRxTail,w
  5296     0408  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5297     0409  0086               	movwf	6
  5298     040A  0187               	clrf	7
  5299     040B  0801               	movf	1,w
  5300     040C  00F0               	movwf	EUSART_Read@readValue
  5301     040D                     l1979:
  5302     040D  3001               	movlw	1
  5303     040E  07CB               	addwf	_eusartRxTail,f	;volatile
  5304     040F                     l1981:
  5305                           
  5306                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  5307     040F  3008               	movlw	8
  5308     0410  024B               	subwf	_eusartRxTail,w	;volatile
  5309     0411  1C03               	skipc
  5310     0412  2C14               	goto	u1351
  5311     0413  2C15               	goto	u1350
  5312     0414                     u1351:
  5313     0414  2C16               	goto	l1985
  5314     0415                     u1350:
  5315     0415                     l1983:
  5316                           
  5317                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  5318     0415  01CB               	clrf	_eusartRxTail	;volatile
  5319     0416                     l1985:
  5320                           
  5321                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  5322     0416  0021               	movlb	1	; select bank1
  5323     0417  1291               	bcf	17,5	;volatile
  5324     0418                     l1987:
  5325                           
  5326                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  5327     0418  3001               	movlw	1
  5328     0419  0020               	movlb	0	; select bank0
  5329     041A  02CA               	subwf	_eusartRxCount,f	;volatile
  5330     041B                     l1989:
  5331                           
  5332                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  5333     041B  0021               	movlb	1	; select bank1
  5334     041C  1691               	bsf	17,5	;volatile
  5335     041D                     l1991:
  5336                           
  5337                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  5338     041D  0870               	movf	EUSART_Read@readValue,w
  5339     041E                     l366:
  5340     041E  0008               	return
  5341     041F                     __end_of_EUSART_Read:
  5342                           
  5343                           	psect	text29
  5344     0305                     __ptext29:	
  5345 ;; *************** function _EUSART_Initialize *****************
  5346 ;; Defined at:
  5347 ;;		line 88 in file "mcc_generated_files/eusart.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0, pclath, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5361 ;;      Params:         0       0       0       0       0       0       0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0
  5364 ;;      Totals:         0       0       0       0       0       0       0       0
  5365 ;;Total ram usage:        0 bytes
  5366 ;; Hardware stack levels used: 1
  5367 ;; Hardware stack levels required when called: 5
  5368 ;; This function calls:
  5369 ;;		_EUSART_SetErrorHandler
  5370 ;;		_EUSART_SetFramingErrorHandler
  5371 ;;		_EUSART_SetOverrunErrorHandler
  5372 ;;		_EUSART_SetRxInterruptHandler
  5373 ;;		_EUSART_SetTxInterruptHandler
  5374 ;; This function is called by:
  5375 ;;		_LIN_handler
  5376 ;;		_SYSTEM_Initialize
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380     0305                     _EUSART_Initialize:	
  5381                           ;psect for function _EUSART_Initialize
  5382                           
  5383     0305                     l1941:	
  5384                           ;incstack = 0
  5385                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5386                           
  5387                           
  5388                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  5389     0305  0021               	movlb	1	; select bank1
  5390     0306  1291               	bcf	17,5	;volatile
  5391     0307                     l1943:
  5392                           
  5393                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  5394     0307  303F               	movlw	low _EUSART_Receive_ISR
  5395     0308  00F0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  5396     0309  3003               	movlw	high _EUSART_Receive_ISR
  5397     030A  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  5398     030B  3185  25A3  3183   	fcall	_EUSART_SetRxInterruptHandler
  5399     030E                     l1945:
  5400                           
  5401                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  5402     030E  0021               	movlb	1	; select bank1
  5403     030F  1211               	bcf	17,4	;volatile
  5404                           
  5405                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  5406     0310  3062               	movlw	low _EUSART_Transmit_ISR
  5407     0311  00F0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  5408     0312  3004               	movlw	high _EUSART_Transmit_ISR
  5409     0313  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  5410     0314  3185  259D  3183   	fcall	_EUSART_SetTxInterruptHandler
  5411     0317                     l1947:
  5412                           
  5413                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x18;
  5414     0317  3018               	movlw	24
  5415     0318  0023               	movlb	3	; select bank3
  5416     0319  009F               	movwf	31	;volatile
  5417     031A                     l1949:
  5418                           
  5419                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  5420     031A  3090               	movlw	144
  5421     031B  009D               	movwf	29	;volatile
  5422     031C                     l1951:
  5423                           
  5424                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  5425     031C  3024               	movlw	36
  5426     031D  009E               	movwf	30	;volatile
  5427                           
  5428                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  5429     031E  30E7               	movlw	low _EUSART_DefaultFramingErrorHandler
  5430     031F  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5431     0320  3005               	movlw	high _EUSART_DefaultFramingErrorHandler
  5432     0321  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5433     0322  3185  25AF  3183   	fcall	_EUSART_SetFramingErrorHandler
  5434                           
  5435                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  5436     0325  30DD               	movlw	low _EUSART_DefaultOverrunErrorHandler
  5437     0326  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5438     0327  3005               	movlw	high _EUSART_DefaultOverrunErrorHandler
  5439     0328  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5440     0329  3185  25A9  3183   	fcall	_EUSART_SetOverrunErrorHandler
  5441                           
  5442                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  5443     032C  30E1               	movlw	low _EUSART_DefaultErrorHandler
  5444     032D  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  5445     032E  3005               	movlw	high _EUSART_DefaultErrorHandler
  5446     032F  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5447     0330  3185  25B5  3183   	fcall	_EUSART_SetErrorHandler
  5448     0333                     l1953:
  5449                           
  5450                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  5451     0333  0020               	movlb	0	; select bank0
  5452     0334  01C9               	clrf	_eusartRxLastError	;volatile
  5453     0335                     l1955:
  5454                           
  5455                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  5456     0335  01CF               	clrf	_eusartTxHead	;volatile
  5457     0336                     l1957:
  5458                           
  5459                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  5460     0336  01CE               	clrf	_eusartTxTail	;volatile
  5461     0337                     l1959:
  5462                           
  5463                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  5464     0337  3008               	movlw	8
  5465     0338  00CD               	movwf	_eusartTxBufferRemaining	;volatile
  5466     0339                     l1961:
  5467                           
  5468                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  5469     0339  01CC               	clrf	_eusartRxHead	;volatile
  5470     033A                     l1963:
  5471                           
  5472                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  5473     033A  01CB               	clrf	_eusartRxTail	;volatile
  5474     033B                     l1965:
  5475                           
  5476                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  5477     033B  01CA               	clrf	_eusartRxCount	;volatile
  5478     033C                     l1967:
  5479                           
  5480                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 0;
  5481     033C  0021               	movlb	1	; select bank1
  5482     033D  1291               	bcf	17,5	;volatile
  5483     033E                     l347:
  5484     033E  0008               	return
  5485     033F                     __end_of_EUSART_Initialize:
  5486                           
  5487                           	psect	text30
  5488     059D                     __ptext30:	
  5489 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  5490 ;; Defined at:
  5491 ;;		line 276 in file "mcc_generated_files/eusart.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5494 ;;		 -> EUSART_Transmit_ISR(1), 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5506 ;;      Params:         2       0       0       0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0
  5509 ;;      Totals:         2       0       0       0       0       0       0       0
  5510 ;;Total ram usage:        2 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 4
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_EUSART_Initialize
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520     059D                     _EUSART_SetTxInterruptHandler:	
  5521                           ;psect for function _EUSART_SetTxInterruptHandler
  5522                           
  5523     059D                     l1869:	
  5524                           ;incstack = 0
  5525                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  5526                           
  5527                           
  5528                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  5529     059D  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  5530     059E  0020               	movlb	0	; select bank0
  5531     059F  00C3               	movwf	_EUSART_TxDefaultInterruptHandler+1
  5532     05A0  0870               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  5533     05A1  00C2               	movwf	_EUSART_TxDefaultInterruptHandler
  5534     05A2                     l413:
  5535     05A2  0008               	return
  5536     05A3                     __end_of_EUSART_SetTxInterruptHandler:
  5537                           
  5538                           	psect	text31
  5539     05A3                     __ptext31:	
  5540 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  5541 ;; Defined at:
  5542 ;;		line 280 in file "mcc_generated_files/eusart.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5545 ;;		 -> EUSART_Receive_ISR(1), 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;		None
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      void 
  5550 ;; Registers used:
  5551 ;;		wreg
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5557 ;;      Params:         2       0       0       0       0       0       0       0
  5558 ;;      Locals:         0       0       0       0       0       0       0       0
  5559 ;;      Temps:          0       0       0       0       0       0       0       0
  5560 ;;      Totals:         2       0       0       0       0       0       0       0
  5561 ;;Total ram usage:        2 bytes
  5562 ;; Hardware stack levels used: 1
  5563 ;; Hardware stack levels required when called: 4
  5564 ;; This function calls:
  5565 ;;		Nothing
  5566 ;; This function is called by:
  5567 ;;		_EUSART_Initialize
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571     05A3                     _EUSART_SetRxInterruptHandler:	
  5572                           ;psect for function _EUSART_SetRxInterruptHandler
  5573                           
  5574     05A3                     l1867:	
  5575                           ;incstack = 0
  5576                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  5577                           
  5578                           
  5579                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  5580     05A3  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  5581     05A4  0020               	movlb	0	; select bank0
  5582     05A5  00C1               	movwf	_EUSART_RxDefaultInterruptHandler+1
  5583     05A6  0870               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  5584     05A7  00C0               	movwf	_EUSART_RxDefaultInterruptHandler
  5585     05A8                     l416:
  5586     05A8  0008               	return
  5587     05A9                     __end_of_EUSART_SetRxInterruptHandler:
  5588                           
  5589                           	psect	text32
  5590     05A9                     __ptext32:	
  5591 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5592 ;; Defined at:
  5593 ;;		line 268 in file "mcc_generated_files/eusart.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5596 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		wreg
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5608 ;;      Params:         2       0       0       0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0       0       0       0
  5610 ;;      Temps:          0       0       0       0       0       0       0       0
  5611 ;;      Totals:         2       0       0       0       0       0       0       0
  5612 ;;Total ram usage:        2 bytes
  5613 ;; Hardware stack levels used: 1
  5614 ;; Hardware stack levels required when called: 4
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_EUSART_Initialize
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622     05A9                     _EUSART_SetOverrunErrorHandler:	
  5623                           ;psect for function _EUSART_SetOverrunErrorHandler
  5624                           
  5625     05A9                     l1873:	
  5626                           ;incstack = 0
  5627                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5628                           
  5629                           
  5630                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  5631     05A9  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5632     05AA  0020               	movlb	0	; select bank0
  5633     05AB  00BD               	movwf	_EUSART_OverrunErrorHandler+1
  5634     05AC  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5635     05AD  00BC               	movwf	_EUSART_OverrunErrorHandler
  5636     05AE                     l407:
  5637     05AE  0008               	return
  5638     05AF                     __end_of_EUSART_SetOverrunErrorHandler:
  5639                           
  5640                           	psect	text33
  5641     05AF                     __ptext33:	
  5642 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5643 ;; Defined at:
  5644 ;;		line 264 in file "mcc_generated_files/eusart.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5647 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5659 ;;      Params:         2       0       0       0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0
  5662 ;;      Totals:         2       0       0       0       0       0       0       0
  5663 ;;Total ram usage:        2 bytes
  5664 ;; Hardware stack levels used: 1
  5665 ;; Hardware stack levels required when called: 4
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_EUSART_Initialize
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673     05AF                     _EUSART_SetFramingErrorHandler:	
  5674                           ;psect for function _EUSART_SetFramingErrorHandler
  5675                           
  5676     05AF                     l1871:	
  5677                           ;incstack = 0
  5678                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5679                           
  5680                           
  5681                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  5682     05AF  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5683     05B0  0020               	movlb	0	; select bank0
  5684     05B1  00BF               	movwf	_EUSART_FramingErrorHandler+1
  5685     05B2  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5686     05B3  00BE               	movwf	_EUSART_FramingErrorHandler
  5687     05B4                     l404:
  5688     05B4  0008               	return
  5689     05B5                     __end_of_EUSART_SetFramingErrorHandler:
  5690                           
  5691                           	psect	text34
  5692     05B5                     __ptext34:	
  5693 ;; *************** function _EUSART_SetErrorHandler *****************
  5694 ;; Defined at:
  5695 ;;		line 272 in file "mcc_generated_files/eusart.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5698 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5710 ;;      Params:         2       0       0       0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0
  5713 ;;      Totals:         2       0       0       0       0       0       0       0
  5714 ;;Total ram usage:        2 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 4
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_EUSART_Initialize
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724     05B5                     _EUSART_SetErrorHandler:	
  5725                           ;psect for function _EUSART_SetErrorHandler
  5726                           
  5727     05B5                     l1875:	
  5728                           ;incstack = 0
  5729                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5730                           
  5731                           
  5732                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  5733     05B5  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5734     05B6  0020               	movlb	0	; select bank0
  5735     05B7  00BB               	movwf	_EUSART_ErrorHandler+1
  5736     05B8  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5737     05B9  00BA               	movwf	_EUSART_ErrorHandler
  5738     05BA                     l410:
  5739     05BA  0008               	return
  5740     05BB                     __end_of_EUSART_SetErrorHandler:
  5741                           
  5742                           	psect	text35
  5743     04E1                     __ptext35:	
  5744 ;; *************** function _AutoBaud_Detect *****************
  5745 ;; Defined at:
  5746 ;;		line 92 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  sync            1    0        unsigned char 
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5760 ;;      Params:         0       0       0       0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; Hardware stack levels required when called: 4
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_LIN_handler
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774     04E1                     _AutoBaud_Detect:	
  5775                           ;psect for function _AutoBaud_Detect
  5776                           
  5777     04E1                     l1923:	
  5778                           ;incstack = 0
  5779                           ; Regs used in _AutoBaud_Detect: [wreg+status,2+status,0]
  5780                           
  5781                           
  5782                           ;mcc_generated_files/LINDrivers/lin_slave.c: 93:   uint8_t sync;;mcc_generated_files/LIN
      +                          Drivers/lin_slave.c: 94:   BAUDCONbits.ABDOVF = 0;
  5783     04E1  0023               	movlb	3	; select bank3
  5784     04E2  139F               	bcf	31,7	;volatile
  5785                           
  5786                           ;mcc_generated_files/LINDrivers/lin_slave.c: 95:   BAUDCONbits.ABDEN = 1;
  5787     04E3  141F               	bsf	31,0	;volatile
  5788                           
  5789                           ;mcc_generated_files/LINDrivers/lin_slave.c: 96:   BAUDCONbits.WUE = 1;
  5790     04E4  149F               	bsf	31,1	;volatile
  5791                           
  5792                           ;mcc_generated_files/LINDrivers/lin_slave.c: 98:   while (LIN_timerRunning==1) {
  5793     04E5  2CEC               	goto	l1927
  5794     04E6                     l144:
  5795                           
  5796                           ;mcc_generated_files/LINDrivers/lin_slave.c: 99:     if (!BAUDCONbits.ABDEN) {
  5797     04E6  0023               	movlb	3	; select bank3
  5798     04E7  181F               	btfsc	31,0	;volatile
  5799     04E8  2CEA               	goto	u1301
  5800     04E9  2CEB               	goto	u1300
  5801     04EA                     u1301:
  5802     04EA  2CEC               	goto	l1927
  5803     04EB                     u1300:
  5804     04EB  2CF2               	goto	l1929
  5805     04EC                     l1927:
  5806                           
  5807                           ;mcc_generated_files/LINDrivers/lin_slave.c: 98:   while (LIN_timerRunning==1) {
  5808     04EC  0020               	movlb	0	; select bank0
  5809     04ED  0353               	decf	_LIN_timerRunning,w
  5810     04EE  1903               	btfsc	3,2
  5811     04EF  2CF1               	goto	u1311
  5812     04F0  2CF2               	goto	u1310
  5813     04F1                     u1311:
  5814     04F1  2CE6               	goto	l144
  5815     04F2                     u1310:
  5816     04F2                     l1929:
  5817     04F2  0023               	movlb	3	; select bank3
  5818     04F3  0819               	movf	25,w	;volatile
  5819     04F4                     l1931:
  5820                           
  5821                           ;mcc_generated_files/LINDrivers/lin_slave.c: 109:   __nop();
  5822     04F4  0000               	nop
  5823     04F5                     l147:
  5824     04F5  0008               	return
  5825     04F6                     __end_of_AutoBaud_Detect:
  5826                           
  5827                           	psect	intentry
  5828     0004                     __pintentry:	
  5829 ;; *************** function _INTERRUPT_InterruptManager *****************
  5830 ;; Defined at:
  5831 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5845 ;;      Params:         0       0       0       0       0       0       0       0
  5846 ;;      Locals:         0       0       0       0       0       0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0
  5848 ;;      Totals:         0       0       0       0       0       0       0       0
  5849 ;;Total ram usage:        0 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 3
  5852 ;; This function calls:
  5853 ;;		NULL
  5854 ;;		_EUSART_Receive_ISR
  5855 ;;		_EUSART_Transmit_ISR
  5856 ;;		_TMR0_ISR
  5857 ;; This function is called by:
  5858 ;;		Interrupt level 1
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862     0004                     _INTERRUPT_InterruptManager:
  5863                           
  5864                           ;incstack = 0
  5865     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5866                           
  5867                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5868     0005  3180               	pagesel	$
  5869     0006                     i1l2181:
  5870                           
  5871                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5872     0006  1E8B               	btfss	11,5	;volatile
  5873     0007  2809               	goto	u157_21
  5874     0008  280A               	goto	u157_20
  5875     0009                     u157_21:
  5876     0009  2812               	goto	i1l473
  5877     000A                     u157_20:
  5878     000A                     i1l2183:
  5879     000A  1D0B               	btfss	11,2	;volatile
  5880     000B  280D               	goto	u158_21
  5881     000C  280E               	goto	u158_20
  5882     000D                     u158_21:
  5883     000D  2812               	goto	i1l473
  5884     000E                     u158_20:
  5885     000E                     i1l2185:
  5886                           
  5887                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5888     000E  3185  2532  3180   	fcall	_TMR0_ISR
  5889                           
  5890                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5891     0011  2836               	goto	i1l481
  5892     0012                     i1l473:	
  5893                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5894                           
  5895     0012  1F0B               	btfss	11,6	;volatile
  5896     0013  2815               	goto	u159_21
  5897     0014  2816               	goto	u159_20
  5898     0015                     u159_21:
  5899     0015  2836               	goto	i1l481
  5900     0016                     u159_20:
  5901     0016                     i1l2187:
  5902                           
  5903                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5904     0016  0021               	movlb	1	; select bank1
  5905     0017  1E11               	btfss	17,4	;volatile
  5906     0018  281A               	goto	u160_21
  5907     0019  281B               	goto	u160_20
  5908     001A                     u160_21:
  5909     001A  2826               	goto	i1l476
  5910     001B                     u160_20:
  5911     001B                     i1l2189:
  5912     001B  0020               	movlb	0	; select bank0
  5913     001C  1E11               	btfss	17,4	;volatile
  5914     001D  281F               	goto	u161_21
  5915     001E  2820               	goto	u161_20
  5916     001F                     u161_21:
  5917     001F  2826               	goto	i1l476
  5918     0020                     u161_20:
  5919     0020                     i1l2191:
  5920                           
  5921                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
  5922     0020  0843               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5923     0021  008A               	movwf	10
  5924     0022  0842               	movf	_EUSART_TxDefaultInterruptHandler,w
  5925     0023  000A               	callw
  5926     0024  3180               	pagesel	$
  5927                           
  5928                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5929     0025  2836               	goto	i1l481
  5930     0026                     i1l476:	
  5931                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5932                           
  5933     0026  0021               	movlb	1	; select bank1
  5934     0027  1E91               	btfss	17,5	;volatile
  5935     0028  282A               	goto	u162_21
  5936     0029  282B               	goto	u162_20
  5937     002A                     u162_21:
  5938     002A  2836               	goto	i1l480
  5939     002B                     u162_20:
  5940     002B                     i1l2193:
  5941     002B  0020               	movlb	0	; select bank0
  5942     002C  1E91               	btfss	17,5	;volatile
  5943     002D  282F               	goto	u163_21
  5944     002E  2830               	goto	u163_20
  5945     002F                     u163_21:
  5946     002F  2836               	goto	i1l480
  5947     0030                     u163_20:
  5948     0030                     i1l2195:
  5949                           
  5950                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
  5951     0030  0841               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5952     0031  008A               	movwf	10
  5953     0032  0840               	movf	_EUSART_RxDefaultInterruptHandler,w
  5954     0033  000A               	callw
  5955     0034  3180               	pagesel	$
  5956                           
  5957                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5958     0035  2836               	goto	i1l481
  5959     0036                     i1l480:	
  5960                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  5961                           
  5962     0036                     i1l481:
  5963     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5964     0037  0009               	retfie
  5965     0038                     __end_of_INTERRUPT_InterruptManager:
  5966                           
  5967                           	psect	text37
  5968     0532                     __ptext37:	
  5969 ;; *************** function _TMR0_ISR *****************
  5970 ;; Defined at:
  5971 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0, pclath, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5985 ;;      Params:         0       0       0       0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0       0       0       0
  5988 ;;      Totals:         0       0       0       0       0       0       0       0
  5989 ;;Total ram usage:        0 bytes
  5990 ;; Hardware stack levels used: 1
  5991 ;; Hardware stack levels required when called: 2
  5992 ;; This function calls:
  5993 ;;		NULL
  5994 ;;		_LIN_timerHandler
  5995 ;;		_TMR0_DefaultInterruptHandler
  5996 ;; This function is called by:
  5997 ;;		_INTERRUPT_InterruptManager
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001     0532                     _TMR0_ISR:	
  6002                           ;psect for function _TMR0_ISR
  6003                           
  6004     0532                     i1l2153:	
  6005                           ;incstack = 0
  6006                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6007                           
  6008                           
  6009                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  6010     0532  110B               	bcf	11,2	;volatile
  6011     0533                     i1l2155:
  6012                           
  6013                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  6014     0533  0020               	movlb	0	; select bank0
  6015     0534  0848               	movf	_timer0ReloadVal,w	;volatile
  6016     0535  0095               	movwf	21	;volatile
  6017     0536                     i1l2157:
  6018                           
  6019                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  6020     0536  0838               	movf	_TMR0_InterruptHandler,w
  6021     0537  0439               	iorwf	_TMR0_InterruptHandler+1,w
  6022     0538  1903               	btfsc	3,2
  6023     0539  2D3B               	goto	u155_21
  6024     053A  2D3C               	goto	u155_20
  6025     053B                     u155_21:
  6026     053B  2D41               	goto	i1l446
  6027     053C                     u155_20:
  6028     053C                     i1l2159:
  6029                           
  6030                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  6031     053C  0839               	movf	_TMR0_InterruptHandler+1,w
  6032     053D  008A               	movwf	10
  6033     053E  0838               	movf	_TMR0_InterruptHandler,w
  6034     053F  000A               	callw
  6035     0540  3185               	pagesel	$
  6036     0541                     i1l446:
  6037     0541  0008               	return
  6038     0542                     __end_of_TMR0_ISR:
  6039                           
  6040                           	psect	text38
  6041     055C                     __ptext38:	
  6042 ;; *************** function _LIN_timerHandler *****************
  6043 ;; Defined at:
  6044 ;;		line 337 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;		None
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      void 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0, pclath, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6058 ;;      Params:         0       0       0       0       0       0       0       0
  6059 ;;      Locals:         0       0       0       0       0       0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0
  6061 ;;      Totals:         0       0       0       0       0       0       0       0
  6062 ;;Total ram usage:        0 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; Hardware stack levels required when called: 1
  6065 ;; This function calls:
  6066 ;;		i1_LIN_stopTimer
  6067 ;; This function is called by:
  6068 ;;		_LIN_setTimerHandler
  6069 ;;		_TMR0_ISR
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073     055C                     _LIN_timerHandler:	
  6074                           ;psect for function _LIN_timerHandler
  6075                           
  6076     055C                     i1l2013:	
  6077                           ;incstack = 0
  6078                           ; Regs used in _LIN_timerHandler: [wreg+status,2+status,0+pclath+cstack]
  6079                           
  6080                           
  6081                           ;mcc_generated_files/LINDrivers/lin_slave.c: 340:   if (++CountCallBack >= LIN_timeout) 
      +                          {
  6082     055C  3001               	movlw	1
  6083     055D  0020               	movlb	0	; select bank0
  6084     055E  07D2               	addwf	_CountCallBack,f	;volatile
  6085     055F  086C               	movf	_LIN_timeout,w
  6086     0560  0252               	subwf	_CountCallBack,w	;volatile
  6087     0561  1C03               	skipc
  6088     0562  2D64               	goto	u138_21
  6089     0563  2D65               	goto	u138_20
  6090     0564                     u138_21:
  6091     0564  2D68               	goto	i1l226
  6092     0565                     u138_20:
  6093     0565                     i1l2015:
  6094                           
  6095                           ;mcc_generated_files/LINDrivers/lin_slave.c: 342:     LIN_stopTimer();
  6096     0565  3185  25D4  3185   	fcall	i1_LIN_stopTimer
  6097     0568                     i1l226:
  6098     0568  0008               	return
  6099     0569                     __end_of_LIN_timerHandler:
  6100                           
  6101                           	psect	text39
  6102     05E6                     __ptext39:	
  6103 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6104 ;; Defined at:
  6105 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		None
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6119 ;;      Params:         0       0       0       0       0       0       0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0
  6122 ;;      Totals:         0       0       0       0       0       0       0       0
  6123 ;;Total ram usage:        0 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_TMR0_Initialize
  6129 ;;		_TMR0_ISR
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133     05E6                     _TMR0_DefaultInterruptHandler:	
  6134                           ;psect for function _TMR0_DefaultInterruptHandler
  6135                           
  6136     05E6                     i1l452:	
  6137                           ;incstack = 0
  6138                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6139                           
  6140     05E6  0008               	return
  6141     05E7                     __end_of_TMR0_DefaultInterruptHandler:
  6142                           
  6143                           	psect	text40
  6144     05D4                     __ptext40:	
  6145 ;; *************** function i1_LIN_stopTimer *****************
  6146 ;; Defined at:
  6147 ;;		line 348 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;		None
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		status,2
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6161 ;;      Params:         0       0       0       0       0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0
  6164 ;;      Totals:         0       0       0       0       0       0       0       0
  6165 ;;Total ram usage:        0 bytes
  6166 ;; Hardware stack levels used: 1
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_LIN_timerHandler
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174     05D4                     i1_LIN_stopTimer:	
  6175                           ;psect for function i1_LIN_stopTimer
  6176                           
  6177     05D4                     i1l1887:	
  6178                           ;incstack = 0
  6179                           ; Regs used in i1_LIN_stopTimer: [status,2]
  6180                           
  6181                           
  6182                           ;mcc_generated_files/LINDrivers/lin_slave.c: 349:   __nop();
  6183     05D4  0000               	nop
  6184     05D5                     i1l1889:
  6185                           
  6186                           ;mcc_generated_files/LINDrivers/lin_slave.c: 351:   CountCallBack = 0;
  6187     05D5  0020               	movlb	0	; select bank0
  6188     05D6  01D2               	clrf	_CountCallBack	;volatile
  6189                           
  6190                           ;mcc_generated_files/LINDrivers/lin_slave.c: 352:   LIN_timerRunning = 0;
  6191     05D7  01D3               	clrf	_LIN_timerRunning
  6192     05D8                     i1l232:
  6193     05D8  0008               	return
  6194     05D9                     __end_ofi1_LIN_stopTimer:
  6195                           
  6196                           	psect	text41
  6197     0462                     __ptext41:	
  6198 ;; *************** function _EUSART_Transmit_ISR *****************
  6199 ;; Defined at:
  6200 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;		None
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;		None
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6214 ;;      Params:         0       0       0       0       0       0       0       0
  6215 ;;      Locals:         0       0       0       0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0
  6217 ;;      Totals:         0       0       0       0       0       0       0       0
  6218 ;;Total ram usage:        0 bytes
  6219 ;; Hardware stack levels used: 1
  6220 ;; This function calls:
  6221 ;;		Nothing
  6222 ;; This function is called by:
  6223 ;;		_EUSART_Initialize
  6224 ;;		_INTERRUPT_InterruptManager
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228     0462                     _EUSART_Transmit_ISR:	
  6229                           ;psect for function _EUSART_Transmit_ISR
  6230                           
  6231     0462                     i1l2121:	
  6232                           ;incstack = 0
  6233                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6234                           
  6235                           
  6236                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6237     0462  3008               	movlw	8
  6238     0463  0020               	movlb	0	; select bank0
  6239     0464  024D               	subwf	_eusartTxBufferRemaining,w	;volatile
  6240     0465  1803               	skipnc
  6241     0466  2C68               	goto	u150_21
  6242     0467  2C69               	goto	u150_20
  6243     0468                     u150_21:
  6244     0468  2C7D               	goto	i1l378
  6245     0469                     u150_20:
  6246     0469                     i1l2123:
  6247                           
  6248                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6249     0469  084E               	movf	_eusartTxTail,w
  6250     046A  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6251     046B  0086               	movwf	6
  6252     046C  0187               	clrf	7
  6253     046D  0801               	movf	1,w
  6254     046E  0023               	movlb	3	; select bank3
  6255     046F  009A               	movwf	26	;volatile
  6256     0470                     i1l2125:
  6257     0470  3001               	movlw	1
  6258     0471  0020               	movlb	0	; select bank0
  6259     0472  07CE               	addwf	_eusartTxTail,f	;volatile
  6260     0473                     i1l2127:
  6261                           
  6262                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6263     0473  3008               	movlw	8
  6264     0474  024E               	subwf	_eusartTxTail,w	;volatile
  6265     0475  1C03               	skipc
  6266     0476  2C78               	goto	u151_21
  6267     0477  2C79               	goto	u151_20
  6268     0478                     u151_21:
  6269     0478  2C7A               	goto	i1l2131
  6270     0479                     u151_20:
  6271     0479                     i1l2129:
  6272                           
  6273                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6274     0479  01CE               	clrf	_eusartTxTail	;volatile
  6275     047A                     i1l2131:
  6276                           
  6277                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6278     047A  3001               	movlw	1
  6279     047B  07CD               	addwf	_eusartTxBufferRemaining,f	;volatile
  6280                           
  6281                           ;mcc_generated_files/eusart.c: 209:     }
  6282     047C  2C7F               	goto	i1l381
  6283     047D                     i1l378:	
  6284                           ;mcc_generated_files/eusart.c: 210:     else
  6285                           
  6286                           
  6287                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  6288     047D  0021               	movlb	1	; select bank1
  6289     047E  1211               	bcf	17,4	;volatile
  6290     047F                     i1l381:
  6291     047F  0008               	return
  6292     0480                     __end_of_EUSART_Transmit_ISR:
  6293                           
  6294                           	psect	text42
  6295     033F                     __ptext42:	
  6296 ;; *************** function _EUSART_Receive_ISR *****************
  6297 ;; Defined at:
  6298 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;		None
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      void 
  6305 ;; Registers used:
  6306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6312 ;;      Params:         0       0       0       0       0       0       0       0
  6313 ;;      Locals:         0       0       0       0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0
  6315 ;;      Totals:         0       0       0       0       0       0       0       0
  6316 ;;Total ram usage:        0 bytes
  6317 ;; Hardware stack levels used: 1
  6318 ;; Hardware stack levels required when called: 2
  6319 ;; This function calls:
  6320 ;;		NULL
  6321 ;;		_EUSART_DefaultErrorHandler
  6322 ;;		_EUSART_DefaultFramingErrorHandler
  6323 ;;		_EUSART_DefaultOverrunErrorHandler
  6324 ;;		_EUSART_RxDataHandler
  6325 ;; This function is called by:
  6326 ;;		_EUSART_Initialize
  6327 ;;		_INTERRUPT_InterruptManager
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331     033F                     _EUSART_Receive_ISR:	
  6332                           ;psect for function _EUSART_Receive_ISR
  6333                           
  6334     033F                     i1l2133:	
  6335                           ;incstack = 0
  6336                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6337                           
  6338                           
  6339                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  6340     033F  0020               	movlb	0	; select bank0
  6341     0340  084C               	movf	_eusartRxHead,w	;volatile
  6342     0341  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6343     0342  0086               	movwf	6
  6344     0343  0187               	clrf	7
  6345     0344  0181               	clrf	1
  6346     0345                     i1l2135:
  6347                           
  6348                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  6349     0345  0023               	movlb	3	; select bank3
  6350     0346  1D1D               	btfss	29,2	;volatile
  6351     0347  2B49               	goto	u152_21
  6352     0348  2B4A               	goto	u152_20
  6353     0349                     u152_21:
  6354     0349  2B55               	goto	i1l2141
  6355     034A                     u152_20:
  6356     034A                     i1l2137:
  6357                           
  6358                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6359     034A  0020               	movlb	0	; select bank0
  6360     034B  084C               	movf	_eusartRxHead,w	;volatile
  6361     034C  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6362     034D  0086               	movwf	6
  6363     034E  0187               	clrf	7
  6364     034F  1481               	bsf	1,1
  6365     0350                     i1l2139:
  6366                           
  6367                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  6368     0350  083F               	movf	_EUSART_FramingErrorHandler+1,w
  6369     0351  008A               	movwf	10
  6370     0352  083E               	movf	_EUSART_FramingErrorHandler,w
  6371     0353  000A               	callw
  6372     0354  3183               	pagesel	$
  6373     0355                     i1l2141:
  6374                           
  6375                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  6376     0355  0023               	movlb	3	; select bank3
  6377     0356  1C9D               	btfss	29,1	;volatile
  6378     0357  2B59               	goto	u153_21
  6379     0358  2B5A               	goto	u153_20
  6380     0359                     u153_21:
  6381     0359  2B65               	goto	i1l2147
  6382     035A                     u153_20:
  6383     035A                     i1l2143:
  6384                           
  6385                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6386     035A  0020               	movlb	0	; select bank0
  6387     035B  084C               	movf	_eusartRxHead,w	;volatile
  6388     035C  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6389     035D  0086               	movwf	6
  6390     035E  0187               	clrf	7
  6391     035F  1501               	bsf	1,2
  6392     0360                     i1l2145:
  6393                           
  6394                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  6395     0360  083D               	movf	_EUSART_OverrunErrorHandler+1,w
  6396     0361  008A               	movwf	10
  6397     0362  083C               	movf	_EUSART_OverrunErrorHandler,w
  6398     0363  000A               	callw
  6399     0364  3183               	pagesel	$
  6400     0365                     i1l2147:
  6401                           
  6402                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  6403     0365  0020               	movlb	0	; select bank0
  6404     0366  084C               	movf	_eusartRxHead,w	;volatile
  6405     0367  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6406     0368  0086               	movwf	6
  6407     0369  0187               	clrf	7
  6408     036A  0801               	movf	1,w
  6409     036B  1903               	btfsc	3,2
  6410     036C  2B6E               	goto	u154_21
  6411     036D  2B6F               	goto	u154_20
  6412     036E                     u154_21:
  6413     036E  2B75               	goto	i1l2151
  6414     036F                     u154_20:
  6415     036F                     i1l2149:
  6416                           
  6417                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  6418     036F  083B               	movf	_EUSART_ErrorHandler+1,w
  6419     0370  008A               	movwf	10
  6420     0371  083A               	movf	_EUSART_ErrorHandler,w
  6421     0372  000A               	callw
  6422     0373  3183               	pagesel	$
  6423                           
  6424                           ;mcc_generated_files/eusart.c: 233:     } else {
  6425     0374  2B78               	goto	i1l388
  6426     0375                     i1l2151:
  6427                           
  6428                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  6429     0375  3184  24F6  3183   	fcall	_EUSART_RxDataHandler
  6430     0378                     i1l388:
  6431     0378  0008               	return
  6432     0379                     __end_of_EUSART_Receive_ISR:
  6433                           
  6434                           	psect	text43
  6435     05DD                     __ptext43:	
  6436 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6437 ;; Defined at:
  6438 ;;		line 252 in file "mcc_generated_files/eusart.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		None
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6452 ;;      Params:         0       0       0       0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0
  6455 ;;      Totals:         0       0       0       0       0       0       0       0
  6456 ;;Total ram usage:        0 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_EUSART_Initialize
  6462 ;;		_EUSART_Receive_ISR
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466     05DD                     _EUSART_DefaultOverrunErrorHandler:	
  6467                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6468                           
  6469     05DD                     i1l2017:	
  6470                           ;incstack = 0
  6471                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6472                           
  6473                           
  6474                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  6475     05DD  0023               	movlb	3	; select bank3
  6476     05DE  121D               	bcf	29,4	;volatile
  6477                           
  6478                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  6479     05DF  161D               	bsf	29,4	;volatile
  6480     05E0                     i1l398:
  6481     05E0  0008               	return
  6482     05E1                     __end_of_EUSART_DefaultOverrunErrorHandler:
  6483                           
  6484                           	psect	text44
  6485     05E7                     __ptext44:	
  6486 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6487 ;; Defined at:
  6488 ;;		line 250 in file "mcc_generated_files/eusart.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1    wreg      void 
  6495 ;; Registers used:
  6496 ;;		None
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6502 ;;      Params:         0       0       0       0       0       0       0       0
  6503 ;;      Locals:         0       0       0       0       0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0       0       0       0
  6505 ;;      Totals:         0       0       0       0       0       0       0       0
  6506 ;;Total ram usage:        0 bytes
  6507 ;; Hardware stack levels used: 1
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_EUSART_Initialize
  6512 ;;		_EUSART_Receive_ISR
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516     05E7                     _EUSART_DefaultFramingErrorHandler:	
  6517                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6518                           
  6519     05E7                     i1l395:	
  6520                           ;incstack = 0
  6521                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6522                           
  6523     05E7  0008               	return
  6524     05E8                     __end_of_EUSART_DefaultFramingErrorHandler:
  6525                           
  6526                           	psect	text45
  6527     05E1                     __ptext45:	
  6528 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6529 ;; Defined at:
  6530 ;;		line 260 in file "mcc_generated_files/eusart.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6544 ;;      Params:         0       0       0       0       0       0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0
  6547 ;;      Totals:         0       0       0       0       0       0       0       0
  6548 ;;Total ram usage:        0 bytes
  6549 ;; Hardware stack levels used: 1
  6550 ;; Hardware stack levels required when called: 1
  6551 ;; This function calls:
  6552 ;;		_EUSART_RxDataHandler
  6553 ;; This function is called by:
  6554 ;;		_EUSART_Initialize
  6555 ;;		_EUSART_Receive_ISR
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559     05E1                     _EUSART_DefaultErrorHandler:	
  6560                           ;psect for function _EUSART_DefaultErrorHandler
  6561                           
  6562     05E1                     i1l2019:	
  6563                           ;incstack = 0
  6564                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6565                           
  6566                           
  6567                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  6568     05E1  3184  24F6  3185   	fcall	_EUSART_RxDataHandler
  6569     05E4                     i1l401:
  6570     05E4  0008               	return
  6571     05E5                     __end_of_EUSART_DefaultErrorHandler:
  6572                           
  6573                           	psect	text46
  6574     04F6                     __ptext46:	
  6575 ;; *************** function _EUSART_RxDataHandler *****************
  6576 ;; Defined at:
  6577 ;;		line 240 in file "mcc_generated_files/eusart.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;		None
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6591 ;;      Params:         0       0       0       0       0       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0
  6594 ;;      Totals:         0       0       0       0       0       0       0       0
  6595 ;;Total ram usage:        0 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		_EUSART_Receive_ISR
  6601 ;;		_EUSART_DefaultErrorHandler
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605     04F6                     _EUSART_RxDataHandler:	
  6606                           ;psect for function _EUSART_RxDataHandler
  6607                           
  6608     04F6                     i1l1877:	
  6609                           ;incstack = 0
  6610                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6611                           
  6612                           
  6613                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  6614     04F6  0020               	movlb	0	; select bank0
  6615     04F7  084C               	movf	_eusartRxHead,w
  6616     04F8  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6617     04F9  0086               	movwf	6
  6618     04FA  0187               	clrf	7
  6619     04FB  0023               	movlb	3	; select bank3
  6620     04FC  0819               	movf	25,w	;volatile
  6621     04FD  0081               	movwf	1
  6622     04FE                     i1l1879:
  6623     04FE  3001               	movlw	1
  6624     04FF  0020               	movlb	0	; select bank0
  6625     0500  07CC               	addwf	_eusartRxHead,f	;volatile
  6626     0501                     i1l1881:
  6627                           
  6628                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6629     0501  3008               	movlw	8
  6630     0502  024C               	subwf	_eusartRxHead,w	;volatile
  6631     0503  1C03               	skipc
  6632     0504  2D06               	goto	u121_21
  6633     0505  2D07               	goto	u121_20
  6634     0506                     u121_21:
  6635     0506  2D08               	goto	i1l1885
  6636     0507                     u121_20:
  6637     0507                     i1l1883:
  6638                           
  6639                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  6640     0507  01CC               	clrf	_eusartRxHead	;volatile
  6641     0508                     i1l1885:
  6642                           
  6643                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  6644     0508  3001               	movlw	1
  6645     0509  07CA               	addwf	_eusartRxCount,f	;volatile
  6646     050A                     i1l392:
  6647     050A  0008               	return
  6648     050B                     __end_of_EUSART_RxDataHandler:
  6649     0002                     ___latbits      equ	2
  6650     007E                     btemp           set	126	;btemp
  6651     007E                     int$flags       set	126
  6652     007E                     wtemp0          set	126
  6653                           
  6654                           	psect	config
  6655                           
  6656                           ;Config register CONFIG1 @ 0x8007
  6657                           ;	Oscillator Selection
  6658                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6659                           ;	Watchdog Timer Enable
  6660                           ;	WDTE = OFF, WDT disabled
  6661                           ;	Power-up Timer Enable
  6662                           ;	PWRTE = OFF, PWRT disabled
  6663                           ;	MCLR Pin Function Select
  6664                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6665                           ;	Flash Program Memory Code Protection
  6666                           ;	CP = OFF, Program memory code protection is disabled
  6667                           ;	Data Memory Code Protection
  6668                           ;	CPD = OFF, Data memory code protection is disabled
  6669                           ;	Brown-out Reset Enable
  6670                           ;	BOREN = ON, Brown-out Reset enabled
  6671                           ;	Clock Out Enable
  6672                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6673                           ;	Internal/External Switchover
  6674                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6675                           ;	Fail-Safe Clock Monitor Enable
  6676                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6677     8007                     	org	32775
  6678     8007  3FE4               	dw	16356
  6679                           
  6680                           ;Config register CONFIG2 @ 0x8008
  6681                           ;	Flash Memory Self-Write Protection
  6682                           ;	WRT = OFF, Write protection off
  6683                           ;	Voltage Regulator Capacitor Enable
  6684                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  6685                           ;	PLL Enable
  6686                           ;	PLLEN = ON, 4x PLL enabled
  6687                           ;	Stack Overflow/Underflow Reset Enable
  6688                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6689                           ;	Brown-out Reset Voltage Selection
  6690                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6691                           ;	Low-Voltage Programming Enable
  6692                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6693     8008                     	org	32776
  6694     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    5
    Data        1
    BSS         75
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      77
    BANK1            80      5      13
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    LIN_getChecksum@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    LIN_getFromTable@rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_getFromTable@rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK0[8]), 

    LIN_init@command	const PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), NULL(), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_queuePacket@tempSchedule$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_sendPacket@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@d1	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memset@dest	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memset@p	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    S26$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    scheduleTable$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    sp__memcpy	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    sp__memset	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Slave_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_queuePacket->_LIN_sendPacket
    _LIN_sendPacket->_LIN_getChecksum
    _LIN_checkPID->_LIN_getFromTable
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _LIN_handler->_processLIN

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LIN_handler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3045
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     238
                  _EUSART_Initialize
               _LIN_Slave_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Slave_Initialize                                 0     0      0      99
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             5     1      4      99
                                              2 COMMON     5     1      4
                       _LIN_enableRx
                _LIN_setTimerHandler
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      24
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          5     5      0    2807
                                              0 BANK1      5     5      0
                                NULL *
                    _AutoBaud_Detect
                  _EUSART_Initialize
                        _EUSART_Read
                 _EUSART_is_rx_ready
                       _LIN_checkPID
                      _LIN_disableRx
                       _LIN_enableRx
                    _LIN_getChecksum
                   _LIN_getFromTable
                    _LIN_queuePacket
                     _LIN_startTimer
                      _LIN_stopTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                           9     9      0     504
                                              0 BANK0      9     9      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        2     1      1     319
                                              9 COMMON     2     1      1
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     1      6     102
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       1     1      0      58
                                              1 COMMON     1     1      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LIN_queuePacket                                      5     5      0     991
                                              0 BANK0      5     5      0
                    _LIN_getChecksum
                     _LIN_sendPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               9     3      6     149
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) _LIN_sendPacket                                       5     2      3     426
                                              9 COMMON     5     2      3
                       _EUSART_Write
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (4) _LIN_getChecksum                                      9     6      3     196
                                              0 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      58
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_checkPID                                         1     1      0     624
                                              7 COMMON     1     1      0
                     _LIN_calcParity
                   _LIN_getFromTable
 ---------------------------------------------------------------------------------
 (2) _LIN_getFromTable                                     7     6      1     192
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (3) _LIN_calcParity                                       3     3      0     345
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     115
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AutoBaud_Detect                                      1     1      0       1
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                                NULL *
                   _LIN_timerHandler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     0     0      0       0
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_handler
     NULL(Fake) *
     _AutoBaud_Detect *
     _EUSART_Initialize *
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EUSART_Read *
     _EUSART_is_rx_ready *
     _LIN_checkPID *
       _LIN_calcParity
       _LIN_getFromTable
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_getChecksum *
     _LIN_getFromTable *
     _LIN_queuePacket *
       _LIN_getChecksum
       _LIN_sendPacket
         _EUSART_Write
         _LIN_getChecksum
       _memcpy
     _LIN_startTimer *
       _TMR0_WriteTimer
     _LIN_stopTimer *
     _memset *
     _processLIN *
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _EUSART_Initialize
     _LIN_Slave_Initialize
       _LIN_init
         _LIN_enableRx
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _LIN_timerHandler *
       i1_LIN_stopTimer
     _TMR0_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      9      77     96.2%
BANK1               80      5      13     16.2%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      99      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jul 15 10:56:01 2025

                ?_EUSART_SetRxInterruptHandler 0070                          __end_of_LIN_getPacket 03D5  
                        ??_LIN_setTimerHandler 0072                          __end_of_LIN_disableRx 05D4  
                                           l21 02C7                                             l30 02D4  
                                           l23 02CC                                             l15 054E  
                                           l24 02CA                                             l41 02EA  
                                           l33 02DB                                             l42 02E8  
                                           l51 02F9                                             l35 02E0  
                                           l27 02D1                                             l19 02C3  
                                           l36 02DE                                             l45 02EF  
                                           l29 02D6                                             l54 02FC  
                                           l47 02F4                                             l39 02E5  
                                           l48 02F2                                             l58 0304  
                              _timer0ReloadVal 0048                                ?_LIN_calcParity 0070  
                                          l212 01FA                                            l140 025C  
                                          l133 04E0                                            l222 055B  
                                          l144 04E6                                            l208 04B3  
                                          l232 05C4                                            l160 0078  
                                          l410 05BA                                            l218 03A7  
                                          l147 04F5                                            l235 05CE  
                                          l219 03AA                                            l404 05B4  
                                          l172 0118                                            l180 0174  
                                          l413 05A2                                            l229 0590  
                                          l238 05D3                                            l190 03D4  
                                          l510 0531                                            l407 05AE  
                                          l175 0123                                            l416 05A8  
                                          l353 0588                                            l513 056F  
                                          l273 0499                                            l433 051E  
                                          l186 0441                                            l178 014A  
                                          l347 033E                                            l371 03DC  
                                          l372 03E5                                            l516 0574  
                                          l366 041E                                            l198 02BA  
                                          l375 03FA                                            l439 05C9  
                                          l519 05DC                                            l449 059C  
                                          u570 0574                                            u571 0573  
                                          u900 03B4                                            u901 03B3  
                                          u910 0434                                            u830 0461  
                                          u911 0433                                            u831 0460  
                                          u920 0271                                            u840 039B  
                                          u921 0270                                            u841 039A  
                                          u930 0284                                            u850 03A7  
                                          u931 0283                                            u851 03A6  
                                          u940 028E                                            u860 04CA  
                                          u941 028D                                            u861 04C9  
                                          u950 017D                                            u870 03DC  
                                          u951 017B                                            u871 03DB  
                                          u960 0184                                            u952 017E  
                                          u880 03E1                                            u961 0182  
                                          u881 03E0                                            u970 018B  
                                          u962 0185                                            u890 03F5  
                                          u971 0189                                            u891 03F4  
                                          u990 0191                                            u991 018F  
                                          u992 0192                                            u984 018C  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0070  
                     __end_of_LIN_getFromTable 02BB                                            wreg 0009  
                        __end_of_scheduleTable 05C0                                   ?_EUSART_Read 0070  
                                         l2001 04A8                                           l2003 04B2  
                                         l2011 05CF                                           l2021 050B  
                                         l2031 0517                                           l2023 0510  
                                         l2025 0513                                           l1146 0455  
                                         l1155 04CA                                           l2027 0515  
                                         l1149 0461                                           l2301 006A  
                                         l2029 0516                                           l2311 0082  
                                         l2303 006D                                           l2321 009F  
                                         l2313 0085                                           l2305 0072  
                                         l2161 051F                                           l2331 00BB  
                                         l2323 00A8                                           l2315 008D  
                                         l2307 007B                                           l2163 0528  
                                         l2341 00F7                                           l2333 00BF  
                                         l2325 00AD                                           l2317 0092  
                                         l2309 007F                                           l1461 0488  
                                         l2165 052B                                           l2271 0205  
                                         l2351 0120                                           l2343 00FA  
                                         l2335 00C7                                           l2327 00B5  
                                         l2319 009B                                           l1463 048A  
                                         l2167 052E                                           l1721 05CA  
                                         l1801 0422                                           l2281 021C  
                                         l2265 01FD                                           l2361 0131  
                                         l2353 0129                                           l2345 0102  
                                         l2337 00DE                                           l2329 00B8  
                                         l1465 048C                                           l1457 0480  
                                         l1811 0263                                           l1803 042C  
                                         l1731 044E                                           l2283 022E  
                                         l2275 0210                                           l2267 0201  
                                         l2363 013F                                           l2355 012C  
                                         l2339 00F5                                           l2291 0058  
                                         l2371 014E                                           l1715 0597  
                                         l1723 0589                                           l1467 0490  
                                         l1459 0485                                           l1491 05D9  
                                         l1821 0284                                           l1813 0265  
                                         l1741 0392                                           l1733 037A  
                                         l1805 042E                                           l1725 0442  
                                         l2285 0245                                           l2277 0214  
                                         l2269 0203                                           l1717 05C0  
                                         l2365 0144                                           l2357 012E  
                                         l2349 011B                                           l2293 005D  
                                         l1469 0495                                           l2381 0578  
                                         l1815 0267                                           l1743 039B  
                                         l1735 0381                                           l1807 0434  
                                         l1727 0447                                           l2287 0252  
                                         l2279 0216                                           l1719 05C1  
                                         l2367 0147                                           l2359 012F  
                                         l2295 0060                                           l1487 0569  
                                         l2383 0579                                           l1833 0295  
                                         l1825 0286                                           l1809 025E  
                                         l1761 03D6                                           l1745 039F  
                                         l1737 0383                                           l1729 044C  
                                         l1753 04B4                                           l2457 0157  
                                         l2297 0064                                           l2289 0052  
                                         l1489 056C                                           l2385 057A  
                                         l1931 04F4                                           l1923 04E1  
                                         l2459 02AF                                           l1843 02A7  
                                         l1819 0272                                           l1827 0288  
                                         l1771 03EF                                           l1763 03D6  
                                         l1739 038E                                           l1747 03A1  
                                         l1755 04B7                                           l2299 0067  
                                         l2379 0575                                           l1941 0305  
                                         l1861 01F9                                           l1837 029E  
                                         l1829 028F                                           l1773 03F5  
                                         l1765 03E1                                           l1749 03A9  
                                         l1933 0550                                           l1757 04BC  
                                         l1781 04D7                                           l1927 04EC  
                                         l1871 05AF                                           l1951 031C  
                                         l1943 0307                                           l1775 03F6  
                                         l1767 03E6                                           l1935 0553  
                                         l1759 04BE                                           l1791 03B4  
                                         l1783 04DA                                           l1929 04F2  
                                         l1873 05A9                                           l1961 0339  
                                         l1953 0333                                           l1945 030E  
                                         l1857 0176                                           l1769 03ED  
                                         l1777 03F8                                           l1865 05C6  
                                         l1937 0557                                           l1793 03B7  
                                         l1785 04DD                                           l1875 05B5  
                                         l1867 05A3                                           l1963 033A  
                                         l1955 0335                                           l1947 0317  
                                         l1859 01F0                                           l1939 0558  
                                         l1795 03D3                                           l1787 03AB  
                                         l1779 04CC                                           l1891 0542  
                                         l1869 059D                                           l1965 033B  
                                         l1957 0336                                           l1949 031A  
                                         l1981 040F                                           l1973 03FB  
                                         l1789 03AF                                           l1893 02BB  
                                         l1967 033C                                           l1959 0337  
                                         l1991 041D                                           l1983 0415  
                                         l1975 03FB                                           l1799 0420  
                                         l1985 0416                                           l1977 0401  
                                         l1969 0580                                           l1897 02FF  
                                         l1987 0418                                           l1979 040D  
                                         l1995 049B                                           l1989 041B  
                                         l1997 04A6                                           u1000 0198  
                                         u1001 0196                                           u1010 019F  
                                         u1002 0199                                           u1011 019D  
                                         u1110 01CD                                           u1030 01A5  
                                         u1111 01CB                                           u1031 01A3  
                                         u1120 01D4                                           u1112 01CE  
                                         u1104 01C8                                           u1040 01AC  
                                         u1032 01A6                                           u1024 01A0  
                                         u1121 01D2                                           u1041 01AA  
                                         u1130 01DB                                           u1122 01D5  
                                         u1050 01B3                                           u1042 01AD  
                                         u1131 01D9                                           u1051 01B1  
                                         u1300 04EB                                           u1204 01F9  
                                         u1220 02C7                                           u1301 04EA  
                                         u1221 02C6                                           u1310 04F2  
                                         u1150 01E1                                           u1070 01B9  
                                         u1230 02D1                                           u1311 04F1  
                                         u1151 01DF                                           u1071 01B7  
                                         u1231 02D0                                           u1320 0587  
                                         u1160 01E8                                           u1152 01E2  
                                         u1144 01DC                                           u1080 01C0  
                                         u1072 01BA                                           u1064 01B4  
                                         u1240 02DB                                           u1321 0585  
                                         u1161 01E6                                           u1081 01BE  
                                         u1241 02DA                                           u1330 0588  
                                         u1170 01EF                                           u1162 01E9  
                                         u1090 01C7                                           u1082 01C1  
                                         u1250 02E5                                           u1171 01ED  
                                         u1091 01C5                                           u1251 02E4  
                                         u1340 0401                                           u1260 02EF  
                                         u1341 0400                                           u1261 02EE  
                                         _LATA 010C                                           u1350 0415  
                                         u1190 01F8                                           u1270 02F9  
                                         _LATB 010D                                           u1351 0414  
                                         u1191 01F6                                           u1271 02F8  
                                         _LATC 010E                                           u1184 01F0  
                                         u1360 04A6                                           u1361 04A5  
                                         _LATE 0110                                           u1370 04B2  
                                         u1371 04B1                                           u1700 009B  
                                         u1701 009A                                           u1710 00AD  
                                         u1711 00AC                                           u1640 020F  
                                         u1720 00C7                                           u1641 020E  
                                         u1721 00C6                                           u1650 021C  
                                         u1730 00F5                                           u1651 021B  
                                         u1731 00F4                                           u1740 0102  
                                         u1660 0058                                           u1741 0101  
                                         u1661 0057                                           u1750 0117  
                                         u1670 005D                                           u1751 0116  
                                         u1735 00F1                                           u1671 005C  
                                         u1760 0144                                           u1680 0072  
                                         u1761 0143                                           u1681 0071  
                                         u1690 008D                                           u1691 008C  
                                         _PLLR 04D6                                           _TMR0 0015  
                                         _WPUB 020D                                           _WPUE 0210  
                               _LIN_sendPacket 041F                                           _main 0575  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0038  
                                processLIN@cmd 006B                        __end_of_TMR0_Initialize 051F  
               ??_TMR0_DefaultInterruptHandler 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0575                              LIN_sendPacket@pid 0079  
                                        ?_main 0070                                LIN_init@command 0072  
                                        i1l232 05D8                                          i1l401 05E4  
                                        i1l226 0568                                          i1l452 05E6  
                                        i1l381 047F                                          i1l446 0541  
                                        i1l392 050A                                          i1l480 0036  
                                        i1l481 0036                                          i1l473 0012  
                                        i1l378 047D                                          i1l395 05E7  
                                        i1l388 0378                                          i1l476 0026  
                              _TMR0_WriteTimer 05C5                                          i1l398 05E0  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        _TXREG 019A                               __end_of_LIN_init 04E1  
                        __end_of_LIN_stopTimer 05C5                                          _TXSTA 019E  
                    ?_TMR0_SetInterruptHandler 0070                               __end_of_TMR0_ISR 0542  
                               _WDT_Initialize 05D9                         __end_of_LIN_sendPacket 0442  
                                        pclath 000A                              ??_AutoBaud_Detect 0070  
                               _LIN_startTimer 054F                                          status 0003  
                                        wtemp0 007E                               ?_LIN_getChecksum 0070  
                  LIN_queuePacket@tempSchedule 0066                                __initialization 003A  
                                 ?_LIN_handler 0070                                   __end_of_main 0580  
                               ??_EUSART_Write 0070                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0072                                         ??_main 007E  
                       __end_of_WDT_Initialize 05DD                             LIN_sendPacket@data 007A  
    __end_of_EUSART_DefaultFramingErrorHandler 05E8            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 05E7  
                   _EUSART_OverrunErrorHandler 003C                         __end_of_LIN_startTimer 055C  
                              ?_LIN_sendPacket 0079                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0589                                         _BORCON 0116  
                                       i1l2013 055C                                         i1l2015 0565  
                                       i1l2017 05DD                                         i1l2121 0462  
                                       i1l2019 05E1                                         i1l2131 047A  
                                       i1l2123 0469                                         i1l2141 0355  
                                       i1l2133 033F                                         i1l2125 0470  
                                       i1l2151 0375                                         i1l2143 035A  
                                       i1l2135 0345                                         i1l2127 0473  
                                       i1l2145 0360                                         i1l2137 034A  
                                       i1l2129 0479                                         i1l2153 0532  
                                       i1l2147 0365                                         i1l2139 0350  
                                       i1l2155 0533                                         i1l2149 036F  
                                       i1l2157 0536                                         i1l2181 0006  
                                       i1l2159 053C                                         i1l2191 0020  
                                       i1l2183 000A                                         u121_20 0507  
                                       u121_21 0506                                         i1l2193 002B  
                                       i1l2185 000E                                         i1l2195 0030  
                                       i1l2187 0016                                         i1l2189 001B  
                                       i1l1881 0501                                         i1l1883 0507  
                                       i1l1885 0508                                         i1l1877 04F6  
                                       i1l1879 04FE                                         i1l1887 05D4  
                                       i1l1889 05D5                                         u150_20 0469  
                                       u150_21 0468                                         u151_20 0479  
                                       u151_21 0478                                         u152_20 034A  
                                       u160_20 001B                                         u152_21 0349  
                                       u160_21 001A                                         u153_20 035A  
                                       u161_20 0020                                         u153_21 0359  
                                       u161_21 001F                                         u154_20 036F  
                                       u138_20 0565                                         u162_20 002B  
                                       u154_21 036E                                         u138_21 0564  
                                       u162_21 002A                                         u155_20 053C  
                                       u163_20 0030                                         u155_21 053B  
                                       u163_21 002F                                         u157_20 000A  
                                       u157_21 0009                                         u158_20 000E  
                                       u158_21 000D                                         u159_20 0016  
                                       u159_21 0015                                         _OSCCON 0099  
                                       _WDTCON 0097                                _LIN_processData 0046  
                              _LIN_queuePacket 01FB                        __end_of_TMR0_WriteTimer 05CA  
                          _EUSART_Transmit_ISR 0462                                         _memcpy 0442  
                             ?_TMR0_Initialize 0070                                         _memset 04B4  
                              ?_WDT_Initialize 0070                               _LIN_rxInProgress 0055  
     TMR0_SetInterruptHandler@InterruptHandler 0070                                ?_LIN_startTimer 0070  
                         ?_EUSART_Transmit_ISR 0070                              _SYSTEM_Initialize 051F  
                      __end_of__initialization 004E                             ?_SYSTEM_Initialize 0070  
                                ?_LIN_checkPID 0070           __end_of_EUSART_SetTxInterruptHandler 05A3  
                 _EUSART_SetTxInterruptHandler 059D                                      ?_LIN_init 0072  
                               __pcstackCOMMON 0070                                  ?_LIN_enableRx 0070  
                             ??_LIN_calcParity 0070                                LIN_sendPacket@i 007D  
                                 __pidataBANK0 05E5                            ??_SYSTEM_Initialize 0077  
                                    ?_TMR0_ISR 0070                         LIN_handler@rxDataIndex 0050  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 0020  
                            ?_LIN_getFromTable 0070                         LIN_handler@LIN_rxState 0051  
              ??_EUSART_SetOverrunErrorHandler 0072                             ??_LIN_getFromTable 0071  
                    __end_of_SYSTEM_Initialize 0532                          ??_EUSART_Transmit_ISR 0070  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 03FB                                 ??_LIN_checkPID 0077  
                  __end_of_LIN_setTimerHandler 0591                        __end_of_LIN_queuePacket 025D  
                               ??_LIN_enableRx 0070                                     __pmaintext 0575  
                             _LIN_timerHandler 055C                                     ??_LIN_init 0076  
                          LIN_getChecksum@data 0071                  ?_EUSART_SetTxInterruptHandler 0070  
             _EUSART_TxDefaultInterruptHandler 0042               __end_of_TMR0_SetInterruptHandler 059D  
                                   ??_TMR0_ISR 0070                                     __pintentry 0004  
                             ?_TMR0_WriteTimer 0070                                        ?_memcpy 0070  
                                      _BAUDCON 019F                                        ?_memset 0070  
                 ??_EUSART_DefaultErrorHandler 0070                          LIN_getChecksum@length 0075  
                             _LIN_timerRunning 0053                                  _eusartRxCount 004A  
                              _AutoBaud_Detect 04E1                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0072                        LIN_getChecksum@checksum 0077  
                 __end_of_LIN_Slave_Initialize 054F                                  _SW_STATE_Data 00A0  
                                      __ptext1 051F                                        __ptext2 05D9  
                                      __ptext3 050B                                        __ptext4 0480  
                                      __ptext5 0569                                        __ptext6 0542  
                                      __ptext7 04CB                                        __ptext8 0589  
                                      __ptext9 0597                          _OSCILLATOR_Initialize 0569  
                             ??_LIN_sendPacket 007C                       ??_PIN_MANAGER_Initialize 0070  
                                      clrloop0 0592                      LIN_getFromTable@rxCommand 0075  
                         end_of_initialization 004E          __end_of_EUSART_SetOverrunErrorHandler 05AF  
                _EUSART_SetOverrunErrorHandler 05A9                                        memcpy@d 0077  
                                      memcpy@n 0074                                        memcpy@s 0078  
                                      memset@c 0072                                        memset@n 0074  
                                      memset@p 0076                              _EUSART_Initialize 0305  
                             ?_LIN_queuePacket 0070                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                              ??i1_LIN_stopTimer 0070  
                           _EUSART_is_rx_ready 0580                                  _LIN_getPacket 03AB  
                      __end_of_AutoBaud_Detect 04F6                                  _LIN_disableRx 05CF  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
               ??_EUSART_SetTxInterruptHandler 0072                              LIN_getPacket@data 0079  
                     _TMR0_SetInterruptHandler 0597                            ?_EUSART_is_rx_ready 0070  
                                   _processLIN 02BB                           __end_of_LIN_checkPID 04B4  
                          LIN_init@tableLength 0076                               ??_LIN_startTimer 0071  
                         __end_of_LIN_enableRx 05CF                                  _scheduleTable 05BB  
                    __end_of_EUSART_Initialize 033F                           ??_EUSART_is_rx_ready 0070  
                                    _TXSTAbits 019E                                  _LIN_rxCommand 0044  
                               ?_LIN_getPacket 0079                                 ?_LIN_disableRx 0070  
           __end_of_EUSART_DefaultErrorHandler 05E5                     _EUSART_DefaultErrorHandler 05E1  
                                  _BAUDCONbits 019F                                   _EUSART_Write 03D5  
                               __end_of_memcpy 0462                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_memset 04CB                            start_initialization 003A  
                                _LIN_stopTimer 05C0                       __end_of_LIN_timerHandler 0569  
                         _LIN_Slave_Initialize 0542                                  ??_EUSART_Read 0070  
 EUSART_SetRxInterruptHandler@interruptHandler 0070   EUSART_SetTxInterruptHandler@interruptHandler 0070  
                        LIN_startTimer@timeout 0071                              LIN_calcParity@CMD 0071  
               ?_EUSART_SetOverrunErrorHandler 0070                              LIN_calcParity@PID 0072  
                   _EUSART_FramingErrorHandler 003E                         _EUSART_SetErrorHandler 05B5  
                             ?_AutoBaud_Detect 0070                                    __pdataBANK0 006C  
                                     ??_memcpy 0076                                       ??_memset 0076  
                         processLIN@tempRxData 0063                                     memset@dest 0070  
                                  ?_processLIN 0070                            LIN_init@processData 0074  
                  __end_of_EUSART_Transmit_ISR 0480                                 ?_LIN_stopTimer 0070  
                                    ___latbits 0002                                  __pcstackBANK0 0063  
                                __pcstackBANK1 00A8                              ??_LIN_getChecksum 0073  
                        ?_LIN_Slave_Initialize 0070                     __end_of_EUSART_Receive_ISR 0379  
             _EUSART_RxDefaultInterruptHandler 0040                            __end_of_EUSART_Read 041F  
                        _TMR0_InterruptHandler 0038                   __end_of_EUSART_RxDataHandler 050B  
                              ??_LIN_getPacket 007A                         _PIN_MANAGER_Initialize 0480  
                                ??_LIN_handler 00A8                               LIN_getChecksum@i 0076  
                              ??_LIN_disableRx 0070                           EUSART_Read@readValue 0070  
                           LIN_getChecksum@pid 0070                           LIN_sendPacket@length 007C  
                                 _eusartRxHead 004C                                   _eusartTxHead 004F  
                                 _eusartRxTail 004B                                   _eusartTxTail 004E  
                 ??_INTERRUPT_InterruptManager 0070                        _eusartTxBufferRemaining 004D  
                              LIN_checkPID@pid 0077                                i1_LIN_stopTimer 05D4  
                               _eusartRxBuffer 0028                              ??_TMR0_Initialize 0072  
                               _eusartTxBuffer 0030         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 0591  
                                     _PIE1bits 0091                              _eusartRxLastError 0049  
                                 _LIN_checkPID 049A                     ??_TMR0_SetInterruptHandler 0072  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
                                     _LIN_init 04CB                                   _LIN_enableRx 05CA  
                                     _TMR0_ISR 0532      __end_of_EUSART_DefaultOverrunErrorHandler 05E1  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 05DD                               LIN_getPacket@cmd 007A  
                          __end_of_LIN_handler 0175                                ??_LIN_stopTimer 0070  
                       ??_LIN_Slave_Initialize 0077                                    _EUSART_Read 03FB  
                             _LIN_getFromTable 025D                                      memcpy@tmp 0076  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 003A  
                  ?_EUSART_DefaultErrorHandler 0070                        __end_ofi1_LIN_stopTimer 05D9  
                         _EUSART_RxDataHandler 04F6                                       __ptext10 0052  
                                     __ptext11 02BB                                       __ptext20 0379  
                                     __ptext12 03AB                                       __ptext21 03D5  
                                     __ptext13 04B4                                       __ptext30 059D  
                                     __ptext22 05CA                                       __ptext14 05C0  
                                     __ptext31 05A3                                       __ptext23 05CF  
                                     __ptext15 054F                                       __ptext40 05D4  
                                     __ptext32 05A9                                       __ptext24 049A  
                                     __ptext16 05C5                                       __ptext41 0462  
                                     __ptext33 05AF                                       __ptext25 025D  
                                     __ptext17 01FB                                       __ptext42 033F  
                                     __ptext34 05B5                                       __ptext26 0175  
                                     __ptext18 0442                                       __ptext43 05DD  
                                     __ptext35 04E1                                       __ptext27 0580  
                                     __ptext19 041F                                       __ptext44 05E7  
                                     __ptext28 03FB                                       __ptext45 05E1  
                                     __ptext37 0532                                       __ptext29 0305  
                                     __ptext46 04F6                                       __ptext38 055C  
                                     __ptext39 05E6                              ?_LIN_timerHandler 0070  
                      TMR0_WriteTimer@timerVal 0070                             ??_LIN_timerHandler 0070  
                            ??_TMR0_WriteTimer 0070                         LIN_getFromTable@length 0074  
         __end_of_TMR0_DefaultInterruptHandler 05E7                   _TMR0_DefaultInterruptHandler 05E6  
                      ?_EUSART_SetErrorHandler 0070                            _LIN_rxCommandLength 0054  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                    _LIN_handler 0052  
                                     int$flags 007E                                _LIN_getChecksum 0379  
           __end_of_INTERRUPT_InterruptManager 0038                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 05B5                  _EUSART_SetFramingErrorHandler 05AF  
                                 ??_processLIN 007B                                    _LIN_timeout 006C  
                               _LIN_calcParity 0175                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                       memcpy@d1 0070  
                                     memcpy@s1 0072                            _LIN_setTimerHandler 0589  
                                     intlevel1 0000                                  _CountCallBack 0052  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 05BB  
                        LIN_getFromTable@param 0070                             __end_of_processLIN 0305  
         __end_of_EUSART_SetRxInterruptHandler 05A9                   _EUSART_SetRxInterruptHandler 05A3  
                ?_TMR0_DefaultInterruptHandler 0070                                     _LIN_packet 0056  
                           _EUSART_Receive_ISR 033F                           ?_LIN_setTimerHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 0070                         __end_of_LIN_calcParity 01FB  
                                __pstringtext1 05BB                             LIN_queuePacket@cmd 0064  
                                   _OPTION_REG 0095                            ?_EUSART_Receive_ISR 0070  
                              _TMR0_Initialize 050B                              ??_LIN_queuePacket 0063  
                             ?i1_LIN_stopTimer 0070                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 049A                            LIN_getFromTable@cmd 0073  
                             LIN_queuePacket@i 0065                           ??_EUSART_Receive_ISR 0070  
                      __end_of_LIN_getChecksum 03AB  
