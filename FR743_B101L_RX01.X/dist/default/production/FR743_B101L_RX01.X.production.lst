

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jul 15 12:01:31 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,space=0,delta=2
    51                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63     0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F1936 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98     0008                     bsr             equ	8
    99     0005                     fsr0h           equ	5
   100     0004                     fsr0l           equ	4
   101     0007                     fsr1h           equ	7
   102     0006                     fsr1l           equ	6
   103     0000                     indf            equ	0
   104     0000                     indf0           equ	0
   105     0001                     indf1           equ	1
   106     000B                     intcon          equ	11
   107     0002                     pc              equ	2
   108     0002                     pcl             equ	2
   109     000A                     pclath          equ	10
   110     0003                     status          equ	3
   111     0009                     wreg            equ	9
   112     0000                     INDF0           equ	0	;# 
   113     0001                     INDF1           equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR0L           equ	4	;# 
   117     0005                     FSR0H           equ	5	;# 
   118     0006                     FSR1L           equ	6	;# 
   119     0007                     FSR1H           equ	7	;# 
   120     0008                     BSR             equ	8	;# 
   121     0009                     WREG            equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PORTA           equ	12	;# 
   125     000D                     PORTB           equ	13	;# 
   126     000E                     PORTC           equ	14	;# 
   127     0010                     PORTE           equ	16	;# 
   128     0011                     PIR1            equ	17	;# 
   129     0012                     PIR2            equ	18	;# 
   130     0013                     PIR3            equ	19	;# 
   131     0015                     TMR0            equ	21	;# 
   132     0016                     TMR1            equ	22	;# 
   133     0016                     TMR1L           equ	22	;# 
   134     0017                     TMR1H           equ	23	;# 
   135     0018                     T1CON           equ	24	;# 
   136     0019                     T1GCON          equ	25	;# 
   137     001A                     TMR2            equ	26	;# 
   138     001B                     PR2             equ	27	;# 
   139     001C                     T2CON           equ	28	;# 
   140     001E                     CPSCON0         equ	30	;# 
   141     001F                     CPSCON1         equ	31	;# 
   142     008C                     TRISA           equ	140	;# 
   143     008D                     TRISB           equ	141	;# 
   144     008E                     TRISC           equ	142	;# 
   145     0090                     TRISE           equ	144	;# 
   146     0091                     PIE1            equ	145	;# 
   147     0092                     PIE2            equ	146	;# 
   148     0093                     PIE3            equ	147	;# 
   149     0095                     OPTION_REG      equ	149	;# 
   150     0096                     PCON            equ	150	;# 
   151     0097                     WDTCON          equ	151	;# 
   152     0098                     OSCTUNE         equ	152	;# 
   153     0099                     OSCCON          equ	153	;# 
   154     009A                     OSCSTAT         equ	154	;# 
   155     009B                     ADRES           equ	155	;# 
   156     009B                     ADRESL          equ	155	;# 
   157     009C                     ADRESH          equ	156	;# 
   158     009D                     ADCON0          equ	157	;# 
   159     009E                     ADCON1          equ	158	;# 
   160     010C                     LATA            equ	268	;# 
   161     010D                     LATB            equ	269	;# 
   162     010E                     LATC            equ	270	;# 
   163     0110                     LATE            equ	272	;# 
   164     0111                     CM1CON0         equ	273	;# 
   165     0112                     CM1CON1         equ	274	;# 
   166     0113                     CM2CON0         equ	275	;# 
   167     0114                     CM2CON1         equ	276	;# 
   168     0115                     CMOUT           equ	277	;# 
   169     0116                     BORCON          equ	278	;# 
   170     0117                     FVRCON          equ	279	;# 
   171     0118                     DACCON0         equ	280	;# 
   172     0119                     DACCON1         equ	281	;# 
   173     011A                     SRCON0          equ	282	;# 
   174     011B                     SRCON1          equ	283	;# 
   175     011D                     APFCON          equ	285	;# 
   176     018C                     ANSELA          equ	396	;# 
   177     018D                     ANSELB          equ	397	;# 
   178     0191                     EEADR           equ	401	;# 
   179     0191                     EEADRL          equ	401	;# 
   180     0192                     EEADRH          equ	402	;# 
   181     0193                     EEDAT           equ	403	;# 
   182     0193                     EEDATL          equ	403	;# 
   183     0193                     EEDATA          equ	403	;# 
   184     0194                     EEDATH          equ	404	;# 
   185     0195                     EECON1          equ	405	;# 
   186     0196                     EECON2          equ	406	;# 
   187     0199                     RCREG           equ	409	;# 
   188     019A                     TXREG           equ	410	;# 
   189     019B                     SP1BRG          equ	411	;# 
   190     019B                     SP1BRGL         equ	411	;# 
   191     019B                     SPBRG           equ	411	;# 
   192     019B                     SPBRGL          equ	411	;# 
   193     019C                     SP1BRGH         equ	412	;# 
   194     019C                     SPBRGH          equ	412	;# 
   195     019D                     RCSTA           equ	413	;# 
   196     019E                     TXSTA           equ	414	;# 
   197     019F                     BAUDCON         equ	415	;# 
   198     020D                     WPUB            equ	525	;# 
   199     0210                     WPUE            equ	528	;# 
   200     0211                     SSPBUF          equ	529	;# 
   201     0212                     SSPADD          equ	530	;# 
   202     0213                     SSPMSK          equ	531	;# 
   203     0214                     SSPSTAT         equ	532	;# 
   204     0215                     SSPCON1         equ	533	;# 
   205     0215                     SSPCON          equ	533	;# 
   206     0216                     SSPCON2         equ	534	;# 
   207     0217                     SSPCON3         equ	535	;# 
   208     0291                     CCPR1           equ	657	;# 
   209     0291                     CCPR1L          equ	657	;# 
   210     0292                     CCPR1H          equ	658	;# 
   211     0293                     CCP1CON         equ	659	;# 
   212     0294                     PWM1CON         equ	660	;# 
   213     0295                     CCP1AS          equ	661	;# 
   214     0295                     ECCP1AS         equ	661	;# 
   215     0296                     PSTR1CON        equ	662	;# 
   216     0298                     CCPR2           equ	664	;# 
   217     0298                     CCPR2L          equ	664	;# 
   218     0299                     CCPR2H          equ	665	;# 
   219     029A                     CCP2CON         equ	666	;# 
   220     029B                     PWM2CON         equ	667	;# 
   221     029C                     CCP2AS          equ	668	;# 
   222     029C                     ECCP2AS         equ	668	;# 
   223     029D                     PSTR2CON        equ	669	;# 
   224     029E                     CCPTMRS0        equ	670	;# 
   225     029F                     CCPTMRS1        equ	671	;# 
   226     0311                     CCPR3           equ	785	;# 
   227     0311                     CCPR3L          equ	785	;# 
   228     0312                     CCPR3H          equ	786	;# 
   229     0313                     CCP3CON         equ	787	;# 
   230     0314                     PWM3CON         equ	788	;# 
   231     0315                     CCP3AS          equ	789	;# 
   232     0315                     ECCP3AS         equ	789	;# 
   233     0316                     PSTR3CON        equ	790	;# 
   234     0318                     CCPR4           equ	792	;# 
   235     0318                     CCPR4L          equ	792	;# 
   236     0319                     CCPR4H          equ	793	;# 
   237     031A                     CCP4CON         equ	794	;# 
   238     031C                     CCPR5           equ	796	;# 
   239     031C                     CCPR5L          equ	796	;# 
   240     031D                     CCPR5H          equ	797	;# 
   241     031E                     CCP5CON         equ	798	;# 
   242     0394                     IOCBP           equ	916	;# 
   243     0395                     IOCBN           equ	917	;# 
   244     0396                     IOCBF           equ	918	;# 
   245     0415                     TMR4            equ	1045	;# 
   246     0416                     PR4             equ	1046	;# 
   247     0417                     T4CON           equ	1047	;# 
   248     041C                     TMR6            equ	1052	;# 
   249     041D                     PR6             equ	1053	;# 
   250     041E                     T6CON           equ	1054	;# 
   251     0791                     LCDCON          equ	1937	;# 
   252     0792                     LCDPS           equ	1938	;# 
   253     0793                     LCDREF          equ	1939	;# 
   254     0794                     LCDCST          equ	1940	;# 
   255     0795                     LCDRL           equ	1941	;# 
   256     0798                     LCDSE0          equ	1944	;# 
   257     0799                     LCDSE1          equ	1945	;# 
   258     07A0                     LCDDATA0        equ	1952	;# 
   259     07A1                     LCDDATA1        equ	1953	;# 
   260     07A3                     LCDDATA3        equ	1955	;# 
   261     07A4                     LCDDATA4        equ	1956	;# 
   262     07A6                     LCDDATA6        equ	1958	;# 
   263     07A7                     LCDDATA7        equ	1959	;# 
   264     07A9                     LCDDATA9        equ	1961	;# 
   265     07AA                     LCDDATA10       equ	1962	;# 
   266     0FE4                     STATUS_SHAD     equ	4068	;# 
   267     0FE5                     WREG_SHAD       equ	4069	;# 
   268     0FE6                     BSR_SHAD        equ	4070	;# 
   269     0FE7                     PCLATH_SHAD     equ	4071	;# 
   270     0FE8                     FSR0L_SHAD      equ	4072	;# 
   271     0FE9                     FSR0H_SHAD      equ	4073	;# 
   272     0FEA                     FSR1L_SHAD      equ	4074	;# 
   273     0FEB                     FSR1H_SHAD      equ	4075	;# 
   274     0FED                     STKPTR          equ	4077	;# 
   275     0FEE                     TOSL            equ	4078	;# 
   276     0FEF                     TOSH            equ	4079	;# 
   277     0000                     INDF0           equ	0	;# 
   278     0001                     INDF1           equ	1	;# 
   279     0002                     PCL             equ	2	;# 
   280     0003                     STATUS          equ	3	;# 
   281     0004                     FSR0L           equ	4	;# 
   282     0005                     FSR0H           equ	5	;# 
   283     0006                     FSR1L           equ	6	;# 
   284     0007                     FSR1H           equ	7	;# 
   285     0008                     BSR             equ	8	;# 
   286     0009                     WREG            equ	9	;# 
   287     000A                     PCLATH          equ	10	;# 
   288     000B                     INTCON          equ	11	;# 
   289     000C                     PORTA           equ	12	;# 
   290     000D                     PORTB           equ	13	;# 
   291     000E                     PORTC           equ	14	;# 
   292     0010                     PORTE           equ	16	;# 
   293     0011                     PIR1            equ	17	;# 
   294     0012                     PIR2            equ	18	;# 
   295     0013                     PIR3            equ	19	;# 
   296     0015                     TMR0            equ	21	;# 
   297     0016                     TMR1            equ	22	;# 
   298     0016                     TMR1L           equ	22	;# 
   299     0017                     TMR1H           equ	23	;# 
   300     0018                     T1CON           equ	24	;# 
   301     0019                     T1GCON          equ	25	;# 
   302     001A                     TMR2            equ	26	;# 
   303     001B                     PR2             equ	27	;# 
   304     001C                     T2CON           equ	28	;# 
   305     001E                     CPSCON0         equ	30	;# 
   306     001F                     CPSCON1         equ	31	;# 
   307     008C                     TRISA           equ	140	;# 
   308     008D                     TRISB           equ	141	;# 
   309     008E                     TRISC           equ	142	;# 
   310     0090                     TRISE           equ	144	;# 
   311     0091                     PIE1            equ	145	;# 
   312     0092                     PIE2            equ	146	;# 
   313     0093                     PIE3            equ	147	;# 
   314     0095                     OPTION_REG      equ	149	;# 
   315     0096                     PCON            equ	150	;# 
   316     0097                     WDTCON          equ	151	;# 
   317     0098                     OSCTUNE         equ	152	;# 
   318     0099                     OSCCON          equ	153	;# 
   319     009A                     OSCSTAT         equ	154	;# 
   320     009B                     ADRES           equ	155	;# 
   321     009B                     ADRESL          equ	155	;# 
   322     009C                     ADRESH          equ	156	;# 
   323     009D                     ADCON0          equ	157	;# 
   324     009E                     ADCON1          equ	158	;# 
   325     010C                     LATA            equ	268	;# 
   326     010D                     LATB            equ	269	;# 
   327     010E                     LATC            equ	270	;# 
   328     0110                     LATE            equ	272	;# 
   329     0111                     CM1CON0         equ	273	;# 
   330     0112                     CM1CON1         equ	274	;# 
   331     0113                     CM2CON0         equ	275	;# 
   332     0114                     CM2CON1         equ	276	;# 
   333     0115                     CMOUT           equ	277	;# 
   334     0116                     BORCON          equ	278	;# 
   335     0117                     FVRCON          equ	279	;# 
   336     0118                     DACCON0         equ	280	;# 
   337     0119                     DACCON1         equ	281	;# 
   338     011A                     SRCON0          equ	282	;# 
   339     011B                     SRCON1          equ	283	;# 
   340     011D                     APFCON          equ	285	;# 
   341     018C                     ANSELA          equ	396	;# 
   342     018D                     ANSELB          equ	397	;# 
   343     0191                     EEADR           equ	401	;# 
   344     0191                     EEADRL          equ	401	;# 
   345     0192                     EEADRH          equ	402	;# 
   346     0193                     EEDAT           equ	403	;# 
   347     0193                     EEDATL          equ	403	;# 
   348     0193                     EEDATA          equ	403	;# 
   349     0194                     EEDATH          equ	404	;# 
   350     0195                     EECON1          equ	405	;# 
   351     0196                     EECON2          equ	406	;# 
   352     0199                     RCREG           equ	409	;# 
   353     019A                     TXREG           equ	410	;# 
   354     019B                     SP1BRG          equ	411	;# 
   355     019B                     SP1BRGL         equ	411	;# 
   356     019B                     SPBRG           equ	411	;# 
   357     019B                     SPBRGL          equ	411	;# 
   358     019C                     SP1BRGH         equ	412	;# 
   359     019C                     SPBRGH          equ	412	;# 
   360     019D                     RCSTA           equ	413	;# 
   361     019E                     TXSTA           equ	414	;# 
   362     019F                     BAUDCON         equ	415	;# 
   363     020D                     WPUB            equ	525	;# 
   364     0210                     WPUE            equ	528	;# 
   365     0211                     SSPBUF          equ	529	;# 
   366     0212                     SSPADD          equ	530	;# 
   367     0213                     SSPMSK          equ	531	;# 
   368     0214                     SSPSTAT         equ	532	;# 
   369     0215                     SSPCON1         equ	533	;# 
   370     0215                     SSPCON          equ	533	;# 
   371     0216                     SSPCON2         equ	534	;# 
   372     0217                     SSPCON3         equ	535	;# 
   373     0291                     CCPR1           equ	657	;# 
   374     0291                     CCPR1L          equ	657	;# 
   375     0292                     CCPR1H          equ	658	;# 
   376     0293                     CCP1CON         equ	659	;# 
   377     0294                     PWM1CON         equ	660	;# 
   378     0295                     CCP1AS          equ	661	;# 
   379     0295                     ECCP1AS         equ	661	;# 
   380     0296                     PSTR1CON        equ	662	;# 
   381     0298                     CCPR2           equ	664	;# 
   382     0298                     CCPR2L          equ	664	;# 
   383     0299                     CCPR2H          equ	665	;# 
   384     029A                     CCP2CON         equ	666	;# 
   385     029B                     PWM2CON         equ	667	;# 
   386     029C                     CCP2AS          equ	668	;# 
   387     029C                     ECCP2AS         equ	668	;# 
   388     029D                     PSTR2CON        equ	669	;# 
   389     029E                     CCPTMRS0        equ	670	;# 
   390     029F                     CCPTMRS1        equ	671	;# 
   391     0311                     CCPR3           equ	785	;# 
   392     0311                     CCPR3L          equ	785	;# 
   393     0312                     CCPR3H          equ	786	;# 
   394     0313                     CCP3CON         equ	787	;# 
   395     0314                     PWM3CON         equ	788	;# 
   396     0315                     CCP3AS          equ	789	;# 
   397     0315                     ECCP3AS         equ	789	;# 
   398     0316                     PSTR3CON        equ	790	;# 
   399     0318                     CCPR4           equ	792	;# 
   400     0318                     CCPR4L          equ	792	;# 
   401     0319                     CCPR4H          equ	793	;# 
   402     031A                     CCP4CON         equ	794	;# 
   403     031C                     CCPR5           equ	796	;# 
   404     031C                     CCPR5L          equ	796	;# 
   405     031D                     CCPR5H          equ	797	;# 
   406     031E                     CCP5CON         equ	798	;# 
   407     0394                     IOCBP           equ	916	;# 
   408     0395                     IOCBN           equ	917	;# 
   409     0396                     IOCBF           equ	918	;# 
   410     0415                     TMR4            equ	1045	;# 
   411     0416                     PR4             equ	1046	;# 
   412     0417                     T4CON           equ	1047	;# 
   413     041C                     TMR6            equ	1052	;# 
   414     041D                     PR6             equ	1053	;# 
   415     041E                     T6CON           equ	1054	;# 
   416     0791                     LCDCON          equ	1937	;# 
   417     0792                     LCDPS           equ	1938	;# 
   418     0793                     LCDREF          equ	1939	;# 
   419     0794                     LCDCST          equ	1940	;# 
   420     0795                     LCDRL           equ	1941	;# 
   421     0798                     LCDSE0          equ	1944	;# 
   422     0799                     LCDSE1          equ	1945	;# 
   423     07A0                     LCDDATA0        equ	1952	;# 
   424     07A1                     LCDDATA1        equ	1953	;# 
   425     07A3                     LCDDATA3        equ	1955	;# 
   426     07A4                     LCDDATA4        equ	1956	;# 
   427     07A6                     LCDDATA6        equ	1958	;# 
   428     07A7                     LCDDATA7        equ	1959	;# 
   429     07A9                     LCDDATA9        equ	1961	;# 
   430     07AA                     LCDDATA10       equ	1962	;# 
   431     0FE4                     STATUS_SHAD     equ	4068	;# 
   432     0FE5                     WREG_SHAD       equ	4069	;# 
   433     0FE6                     BSR_SHAD        equ	4070	;# 
   434     0FE7                     PCLATH_SHAD     equ	4071	;# 
   435     0FE8                     FSR0L_SHAD      equ	4072	;# 
   436     0FE9                     FSR0H_SHAD      equ	4073	;# 
   437     0FEA                     FSR1L_SHAD      equ	4074	;# 
   438     0FEB                     FSR1H_SHAD      equ	4075	;# 
   439     0FED                     STKPTR          equ	4077	;# 
   440     0FEE                     TOSL            equ	4078	;# 
   441     0FEF                     TOSH            equ	4079	;# 
   442     0000                     INDF0           equ	0	;# 
   443     0001                     INDF1           equ	1	;# 
   444     0002                     PCL             equ	2	;# 
   445     0003                     STATUS          equ	3	;# 
   446     0004                     FSR0L           equ	4	;# 
   447     0005                     FSR0H           equ	5	;# 
   448     0006                     FSR1L           equ	6	;# 
   449     0007                     FSR1H           equ	7	;# 
   450     0008                     BSR             equ	8	;# 
   451     0009                     WREG            equ	9	;# 
   452     000A                     PCLATH          equ	10	;# 
   453     000B                     INTCON          equ	11	;# 
   454     000C                     PORTA           equ	12	;# 
   455     000D                     PORTB           equ	13	;# 
   456     000E                     PORTC           equ	14	;# 
   457     0010                     PORTE           equ	16	;# 
   458     0011                     PIR1            equ	17	;# 
   459     0012                     PIR2            equ	18	;# 
   460     0013                     PIR3            equ	19	;# 
   461     0015                     TMR0            equ	21	;# 
   462     0016                     TMR1            equ	22	;# 
   463     0016                     TMR1L           equ	22	;# 
   464     0017                     TMR1H           equ	23	;# 
   465     0018                     T1CON           equ	24	;# 
   466     0019                     T1GCON          equ	25	;# 
   467     001A                     TMR2            equ	26	;# 
   468     001B                     PR2             equ	27	;# 
   469     001C                     T2CON           equ	28	;# 
   470     001E                     CPSCON0         equ	30	;# 
   471     001F                     CPSCON1         equ	31	;# 
   472     008C                     TRISA           equ	140	;# 
   473     008D                     TRISB           equ	141	;# 
   474     008E                     TRISC           equ	142	;# 
   475     0090                     TRISE           equ	144	;# 
   476     0091                     PIE1            equ	145	;# 
   477     0092                     PIE2            equ	146	;# 
   478     0093                     PIE3            equ	147	;# 
   479     0095                     OPTION_REG      equ	149	;# 
   480     0096                     PCON            equ	150	;# 
   481     0097                     WDTCON          equ	151	;# 
   482     0098                     OSCTUNE         equ	152	;# 
   483     0099                     OSCCON          equ	153	;# 
   484     009A                     OSCSTAT         equ	154	;# 
   485     009B                     ADRES           equ	155	;# 
   486     009B                     ADRESL          equ	155	;# 
   487     009C                     ADRESH          equ	156	;# 
   488     009D                     ADCON0          equ	157	;# 
   489     009E                     ADCON1          equ	158	;# 
   490     010C                     LATA            equ	268	;# 
   491     010D                     LATB            equ	269	;# 
   492     010E                     LATC            equ	270	;# 
   493     0110                     LATE            equ	272	;# 
   494     0111                     CM1CON0         equ	273	;# 
   495     0112                     CM1CON1         equ	274	;# 
   496     0113                     CM2CON0         equ	275	;# 
   497     0114                     CM2CON1         equ	276	;# 
   498     0115                     CMOUT           equ	277	;# 
   499     0116                     BORCON          equ	278	;# 
   500     0117                     FVRCON          equ	279	;# 
   501     0118                     DACCON0         equ	280	;# 
   502     0119                     DACCON1         equ	281	;# 
   503     011A                     SRCON0          equ	282	;# 
   504     011B                     SRCON1          equ	283	;# 
   505     011D                     APFCON          equ	285	;# 
   506     018C                     ANSELA          equ	396	;# 
   507     018D                     ANSELB          equ	397	;# 
   508     0191                     EEADR           equ	401	;# 
   509     0191                     EEADRL          equ	401	;# 
   510     0192                     EEADRH          equ	402	;# 
   511     0193                     EEDAT           equ	403	;# 
   512     0193                     EEDATL          equ	403	;# 
   513     0193                     EEDATA          equ	403	;# 
   514     0194                     EEDATH          equ	404	;# 
   515     0195                     EECON1          equ	405	;# 
   516     0196                     EECON2          equ	406	;# 
   517     0199                     RCREG           equ	409	;# 
   518     019A                     TXREG           equ	410	;# 
   519     019B                     SP1BRG          equ	411	;# 
   520     019B                     SP1BRGL         equ	411	;# 
   521     019B                     SPBRG           equ	411	;# 
   522     019B                     SPBRGL          equ	411	;# 
   523     019C                     SP1BRGH         equ	412	;# 
   524     019C                     SPBRGH          equ	412	;# 
   525     019D                     RCSTA           equ	413	;# 
   526     019E                     TXSTA           equ	414	;# 
   527     019F                     BAUDCON         equ	415	;# 
   528     020D                     WPUB            equ	525	;# 
   529     0210                     WPUE            equ	528	;# 
   530     0211                     SSPBUF          equ	529	;# 
   531     0212                     SSPADD          equ	530	;# 
   532     0213                     SSPMSK          equ	531	;# 
   533     0214                     SSPSTAT         equ	532	;# 
   534     0215                     SSPCON1         equ	533	;# 
   535     0215                     SSPCON          equ	533	;# 
   536     0216                     SSPCON2         equ	534	;# 
   537     0217                     SSPCON3         equ	535	;# 
   538     0291                     CCPR1           equ	657	;# 
   539     0291                     CCPR1L          equ	657	;# 
   540     0292                     CCPR1H          equ	658	;# 
   541     0293                     CCP1CON         equ	659	;# 
   542     0294                     PWM1CON         equ	660	;# 
   543     0295                     CCP1AS          equ	661	;# 
   544     0295                     ECCP1AS         equ	661	;# 
   545     0296                     PSTR1CON        equ	662	;# 
   546     0298                     CCPR2           equ	664	;# 
   547     0298                     CCPR2L          equ	664	;# 
   548     0299                     CCPR2H          equ	665	;# 
   549     029A                     CCP2CON         equ	666	;# 
   550     029B                     PWM2CON         equ	667	;# 
   551     029C                     CCP2AS          equ	668	;# 
   552     029C                     ECCP2AS         equ	668	;# 
   553     029D                     PSTR2CON        equ	669	;# 
   554     029E                     CCPTMRS0        equ	670	;# 
   555     029F                     CCPTMRS1        equ	671	;# 
   556     0311                     CCPR3           equ	785	;# 
   557     0311                     CCPR3L          equ	785	;# 
   558     0312                     CCPR3H          equ	786	;# 
   559     0313                     CCP3CON         equ	787	;# 
   560     0314                     PWM3CON         equ	788	;# 
   561     0315                     CCP3AS          equ	789	;# 
   562     0315                     ECCP3AS         equ	789	;# 
   563     0316                     PSTR3CON        equ	790	;# 
   564     0318                     CCPR4           equ	792	;# 
   565     0318                     CCPR4L          equ	792	;# 
   566     0319                     CCPR4H          equ	793	;# 
   567     031A                     CCP4CON         equ	794	;# 
   568     031C                     CCPR5           equ	796	;# 
   569     031C                     CCPR5L          equ	796	;# 
   570     031D                     CCPR5H          equ	797	;# 
   571     031E                     CCP5CON         equ	798	;# 
   572     0394                     IOCBP           equ	916	;# 
   573     0395                     IOCBN           equ	917	;# 
   574     0396                     IOCBF           equ	918	;# 
   575     0415                     TMR4            equ	1045	;# 
   576     0416                     PR4             equ	1046	;# 
   577     0417                     T4CON           equ	1047	;# 
   578     041C                     TMR6            equ	1052	;# 
   579     041D                     PR6             equ	1053	;# 
   580     041E                     T6CON           equ	1054	;# 
   581     0791                     LCDCON          equ	1937	;# 
   582     0792                     LCDPS           equ	1938	;# 
   583     0793                     LCDREF          equ	1939	;# 
   584     0794                     LCDCST          equ	1940	;# 
   585     0795                     LCDRL           equ	1941	;# 
   586     0798                     LCDSE0          equ	1944	;# 
   587     0799                     LCDSE1          equ	1945	;# 
   588     07A0                     LCDDATA0        equ	1952	;# 
   589     07A1                     LCDDATA1        equ	1953	;# 
   590     07A3                     LCDDATA3        equ	1955	;# 
   591     07A4                     LCDDATA4        equ	1956	;# 
   592     07A6                     LCDDATA6        equ	1958	;# 
   593     07A7                     LCDDATA7        equ	1959	;# 
   594     07A9                     LCDDATA9        equ	1961	;# 
   595     07AA                     LCDDATA10       equ	1962	;# 
   596     0FE4                     STATUS_SHAD     equ	4068	;# 
   597     0FE5                     WREG_SHAD       equ	4069	;# 
   598     0FE6                     BSR_SHAD        equ	4070	;# 
   599     0FE7                     PCLATH_SHAD     equ	4071	;# 
   600     0FE8                     FSR0L_SHAD      equ	4072	;# 
   601     0FE9                     FSR0H_SHAD      equ	4073	;# 
   602     0FEA                     FSR1L_SHAD      equ	4074	;# 
   603     0FEB                     FSR1H_SHAD      equ	4075	;# 
   604     0FED                     STKPTR          equ	4077	;# 
   605     0FEE                     TOSL            equ	4078	;# 
   606     0FEF                     TOSH            equ	4079	;# 
   607     0000                     INDF0           equ	0	;# 
   608     0001                     INDF1           equ	1	;# 
   609     0002                     PCL             equ	2	;# 
   610     0003                     STATUS          equ	3	;# 
   611     0004                     FSR0L           equ	4	;# 
   612     0005                     FSR0H           equ	5	;# 
   613     0006                     FSR1L           equ	6	;# 
   614     0007                     FSR1H           equ	7	;# 
   615     0008                     BSR             equ	8	;# 
   616     0009                     WREG            equ	9	;# 
   617     000A                     PCLATH          equ	10	;# 
   618     000B                     INTCON          equ	11	;# 
   619     000C                     PORTA           equ	12	;# 
   620     000D                     PORTB           equ	13	;# 
   621     000E                     PORTC           equ	14	;# 
   622     0010                     PORTE           equ	16	;# 
   623     0011                     PIR1            equ	17	;# 
   624     0012                     PIR2            equ	18	;# 
   625     0013                     PIR3            equ	19	;# 
   626     0015                     TMR0            equ	21	;# 
   627     0016                     TMR1            equ	22	;# 
   628     0016                     TMR1L           equ	22	;# 
   629     0017                     TMR1H           equ	23	;# 
   630     0018                     T1CON           equ	24	;# 
   631     0019                     T1GCON          equ	25	;# 
   632     001A                     TMR2            equ	26	;# 
   633     001B                     PR2             equ	27	;# 
   634     001C                     T2CON           equ	28	;# 
   635     001E                     CPSCON0         equ	30	;# 
   636     001F                     CPSCON1         equ	31	;# 
   637     008C                     TRISA           equ	140	;# 
   638     008D                     TRISB           equ	141	;# 
   639     008E                     TRISC           equ	142	;# 
   640     0090                     TRISE           equ	144	;# 
   641     0091                     PIE1            equ	145	;# 
   642     0092                     PIE2            equ	146	;# 
   643     0093                     PIE3            equ	147	;# 
   644     0095                     OPTION_REG      equ	149	;# 
   645     0096                     PCON            equ	150	;# 
   646     0097                     WDTCON          equ	151	;# 
   647     0098                     OSCTUNE         equ	152	;# 
   648     0099                     OSCCON          equ	153	;# 
   649     009A                     OSCSTAT         equ	154	;# 
   650     009B                     ADRES           equ	155	;# 
   651     009B                     ADRESL          equ	155	;# 
   652     009C                     ADRESH          equ	156	;# 
   653     009D                     ADCON0          equ	157	;# 
   654     009E                     ADCON1          equ	158	;# 
   655     010C                     LATA            equ	268	;# 
   656     010D                     LATB            equ	269	;# 
   657     010E                     LATC            equ	270	;# 
   658     0110                     LATE            equ	272	;# 
   659     0111                     CM1CON0         equ	273	;# 
   660     0112                     CM1CON1         equ	274	;# 
   661     0113                     CM2CON0         equ	275	;# 
   662     0114                     CM2CON1         equ	276	;# 
   663     0115                     CMOUT           equ	277	;# 
   664     0116                     BORCON          equ	278	;# 
   665     0117                     FVRCON          equ	279	;# 
   666     0118                     DACCON0         equ	280	;# 
   667     0119                     DACCON1         equ	281	;# 
   668     011A                     SRCON0          equ	282	;# 
   669     011B                     SRCON1          equ	283	;# 
   670     011D                     APFCON          equ	285	;# 
   671     018C                     ANSELA          equ	396	;# 
   672     018D                     ANSELB          equ	397	;# 
   673     0191                     EEADR           equ	401	;# 
   674     0191                     EEADRL          equ	401	;# 
   675     0192                     EEADRH          equ	402	;# 
   676     0193                     EEDAT           equ	403	;# 
   677     0193                     EEDATL          equ	403	;# 
   678     0193                     EEDATA          equ	403	;# 
   679     0194                     EEDATH          equ	404	;# 
   680     0195                     EECON1          equ	405	;# 
   681     0196                     EECON2          equ	406	;# 
   682     0199                     RCREG           equ	409	;# 
   683     019A                     TXREG           equ	410	;# 
   684     019B                     SP1BRG          equ	411	;# 
   685     019B                     SP1BRGL         equ	411	;# 
   686     019B                     SPBRG           equ	411	;# 
   687     019B                     SPBRGL          equ	411	;# 
   688     019C                     SP1BRGH         equ	412	;# 
   689     019C                     SPBRGH          equ	412	;# 
   690     019D                     RCSTA           equ	413	;# 
   691     019E                     TXSTA           equ	414	;# 
   692     019F                     BAUDCON         equ	415	;# 
   693     020D                     WPUB            equ	525	;# 
   694     0210                     WPUE            equ	528	;# 
   695     0211                     SSPBUF          equ	529	;# 
   696     0212                     SSPADD          equ	530	;# 
   697     0213                     SSPMSK          equ	531	;# 
   698     0214                     SSPSTAT         equ	532	;# 
   699     0215                     SSPCON1         equ	533	;# 
   700     0215                     SSPCON          equ	533	;# 
   701     0216                     SSPCON2         equ	534	;# 
   702     0217                     SSPCON3         equ	535	;# 
   703     0291                     CCPR1           equ	657	;# 
   704     0291                     CCPR1L          equ	657	;# 
   705     0292                     CCPR1H          equ	658	;# 
   706     0293                     CCP1CON         equ	659	;# 
   707     0294                     PWM1CON         equ	660	;# 
   708     0295                     CCP1AS          equ	661	;# 
   709     0295                     ECCP1AS         equ	661	;# 
   710     0296                     PSTR1CON        equ	662	;# 
   711     0298                     CCPR2           equ	664	;# 
   712     0298                     CCPR2L          equ	664	;# 
   713     0299                     CCPR2H          equ	665	;# 
   714     029A                     CCP2CON         equ	666	;# 
   715     029B                     PWM2CON         equ	667	;# 
   716     029C                     CCP2AS          equ	668	;# 
   717     029C                     ECCP2AS         equ	668	;# 
   718     029D                     PSTR2CON        equ	669	;# 
   719     029E                     CCPTMRS0        equ	670	;# 
   720     029F                     CCPTMRS1        equ	671	;# 
   721     0311                     CCPR3           equ	785	;# 
   722     0311                     CCPR3L          equ	785	;# 
   723     0312                     CCPR3H          equ	786	;# 
   724     0313                     CCP3CON         equ	787	;# 
   725     0314                     PWM3CON         equ	788	;# 
   726     0315                     CCP3AS          equ	789	;# 
   727     0315                     ECCP3AS         equ	789	;# 
   728     0316                     PSTR3CON        equ	790	;# 
   729     0318                     CCPR4           equ	792	;# 
   730     0318                     CCPR4L          equ	792	;# 
   731     0319                     CCPR4H          equ	793	;# 
   732     031A                     CCP4CON         equ	794	;# 
   733     031C                     CCPR5           equ	796	;# 
   734     031C                     CCPR5L          equ	796	;# 
   735     031D                     CCPR5H          equ	797	;# 
   736     031E                     CCP5CON         equ	798	;# 
   737     0394                     IOCBP           equ	916	;# 
   738     0395                     IOCBN           equ	917	;# 
   739     0396                     IOCBF           equ	918	;# 
   740     0415                     TMR4            equ	1045	;# 
   741     0416                     PR4             equ	1046	;# 
   742     0417                     T4CON           equ	1047	;# 
   743     041C                     TMR6            equ	1052	;# 
   744     041D                     PR6             equ	1053	;# 
   745     041E                     T6CON           equ	1054	;# 
   746     0791                     LCDCON          equ	1937	;# 
   747     0792                     LCDPS           equ	1938	;# 
   748     0793                     LCDREF          equ	1939	;# 
   749     0794                     LCDCST          equ	1940	;# 
   750     0795                     LCDRL           equ	1941	;# 
   751     0798                     LCDSE0          equ	1944	;# 
   752     0799                     LCDSE1          equ	1945	;# 
   753     07A0                     LCDDATA0        equ	1952	;# 
   754     07A1                     LCDDATA1        equ	1953	;# 
   755     07A3                     LCDDATA3        equ	1955	;# 
   756     07A4                     LCDDATA4        equ	1956	;# 
   757     07A6                     LCDDATA6        equ	1958	;# 
   758     07A7                     LCDDATA7        equ	1959	;# 
   759     07A9                     LCDDATA9        equ	1961	;# 
   760     07AA                     LCDDATA10       equ	1962	;# 
   761     0FE4                     STATUS_SHAD     equ	4068	;# 
   762     0FE5                     WREG_SHAD       equ	4069	;# 
   763     0FE6                     BSR_SHAD        equ	4070	;# 
   764     0FE7                     PCLATH_SHAD     equ	4071	;# 
   765     0FE8                     FSR0L_SHAD      equ	4072	;# 
   766     0FE9                     FSR0H_SHAD      equ	4073	;# 
   767     0FEA                     FSR1L_SHAD      equ	4074	;# 
   768     0FEB                     FSR1H_SHAD      equ	4075	;# 
   769     0FED                     STKPTR          equ	4077	;# 
   770     0FEE                     TOSL            equ	4078	;# 
   771     0FEF                     TOSH            equ	4079	;# 
   772     0000                     INDF0           equ	0	;# 
   773     0001                     INDF1           equ	1	;# 
   774     0002                     PCL             equ	2	;# 
   775     0003                     STATUS          equ	3	;# 
   776     0004                     FSR0L           equ	4	;# 
   777     0005                     FSR0H           equ	5	;# 
   778     0006                     FSR1L           equ	6	;# 
   779     0007                     FSR1H           equ	7	;# 
   780     0008                     BSR             equ	8	;# 
   781     0009                     WREG            equ	9	;# 
   782     000A                     PCLATH          equ	10	;# 
   783     000B                     INTCON          equ	11	;# 
   784     000C                     PORTA           equ	12	;# 
   785     000D                     PORTB           equ	13	;# 
   786     000E                     PORTC           equ	14	;# 
   787     0010                     PORTE           equ	16	;# 
   788     0011                     PIR1            equ	17	;# 
   789     0012                     PIR2            equ	18	;# 
   790     0013                     PIR3            equ	19	;# 
   791     0015                     TMR0            equ	21	;# 
   792     0016                     TMR1            equ	22	;# 
   793     0016                     TMR1L           equ	22	;# 
   794     0017                     TMR1H           equ	23	;# 
   795     0018                     T1CON           equ	24	;# 
   796     0019                     T1GCON          equ	25	;# 
   797     001A                     TMR2            equ	26	;# 
   798     001B                     PR2             equ	27	;# 
   799     001C                     T2CON           equ	28	;# 
   800     001E                     CPSCON0         equ	30	;# 
   801     001F                     CPSCON1         equ	31	;# 
   802     008C                     TRISA           equ	140	;# 
   803     008D                     TRISB           equ	141	;# 
   804     008E                     TRISC           equ	142	;# 
   805     0090                     TRISE           equ	144	;# 
   806     0091                     PIE1            equ	145	;# 
   807     0092                     PIE2            equ	146	;# 
   808     0093                     PIE3            equ	147	;# 
   809     0095                     OPTION_REG      equ	149	;# 
   810     0096                     PCON            equ	150	;# 
   811     0097                     WDTCON          equ	151	;# 
   812     0098                     OSCTUNE         equ	152	;# 
   813     0099                     OSCCON          equ	153	;# 
   814     009A                     OSCSTAT         equ	154	;# 
   815     009B                     ADRES           equ	155	;# 
   816     009B                     ADRESL          equ	155	;# 
   817     009C                     ADRESH          equ	156	;# 
   818     009D                     ADCON0          equ	157	;# 
   819     009E                     ADCON1          equ	158	;# 
   820     010C                     LATA            equ	268	;# 
   821     010D                     LATB            equ	269	;# 
   822     010E                     LATC            equ	270	;# 
   823     0110                     LATE            equ	272	;# 
   824     0111                     CM1CON0         equ	273	;# 
   825     0112                     CM1CON1         equ	274	;# 
   826     0113                     CM2CON0         equ	275	;# 
   827     0114                     CM2CON1         equ	276	;# 
   828     0115                     CMOUT           equ	277	;# 
   829     0116                     BORCON          equ	278	;# 
   830     0117                     FVRCON          equ	279	;# 
   831     0118                     DACCON0         equ	280	;# 
   832     0119                     DACCON1         equ	281	;# 
   833     011A                     SRCON0          equ	282	;# 
   834     011B                     SRCON1          equ	283	;# 
   835     011D                     APFCON          equ	285	;# 
   836     018C                     ANSELA          equ	396	;# 
   837     018D                     ANSELB          equ	397	;# 
   838     0191                     EEADR           equ	401	;# 
   839     0191                     EEADRL          equ	401	;# 
   840     0192                     EEADRH          equ	402	;# 
   841     0193                     EEDAT           equ	403	;# 
   842     0193                     EEDATL          equ	403	;# 
   843     0193                     EEDATA          equ	403	;# 
   844     0194                     EEDATH          equ	404	;# 
   845     0195                     EECON1          equ	405	;# 
   846     0196                     EECON2          equ	406	;# 
   847     0199                     RCREG           equ	409	;# 
   848     019A                     TXREG           equ	410	;# 
   849     019B                     SP1BRG          equ	411	;# 
   850     019B                     SP1BRGL         equ	411	;# 
   851     019B                     SPBRG           equ	411	;# 
   852     019B                     SPBRGL          equ	411	;# 
   853     019C                     SP1BRGH         equ	412	;# 
   854     019C                     SPBRGH          equ	412	;# 
   855     019D                     RCSTA           equ	413	;# 
   856     019E                     TXSTA           equ	414	;# 
   857     019F                     BAUDCON         equ	415	;# 
   858     020D                     WPUB            equ	525	;# 
   859     0210                     WPUE            equ	528	;# 
   860     0211                     SSPBUF          equ	529	;# 
   861     0212                     SSPADD          equ	530	;# 
   862     0213                     SSPMSK          equ	531	;# 
   863     0214                     SSPSTAT         equ	532	;# 
   864     0215                     SSPCON1         equ	533	;# 
   865     0215                     SSPCON          equ	533	;# 
   866     0216                     SSPCON2         equ	534	;# 
   867     0217                     SSPCON3         equ	535	;# 
   868     0291                     CCPR1           equ	657	;# 
   869     0291                     CCPR1L          equ	657	;# 
   870     0292                     CCPR1H          equ	658	;# 
   871     0293                     CCP1CON         equ	659	;# 
   872     0294                     PWM1CON         equ	660	;# 
   873     0295                     CCP1AS          equ	661	;# 
   874     0295                     ECCP1AS         equ	661	;# 
   875     0296                     PSTR1CON        equ	662	;# 
   876     0298                     CCPR2           equ	664	;# 
   877     0298                     CCPR2L          equ	664	;# 
   878     0299                     CCPR2H          equ	665	;# 
   879     029A                     CCP2CON         equ	666	;# 
   880     029B                     PWM2CON         equ	667	;# 
   881     029C                     CCP2AS          equ	668	;# 
   882     029C                     ECCP2AS         equ	668	;# 
   883     029D                     PSTR2CON        equ	669	;# 
   884     029E                     CCPTMRS0        equ	670	;# 
   885     029F                     CCPTMRS1        equ	671	;# 
   886     0311                     CCPR3           equ	785	;# 
   887     0311                     CCPR3L          equ	785	;# 
   888     0312                     CCPR3H          equ	786	;# 
   889     0313                     CCP3CON         equ	787	;# 
   890     0314                     PWM3CON         equ	788	;# 
   891     0315                     CCP3AS          equ	789	;# 
   892     0315                     ECCP3AS         equ	789	;# 
   893     0316                     PSTR3CON        equ	790	;# 
   894     0318                     CCPR4           equ	792	;# 
   895     0318                     CCPR4L          equ	792	;# 
   896     0319                     CCPR4H          equ	793	;# 
   897     031A                     CCP4CON         equ	794	;# 
   898     031C                     CCPR5           equ	796	;# 
   899     031C                     CCPR5L          equ	796	;# 
   900     031D                     CCPR5H          equ	797	;# 
   901     031E                     CCP5CON         equ	798	;# 
   902     0394                     IOCBP           equ	916	;# 
   903     0395                     IOCBN           equ	917	;# 
   904     0396                     IOCBF           equ	918	;# 
   905     0415                     TMR4            equ	1045	;# 
   906     0416                     PR4             equ	1046	;# 
   907     0417                     T4CON           equ	1047	;# 
   908     041C                     TMR6            equ	1052	;# 
   909     041D                     PR6             equ	1053	;# 
   910     041E                     T6CON           equ	1054	;# 
   911     0791                     LCDCON          equ	1937	;# 
   912     0792                     LCDPS           equ	1938	;# 
   913     0793                     LCDREF          equ	1939	;# 
   914     0794                     LCDCST          equ	1940	;# 
   915     0795                     LCDRL           equ	1941	;# 
   916     0798                     LCDSE0          equ	1944	;# 
   917     0799                     LCDSE1          equ	1945	;# 
   918     07A0                     LCDDATA0        equ	1952	;# 
   919     07A1                     LCDDATA1        equ	1953	;# 
   920     07A3                     LCDDATA3        equ	1955	;# 
   921     07A4                     LCDDATA4        equ	1956	;# 
   922     07A6                     LCDDATA6        equ	1958	;# 
   923     07A7                     LCDDATA7        equ	1959	;# 
   924     07A9                     LCDDATA9        equ	1961	;# 
   925     07AA                     LCDDATA10       equ	1962	;# 
   926     0FE4                     STATUS_SHAD     equ	4068	;# 
   927     0FE5                     WREG_SHAD       equ	4069	;# 
   928     0FE6                     BSR_SHAD        equ	4070	;# 
   929     0FE7                     PCLATH_SHAD     equ	4071	;# 
   930     0FE8                     FSR0L_SHAD      equ	4072	;# 
   931     0FE9                     FSR0H_SHAD      equ	4073	;# 
   932     0FEA                     FSR1L_SHAD      equ	4074	;# 
   933     0FEB                     FSR1H_SHAD      equ	4075	;# 
   934     0FED                     STKPTR          equ	4077	;# 
   935     0FEE                     TOSL            equ	4078	;# 
   936     0FEF                     TOSH            equ	4079	;# 
   937     0000                     INDF0           equ	0	;# 
   938     0001                     INDF1           equ	1	;# 
   939     0002                     PCL             equ	2	;# 
   940     0003                     STATUS          equ	3	;# 
   941     0004                     FSR0L           equ	4	;# 
   942     0005                     FSR0H           equ	5	;# 
   943     0006                     FSR1L           equ	6	;# 
   944     0007                     FSR1H           equ	7	;# 
   945     0008                     BSR             equ	8	;# 
   946     0009                     WREG            equ	9	;# 
   947     000A                     PCLATH          equ	10	;# 
   948     000B                     INTCON          equ	11	;# 
   949     000C                     PORTA           equ	12	;# 
   950     000D                     PORTB           equ	13	;# 
   951     000E                     PORTC           equ	14	;# 
   952     0010                     PORTE           equ	16	;# 
   953     0011                     PIR1            equ	17	;# 
   954     0012                     PIR2            equ	18	;# 
   955     0013                     PIR3            equ	19	;# 
   956     0015                     TMR0            equ	21	;# 
   957     0016                     TMR1            equ	22	;# 
   958     0016                     TMR1L           equ	22	;# 
   959     0017                     TMR1H           equ	23	;# 
   960     0018                     T1CON           equ	24	;# 
   961     0019                     T1GCON          equ	25	;# 
   962     001A                     TMR2            equ	26	;# 
   963     001B                     PR2             equ	27	;# 
   964     001C                     T2CON           equ	28	;# 
   965     001E                     CPSCON0         equ	30	;# 
   966     001F                     CPSCON1         equ	31	;# 
   967     008C                     TRISA           equ	140	;# 
   968     008D                     TRISB           equ	141	;# 
   969     008E                     TRISC           equ	142	;# 
   970     0090                     TRISE           equ	144	;# 
   971     0091                     PIE1            equ	145	;# 
   972     0092                     PIE2            equ	146	;# 
   973     0093                     PIE3            equ	147	;# 
   974     0095                     OPTION_REG      equ	149	;# 
   975     0096                     PCON            equ	150	;# 
   976     0097                     WDTCON          equ	151	;# 
   977     0098                     OSCTUNE         equ	152	;# 
   978     0099                     OSCCON          equ	153	;# 
   979     009A                     OSCSTAT         equ	154	;# 
   980     009B                     ADRES           equ	155	;# 
   981     009B                     ADRESL          equ	155	;# 
   982     009C                     ADRESH          equ	156	;# 
   983     009D                     ADCON0          equ	157	;# 
   984     009E                     ADCON1          equ	158	;# 
   985     010C                     LATA            equ	268	;# 
   986     010D                     LATB            equ	269	;# 
   987     010E                     LATC            equ	270	;# 
   988     0110                     LATE            equ	272	;# 
   989     0111                     CM1CON0         equ	273	;# 
   990     0112                     CM1CON1         equ	274	;# 
   991     0113                     CM2CON0         equ	275	;# 
   992     0114                     CM2CON1         equ	276	;# 
   993     0115                     CMOUT           equ	277	;# 
   994     0116                     BORCON          equ	278	;# 
   995     0117                     FVRCON          equ	279	;# 
   996     0118                     DACCON0         equ	280	;# 
   997     0119                     DACCON1         equ	281	;# 
   998     011A                     SRCON0          equ	282	;# 
   999     011B                     SRCON1          equ	283	;# 
  1000     011D                     APFCON          equ	285	;# 
  1001     018C                     ANSELA          equ	396	;# 
  1002     018D                     ANSELB          equ	397	;# 
  1003     0191                     EEADR           equ	401	;# 
  1004     0191                     EEADRL          equ	401	;# 
  1005     0192                     EEADRH          equ	402	;# 
  1006     0193                     EEDAT           equ	403	;# 
  1007     0193                     EEDATL          equ	403	;# 
  1008     0193                     EEDATA          equ	403	;# 
  1009     0194                     EEDATH          equ	404	;# 
  1010     0195                     EECON1          equ	405	;# 
  1011     0196                     EECON2          equ	406	;# 
  1012     0199                     RCREG           equ	409	;# 
  1013     019A                     TXREG           equ	410	;# 
  1014     019B                     SP1BRG          equ	411	;# 
  1015     019B                     SP1BRGL         equ	411	;# 
  1016     019B                     SPBRG           equ	411	;# 
  1017     019B                     SPBRGL          equ	411	;# 
  1018     019C                     SP1BRGH         equ	412	;# 
  1019     019C                     SPBRGH          equ	412	;# 
  1020     019D                     RCSTA           equ	413	;# 
  1021     019E                     TXSTA           equ	414	;# 
  1022     019F                     BAUDCON         equ	415	;# 
  1023     020D                     WPUB            equ	525	;# 
  1024     0210                     WPUE            equ	528	;# 
  1025     0211                     SSPBUF          equ	529	;# 
  1026     0212                     SSPADD          equ	530	;# 
  1027     0213                     SSPMSK          equ	531	;# 
  1028     0214                     SSPSTAT         equ	532	;# 
  1029     0215                     SSPCON1         equ	533	;# 
  1030     0215                     SSPCON          equ	533	;# 
  1031     0216                     SSPCON2         equ	534	;# 
  1032     0217                     SSPCON3         equ	535	;# 
  1033     0291                     CCPR1           equ	657	;# 
  1034     0291                     CCPR1L          equ	657	;# 
  1035     0292                     CCPR1H          equ	658	;# 
  1036     0293                     CCP1CON         equ	659	;# 
  1037     0294                     PWM1CON         equ	660	;# 
  1038     0295                     CCP1AS          equ	661	;# 
  1039     0295                     ECCP1AS         equ	661	;# 
  1040     0296                     PSTR1CON        equ	662	;# 
  1041     0298                     CCPR2           equ	664	;# 
  1042     0298                     CCPR2L          equ	664	;# 
  1043     0299                     CCPR2H          equ	665	;# 
  1044     029A                     CCP2CON         equ	666	;# 
  1045     029B                     PWM2CON         equ	667	;# 
  1046     029C                     CCP2AS          equ	668	;# 
  1047     029C                     ECCP2AS         equ	668	;# 
  1048     029D                     PSTR2CON        equ	669	;# 
  1049     029E                     CCPTMRS0        equ	670	;# 
  1050     029F                     CCPTMRS1        equ	671	;# 
  1051     0311                     CCPR3           equ	785	;# 
  1052     0311                     CCPR3L          equ	785	;# 
  1053     0312                     CCPR3H          equ	786	;# 
  1054     0313                     CCP3CON         equ	787	;# 
  1055     0314                     PWM3CON         equ	788	;# 
  1056     0315                     CCP3AS          equ	789	;# 
  1057     0315                     ECCP3AS         equ	789	;# 
  1058     0316                     PSTR3CON        equ	790	;# 
  1059     0318                     CCPR4           equ	792	;# 
  1060     0318                     CCPR4L          equ	792	;# 
  1061     0319                     CCPR4H          equ	793	;# 
  1062     031A                     CCP4CON         equ	794	;# 
  1063     031C                     CCPR5           equ	796	;# 
  1064     031C                     CCPR5L          equ	796	;# 
  1065     031D                     CCPR5H          equ	797	;# 
  1066     031E                     CCP5CON         equ	798	;# 
  1067     0394                     IOCBP           equ	916	;# 
  1068     0395                     IOCBN           equ	917	;# 
  1069     0396                     IOCBF           equ	918	;# 
  1070     0415                     TMR4            equ	1045	;# 
  1071     0416                     PR4             equ	1046	;# 
  1072     0417                     T4CON           equ	1047	;# 
  1073     041C                     TMR6            equ	1052	;# 
  1074     041D                     PR6             equ	1053	;# 
  1075     041E                     T6CON           equ	1054	;# 
  1076     0791                     LCDCON          equ	1937	;# 
  1077     0792                     LCDPS           equ	1938	;# 
  1078     0793                     LCDREF          equ	1939	;# 
  1079     0794                     LCDCST          equ	1940	;# 
  1080     0795                     LCDRL           equ	1941	;# 
  1081     0798                     LCDSE0          equ	1944	;# 
  1082     0799                     LCDSE1          equ	1945	;# 
  1083     07A0                     LCDDATA0        equ	1952	;# 
  1084     07A1                     LCDDATA1        equ	1953	;# 
  1085     07A3                     LCDDATA3        equ	1955	;# 
  1086     07A4                     LCDDATA4        equ	1956	;# 
  1087     07A6                     LCDDATA6        equ	1958	;# 
  1088     07A7                     LCDDATA7        equ	1959	;# 
  1089     07A9                     LCDDATA9        equ	1961	;# 
  1090     07AA                     LCDDATA10       equ	1962	;# 
  1091     0FE4                     STATUS_SHAD     equ	4068	;# 
  1092     0FE5                     WREG_SHAD       equ	4069	;# 
  1093     0FE6                     BSR_SHAD        equ	4070	;# 
  1094     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1095     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1096     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1097     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1098     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1099     0FED                     STKPTR          equ	4077	;# 
  1100     0FEE                     TOSL            equ	4078	;# 
  1101     0FEF                     TOSH            equ	4079	;# 
  1102     0000                     INDF0           equ	0	;# 
  1103     0001                     INDF1           equ	1	;# 
  1104     0002                     PCL             equ	2	;# 
  1105     0003                     STATUS          equ	3	;# 
  1106     0004                     FSR0L           equ	4	;# 
  1107     0005                     FSR0H           equ	5	;# 
  1108     0006                     FSR1L           equ	6	;# 
  1109     0007                     FSR1H           equ	7	;# 
  1110     0008                     BSR             equ	8	;# 
  1111     0009                     WREG            equ	9	;# 
  1112     000A                     PCLATH          equ	10	;# 
  1113     000B                     INTCON          equ	11	;# 
  1114     000C                     PORTA           equ	12	;# 
  1115     000D                     PORTB           equ	13	;# 
  1116     000E                     PORTC           equ	14	;# 
  1117     0010                     PORTE           equ	16	;# 
  1118     0011                     PIR1            equ	17	;# 
  1119     0012                     PIR2            equ	18	;# 
  1120     0013                     PIR3            equ	19	;# 
  1121     0015                     TMR0            equ	21	;# 
  1122     0016                     TMR1            equ	22	;# 
  1123     0016                     TMR1L           equ	22	;# 
  1124     0017                     TMR1H           equ	23	;# 
  1125     0018                     T1CON           equ	24	;# 
  1126     0019                     T1GCON          equ	25	;# 
  1127     001A                     TMR2            equ	26	;# 
  1128     001B                     PR2             equ	27	;# 
  1129     001C                     T2CON           equ	28	;# 
  1130     001E                     CPSCON0         equ	30	;# 
  1131     001F                     CPSCON1         equ	31	;# 
  1132     008C                     TRISA           equ	140	;# 
  1133     008D                     TRISB           equ	141	;# 
  1134     008E                     TRISC           equ	142	;# 
  1135     0090                     TRISE           equ	144	;# 
  1136     0091                     PIE1            equ	145	;# 
  1137     0092                     PIE2            equ	146	;# 
  1138     0093                     PIE3            equ	147	;# 
  1139     0095                     OPTION_REG      equ	149	;# 
  1140     0096                     PCON            equ	150	;# 
  1141     0097                     WDTCON          equ	151	;# 
  1142     0098                     OSCTUNE         equ	152	;# 
  1143     0099                     OSCCON          equ	153	;# 
  1144     009A                     OSCSTAT         equ	154	;# 
  1145     009B                     ADRES           equ	155	;# 
  1146     009B                     ADRESL          equ	155	;# 
  1147     009C                     ADRESH          equ	156	;# 
  1148     009D                     ADCON0          equ	157	;# 
  1149     009E                     ADCON1          equ	158	;# 
  1150     010C                     LATA            equ	268	;# 
  1151     010D                     LATB            equ	269	;# 
  1152     010E                     LATC            equ	270	;# 
  1153     0110                     LATE            equ	272	;# 
  1154     0111                     CM1CON0         equ	273	;# 
  1155     0112                     CM1CON1         equ	274	;# 
  1156     0113                     CM2CON0         equ	275	;# 
  1157     0114                     CM2CON1         equ	276	;# 
  1158     0115                     CMOUT           equ	277	;# 
  1159     0116                     BORCON          equ	278	;# 
  1160     0117                     FVRCON          equ	279	;# 
  1161     0118                     DACCON0         equ	280	;# 
  1162     0119                     DACCON1         equ	281	;# 
  1163     011A                     SRCON0          equ	282	;# 
  1164     011B                     SRCON1          equ	283	;# 
  1165     011D                     APFCON          equ	285	;# 
  1166     018C                     ANSELA          equ	396	;# 
  1167     018D                     ANSELB          equ	397	;# 
  1168     0191                     EEADR           equ	401	;# 
  1169     0191                     EEADRL          equ	401	;# 
  1170     0192                     EEADRH          equ	402	;# 
  1171     0193                     EEDAT           equ	403	;# 
  1172     0193                     EEDATL          equ	403	;# 
  1173     0193                     EEDATA          equ	403	;# 
  1174     0194                     EEDATH          equ	404	;# 
  1175     0195                     EECON1          equ	405	;# 
  1176     0196                     EECON2          equ	406	;# 
  1177     0199                     RCREG           equ	409	;# 
  1178     019A                     TXREG           equ	410	;# 
  1179     019B                     SP1BRG          equ	411	;# 
  1180     019B                     SP1BRGL         equ	411	;# 
  1181     019B                     SPBRG           equ	411	;# 
  1182     019B                     SPBRGL          equ	411	;# 
  1183     019C                     SP1BRGH         equ	412	;# 
  1184     019C                     SPBRGH          equ	412	;# 
  1185     019D                     RCSTA           equ	413	;# 
  1186     019E                     TXSTA           equ	414	;# 
  1187     019F                     BAUDCON         equ	415	;# 
  1188     020D                     WPUB            equ	525	;# 
  1189     0210                     WPUE            equ	528	;# 
  1190     0211                     SSPBUF          equ	529	;# 
  1191     0212                     SSPADD          equ	530	;# 
  1192     0213                     SSPMSK          equ	531	;# 
  1193     0214                     SSPSTAT         equ	532	;# 
  1194     0215                     SSPCON1         equ	533	;# 
  1195     0215                     SSPCON          equ	533	;# 
  1196     0216                     SSPCON2         equ	534	;# 
  1197     0217                     SSPCON3         equ	535	;# 
  1198     0291                     CCPR1           equ	657	;# 
  1199     0291                     CCPR1L          equ	657	;# 
  1200     0292                     CCPR1H          equ	658	;# 
  1201     0293                     CCP1CON         equ	659	;# 
  1202     0294                     PWM1CON         equ	660	;# 
  1203     0295                     CCP1AS          equ	661	;# 
  1204     0295                     ECCP1AS         equ	661	;# 
  1205     0296                     PSTR1CON        equ	662	;# 
  1206     0298                     CCPR2           equ	664	;# 
  1207     0298                     CCPR2L          equ	664	;# 
  1208     0299                     CCPR2H          equ	665	;# 
  1209     029A                     CCP2CON         equ	666	;# 
  1210     029B                     PWM2CON         equ	667	;# 
  1211     029C                     CCP2AS          equ	668	;# 
  1212     029C                     ECCP2AS         equ	668	;# 
  1213     029D                     PSTR2CON        equ	669	;# 
  1214     029E                     CCPTMRS0        equ	670	;# 
  1215     029F                     CCPTMRS1        equ	671	;# 
  1216     0311                     CCPR3           equ	785	;# 
  1217     0311                     CCPR3L          equ	785	;# 
  1218     0312                     CCPR3H          equ	786	;# 
  1219     0313                     CCP3CON         equ	787	;# 
  1220     0314                     PWM3CON         equ	788	;# 
  1221     0315                     CCP3AS          equ	789	;# 
  1222     0315                     ECCP3AS         equ	789	;# 
  1223     0316                     PSTR3CON        equ	790	;# 
  1224     0318                     CCPR4           equ	792	;# 
  1225     0318                     CCPR4L          equ	792	;# 
  1226     0319                     CCPR4H          equ	793	;# 
  1227     031A                     CCP4CON         equ	794	;# 
  1228     031C                     CCPR5           equ	796	;# 
  1229     031C                     CCPR5L          equ	796	;# 
  1230     031D                     CCPR5H          equ	797	;# 
  1231     031E                     CCP5CON         equ	798	;# 
  1232     0394                     IOCBP           equ	916	;# 
  1233     0395                     IOCBN           equ	917	;# 
  1234     0396                     IOCBF           equ	918	;# 
  1235     0415                     TMR4            equ	1045	;# 
  1236     0416                     PR4             equ	1046	;# 
  1237     0417                     T4CON           equ	1047	;# 
  1238     041C                     TMR6            equ	1052	;# 
  1239     041D                     PR6             equ	1053	;# 
  1240     041E                     T6CON           equ	1054	;# 
  1241     0791                     LCDCON          equ	1937	;# 
  1242     0792                     LCDPS           equ	1938	;# 
  1243     0793                     LCDREF          equ	1939	;# 
  1244     0794                     LCDCST          equ	1940	;# 
  1245     0795                     LCDRL           equ	1941	;# 
  1246     0798                     LCDSE0          equ	1944	;# 
  1247     0799                     LCDSE1          equ	1945	;# 
  1248     07A0                     LCDDATA0        equ	1952	;# 
  1249     07A1                     LCDDATA1        equ	1953	;# 
  1250     07A3                     LCDDATA3        equ	1955	;# 
  1251     07A4                     LCDDATA4        equ	1956	;# 
  1252     07A6                     LCDDATA6        equ	1958	;# 
  1253     07A7                     LCDDATA7        equ	1959	;# 
  1254     07A9                     LCDDATA9        equ	1961	;# 
  1255     07AA                     LCDDATA10       equ	1962	;# 
  1256     0FE4                     STATUS_SHAD     equ	4068	;# 
  1257     0FE5                     WREG_SHAD       equ	4069	;# 
  1258     0FE6                     BSR_SHAD        equ	4070	;# 
  1259     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1260     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1261     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1262     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1263     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1264     0FED                     STKPTR          equ	4077	;# 
  1265     0FEE                     TOSL            equ	4078	;# 
  1266     0FEF                     TOSH            equ	4079	;# 
  1267     0000                     INDF0           equ	0	;# 
  1268     0001                     INDF1           equ	1	;# 
  1269     0002                     PCL             equ	2	;# 
  1270     0003                     STATUS          equ	3	;# 
  1271     0004                     FSR0L           equ	4	;# 
  1272     0005                     FSR0H           equ	5	;# 
  1273     0006                     FSR1L           equ	6	;# 
  1274     0007                     FSR1H           equ	7	;# 
  1275     0008                     BSR             equ	8	;# 
  1276     0009                     WREG            equ	9	;# 
  1277     000A                     PCLATH          equ	10	;# 
  1278     000B                     INTCON          equ	11	;# 
  1279     000C                     PORTA           equ	12	;# 
  1280     000D                     PORTB           equ	13	;# 
  1281     000E                     PORTC           equ	14	;# 
  1282     0010                     PORTE           equ	16	;# 
  1283     0011                     PIR1            equ	17	;# 
  1284     0012                     PIR2            equ	18	;# 
  1285     0013                     PIR3            equ	19	;# 
  1286     0015                     TMR0            equ	21	;# 
  1287     0016                     TMR1            equ	22	;# 
  1288     0016                     TMR1L           equ	22	;# 
  1289     0017                     TMR1H           equ	23	;# 
  1290     0018                     T1CON           equ	24	;# 
  1291     0019                     T1GCON          equ	25	;# 
  1292     001A                     TMR2            equ	26	;# 
  1293     001B                     PR2             equ	27	;# 
  1294     001C                     T2CON           equ	28	;# 
  1295     001E                     CPSCON0         equ	30	;# 
  1296     001F                     CPSCON1         equ	31	;# 
  1297     008C                     TRISA           equ	140	;# 
  1298     008D                     TRISB           equ	141	;# 
  1299     008E                     TRISC           equ	142	;# 
  1300     0090                     TRISE           equ	144	;# 
  1301     0091                     PIE1            equ	145	;# 
  1302     0092                     PIE2            equ	146	;# 
  1303     0093                     PIE3            equ	147	;# 
  1304     0095                     OPTION_REG      equ	149	;# 
  1305     0096                     PCON            equ	150	;# 
  1306     0097                     WDTCON          equ	151	;# 
  1307     0098                     OSCTUNE         equ	152	;# 
  1308     0099                     OSCCON          equ	153	;# 
  1309     009A                     OSCSTAT         equ	154	;# 
  1310     009B                     ADRES           equ	155	;# 
  1311     009B                     ADRESL          equ	155	;# 
  1312     009C                     ADRESH          equ	156	;# 
  1313     009D                     ADCON0          equ	157	;# 
  1314     009E                     ADCON1          equ	158	;# 
  1315     010C                     LATA            equ	268	;# 
  1316     010D                     LATB            equ	269	;# 
  1317     010E                     LATC            equ	270	;# 
  1318     0110                     LATE            equ	272	;# 
  1319     0111                     CM1CON0         equ	273	;# 
  1320     0112                     CM1CON1         equ	274	;# 
  1321     0113                     CM2CON0         equ	275	;# 
  1322     0114                     CM2CON1         equ	276	;# 
  1323     0115                     CMOUT           equ	277	;# 
  1324     0116                     BORCON          equ	278	;# 
  1325     0117                     FVRCON          equ	279	;# 
  1326     0118                     DACCON0         equ	280	;# 
  1327     0119                     DACCON1         equ	281	;# 
  1328     011A                     SRCON0          equ	282	;# 
  1329     011B                     SRCON1          equ	283	;# 
  1330     011D                     APFCON          equ	285	;# 
  1331     018C                     ANSELA          equ	396	;# 
  1332     018D                     ANSELB          equ	397	;# 
  1333     0191                     EEADR           equ	401	;# 
  1334     0191                     EEADRL          equ	401	;# 
  1335     0192                     EEADRH          equ	402	;# 
  1336     0193                     EEDAT           equ	403	;# 
  1337     0193                     EEDATL          equ	403	;# 
  1338     0193                     EEDATA          equ	403	;# 
  1339     0194                     EEDATH          equ	404	;# 
  1340     0195                     EECON1          equ	405	;# 
  1341     0196                     EECON2          equ	406	;# 
  1342     0199                     RCREG           equ	409	;# 
  1343     019A                     TXREG           equ	410	;# 
  1344     019B                     SP1BRG          equ	411	;# 
  1345     019B                     SP1BRGL         equ	411	;# 
  1346     019B                     SPBRG           equ	411	;# 
  1347     019B                     SPBRGL          equ	411	;# 
  1348     019C                     SP1BRGH         equ	412	;# 
  1349     019C                     SPBRGH          equ	412	;# 
  1350     019D                     RCSTA           equ	413	;# 
  1351     019E                     TXSTA           equ	414	;# 
  1352     019F                     BAUDCON         equ	415	;# 
  1353     020D                     WPUB            equ	525	;# 
  1354     0210                     WPUE            equ	528	;# 
  1355     0211                     SSPBUF          equ	529	;# 
  1356     0212                     SSPADD          equ	530	;# 
  1357     0213                     SSPMSK          equ	531	;# 
  1358     0214                     SSPSTAT         equ	532	;# 
  1359     0215                     SSPCON1         equ	533	;# 
  1360     0215                     SSPCON          equ	533	;# 
  1361     0216                     SSPCON2         equ	534	;# 
  1362     0217                     SSPCON3         equ	535	;# 
  1363     0291                     CCPR1           equ	657	;# 
  1364     0291                     CCPR1L          equ	657	;# 
  1365     0292                     CCPR1H          equ	658	;# 
  1366     0293                     CCP1CON         equ	659	;# 
  1367     0294                     PWM1CON         equ	660	;# 
  1368     0295                     CCP1AS          equ	661	;# 
  1369     0295                     ECCP1AS         equ	661	;# 
  1370     0296                     PSTR1CON        equ	662	;# 
  1371     0298                     CCPR2           equ	664	;# 
  1372     0298                     CCPR2L          equ	664	;# 
  1373     0299                     CCPR2H          equ	665	;# 
  1374     029A                     CCP2CON         equ	666	;# 
  1375     029B                     PWM2CON         equ	667	;# 
  1376     029C                     CCP2AS          equ	668	;# 
  1377     029C                     ECCP2AS         equ	668	;# 
  1378     029D                     PSTR2CON        equ	669	;# 
  1379     029E                     CCPTMRS0        equ	670	;# 
  1380     029F                     CCPTMRS1        equ	671	;# 
  1381     0311                     CCPR3           equ	785	;# 
  1382     0311                     CCPR3L          equ	785	;# 
  1383     0312                     CCPR3H          equ	786	;# 
  1384     0313                     CCP3CON         equ	787	;# 
  1385     0314                     PWM3CON         equ	788	;# 
  1386     0315                     CCP3AS          equ	789	;# 
  1387     0315                     ECCP3AS         equ	789	;# 
  1388     0316                     PSTR3CON        equ	790	;# 
  1389     0318                     CCPR4           equ	792	;# 
  1390     0318                     CCPR4L          equ	792	;# 
  1391     0319                     CCPR4H          equ	793	;# 
  1392     031A                     CCP4CON         equ	794	;# 
  1393     031C                     CCPR5           equ	796	;# 
  1394     031C                     CCPR5L          equ	796	;# 
  1395     031D                     CCPR5H          equ	797	;# 
  1396     031E                     CCP5CON         equ	798	;# 
  1397     0394                     IOCBP           equ	916	;# 
  1398     0395                     IOCBN           equ	917	;# 
  1399     0396                     IOCBF           equ	918	;# 
  1400     0415                     TMR4            equ	1045	;# 
  1401     0416                     PR4             equ	1046	;# 
  1402     0417                     T4CON           equ	1047	;# 
  1403     041C                     TMR6            equ	1052	;# 
  1404     041D                     PR6             equ	1053	;# 
  1405     041E                     T6CON           equ	1054	;# 
  1406     0791                     LCDCON          equ	1937	;# 
  1407     0792                     LCDPS           equ	1938	;# 
  1408     0793                     LCDREF          equ	1939	;# 
  1409     0794                     LCDCST          equ	1940	;# 
  1410     0795                     LCDRL           equ	1941	;# 
  1411     0798                     LCDSE0          equ	1944	;# 
  1412     0799                     LCDSE1          equ	1945	;# 
  1413     07A0                     LCDDATA0        equ	1952	;# 
  1414     07A1                     LCDDATA1        equ	1953	;# 
  1415     07A3                     LCDDATA3        equ	1955	;# 
  1416     07A4                     LCDDATA4        equ	1956	;# 
  1417     07A6                     LCDDATA6        equ	1958	;# 
  1418     07A7                     LCDDATA7        equ	1959	;# 
  1419     07A9                     LCDDATA9        equ	1961	;# 
  1420     07AA                     LCDDATA10       equ	1962	;# 
  1421     0FE4                     STATUS_SHAD     equ	4068	;# 
  1422     0FE5                     WREG_SHAD       equ	4069	;# 
  1423     0FE6                     BSR_SHAD        equ	4070	;# 
  1424     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1425     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1426     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1427     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1428     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1429     0FED                     STKPTR          equ	4077	;# 
  1430     0FEE                     TOSL            equ	4078	;# 
  1431     0FEF                     TOSH            equ	4079	;# 
  1432     0000                     INDF0           equ	0	;# 
  1433     0001                     INDF1           equ	1	;# 
  1434     0002                     PCL             equ	2	;# 
  1435     0003                     STATUS          equ	3	;# 
  1436     0004                     FSR0L           equ	4	;# 
  1437     0005                     FSR0H           equ	5	;# 
  1438     0006                     FSR1L           equ	6	;# 
  1439     0007                     FSR1H           equ	7	;# 
  1440     0008                     BSR             equ	8	;# 
  1441     0009                     WREG            equ	9	;# 
  1442     000A                     PCLATH          equ	10	;# 
  1443     000B                     INTCON          equ	11	;# 
  1444     000C                     PORTA           equ	12	;# 
  1445     000D                     PORTB           equ	13	;# 
  1446     000E                     PORTC           equ	14	;# 
  1447     0010                     PORTE           equ	16	;# 
  1448     0011                     PIR1            equ	17	;# 
  1449     0012                     PIR2            equ	18	;# 
  1450     0013                     PIR3            equ	19	;# 
  1451     0015                     TMR0            equ	21	;# 
  1452     0016                     TMR1            equ	22	;# 
  1453     0016                     TMR1L           equ	22	;# 
  1454     0017                     TMR1H           equ	23	;# 
  1455     0018                     T1CON           equ	24	;# 
  1456     0019                     T1GCON          equ	25	;# 
  1457     001A                     TMR2            equ	26	;# 
  1458     001B                     PR2             equ	27	;# 
  1459     001C                     T2CON           equ	28	;# 
  1460     001E                     CPSCON0         equ	30	;# 
  1461     001F                     CPSCON1         equ	31	;# 
  1462     008C                     TRISA           equ	140	;# 
  1463     008D                     TRISB           equ	141	;# 
  1464     008E                     TRISC           equ	142	;# 
  1465     0090                     TRISE           equ	144	;# 
  1466     0091                     PIE1            equ	145	;# 
  1467     0092                     PIE2            equ	146	;# 
  1468     0093                     PIE3            equ	147	;# 
  1469     0095                     OPTION_REG      equ	149	;# 
  1470     0096                     PCON            equ	150	;# 
  1471     0097                     WDTCON          equ	151	;# 
  1472     0098                     OSCTUNE         equ	152	;# 
  1473     0099                     OSCCON          equ	153	;# 
  1474     009A                     OSCSTAT         equ	154	;# 
  1475     009B                     ADRES           equ	155	;# 
  1476     009B                     ADRESL          equ	155	;# 
  1477     009C                     ADRESH          equ	156	;# 
  1478     009D                     ADCON0          equ	157	;# 
  1479     009E                     ADCON1          equ	158	;# 
  1480     010C                     LATA            equ	268	;# 
  1481     010D                     LATB            equ	269	;# 
  1482     010E                     LATC            equ	270	;# 
  1483     0110                     LATE            equ	272	;# 
  1484     0111                     CM1CON0         equ	273	;# 
  1485     0112                     CM1CON1         equ	274	;# 
  1486     0113                     CM2CON0         equ	275	;# 
  1487     0114                     CM2CON1         equ	276	;# 
  1488     0115                     CMOUT           equ	277	;# 
  1489     0116                     BORCON          equ	278	;# 
  1490     0117                     FVRCON          equ	279	;# 
  1491     0118                     DACCON0         equ	280	;# 
  1492     0119                     DACCON1         equ	281	;# 
  1493     011A                     SRCON0          equ	282	;# 
  1494     011B                     SRCON1          equ	283	;# 
  1495     011D                     APFCON          equ	285	;# 
  1496     018C                     ANSELA          equ	396	;# 
  1497     018D                     ANSELB          equ	397	;# 
  1498     0191                     EEADR           equ	401	;# 
  1499     0191                     EEADRL          equ	401	;# 
  1500     0192                     EEADRH          equ	402	;# 
  1501     0193                     EEDAT           equ	403	;# 
  1502     0193                     EEDATL          equ	403	;# 
  1503     0193                     EEDATA          equ	403	;# 
  1504     0194                     EEDATH          equ	404	;# 
  1505     0195                     EECON1          equ	405	;# 
  1506     0196                     EECON2          equ	406	;# 
  1507     0199                     RCREG           equ	409	;# 
  1508     019A                     TXREG           equ	410	;# 
  1509     019B                     SP1BRG          equ	411	;# 
  1510     019B                     SP1BRGL         equ	411	;# 
  1511     019B                     SPBRG           equ	411	;# 
  1512     019B                     SPBRGL          equ	411	;# 
  1513     019C                     SP1BRGH         equ	412	;# 
  1514     019C                     SPBRGH          equ	412	;# 
  1515     019D                     RCSTA           equ	413	;# 
  1516     019E                     TXSTA           equ	414	;# 
  1517     019F                     BAUDCON         equ	415	;# 
  1518     020D                     WPUB            equ	525	;# 
  1519     0210                     WPUE            equ	528	;# 
  1520     0211                     SSPBUF          equ	529	;# 
  1521     0212                     SSPADD          equ	530	;# 
  1522     0213                     SSPMSK          equ	531	;# 
  1523     0214                     SSPSTAT         equ	532	;# 
  1524     0215                     SSPCON1         equ	533	;# 
  1525     0215                     SSPCON          equ	533	;# 
  1526     0216                     SSPCON2         equ	534	;# 
  1527     0217                     SSPCON3         equ	535	;# 
  1528     0291                     CCPR1           equ	657	;# 
  1529     0291                     CCPR1L          equ	657	;# 
  1530     0292                     CCPR1H          equ	658	;# 
  1531     0293                     CCP1CON         equ	659	;# 
  1532     0294                     PWM1CON         equ	660	;# 
  1533     0295                     CCP1AS          equ	661	;# 
  1534     0295                     ECCP1AS         equ	661	;# 
  1535     0296                     PSTR1CON        equ	662	;# 
  1536     0298                     CCPR2           equ	664	;# 
  1537     0298                     CCPR2L          equ	664	;# 
  1538     0299                     CCPR2H          equ	665	;# 
  1539     029A                     CCP2CON         equ	666	;# 
  1540     029B                     PWM2CON         equ	667	;# 
  1541     029C                     CCP2AS          equ	668	;# 
  1542     029C                     ECCP2AS         equ	668	;# 
  1543     029D                     PSTR2CON        equ	669	;# 
  1544     029E                     CCPTMRS0        equ	670	;# 
  1545     029F                     CCPTMRS1        equ	671	;# 
  1546     0311                     CCPR3           equ	785	;# 
  1547     0311                     CCPR3L          equ	785	;# 
  1548     0312                     CCPR3H          equ	786	;# 
  1549     0313                     CCP3CON         equ	787	;# 
  1550     0314                     PWM3CON         equ	788	;# 
  1551     0315                     CCP3AS          equ	789	;# 
  1552     0315                     ECCP3AS         equ	789	;# 
  1553     0316                     PSTR3CON        equ	790	;# 
  1554     0318                     CCPR4           equ	792	;# 
  1555     0318                     CCPR4L          equ	792	;# 
  1556     0319                     CCPR4H          equ	793	;# 
  1557     031A                     CCP4CON         equ	794	;# 
  1558     031C                     CCPR5           equ	796	;# 
  1559     031C                     CCPR5L          equ	796	;# 
  1560     031D                     CCPR5H          equ	797	;# 
  1561     031E                     CCP5CON         equ	798	;# 
  1562     0394                     IOCBP           equ	916	;# 
  1563     0395                     IOCBN           equ	917	;# 
  1564     0396                     IOCBF           equ	918	;# 
  1565     0415                     TMR4            equ	1045	;# 
  1566     0416                     PR4             equ	1046	;# 
  1567     0417                     T4CON           equ	1047	;# 
  1568     041C                     TMR6            equ	1052	;# 
  1569     041D                     PR6             equ	1053	;# 
  1570     041E                     T6CON           equ	1054	;# 
  1571     0791                     LCDCON          equ	1937	;# 
  1572     0792                     LCDPS           equ	1938	;# 
  1573     0793                     LCDREF          equ	1939	;# 
  1574     0794                     LCDCST          equ	1940	;# 
  1575     0795                     LCDRL           equ	1941	;# 
  1576     0798                     LCDSE0          equ	1944	;# 
  1577     0799                     LCDSE1          equ	1945	;# 
  1578     07A0                     LCDDATA0        equ	1952	;# 
  1579     07A1                     LCDDATA1        equ	1953	;# 
  1580     07A3                     LCDDATA3        equ	1955	;# 
  1581     07A4                     LCDDATA4        equ	1956	;# 
  1582     07A6                     LCDDATA6        equ	1958	;# 
  1583     07A7                     LCDDATA7        equ	1959	;# 
  1584     07A9                     LCDDATA9        equ	1961	;# 
  1585     07AA                     LCDDATA10       equ	1962	;# 
  1586     0FE4                     STATUS_SHAD     equ	4068	;# 
  1587     0FE5                     WREG_SHAD       equ	4069	;# 
  1588     0FE6                     BSR_SHAD        equ	4070	;# 
  1589     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1590     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1591     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1592     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1593     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1594     0FED                     STKPTR          equ	4077	;# 
  1595     0FEE                     TOSL            equ	4078	;# 
  1596     0FEF                     TOSH            equ	4079	;# 
  1597                           
  1598                           	psect	idataBANK0
  1599     05CF                     __pidataBANK0:
  1600                           
  1601                           ;initializer for _LIN_timeout
  1602     05CF  340A               	retlw	10
  1603                           
  1604                           	psect	stringtext1
  1605     05A0                     __pstringtext1:
  1606     05A0                     _scheduleTable:
  1607     05A0  3401               	retlw	1
  1608     05A1  3401               	retlw	1
  1609     05A2  3408               	retlw	8
  1610     05A3  34A0               	retlw	low (_SW_STATE_Data| 0)
  1611     05A4  3400               	retlw	high (_SW_STATE_Data| 0)
  1612     05A5                     __end_of_scheduleTable:
  1613     0011                     _PIR1bits       set	17
  1614     000B                     _INTCONbits     set	11
  1615     0015                     _TMR0           set	21
  1616     0097                     _WDTCON         set	151
  1617     0098                     _OSCTUNE        set	152
  1618     0099                     _OSCCON         set	153
  1619     0095                     _OPTION_REG     set	149
  1620     0095                     _OPTION_REGbits set	149
  1621     008E                     _TRISC          set	142
  1622     008D                     _TRISB          set	141
  1623     008C                     _TRISA          set	140
  1624     0090                     _TRISE          set	144
  1625     0091                     _PIE1bits       set	145
  1626     04D6                     _PLLR           set	1238
  1627     0116                     _BORCON         set	278
  1628     011D                     _APFCON         set	285
  1629     010E                     _LATC           set	270
  1630     010D                     _LATB           set	269
  1631     010C                     _LATA           set	268
  1632     0110                     _LATE           set	272
  1633     010D                     _LATBbits       set	269
  1634     0199                     _RCREG          set	409
  1635     019A                     _TXREG          set	410
  1636     019E                     _TXSTA          set	414
  1637     019D                     _RCSTA          set	413
  1638     019F                     _BAUDCON        set	415
  1639     018C                     _ANSELA         set	396
  1640     018D                     _ANSELB         set	397
  1641     019D                     _RCSTAbits      set	413
  1642     019E                     _TXSTAbits      set	414
  1643     019F                     _BAUDCONbits    set	415
  1644     020D                     _WPUB           set	525
  1645     0210                     _WPUE           set	528
  1646                           
  1647                           	psect	cinit
  1648     003A                     start_initialization:	
  1649                           ; #config settings
  1650                           
  1651     003A                     __initialization:
  1652                           
  1653                           ; Initialize objects allocated to BANK0
  1654     003A  3185  25CF  3180   	fcall	__pidataBANK0	;fetch initializer
  1655     003D  00EC               	movwf	__pdataBANK0& (0+127)
  1656                           
  1657                           ; Clear objects allocated to BANK0
  1658     003E  3020               	movlw	low __pbssBANK0
  1659     003F  0084               	movwf	4
  1660     0040  3000               	movlw	high __pbssBANK0
  1661     0041  0085               	movwf	5
  1662     0042  3043               	movlw	67
  1663     0043  3185  2576  3180   	fcall	clear_ram0
  1664                           
  1665                           ; Clear objects allocated to BANK1
  1666     0046  30A0               	movlw	low __pbssBANK1
  1667     0047  0084               	movwf	4
  1668     0048  3000               	movlw	high __pbssBANK1
  1669     0049  0085               	movwf	5
  1670     004A  3008               	movlw	8
  1671     004B  3185  2576  3180   	fcall	clear_ram0
  1672     004E                     end_of_initialization:	
  1673                           ;End of C runtime variable initialization code
  1674                           
  1675     004E                     __end_of__initialization:
  1676     004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1677     004F  0020               	movlb	0
  1678     0050  3185  2D5A         	ljmp	_main	;jump to C main() function
  1679                           
  1680                           	psect	bssBANK0
  1681     0020                     __pbssBANK0:
  1682     0020                     _eusartRxStatusBuffer:
  1683     0020                     	ds	8
  1684     0028                     _eusartRxBuffer:
  1685     0028                     	ds	8
  1686     0030                     _eusartTxBuffer:
  1687     0030                     	ds	8
  1688     0038                     _TMR0_InterruptHandler:
  1689     0038                     	ds	2
  1690     003A                     _EUSART_ErrorHandler:
  1691     003A                     	ds	2
  1692     003C                     _EUSART_OverrunErrorHandler:
  1693     003C                     	ds	2
  1694     003E                     _EUSART_FramingErrorHandler:
  1695     003E                     	ds	2
  1696     0040                     _EUSART_RxDefaultInterruptHandler:
  1697     0040                     	ds	2
  1698     0042                     _EUSART_TxDefaultInterruptHandler:
  1699     0042                     	ds	2
  1700     0044                     _LIN_rxCommand:
  1701     0044                     	ds	2
  1702     0046                     _LIN_processData:
  1703     0046                     	ds	2
  1704     0048                     _timer0ReloadVal:
  1705     0048                     	ds	1
  1706     0049                     _eusartRxLastError:
  1707     0049                     	ds	1
  1708     004A                     _eusartRxCount:
  1709     004A                     	ds	1
  1710     004B                     _eusartRxTail:
  1711     004B                     	ds	1
  1712     004C                     _eusartRxHead:
  1713     004C                     	ds	1
  1714     004D                     _eusartTxBufferRemaining:
  1715     004D                     	ds	1
  1716     004E                     _eusartTxTail:
  1717     004E                     	ds	1
  1718     004F                     _eusartTxHead:
  1719     004F                     	ds	1
  1720     0050                     LIN_handler@rxDataIndex:
  1721     0050                     	ds	1
  1722     0051                     LIN_handler@LIN_rxState:
  1723     0051                     	ds	1
  1724     0052                     _CountCallBack:
  1725     0052                     	ds	1
  1726     0053                     _LIN_timerRunning:
  1727     0053                     	ds	1
  1728     0054                     _LIN_rxCommandLength:
  1729     0054                     	ds	1
  1730     0055                     _LIN_rxInProgress:
  1731     0055                     	ds	1
  1732     0056                     _LIN_packet:
  1733     0056                     	ds	13
  1734                           
  1735                           	psect	dataBANK0
  1736     006C                     __pdataBANK0:
  1737     006C                     _LIN_timeout:
  1738     006C                     	ds	1
  1739                           
  1740                           	psect	bssBANK1
  1741     00A0                     __pbssBANK1:
  1742     00A0                     _SW_STATE_Data:
  1743     00A0                     	ds	8
  1744                           
  1745                           	psect	clrtext
  1746     0576                     clear_ram0:	
  1747                           ;	Called with FSR0 containing the base address, and
  1748                           ;	WREG with the size to clear
  1749                           
  1750     0576  0064               	clrwdt	;clear the watchdog before getting into this loop
  1751     0577                     clrloop0:
  1752     0577  0180               	clrf	0	;clear RAM location pointed to by FSR
  1753     0578  3101               	addfsr 0,1
  1754     0579  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1755     057A  2D77               	goto	clrloop0	;have we reached the end yet?
  1756     057B  3400               	retlw	0	;all done for this memory range, return
  1757                           
  1758                           	psect	cstackBANK1
  1759     00A8                     __pcstackBANK1:
  1760     00A8                     ??_LIN_handler:
  1761                           
  1762                           ; 1 bytes @ 0x0
  1763     00A8                     	ds	5
  1764                           
  1765                           	psect	cstackCOMMON
  1766     0070                     __pcstackCOMMON:
  1767     0070                     ?_processLIN:
  1768     0070                     ?_LIN_stopTimer:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771     0070                     ?_LIN_enableRx:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774     0070                     ?_LIN_setTimerHandler:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777     0070                     ?_LIN_getChecksum:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780     0070                     ?_LIN_startTimer:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783     0070                     ?_LIN_disableRx:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786     0070                     ?_EUSART_Initialize:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789     0070                     ?_EUSART_is_rx_ready:	
  1790                           ; 1 bytes @ 0x0
  1791                           
  1792     0070                     ?_EUSART_Read:	
  1793                           ; 1 bytes @ 0x0
  1794                           
  1795     0070                     ?_LIN_checkPID:	
  1796                           ; 1 bytes @ 0x0
  1797                           
  1798     0070                     ?_LIN_getFromTable:	
  1799                           ; 1 bytes @ 0x0
  1800                           
  1801     0070                     ?_EUSART_Write:	
  1802                           ; 1 bytes @ 0x0
  1803                           
  1804     0070                     ?_LIN_calcParity:	
  1805                           ; 1 bytes @ 0x0
  1806                           
  1807     0070                     ?_TMR0_WriteTimer:	
  1808                           ; 1 bytes @ 0x0
  1809                           
  1810     0070                     ?_TMR0_SetInterruptHandler:	
  1811                           ; 1 bytes @ 0x0
  1812                           
  1813     0070                     ?_EUSART_SetRxInterruptHandler:	
  1814                           ; 1 bytes @ 0x0
  1815                           
  1816     0070                     ?_EUSART_Receive_ISR:	
  1817                           ; 1 bytes @ 0x0
  1818                           
  1819     0070                     ?_EUSART_SetTxInterruptHandler:	
  1820                           ; 1 bytes @ 0x0
  1821                           
  1822     0070                     ?_EUSART_Transmit_ISR:	
  1823                           ; 1 bytes @ 0x0
  1824                           
  1825     0070                     ?_EUSART_SetFramingErrorHandler:	
  1826                           ; 1 bytes @ 0x0
  1827                           
  1828     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1829                           ; 1 bytes @ 0x0
  1830                           
  1831     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1832                           ; 1 bytes @ 0x0
  1833                           
  1834     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1835                           ; 1 bytes @ 0x0
  1836                           
  1837     0070                     ?_EUSART_SetErrorHandler:	
  1838                           ; 1 bytes @ 0x0
  1839                           
  1840     0070                     ?_EUSART_DefaultErrorHandler:	
  1841                           ; 1 bytes @ 0x0
  1842                           
  1843     0070                     ?_EUSART_RxDataHandler:	
  1844                           ; 1 bytes @ 0x0
  1845                           
  1846     0070                     ?_TMR0_DefaultInterruptHandler:	
  1847                           ; 1 bytes @ 0x0
  1848                           
  1849     0070                     ?_OSCILLATOR_Initialize:	
  1850                           ; 1 bytes @ 0x0
  1851                           
  1852     0070                     ?_WDT_Initialize:	
  1853                           ; 1 bytes @ 0x0
  1854                           
  1855     0070                     ?_LIN_Slave_Initialize:	
  1856                           ; 1 bytes @ 0x0
  1857                           
  1858     0070                     ?_LIN_queuePacket:	
  1859                           ; 1 bytes @ 0x0
  1860                           
  1861     0070                     ?_AutoBaud_Detect_ON:	
  1862                           ; 1 bytes @ 0x0
  1863                           
  1864     0070                     ?_LIN_handler:	
  1865                           ; 1 bytes @ 0x0
  1866                           
  1867     0070                     ?_LIN_timerHandler:	
  1868                           ; 1 bytes @ 0x0
  1869                           
  1870     0070                     ?_PIN_MANAGER_Initialize:	
  1871                           ; 1 bytes @ 0x0
  1872                           
  1873     0070                     ?_TMR0_Initialize:	
  1874                           ; 1 bytes @ 0x0
  1875                           
  1876     0070                     ?_TMR0_ISR:	
  1877                           ; 1 bytes @ 0x0
  1878                           
  1879     0070                     ?_INTERRUPT_InterruptManager:	
  1880                           ; 1 bytes @ 0x0
  1881                           
  1882     0070                     ?_SYSTEM_Initialize:	
  1883                           ; 1 bytes @ 0x0
  1884                           
  1885     0070                     ?_main:	
  1886                           ; 1 bytes @ 0x0
  1887                           
  1888     0070                     ?i1_LIN_stopTimer:	
  1889                           ; 1 bytes @ 0x0
  1890                           
  1891     0070                     ?_memcpy:	
  1892                           ; 1 bytes @ 0x0
  1893                           
  1894     0070                     ?_memset:	
  1895                           ; 2 bytes @ 0x0
  1896                           
  1897     0070                     LIN_getFromTable@param:	
  1898                           ; 2 bytes @ 0x0
  1899                           
  1900     0070                     LIN_getChecksum@pid:	
  1901                           ; 1 bytes @ 0x0
  1902                           
  1903     0070                     EUSART_Read@readValue:	
  1904                           ; 1 bytes @ 0x0
  1905                           
  1906     0070                     EUSART_Write@txData:	
  1907                           ; 1 bytes @ 0x0
  1908                           
  1909     0070                     TMR0_WriteTimer@timerVal:	
  1910                           ; 1 bytes @ 0x0
  1911                           
  1912     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1913                           ; 1 bytes @ 0x0
  1914                           
  1915     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1916                           ; 2 bytes @ 0x0
  1917                           
  1918     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1919                           ; 2 bytes @ 0x0
  1920                           
  1921     0070                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1922                           ; 2 bytes @ 0x0
  1923                           
  1924     0070                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1925                           ; 2 bytes @ 0x0
  1926                           
  1927     0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  1928                           ; 2 bytes @ 0x0
  1929                           
  1930     0070                     memcpy@d1:	
  1931                           ; 2 bytes @ 0x0
  1932                           
  1933     0070                     memset@dest:	
  1934                           ; 2 bytes @ 0x0
  1935                           
  1936     0070                     ??_LIN_stopTimer:	
  1937                           ; 2 bytes @ 0x0
  1938                           
  1939     0070                     ??_LIN_enableRx:	
  1940                           ; 1 bytes @ 0x0
  1941                           
  1942     0070                     ??_LIN_disableRx:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945     0070                     ??_EUSART_is_rx_ready:	
  1946                           ; 1 bytes @ 0x0
  1947                           
  1948     0070                     ??_EUSART_Read:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951     0070                     ??_EUSART_Write:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954     0070                     ??_LIN_calcParity:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957     0070                     ??_TMR0_WriteTimer:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960     0070                     ??_EUSART_Receive_ISR:	
  1961                           ; 1 bytes @ 0x0
  1962                           
  1963     0070                     ??_EUSART_Transmit_ISR:	
  1964                           ; 1 bytes @ 0x0
  1965                           
  1966     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972     0070                     ??_EUSART_DefaultErrorHandler:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975     0070                     ??_EUSART_RxDataHandler:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978     0070                     ??_TMR0_DefaultInterruptHandler:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981     0070                     ??_OSCILLATOR_Initialize:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984     0070                     ??_WDT_Initialize:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987     0070                     ??_AutoBaud_Detect_ON:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990     0070                     ??_LIN_timerHandler:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993     0070                     ??_PIN_MANAGER_Initialize:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996     0070                     ??_TMR0_ISR:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999     0070                     ??_INTERRUPT_InterruptManager:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002     0070                     ??i1_LIN_stopTimer:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005                           
  2006                           ; 1 bytes @ 0x0
  2007     0070                     	ds	1
  2008     0071                     LIN_calcParity@CMD:
  2009     0071                     LIN_startTimer@timeout:	
  2010                           ; 1 bytes @ 0x1
  2011                           
  2012     0071                     LIN_getChecksum@data:	
  2013                           ; 1 bytes @ 0x1
  2014                           
  2015     0071                     ??_LIN_startTimer:	
  2016                           ; 2 bytes @ 0x1
  2017                           
  2018     0071                     ??_LIN_getFromTable:	
  2019                           ; 1 bytes @ 0x1
  2020                           
  2021                           
  2022                           ; 1 bytes @ 0x1
  2023     0071                     	ds	1
  2024     0072                     ?_LIN_init:
  2025     0072                     LIN_calcParity@PID:	
  2026                           ; 1 bytes @ 0x2
  2027                           
  2028     0072                     LIN_init@command:	
  2029                           ; 1 bytes @ 0x2
  2030                           
  2031     0072                     memcpy@s1:	
  2032                           ; 2 bytes @ 0x2
  2033                           
  2034     0072                     memset@c:	
  2035                           ; 2 bytes @ 0x2
  2036                           
  2037     0072                     ??_LIN_setTimerHandler:	
  2038                           ; 2 bytes @ 0x2
  2039                           
  2040     0072                     ??_EUSART_Initialize:	
  2041                           ; 1 bytes @ 0x2
  2042                           
  2043     0072                     ??_TMR0_SetInterruptHandler:	
  2044                           ; 1 bytes @ 0x2
  2045                           
  2046     0072                     ??_EUSART_SetRxInterruptHandler:	
  2047                           ; 1 bytes @ 0x2
  2048                           
  2049     0072                     ??_EUSART_SetTxInterruptHandler:	
  2050                           ; 1 bytes @ 0x2
  2051                           
  2052     0072                     ??_EUSART_SetFramingErrorHandler:	
  2053                           ; 1 bytes @ 0x2
  2054                           
  2055     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2056                           ; 1 bytes @ 0x2
  2057                           
  2058     0072                     ??_EUSART_SetErrorHandler:	
  2059                           ; 1 bytes @ 0x2
  2060                           
  2061     0072                     ??_TMR0_Initialize:	
  2062                           ; 1 bytes @ 0x2
  2063                           
  2064                           
  2065                           ; 1 bytes @ 0x2
  2066     0072                     	ds	1
  2067     0073                     LIN_getFromTable@cmd:
  2068     0073                     ??_LIN_getChecksum:	
  2069                           ; 1 bytes @ 0x3
  2070                           
  2071                           
  2072                           ; 1 bytes @ 0x3
  2073     0073                     	ds	1
  2074     0074                     LIN_getFromTable@length:
  2075     0074                     LIN_init@processData:	
  2076                           ; 1 bytes @ 0x4
  2077                           
  2078     0074                     memcpy@n:	
  2079                           ; 2 bytes @ 0x4
  2080                           
  2081     0074                     memset@n:	
  2082                           ; 2 bytes @ 0x4
  2083                           
  2084                           
  2085                           ; 2 bytes @ 0x4
  2086     0074                     	ds	1
  2087     0075                     LIN_getChecksum@length:
  2088     0075                     LIN_getFromTable@rxCommand:	
  2089                           ; 1 bytes @ 0x5
  2090                           
  2091                           
  2092                           ; 2 bytes @ 0x5
  2093     0075                     	ds	1
  2094     0076                     LIN_init@tableLength:
  2095     0076                     LIN_getChecksum@i:	
  2096                           ; 1 bytes @ 0x6
  2097                           
  2098     0076                     memcpy@tmp:	
  2099                           ; 1 bytes @ 0x6
  2100                           
  2101     0076                     memset@p:	
  2102                           ; 1 bytes @ 0x6
  2103                           
  2104     0076                     ??_LIN_init:	
  2105                           ; 1 bytes @ 0x6
  2106                           
  2107     0076                     ??_memcpy:	
  2108                           ; 1 bytes @ 0x6
  2109                           
  2110     0076                     ??_memset:	
  2111                           ; 1 bytes @ 0x6
  2112                           
  2113                           
  2114                           ; 1 bytes @ 0x6
  2115     0076                     	ds	1
  2116     0077                     LIN_checkPID@pid:
  2117     0077                     memcpy@d:	
  2118                           ; 1 bytes @ 0x7
  2119                           
  2120     0077                     LIN_getChecksum@checksum:	
  2121                           ; 1 bytes @ 0x7
  2122                           
  2123     0077                     ??_LIN_checkPID:	
  2124                           ; 2 bytes @ 0x7
  2125                           
  2126     0077                     ??_LIN_Slave_Initialize:	
  2127                           ; 1 bytes @ 0x7
  2128                           
  2129     0077                     ??_SYSTEM_Initialize:	
  2130                           ; 1 bytes @ 0x7
  2131                           
  2132                           
  2133                           ; 1 bytes @ 0x7
  2134     0077                     	ds	1
  2135     0078                     memcpy@s:
  2136                           
  2137                           ; 1 bytes @ 0x8
  2138     0078                     	ds	1
  2139     0079                     ?_LIN_getPacket:
  2140     0079                     ?_LIN_sendPacket:	
  2141                           ; 1 bytes @ 0x9
  2142                           
  2143     0079                     LIN_sendPacket@pid:	
  2144                           ; 1 bytes @ 0x9
  2145                           
  2146     0079                     LIN_getPacket@data:	
  2147                           ; 1 bytes @ 0x9
  2148                           
  2149                           
  2150                           ; 1 bytes @ 0x9
  2151     0079                     	ds	1
  2152     007A                     LIN_getPacket@cmd:
  2153     007A                     LIN_sendPacket@data:	
  2154                           ; 1 bytes @ 0xA
  2155                           
  2156     007A                     ??_LIN_getPacket:	
  2157                           ; 2 bytes @ 0xA
  2158                           
  2159                           
  2160                           ; 1 bytes @ 0xA
  2161     007A                     	ds	1
  2162     007B                     ??_processLIN:
  2163                           
  2164                           ; 1 bytes @ 0xB
  2165     007B                     	ds	1
  2166     007C                     LIN_sendPacket@length:
  2167     007C                     ??_LIN_sendPacket:	
  2168                           ; 1 bytes @ 0xC
  2169                           
  2170                           
  2171                           ; 1 bytes @ 0xC
  2172     007C                     	ds	1
  2173     007D                     LIN_sendPacket@i:
  2174                           
  2175                           ; 1 bytes @ 0xD
  2176     007D                     	ds	1
  2177     007E                     ??_main:
  2178                           
  2179                           	psect	cstackBANK0
  2180     0063                     __pcstackBANK0:	
  2181                           ; 1 bytes @ 0xE
  2182                           
  2183     0063                     processLIN@tempRxData:
  2184     0063                     ??_LIN_queuePacket:	
  2185                           ; 8 bytes @ 0x0
  2186                           
  2187                           
  2188                           ; 1 bytes @ 0x0
  2189     0063                     	ds	1
  2190     0064                     LIN_queuePacket@cmd:
  2191                           
  2192                           ; 1 bytes @ 0x1
  2193     0064                     	ds	1
  2194     0065                     LIN_queuePacket@i:
  2195                           
  2196                           ; 1 bytes @ 0x2
  2197     0065                     	ds	1
  2198     0066                     LIN_queuePacket@tempSchedule:
  2199                           
  2200                           ; 2 bytes @ 0x3
  2201     0066                     	ds	5
  2202     006B                     processLIN@cmd:
  2203                           
  2204                           ; 1 bytes @ 0x8
  2205     006B                     	ds	1
  2206                           
  2207                           	psect	maintext
  2208     055A                     __pmaintext:	
  2209 ;;
  2210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2211 ;;
  2212 ;; *************** function _main *****************
  2213 ;; Defined at:
  2214 ;;		line 73 in file "main.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : B1F/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2228 ;;      Params:         0       0       0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels required when called: 9
  2234 ;; This function calls:
  2235 ;;		_LIN_handler
  2236 ;;		_SYSTEM_Initialize
  2237 ;; This function is called by:
  2238 ;;		Startup code after reset
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242     055A                     _main:	
  2243                           ;psect for function _main
  2244                           
  2245     055A                     l2344:	
  2246                           ;incstack = 0
  2247                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2248                           
  2249                           
  2250                           ;main.c: 75:   SYSTEM_Initialize();
  2251     055A  3185  2504  3185   	fcall	_SYSTEM_Initialize
  2252     055D                     l2346:
  2253                           
  2254                           ;main.c: 81:   (INTCONbits.GIE = 1);
  2255     055D  178B               	bsf	11,7	;volatile
  2256     055E                     l2348:
  2257                           
  2258                           ;main.c: 84:   (INTCONbits.PEIE = 1);
  2259     055E  170B               	bsf	11,6	;volatile
  2260     055F                     l2350:
  2261                           
  2262                           ;main.c: 94:     LIN_handler();
  2263     055F  3180  2052  3185   	fcall	_LIN_handler
  2264     0562  2D5F               	goto	l2350
  2265     0563  3180  2838         	ljmp	start
  2266     0565                     __end_of_main:
  2267                           
  2268                           	psect	text1
  2269     0504                     __ptext1:	
  2270 ;; *************** function _SYSTEM_Initialize *****************
  2271 ;; Defined at:
  2272 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, pclath, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2286 ;;      Params:         0       0       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 8
  2293 ;; This function calls:
  2294 ;;		_EUSART_Initialize
  2295 ;;		_LIN_Slave_Initialize
  2296 ;;		_OSCILLATOR_Initialize
  2297 ;;		_PIN_MANAGER_Initialize
  2298 ;;		_TMR0_Initialize
  2299 ;;		_WDT_Initialize
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305     0504                     _SYSTEM_Initialize:	
  2306                           ;psect for function _SYSTEM_Initialize
  2307                           
  2308     0504                     l2128:	
  2309                           ;incstack = 0
  2310                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2311                           
  2312                           
  2313                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2314     0504  3184  247A  3185   	fcall	_PIN_MANAGER_Initialize
  2315                           
  2316                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2317     0507  3185  254E  3185   	fcall	_OSCILLATOR_Initialize
  2318                           
  2319                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2320     050A  3185  25C3  3185   	fcall	_WDT_Initialize
  2321     050D                     l2130:
  2322                           
  2323                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2324     050D  3184  24F0  3185   	fcall	_TMR0_Initialize
  2325     0510                     l2132:
  2326                           
  2327                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2328     0510  3182  22FF  3185   	fcall	_EUSART_Initialize
  2329     0513                     l2134:
  2330                           
  2331                           ;mcc_generated_files/mcc.c: 58:     LIN_Slave_Initialize();
  2332     0513  3185  2527  3185   	fcall	_LIN_Slave_Initialize
  2333     0516                     l497:
  2334     0516  0008               	return
  2335     0517                     __end_of_SYSTEM_Initialize:
  2336                           
  2337                           	psect	text2
  2338     05C3                     __ptext2:	
  2339 ;; *************** function _WDT_Initialize *****************
  2340 ;; Defined at:
  2341 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		None
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2355 ;;      Params:         0       0       0       0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 4
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_SYSTEM_Initialize
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369     05C3                     _WDT_Initialize:	
  2370                           ;psect for function _WDT_Initialize
  2371                           
  2372     05C3                     l1470:	
  2373                           ;incstack = 0
  2374                           ; Regs used in _WDT_Initialize: []
  2375                           
  2376                           
  2377                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  2378     05C3  3016               	movlw	22
  2379     05C4  0021               	movlb	1	; select bank1
  2380     05C5  0097               	movwf	23	;volatile
  2381     05C6                     l506:
  2382     05C6  0008               	return
  2383     05C7                     __end_of_WDT_Initialize:
  2384                           
  2385                           	psect	text3
  2386     04F0                     __ptext3:	
  2387 ;; *************** function _TMR0_Initialize *****************
  2388 ;; Defined at:
  2389 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2403 ;;      Params:         0       0       0       0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 5
  2410 ;; This function calls:
  2411 ;;		_TMR0_SetInterruptHandler
  2412 ;; This function is called by:
  2413 ;;		_SYSTEM_Initialize
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417     04F0                     _TMR0_Initialize:	
  2418                           ;psect for function _TMR0_Initialize
  2419                           
  2420     04F0                     l1990:	
  2421                           ;incstack = 0
  2422                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2423                           
  2424                           
  2425                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  2426     04F0  0021               	movlb	1	; select bank1
  2427     04F1  0815               	movf	21,w	;volatile
  2428     04F2  39C0               	andlw	192
  2429     04F3  3814               	iorlw	20
  2430     04F4  0095               	movwf	21	;volatile
  2431     04F5                     l1992:
  2432                           
  2433                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  2434     04F5  3006               	movlw	6
  2435     04F6  0020               	movlb	0	; select bank0
  2436     04F7  0095               	movwf	21	;volatile
  2437     04F8                     l1994:
  2438                           
  2439                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  2440     04F8  3006               	movlw	6
  2441     04F9  00C8               	movwf	_timer0ReloadVal	;volatile
  2442     04FA                     l1996:
  2443                           
  2444                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2445     04FA  110B               	bcf	11,2	;volatile
  2446     04FB                     l1998:
  2447                           
  2448                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2449     04FB  168B               	bsf	11,5	;volatile
  2450     04FC                     l2000:
  2451                           
  2452                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2453     04FC  30D0               	movlw	low _TMR0_DefaultInterruptHandler
  2454     04FD  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2455     04FE  3005               	movlw	high _TMR0_DefaultInterruptHandler
  2456     04FF  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2457     0500  3185  257C  3184   	fcall	_TMR0_SetInterruptHandler
  2458     0503                     l420:
  2459     0503  0008               	return
  2460     0504                     __end_of_TMR0_Initialize:
  2461                           
  2462                           	psect	text4
  2463     047A                     __ptext4:	
  2464 ;; *************** function _PIN_MANAGER_Initialize *****************
  2465 ;; Defined at:
  2466 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		status,2
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2480 ;;      Params:         0       0       0       0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 4
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_SYSTEM_Initialize
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494     047A                     _PIN_MANAGER_Initialize:	
  2495                           ;psect for function _PIN_MANAGER_Initialize
  2496                           
  2497     047A                     l1436:	
  2498                           ;incstack = 0
  2499                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2500                           
  2501                           
  2502                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2503     047A  0022               	movlb	2	; select bank2
  2504     047B  0190               	clrf	16	;volatile
  2505                           
  2506                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2507     047C  018C               	clrf	12	;volatile
  2508                           
  2509                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2510     047D  018D               	clrf	13	;volatile
  2511                           
  2512                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  2513     047E  018E               	clrf	14	;volatile
  2514     047F                     l1438:
  2515                           
  2516                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2517     047F  3008               	movlw	8
  2518     0480  0021               	movlb	1	; select bank1
  2519     0481  0090               	movwf	16	;volatile
  2520     0482                     l1440:
  2521                           
  2522                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2523     0482  30FF               	movlw	255
  2524     0483  008C               	movwf	12	;volatile
  2525     0484                     l1442:
  2526                           
  2527                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
  2528     0484  30C0               	movlw	192
  2529     0485  008D               	movwf	13	;volatile
  2530     0486                     l1444:
  2531                           
  2532                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xBF;
  2533     0486  30BF               	movlw	191
  2534     0487  008E               	movwf	14	;volatile
  2535                           
  2536                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  2537     0488  0023               	movlb	3	; select bank3
  2538     0489  018D               	clrf	13	;volatile
  2539     048A                     l1446:
  2540                           
  2541                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  2542     048A  303F               	movlw	63
  2543     048B  008C               	movwf	12	;volatile
  2544                           
  2545                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2546     048C  0024               	movlb	4	; select bank4
  2547     048D  0190               	clrf	16	;volatile
  2548                           
  2549                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2550     048E  018D               	clrf	13	;volatile
  2551     048F                     l1448:
  2552                           
  2553                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2554     048F  0021               	movlb	1	; select bank1
  2555     0490  1795               	bsf	21,7	;volatile
  2556                           
  2557                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2558     0491  0022               	movlb	2	; select bank2
  2559     0492  019D               	clrf	29	;volatile
  2560     0493                     l260:
  2561     0493  0008               	return
  2562     0494                     __end_of_PIN_MANAGER_Initialize:
  2563                           
  2564                           	psect	text5
  2565     054E                     __ptext5:	
  2566 ;; *************** function _OSCILLATOR_Initialize *****************
  2567 ;; Defined at:
  2568 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		status,2
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2582 ;;      Params:         0       0       0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; Hardware stack levels required when called: 4
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_SYSTEM_Initialize
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596     054E                     _OSCILLATOR_Initialize:	
  2597                           ;psect for function _OSCILLATOR_Initialize
  2598                           
  2599     054E                     l1466:	
  2600                           ;incstack = 0
  2601                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2602                           
  2603                           
  2604                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2605     054E  3070               	movlw	112
  2606     054F  0021               	movlb	1	; select bank1
  2607     0550  0099               	movwf	25	;volatile
  2608     0551                     l1468:
  2609                           
  2610                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2611     0551  0198               	clrf	24	;volatile
  2612                           
  2613                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2614     0552  0022               	movlb	2	; select bank2
  2615     0553  0196               	clrf	22	;volatile
  2616     0554                     l500:	
  2617                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2618                           
  2619                           
  2620                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2621     0554  0021               	movlb	1	; select bank1
  2622     0555  1F1A               	btfss	26,6	;volatile
  2623     0556  2D58               	goto	u551
  2624     0557  2D59               	goto	u550
  2625     0558                     u551:
  2626     0558  2D54               	goto	l500
  2627     0559                     u550:
  2628     0559                     l503:
  2629     0559  0008               	return
  2630     055A                     __end_of_OSCILLATOR_Initialize:
  2631                           
  2632                           	psect	text6
  2633     0527                     __ptext6:	
  2634 ;; *************** function _LIN_Slave_Initialize *****************
  2635 ;; Defined at:
  2636 ;;		line 60 in file "mcc_generated_files/LINDrivers/lin_app.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0, pclath, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2650 ;;      Params:         0       0       0       0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0
  2653 ;;      Totals:         0       0       0       0       0       0       0       0
  2654 ;;Total ram usage:        0 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; Hardware stack levels required when called: 7
  2657 ;; This function calls:
  2658 ;;		_LIN_init
  2659 ;; This function is called by:
  2660 ;;		_SYSTEM_Initialize
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664     0527                     _LIN_Slave_Initialize:	
  2665                           ;psect for function _LIN_Slave_Initialize
  2666                           
  2667     0527                     l1868:	
  2668                           ;incstack = 0
  2669                           ; Regs used in _LIN_Slave_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2670                           
  2671                           
  2672                           ;mcc_generated_files/LINDrivers/lin_app.c: 62:     LIN_init((sizeof(scheduleTable)/sizeo
      +                          f(lin_rx_cmd_t)), scheduleTable, processLIN);
  2673     0527  30A0               	movlw	low (_scheduleTable| (0+32768))
  2674     0528  00F2               	movwf	LIN_init@command
  2675     0529  3085               	movlw	high (_scheduleTable| (0+32768))
  2676     052A  00F3               	movwf	LIN_init@command+1
  2677     052B  30B5               	movlw	low _processLIN
  2678     052C  00F4               	movwf	LIN_init@processData
  2679     052D  3002               	movlw	high _processLIN
  2680     052E  00F5               	movwf	LIN_init@processData+1
  2681     052F  3001               	movlw	1
  2682     0530  3184  24C5  3185   	fcall	_LIN_init
  2683     0533                     l15:
  2684     0533  0008               	return
  2685     0534                     __end_of_LIN_Slave_Initialize:
  2686                           
  2687                           	psect	text7
  2688     04C5                     __ptext7:	
  2689 ;; *************** function _LIN_init *****************
  2690 ;; Defined at:
  2691 ;;		line 57 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  tableLength     1    wreg     unsigned char 
  2694 ;;  command         2    2[COMMON] const PTR const struct .
  2695 ;;		 -> scheduleTable(5), 
  2696 ;;  processData     2    4[COMMON] PTR FTN()void 
  2697 ;;		 -> processLIN(1), 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  tableLength     1    6[COMMON] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2709 ;;      Params:         4       0       0       0       0       0       0       0
  2710 ;;      Locals:         1       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0
  2712 ;;      Totals:         5       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        5 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 6
  2716 ;; This function calls:
  2717 ;;		_LIN_enableRx
  2718 ;;		_LIN_setTimerHandler
  2719 ;;		_LIN_stopTimer
  2720 ;; This function is called by:
  2721 ;;		_LIN_Slave_Initialize
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725     04C5                     _LIN_init:	
  2726                           ;psect for function _LIN_init
  2727                           
  2728                           
  2729                           ;incstack = 0
  2730                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2731                           ;LIN_init@tableLength stored from wreg
  2732     04C5  00F6               	movwf	LIN_init@tableLength
  2733     04C6                     l1756:
  2734                           
  2735                           ;mcc_generated_files/LINDrivers/lin_slave.c: 57: void LIN_init(uint8_t tableLength, cons
      +                          t lin_rx_cmd_t *const command,;mcc_generated_files/LINDrivers/lin_slave.c: 58:          
      +                               void (*processData)(void)) {;mcc_generated_files/LINDrivers/lin_slave.c: 59:   LIN_
      +                          rxCommand = command;
  2736     04C6  0873               	movf	LIN_init@command+1,w
  2737     04C7  0020               	movlb	0	; select bank0
  2738     04C8  00C5               	movwf	_LIN_rxCommand+1
  2739     04C9  0872               	movf	LIN_init@command,w
  2740     04CA  00C4               	movwf	_LIN_rxCommand
  2741                           
  2742                           ;mcc_generated_files/LINDrivers/lin_slave.c: 60:   LIN_rxCommandLength = tableLength;
  2743     04CB  0876               	movf	LIN_init@tableLength,w
  2744     04CC  00D4               	movwf	_LIN_rxCommandLength
  2745                           
  2746                           ;mcc_generated_files/LINDrivers/lin_slave.c: 61:   LIN_processData = processData;
  2747     04CD  0875               	movf	LIN_init@processData+1,w
  2748     04CE  00C7               	movwf	_LIN_processData+1
  2749     04CF  0874               	movf	LIN_init@processData,w
  2750     04D0  00C6               	movwf	_LIN_processData
  2751     04D1                     l1758:
  2752                           
  2753                           ;mcc_generated_files/LINDrivers/lin_slave.c: 62:   LIN_stopTimer();
  2754     04D1  3185  25A5  3184   	fcall	_LIN_stopTimer
  2755     04D4                     l1760:
  2756                           
  2757                           ;mcc_generated_files/LINDrivers/lin_slave.c: 63:   LIN_enableRx();
  2758     04D4  3185  25AF  3184   	fcall	_LIN_enableRx
  2759     04D7                     l1762:
  2760                           
  2761                           ;mcc_generated_files/LINDrivers/lin_slave.c: 64:   LIN_setTimerHandler();
  2762     04D7  3185  256E  3184   	fcall	_LIN_setTimerHandler
  2763     04DA                     l125:
  2764     04DA  0008               	return
  2765     04DB                     __end_of_LIN_init:
  2766                           
  2767                           	psect	text8
  2768     056E                     __ptext8:	
  2769 ;; *************** function _LIN_setTimerHandler *****************
  2770 ;; Defined at:
  2771 ;;		line 314 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2785 ;;      Params:         0       0       0       0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0       0
  2788 ;;      Totals:         0       0       0       0       0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 5
  2792 ;; This function calls:
  2793 ;;		_TMR0_SetInterruptHandler
  2794 ;; This function is called by:
  2795 ;;		_LIN_init
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799     056E                     _LIN_setTimerHandler:	
  2800                           ;psect for function _LIN_setTimerHandler
  2801                           
  2802     056E                     l1700:	
  2803                           ;incstack = 0
  2804                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  2805                           
  2806     056E  3041               	movlw	low _LIN_timerHandler
  2807     056F  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2808     0570  3005               	movlw	high _LIN_timerHandler
  2809     0571  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2810     0572  3185  257C  3185   	fcall	_TMR0_SetInterruptHandler
  2811     0575                     l216:
  2812     0575  0008               	return
  2813     0576                     __end_of_LIN_setTimerHandler:
  2814                           
  2815                           	psect	text9
  2816     057C                     __ptext9:	
  2817 ;; *************** function _TMR0_SetInterruptHandler *****************
  2818 ;; Defined at:
  2819 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2822 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2834 ;;      Params:         2       0       0       0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0
  2837 ;;      Totals:         2       0       0       0       0       0       0       0
  2838 ;;Total ram usage:        2 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 4
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_LIN_setTimerHandler
  2845 ;;		_TMR0_Initialize
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849     057C                     _TMR0_SetInterruptHandler:	
  2850                           ;psect for function _TMR0_SetInterruptHandler
  2851                           
  2852     057C                     l1692:	
  2853                           ;incstack = 0
  2854                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2855                           
  2856                           
  2857                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2858     057C  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2859     057D  0020               	movlb	0	; select bank0
  2860     057E  00B9               	movwf	_TMR0_InterruptHandler+1
  2861     057F  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2862     0580  00B8               	movwf	_TMR0_InterruptHandler
  2863     0581                     l436:
  2864     0581  0008               	return
  2865     0582                     __end_of_TMR0_SetInterruptHandler:
  2866                           
  2867                           	psect	text10
  2868     0052                     __ptext10:	
  2869 ;; *************** function _LIN_handler *****************
  2870 ;; Defined at:
  2871 ;;		line 99 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      enum E204
  2878 ;; Registers used:
  2879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2885 ;;      Params:         0       0       0       0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0
  2887 ;;      Temps:          0       0       5       0       0       0       0       0
  2888 ;;      Totals:         0       0       5       0       0       0       0       0
  2889 ;;Total ram usage:        5 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 7
  2892 ;; This function calls:
  2893 ;;		NULL
  2894 ;;		_AutoBaud_Detect_ON
  2895 ;;		_EUSART_Initialize
  2896 ;;		_EUSART_Read
  2897 ;;		_EUSART_is_rx_ready
  2898 ;;		_LIN_checkPID
  2899 ;;		_LIN_disableRx
  2900 ;;		_LIN_enableRx
  2901 ;;		_LIN_getChecksum
  2902 ;;		_LIN_getFromTable
  2903 ;;		_LIN_queuePacket
  2904 ;;		_LIN_startTimer
  2905 ;;		_LIN_stopTimer
  2906 ;;		_memset
  2907 ;;		_processLIN
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913     0052                     _LIN_handler:	
  2914                           ;psect for function _LIN_handler
  2915                           
  2916     0052                     l2256:	
  2917                           ;incstack = 0
  2918                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2919                           
  2920                           
  2921                           ;mcc_generated_files/LINDrivers/lin_slave.c: 100:   static lin_rx_state_t LIN_rxState = 
      +                          LIN_RX_IDLE;;mcc_generated_files/LINDrivers/lin_slave.c: 101:   static uint8_t rxDataInd
      +                          ex = 0;;mcc_generated_files/LINDrivers/lin_slave.c: 103:   if (LIN_rxInProgress == 1) {
  2922     0052  0020               	movlb	0	; select bank0
  2923     0053  0355               	decf	_LIN_rxInProgress,w
  2924     0054  1D03               	btfss	3,2
  2925     0055  2857               	goto	u1621
  2926     0056  2858               	goto	u1620
  2927     0057                     u1621:
  2928     0057  2948               	goto	l2336
  2929     0058                     u1620:
  2930     0058                     l2258:
  2931                           
  2932                           ;mcc_generated_files/LINDrivers/lin_slave.c: 104:     if (LIN_timerRunning == 0) {
  2933     0058  0853               	movf	_LIN_timerRunning,w
  2934     0059  1D03               	btfss	3,2
  2935     005A  285C               	goto	u1631
  2936     005B  285D               	goto	u1630
  2937     005C                     u1631:
  2938     005C  2948               	goto	l2336
  2939     005D                     u1630:
  2940     005D                     l2260:
  2941                           
  2942                           ;mcc_generated_files/LINDrivers/lin_slave.c: 106:       LIN_rxState = LIN_RX_ERROR;
  2943     005D  3008               	movlw	8
  2944     005E  00D1               	movwf	LIN_handler@LIN_rxState
  2945     005F  2948               	goto	l2336
  2946     0060                     l2262:
  2947                           
  2948                           ;mcc_generated_files/LINDrivers/lin_slave.c: 112:       LIN_startTimer(41);
  2949     0060  3029               	movlw	41
  2950     0061  3185  2534  3180   	fcall	_LIN_startTimer
  2951     0064                     l2264:
  2952                           
  2953                           ;mcc_generated_files/LINDrivers/lin_slave.c: 113:       LIN_rxInProgress = 1;
  2954     0064  3001               	movlw	1
  2955     0065  0020               	movlb	0	; select bank0
  2956     0066  00D5               	movwf	_LIN_rxInProgress
  2957     0067                     l2266:
  2958                           
  2959                           ;mcc_generated_files/LINDrivers/lin_slave.c: 115:       AutoBaud_Detect_ON();
  2960     0067  3185  25B9  3180   	fcall	_AutoBaud_Detect_ON
  2961     006A                     l2268:
  2962                           
  2963                           ;mcc_generated_files/LINDrivers/lin_slave.c: 116:       LIN_rxState = LIN_RX_SYNC;
  2964     006A  3002               	movlw	2
  2965     006B  0020               	movlb	0	; select bank0
  2966     006C  00D1               	movwf	LIN_handler@LIN_rxState
  2967                           
  2968                           ;mcc_generated_files/LINDrivers/lin_slave.c: 117:     break;
  2969     006D  296E               	goto	l167
  2970     006E                     l147:	
  2971                           ;mcc_generated_files/LINDrivers/lin_slave.c: 127:   case LIN_RX_SYNC:
  2972                           
  2973                           
  2974                           ;mcc_generated_files/LINDrivers/lin_slave.c: 128:     if (!BAUDCONbits.ABDEN) {
  2975     006E  0023               	movlb	3	; select bank3
  2976     006F  181F               	btfsc	31,0	;volatile
  2977     0070  2872               	goto	u1641
  2978     0071  2873               	goto	u1640
  2979     0072                     u1641:
  2980     0072  296E               	goto	l167
  2981     0073                     u1640:
  2982     0073                     l2270:
  2983                           
  2984                           ;mcc_generated_files/LINDrivers/lin_slave.c: 129:       LIN_rxState = LIN_RX_PID;
  2985     0073  3003               	movlw	3
  2986     0074  0020               	movlb	0	; select bank0
  2987     0075  00D1               	movwf	LIN_handler@LIN_rxState
  2988     0076                     l2272:
  2989                           
  2990                           ;mcc_generated_files/LINDrivers/lin_slave.c: 131:       LIN_disableRx();
  2991     0076  3185  25B4  3180   	fcall	_LIN_disableRx
  2992     0079                     l2274:
  2993                           
  2994                           ;mcc_generated_files/LINDrivers/lin_slave.c: 132:       EUSART_Initialize();
  2995     0079  3182  22FF  3180   	fcall	_EUSART_Initialize
  2996     007C                     l2276:
  2997                           
  2998                           ;mcc_generated_files/LINDrivers/lin_slave.c: 133:       PIE1bits.RCIE = 1;
  2999     007C  0021               	movlb	1	; select bank1
  3000     007D  1691               	bsf	17,5	;volatile
  3001     007E  296E               	goto	l167
  3002     007F                     l2278:
  3003                           
  3004                           ;mcc_generated_files/LINDrivers/lin_slave.c: 137:     if (EUSART_is_rx_ready() > 0) {
  3005     007F  3185  2565  3180   	fcall	_EUSART_is_rx_ready
  3006     0082  3A00               	xorlw	0
  3007     0083  1903               	skipnz
  3008     0084  2886               	goto	u1651
  3009     0085  2887               	goto	u1650
  3010     0086                     u1651:
  3011     0086  296E               	goto	l167
  3012     0087                     u1650:
  3013     0087                     l2280:
  3014                           
  3015                           ;mcc_generated_files/LINDrivers/lin_slave.c: 138:       LIN_packet.PID = EUSART_Read();
  3016     0087  3183  23F5  3180   	fcall	_EUSART_Read
  3017     008A  0020               	movlb	0	; select bank0
  3018     008B  00D6               	movwf	_LIN_packet
  3019     008C                     l2282:
  3020                           
  3021                           ;mcc_generated_files/LINDrivers/lin_slave.c: 141:       if (LIN_checkPID(LIN_packet.PID)
      +                           == 0) {
  3022     008C  0856               	movf	_LIN_packet,w
  3023     008D  3184  2494  3180   	fcall	_LIN_checkPID
  3024     0090  3A00               	xorlw	0
  3025     0091  1D03               	skipz
  3026     0092  2894               	goto	u1661
  3027     0093  2895               	goto	u1660
  3028     0094                     u1661:
  3029     0094  2899               	goto	l2286
  3030     0095                     u1660:
  3031     0095                     l2284:
  3032                           
  3033                           ;mcc_generated_files/LINDrivers/lin_slave.c: 142:         LIN_rxState = LIN_RX_ERROR;
  3034     0095  3008               	movlw	8
  3035     0096  0020               	movlb	0	; select bank0
  3036     0097  00D1               	movwf	LIN_handler@LIN_rxState
  3037                           
  3038                           ;mcc_generated_files/LINDrivers/lin_slave.c: 143:         break;
  3039     0098  296E               	goto	l167
  3040     0099                     l2286:
  3041                           
  3042                           ;mcc_generated_files/LINDrivers/lin_slave.c: 145:       LIN_packet.type = LIN_getFromTab
      +                          le(LIN_packet.PID, TYPE);
  3043     0099  01F0               	clrf	LIN_getFromTable@param
  3044     009A  0AF0               	incf	LIN_getFromTable@param,f
  3045     009B  0020               	movlb	0	; select bank0
  3046     009C  0856               	movf	_LIN_packet,w
  3047     009D  3182  2257  3180   	fcall	_LIN_getFromTable
  3048     00A0  0020               	movlb	0	; select bank0
  3049     00A1  00E0               	movwf	_LIN_packet+10
  3050     00A2                     l2288:
  3051                           
  3052                           ;mcc_generated_files/LINDrivers/lin_slave.c: 146:       if (LIN_packet.type == RECEIVE) 
      +                          {
  3053     00A2  0360               	decf	_LIN_packet+10,w
  3054     00A3  1D03               	btfss	3,2
  3055     00A4  28A6               	goto	u1671
  3056     00A5  28A7               	goto	u1670
  3057     00A6                     u1671:
  3058     00A6  28B2               	goto	l2294
  3059     00A7                     u1670:
  3060     00A7                     l2290:
  3061                           
  3062                           ;mcc_generated_files/LINDrivers/lin_slave.c: 147:         LIN_packet.length = LIN_getFro
      +                          mTable(LIN_packet.PID, LENGTH);
  3063     00A7  3002               	movlw	2
  3064     00A8  00F0               	movwf	LIN_getFromTable@param
  3065     00A9  0856               	movf	_LIN_packet,w
  3066     00AA  3182  2257  3180   	fcall	_LIN_getFromTable
  3067     00AD  0020               	movlb	0	; select bank0
  3068     00AE  00E1               	movwf	_LIN_packet+11
  3069     00AF                     l2292:
  3070                           
  3071                           ;mcc_generated_files/LINDrivers/lin_slave.c: 148:         LIN_rxState = LIN_RX_DATA;
  3072     00AF  3004               	movlw	4
  3073     00B0  00D1               	movwf	LIN_handler@LIN_rxState
  3074                           
  3075                           ;mcc_generated_files/LINDrivers/lin_slave.c: 149:       } else {
  3076     00B1  296E               	goto	l167
  3077     00B2                     l2294:
  3078                           
  3079                           ;mcc_generated_files/LINDrivers/lin_slave.c: 150:         LIN_disableRx();
  3080     00B2  3185  25B4  3180   	fcall	_LIN_disableRx
  3081     00B5                     l2296:
  3082                           
  3083                           ;mcc_generated_files/LINDrivers/lin_slave.c: 151:         LIN_rxState = LIN_RX_TX_DATA;
  3084     00B5  3006               	movlw	6
  3085     00B6  0020               	movlb	0	; select bank0
  3086     00B7  00D1               	movwf	LIN_handler@LIN_rxState
  3087     00B8  296E               	goto	l167
  3088     00B9                     l2298:
  3089                           
  3090                           ;mcc_generated_files/LINDrivers/lin_slave.c: 156:     if (EUSART_is_rx_ready() > 0) {
  3091     00B9  3185  2565  3180   	fcall	_EUSART_is_rx_ready
  3092     00BC  3A00               	xorlw	0
  3093     00BD  1903               	skipnz
  3094     00BE  28C0               	goto	u1681
  3095     00BF  28C1               	goto	u1680
  3096     00C0                     u1681:
  3097     00C0  296E               	goto	l167
  3098     00C1                     u1680:
  3099     00C1                     l2300:
  3100                           
  3101                           ;mcc_generated_files/LINDrivers/lin_slave.c: 157:       LIN_packet.data[rxDataIndex] = E
      +                          USART_Read();
  3102     00C1  3183  23F5  3180   	fcall	_EUSART_Read
  3103     00C4  0021               	movlb	1	; select bank1
  3104     00C5  00A8               	movwf	??_LIN_handler^(0+128)
  3105     00C6  3057               	movlw	low (_LIN_packet+1)
  3106     00C7  00A9               	movwf	(??_LIN_handler+1)^(0+128)
  3107     00C8  3000               	movlw	high (_LIN_packet+1)
  3108     00C9  00AA               	movwf	((??_LIN_handler+1)^(0+128)+1)
  3109     00CA  0020               	movlb	0	; select bank0
  3110     00CB  0850               	movf	LIN_handler@rxDataIndex,w
  3111     00CC  0021               	movlb	1	; select bank1
  3112     00CD  0729               	addwf	(??_LIN_handler+1)^(0+128),w
  3113     00CE  00AB               	movwf	(??_LIN_handler+3)^(0+128)
  3114     00CF  3000               	movlw	0
  3115     00D0  3D2A               	addwfc	(??_LIN_handler+2)^(0+128),w
  3116     00D1  00AC               	movwf	(??_LIN_handler+4)^(0+128)
  3117     00D2  082B               	movf	(??_LIN_handler+3)^(0+128),w
  3118     00D3  0086               	movwf	6
  3119     00D4  082C               	movf	(??_LIN_handler+4)^(0+128),w
  3120     00D5  0087               	movwf	7
  3121     00D6  0828               	movf	??_LIN_handler^(0+128),w
  3122     00D7  0081               	movwf	1
  3123     00D8                     l2302:
  3124                           
  3125                           ;mcc_generated_files/LINDrivers/lin_slave.c: 158:       if (++rxDataIndex >= LIN_packet.
      +                          length) {
  3126     00D8  0020               	movlb	0	; select bank0
  3127     00D9  0861               	movf	_LIN_packet+11,w
  3128     00DA  0021               	movlb	1	; select bank1
  3129     00DB  00A8               	movwf	??_LIN_handler^(0+128)
  3130     00DC  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3131     00DD  1BA8               	btfsc	??_LIN_handler^(0+128),7
  3132     00DE  03A9               	decf	(??_LIN_handler^(0+128)+1),f
  3133     00DF  3001               	movlw	1
  3134     00E0  0020               	movlb	0	; select bank0
  3135     00E1  07D0               	addwf	LIN_handler@rxDataIndex,f
  3136     00E2  0021               	movlb	1	; select bank1
  3137     00E3  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3138     00E4  3A80               	xorlw	128
  3139     00E5  3C80               	sublw	128
  3140     00E6  1D03               	skipz
  3141     00E7  28EB               	goto	u1695
  3142     00E8  0828               	movf	??_LIN_handler^(0+128),w
  3143     00E9  0020               	movlb	0	; select bank0
  3144     00EA  0250               	subwf	LIN_handler@rxDataIndex,w
  3145     00EB                     u1695:
  3146     00EB  1C03               	skipc
  3147     00EC  28EE               	goto	u1691
  3148     00ED  28EF               	goto	u1690
  3149     00EE                     u1691:
  3150     00EE  296E               	goto	l167
  3151     00EF                     u1690:
  3152     00EF                     l2304:
  3153                           
  3154                           ;mcc_generated_files/LINDrivers/lin_slave.c: 160:         rxDataIndex = 0;
  3155     00EF  0020               	movlb	0	; select bank0
  3156     00F0  01D0               	clrf	LIN_handler@rxDataIndex
  3157     00F1                     l2306:
  3158                           
  3159                           ;mcc_generated_files/LINDrivers/lin_slave.c: 161:         LIN_rxState = LIN_RX_CHECKSUM;
  3160     00F1  3005               	movlw	5
  3161     00F2  00D1               	movwf	LIN_handler@LIN_rxState
  3162     00F3  296E               	goto	l167
  3163     00F4                     l2308:
  3164                           
  3165                           ;mcc_generated_files/LINDrivers/lin_slave.c: 166:     if (EUSART_is_rx_ready() > 0) {
  3166     00F4  3185  2565  3180   	fcall	_EUSART_is_rx_ready
  3167     00F7  3A00               	xorlw	0
  3168     00F8  1903               	skipnz
  3169     00F9  28FB               	goto	u1701
  3170     00FA  28FC               	goto	u1700
  3171     00FB                     u1701:
  3172     00FB  296E               	goto	l167
  3173     00FC                     u1700:
  3174     00FC                     l2310:
  3175                           
  3176                           ;mcc_generated_files/LINDrivers/lin_slave.c: 167:       LIN_packet.checksum = EUSART_Rea
      +                          d();
  3177     00FC  3183  23F5  3180   	fcall	_EUSART_Read
  3178     00FF  0020               	movlb	0	; select bank0
  3179     0100  00DF               	movwf	_LIN_packet+9
  3180                           
  3181                           ;mcc_generated_files/LINDrivers/lin_slave.c: 168:       if (LIN_packet.checksum !=
  3182     0101  0856               	movf	_LIN_packet,w
  3183     0102  00F0               	movwf	LIN_getChecksum@pid
  3184     0103  3057               	movlw	low (_LIN_packet+1)
  3185     0104  00F1               	movwf	LIN_getChecksum@data
  3186     0105  3000               	movlw	high (_LIN_packet+1)
  3187     0106  00F2               	movwf	LIN_getChecksum@data+1
  3188     0107  0861               	movf	_LIN_packet+11,w
  3189     0108  3183  2373  3180   	fcall	_LIN_getChecksum
  3190     010B  0020               	movlb	0	; select bank0
  3191     010C  065F               	xorwf	_LIN_packet+9,w
  3192     010D  1903               	skipnz
  3193     010E  2910               	goto	u1711
  3194     010F  2911               	goto	u1710
  3195     0110                     u1711:
  3196     0110  2912               	goto	l159
  3197     0111                     u1710:
  3198     0111  2895               	goto	l2284
  3199     0112                     l159:
  3200                           
  3201                           ;mcc_generated_files/LINDrivers/lin_slave.c: 172:         LIN_rxState = LIN_RX_RDY;
  3202     0112  3007               	movlw	7
  3203     0113  00D1               	movwf	LIN_handler@LIN_rxState
  3204     0114  296E               	goto	l167
  3205     0115                     l2314:
  3206                           
  3207                           ;mcc_generated_files/LINDrivers/lin_slave.c: 177:     LIN_queuePacket(LIN_packet.PID);
  3208     0115  0020               	movlb	0	; select bank0
  3209     0116  0856               	movf	_LIN_packet,w
  3210     0117  3181  21F5  3180   	fcall	_LIN_queuePacket
  3211     011A                     l2316:
  3212                           
  3213                           ;mcc_generated_files/LINDrivers/lin_slave.c: 178:     LIN_rxState = LIN_RX_RDY;
  3214     011A  3007               	movlw	7
  3215     011B  0020               	movlb	0	; select bank0
  3216     011C  00D1               	movwf	LIN_handler@LIN_rxState
  3217     011D                     l162:	
  3218                           ;mcc_generated_files/LINDrivers/lin_slave.c: 179:   case LIN_RX_RDY:
  3219                           
  3220                           
  3221                           ;mcc_generated_files/LINDrivers/lin_slave.c: 180:     LIN_processData();
  3222     011D  0020               	movlb	0	; select bank0
  3223     011E  0847               	movf	_LIN_processData+1,w
  3224     011F  008A               	movwf	10
  3225     0120  0846               	movf	_LIN_processData,w
  3226     0121  000A               	callw
  3227     0122  3180               	pagesel	$
  3228     0123                     l2318:
  3229                           
  3230                           ;mcc_generated_files/LINDrivers/lin_slave.c: 182:     LIN_stopTimer();
  3231     0123  3185  25A5  3180   	fcall	_LIN_stopTimer
  3232     0126                     l2320:
  3233                           
  3234                           ;mcc_generated_files/LINDrivers/lin_slave.c: 183:     rxDataIndex = 0;
  3235     0126  0020               	movlb	0	; select bank0
  3236     0127  01D0               	clrf	LIN_handler@rxDataIndex
  3237     0128                     l2322:
  3238                           
  3239                           ;mcc_generated_files/LINDrivers/lin_slave.c: 184:     LIN_rxInProgress = 0;
  3240     0128  01D5               	clrf	_LIN_rxInProgress
  3241     0129                     l2324:
  3242                           
  3243                           ;mcc_generated_files/LINDrivers/lin_slave.c: 185:     PIE1bits.RCIE = 0;
  3244     0129  0021               	movlb	1	; select bank1
  3245     012A  1291               	bcf	17,5	;volatile
  3246     012B                     l2326:
  3247                           
  3248                           ;mcc_generated_files/LINDrivers/lin_slave.c: 186:     memset(LIN_packet.rawPacket, 0,
  3249     012B  3056               	movlw	low _LIN_packet
  3250     012C  00F0               	movwf	memset@dest
  3251     012D  3000               	movlw	high _LIN_packet
  3252     012E  00F1               	movwf	memset@dest+1
  3253     012F  3000               	movlw	0
  3254     0130  00F2               	movwf	memset@c
  3255     0131  00F3               	movwf	memset@c+1
  3256     0132  300D               	movlw	13
  3257     0133  00F4               	movwf	memset@n
  3258     0134  3000               	movlw	0
  3259     0135  00F5               	movwf	memset@n+1
  3260     0136  3184  24AE  3180   	fcall	_memset
  3261     0139                     l2328:
  3262                           
  3263                           ;mcc_generated_files/LINDrivers/lin_slave.c: 190:     if (TXSTAbits.TRMT) {
  3264     0139  0023               	movlb	3	; select bank3
  3265     013A  1C9E               	btfss	30,1	;volatile
  3266     013B  293D               	goto	u1721
  3267     013C  293E               	goto	u1720
  3268     013D                     u1721:
  3269     013D  2944               	goto	l165
  3270     013E                     u1720:
  3271     013E                     l2330:
  3272                           
  3273                           ;mcc_generated_files/LINDrivers/lin_slave.c: 191:       LIN_enableRx();
  3274     013E  3185  25AF  3180   	fcall	_LIN_enableRx
  3275     0141                     l2332:
  3276                           
  3277                           ;mcc_generated_files/LINDrivers/lin_slave.c: 192:       LIN_rxState = LIN_RX_IDLE;
  3278     0141  0020               	movlb	0	; select bank0
  3279     0142  01D1               	clrf	LIN_handler@LIN_rxState
  3280                           
  3281                           ;mcc_generated_files/LINDrivers/lin_slave.c: 193:     } else {
  3282     0143  296E               	goto	l167
  3283     0144                     l165:
  3284                           
  3285                           ;mcc_generated_files/LINDrivers/lin_slave.c: 194:       LIN_rxState = LIN_RX_WAIT;
  3286     0144  3009               	movlw	9
  3287     0145  0020               	movlb	0	; select bank0
  3288     0146  00D1               	movwf	LIN_handler@LIN_rxState
  3289     0147  296E               	goto	l167
  3290     0148                     l2336:
  3291     0148  0851               	movf	LIN_handler@LIN_rxState,w
  3292     0149  0021               	movlb	1	; select bank1
  3293     014A  00A8               	movwf	??_LIN_handler^(0+128)
  3294     014B  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3295                           
  3296                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3297                           ; Switch size 1, requested type "simple"
  3298                           ; Number of cases is 1, Range of values is 0 to 0
  3299                           ; switch strategies available:
  3300                           ; Name         Instructions Cycles
  3301                           ; simple_byte            4     3 (average)
  3302                           ; direct_byte            8     6 (fixed)
  3303                           ; jumptable            260     6 (fixed)
  3304                           ;	Chosen strategy is simple_byte
  3305     014C  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3306     014D  3A00               	xorlw	0	; case 0
  3307     014E  1903               	skipnz
  3308     014F  2951               	goto	l2422
  3309     0150  296E               	goto	l167
  3310     0151                     l2422:
  3311                           
  3312                           ; Switch size 1, requested type "simple"
  3313                           ; Number of cases is 9, Range of values is 0 to 9
  3314                           ; switch strategies available:
  3315                           ; Name         Instructions Cycles
  3316                           ; direct_byte           26     6 (fixed)
  3317                           ; simple_byte           28    15 (average)
  3318                           ; jumptable            260     6 (fixed)
  3319                           ;	Chosen strategy is simple_byte
  3320     0151  0828               	movf	??_LIN_handler^(0+128),w
  3321     0152  3A00               	xorlw	0	; case 0
  3322     0153  1903               	skipnz
  3323     0154  2860               	goto	l2262
  3324     0155  3A02               	xorlw	2	; case 2
  3325     0156  1903               	skipnz
  3326     0157  286E               	goto	l147
  3327     0158  3A01               	xorlw	1	; case 3
  3328     0159  1903               	skipnz
  3329     015A  287F               	goto	l2278
  3330     015B  3A07               	xorlw	7	; case 4
  3331     015C  1903               	skipnz
  3332     015D  28B9               	goto	l2298
  3333     015E  3A01               	xorlw	1	; case 5
  3334     015F  1903               	skipnz
  3335     0160  28F4               	goto	l2308
  3336     0161  3A03               	xorlw	3	; case 6
  3337     0162  1903               	skipnz
  3338     0163  2915               	goto	l2314
  3339     0164  3A01               	xorlw	1	; case 7
  3340     0165  1903               	skipnz
  3341     0166  291D               	goto	l162
  3342     0167  3A0F               	xorlw	15	; case 8
  3343     0168  1903               	skipnz
  3344     0169  2923               	goto	l2318
  3345     016A  3A01               	xorlw	1	; case 9
  3346     016B  1903               	skipnz
  3347     016C  2939               	goto	l2328
  3348     016D  296E               	goto	l167
  3349     016E                     l167:
  3350     016E  0008               	return
  3351     016F                     __end_of_LIN_handler:
  3352                           
  3353                           	psect	text11
  3354     02B5                     __ptext11:	
  3355 ;; *************** function _processLIN *****************
  3356 ;; Defined at:
  3357 ;;		line 65 in file "mcc_generated_files/LINDrivers/lin_app.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  tempRxData      8    0[BANK0 ] unsigned char [8]
  3362 ;;  cmd             1    8[BANK0 ] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3372 ;;      Params:         0       0       0       0       0       0       0       0
  3373 ;;      Locals:         0       9       0       0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0
  3375 ;;      Totals:         0       9       0       0       0       0       0       0
  3376 ;;Total ram usage:        9 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 6
  3379 ;; This function calls:
  3380 ;;		_LIN_getPacket
  3381 ;; This function is called by:
  3382 ;;		_LIN_Slave_Initialize
  3383 ;;		_LIN_handler
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387     02B5                     _processLIN:	
  3388                           ;psect for function _processLIN
  3389                           
  3390     02B5                     l1870:	
  3391                           ;incstack = 0
  3392                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3393                           
  3394                           
  3395                           ;mcc_generated_files/LINDrivers/lin_app.c: 66:     uint8_t tempRxData[8];;mcc_generated_
      +                          files/LINDrivers/lin_app.c: 67:     uint8_t cmd;;mcc_generated_files/LINDrivers/lin_app.
      +                          c: 69:     cmd = LIN_getPacket(tempRxData);
  3396     02B5  3063               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3397     02B6  00F9               	movwf	LIN_getPacket@data
  3398     02B7  3183  23A5  3182   	fcall	_LIN_getPacket
  3399     02BA  0020               	movlb	0	; select bank0
  3400     02BB  00EB               	movwf	processLIN@cmd
  3401                           
  3402                           ;mcc_generated_files/LINDrivers/lin_app.c: 70:     switch (cmd) {
  3403     02BC  2AF9               	goto	l1874
  3404     02BD                     l19:	
  3405                           ;mcc_generated_files/LINDrivers/lin_app.c: 72:         case SW_STATE:
  3406                           
  3407                           
  3408                           ;mcc_generated_files/LINDrivers/lin_app.c: 73:             if ( (tempRxData[5] & 0B00100
      +                          000) == 0B00100000) {
  3409     02BD  1EE8               	btfss	processLIN@tempRxData+5,5
  3410     02BE  2AC0               	goto	u1201
  3411     02BF  2AC1               	goto	u1200
  3412     02C0                     u1201:
  3413     02C0  2AC4               	goto	l24
  3414     02C1                     u1200:
  3415     02C1                     l21:	
  3416                           ;mcc_generated_files/LINDrivers/lin_app.c: 74:                 do { LATBbits.LATB5 = 1; 
      +                          } while(0);
  3417                           
  3418     02C1  0022               	movlb	2	; select bank2
  3419     02C2  168D               	bsf	13,5	;volatile
  3420     02C3  2AC6               	goto	l23
  3421     02C4                     l24:	
  3422                           ;mcc_generated_files/LINDrivers/lin_app.c: 76:                 do { LATBbits.LATB5 = 0; 
      +                          } while(0);
  3423                           
  3424     02C4  0022               	movlb	2	; select bank2
  3425     02C5  128D               	bcf	13,5	;volatile
  3426     02C6                     l23:	
  3427                           ;mcc_generated_files/LINDrivers/lin_app.c: 77:             }
  3428                           
  3429                           
  3430                           ;mcc_generated_files/LINDrivers/lin_app.c: 79:             if ( (tempRxData[2] & 0B00000
      +                          001) == 0B00000001) {
  3431     02C6  0020               	movlb	0	; select bank0
  3432     02C7  1C65               	btfss	processLIN@tempRxData+2,0
  3433     02C8  2ACA               	goto	u1211
  3434     02C9  2ACB               	goto	u1210
  3435     02CA                     u1211:
  3436     02CA  2ACE               	goto	l30
  3437     02CB                     u1210:
  3438     02CB                     l27:	
  3439                           ;mcc_generated_files/LINDrivers/lin_app.c: 80:                 do { LATBbits.LATB4 = 1; 
      +                          } while(0);
  3440                           
  3441     02CB  0022               	movlb	2	; select bank2
  3442     02CC  160D               	bsf	13,4	;volatile
  3443     02CD  2AD0               	goto	l29
  3444     02CE                     l30:	
  3445                           ;mcc_generated_files/LINDrivers/lin_app.c: 82:                 do { LATBbits.LATB4 = 0; 
      +                          } while(0);
  3446                           
  3447     02CE  0022               	movlb	2	; select bank2
  3448     02CF  120D               	bcf	13,4	;volatile
  3449     02D0                     l29:	
  3450                           ;mcc_generated_files/LINDrivers/lin_app.c: 83:             }
  3451                           
  3452                           
  3453                           ;mcc_generated_files/LINDrivers/lin_app.c: 85:             if ( (tempRxData[1] & 0B00001
      +                          000) == 0B00001000) {
  3454     02D0  0020               	movlb	0	; select bank0
  3455     02D1  1DE4               	btfss	processLIN@tempRxData+1,3
  3456     02D2  2AD4               	goto	u1221
  3457     02D3  2AD5               	goto	u1220
  3458     02D4                     u1221:
  3459     02D4  2AD8               	goto	l36
  3460     02D5                     u1220:
  3461     02D5                     l33:	
  3462                           ;mcc_generated_files/LINDrivers/lin_app.c: 86:                 do { LATBbits.LATB3 = 1; 
      +                          } while(0);
  3463                           
  3464     02D5  0022               	movlb	2	; select bank2
  3465     02D6  158D               	bsf	13,3	;volatile
  3466     02D7  2ADA               	goto	l35
  3467     02D8                     l36:	
  3468                           ;mcc_generated_files/LINDrivers/lin_app.c: 88:                 do { LATBbits.LATB3 = 0; 
      +                          } while(0);
  3469                           
  3470     02D8  0022               	movlb	2	; select bank2
  3471     02D9  118D               	bcf	13,3	;volatile
  3472     02DA                     l35:	
  3473                           ;mcc_generated_files/LINDrivers/lin_app.c: 89:             }
  3474                           
  3475                           
  3476                           ;mcc_generated_files/LINDrivers/lin_app.c: 91:             if ( (tempRxData[1] & 0B01000
      +                          000) == 0B01000000) {
  3477     02DA  0020               	movlb	0	; select bank0
  3478     02DB  1F64               	btfss	processLIN@tempRxData+1,6
  3479     02DC  2ADE               	goto	u1231
  3480     02DD  2ADF               	goto	u1230
  3481     02DE                     u1231:
  3482     02DE  2AE2               	goto	l42
  3483     02DF                     u1230:
  3484     02DF                     l39:	
  3485                           ;mcc_generated_files/LINDrivers/lin_app.c: 92:                 do { LATBbits.LATB2 = 1; 
      +                          } while(0);
  3486                           
  3487     02DF  0022               	movlb	2	; select bank2
  3488     02E0  150D               	bsf	13,2	;volatile
  3489     02E1  2AE4               	goto	l41
  3490     02E2                     l42:	
  3491                           ;mcc_generated_files/LINDrivers/lin_app.c: 94:                 do { LATBbits.LATB2 = 0; 
      +                          } while(0);
  3492                           
  3493     02E2  0022               	movlb	2	; select bank2
  3494     02E3  110D               	bcf	13,2	;volatile
  3495     02E4                     l41:	
  3496                           ;mcc_generated_files/LINDrivers/lin_app.c: 95:             }
  3497                           
  3498                           
  3499                           ;mcc_generated_files/LINDrivers/lin_app.c: 97:             if ( (tempRxData[1] & 0B00010
      +                          000) == 0B00010000) {
  3500     02E4  0020               	movlb	0	; select bank0
  3501     02E5  1E64               	btfss	processLIN@tempRxData+1,4
  3502     02E6  2AE8               	goto	u1241
  3503     02E7  2AE9               	goto	u1240
  3504     02E8                     u1241:
  3505     02E8  2AEC               	goto	l48
  3506     02E9                     u1240:
  3507     02E9                     l45:	
  3508                           ;mcc_generated_files/LINDrivers/lin_app.c: 98:                 do { LATBbits.LATB1 = 1; 
      +                          } while(0);
  3509                           
  3510     02E9  0022               	movlb	2	; select bank2
  3511     02EA  148D               	bsf	13,1	;volatile
  3512     02EB  2AEE               	goto	l47
  3513     02EC                     l48:	
  3514                           ;mcc_generated_files/LINDrivers/lin_app.c: 100:                 do { LATBbits.LATB1 = 0;
      +                           } while(0);
  3515                           
  3516     02EC  0022               	movlb	2	; select bank2
  3517     02ED  108D               	bcf	13,1	;volatile
  3518     02EE                     l47:	
  3519                           ;mcc_generated_files/LINDrivers/lin_app.c: 101:             }
  3520                           
  3521                           
  3522                           ;mcc_generated_files/LINDrivers/lin_app.c: 103:             if ( (tempRxData[1] & 0B0010
      +                          0000) == 0B00100000) {
  3523     02EE  0020               	movlb	0	; select bank0
  3524     02EF  1EE4               	btfss	processLIN@tempRxData+1,5
  3525     02F0  2AF2               	goto	u1251
  3526     02F1  2AF3               	goto	u1250
  3527     02F2                     u1251:
  3528     02F2  2AF6               	goto	l54
  3529     02F3                     u1250:
  3530     02F3                     l51:	
  3531                           ;mcc_generated_files/LINDrivers/lin_app.c: 104:                 do { LATBbits.LATB0 = 1;
      +                           } while(0);
  3532                           
  3533     02F3  0022               	movlb	2	; select bank2
  3534     02F4  140D               	bsf	13,0	;volatile
  3535     02F5  2AFE               	goto	l58
  3536     02F6                     l54:	
  3537                           ;mcc_generated_files/LINDrivers/lin_app.c: 106:                 do { LATBbits.LATB0 = 0;
      +                           } while(0);
  3538                           
  3539     02F6  0022               	movlb	2	; select bank2
  3540     02F7  100D               	bcf	13,0	;volatile
  3541     02F8  2AFE               	goto	l58
  3542     02F9                     l1874:
  3543     02F9  086B               	movf	processLIN@cmd,w
  3544                           
  3545                           ; Switch size 1, requested type "simple"
  3546                           ; Number of cases is 1, Range of values is 1 to 1
  3547                           ; switch strategies available:
  3548                           ; Name         Instructions Cycles
  3549                           ; simple_byte            4     3 (average)
  3550                           ; direct_byte           11     9 (fixed)
  3551                           ; jumptable            263     9 (fixed)
  3552                           ;	Chosen strategy is simple_byte
  3553     02FA  3A01               	xorlw	1	; case 1
  3554     02FB  1903               	skipnz
  3555     02FC  2ABD               	goto	l19
  3556     02FD  2AFE               	goto	l58
  3557     02FE                     l58:
  3558     02FE  0008               	return
  3559     02FF                     __end_of_processLIN:
  3560                           
  3561                           	psect	text12
  3562     03A5                     __ptext12:	
  3563 ;; *************** function _LIN_getPacket *****************
  3564 ;; Defined at:
  3565 ;;		line 211 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  data            1    9[COMMON] PTR unsigned char 
  3568 ;;		 -> processLIN@tempRxData(8), 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  cmd             1   10[COMMON] unsigned char 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      unsigned char 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3580 ;;      Params:         1       0       0       0       0       0       0       0
  3581 ;;      Locals:         1       0       0       0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0
  3583 ;;      Totals:         2       0       0       0       0       0       0       0
  3584 ;;Total ram usage:        2 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 5
  3587 ;; This function calls:
  3588 ;;		_memcpy
  3589 ;;		_memset
  3590 ;; This function is called by:
  3591 ;;		_processLIN
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595     03A5                     _LIN_getPacket:	
  3596                           ;psect for function _LIN_getPacket
  3597                           
  3598     03A5                     l1764:	
  3599                           ;incstack = 0
  3600                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3601                           
  3602                           
  3603                           ;mcc_generated_files/LINDrivers/lin_slave.c: 212:   uint8_t cmd = LIN_packet.PID & 0x3F;
  3604     03A5  0020               	movlb	0	; select bank0
  3605     03A6  0856               	movf	_LIN_packet,w
  3606     03A7  393F               	andlw	63
  3607     03A8  00FA               	movwf	LIN_getPacket@cmd
  3608     03A9                     l1766:
  3609                           
  3610                           ;mcc_generated_files/LINDrivers/lin_slave.c: 214:   if (cmd != 0) {
  3611     03A9  087A               	movf	LIN_getPacket@cmd,w
  3612     03AA  1903               	btfsc	3,2
  3613     03AB  2BAD               	goto	u881
  3614     03AC  2BAE               	goto	u880
  3615     03AD                     u881:
  3616     03AD  2BB1               	goto	l1770
  3617     03AE                     u880:
  3618     03AE                     l1768:
  3619                           
  3620                           ;mcc_generated_files/LINDrivers/lin_slave.c: 215:     __nop();
  3621     03AE  0000               	nop
  3622                           
  3623                           ;mcc_generated_files/LINDrivers/lin_slave.c: 216:     __nop();
  3624     03AF  0000               	nop
  3625                           
  3626                           ;mcc_generated_files/LINDrivers/lin_slave.c: 217:     __nop();
  3627     03B0  0000               	nop
  3628     03B1                     l1770:
  3629                           
  3630                           ;mcc_generated_files/LINDrivers/lin_slave.c: 220:   memcpy(data, LIN_packet.data, sizeof
      +                          (LIN_packet.data));
  3631     03B1  0879               	movf	LIN_getPacket@data,w
  3632     03B2  00F0               	movwf	memcpy@d1
  3633     03B3  01F1               	clrf	memcpy@d1+1
  3634     03B4  3057               	movlw	low (_LIN_packet+1)
  3635     03B5  00F2               	movwf	memcpy@s1
  3636     03B6  3000               	movlw	high (_LIN_packet+1)
  3637     03B7  00F3               	movwf	memcpy@s1+1
  3638     03B8  3008               	movlw	8
  3639     03B9  00F4               	movwf	memcpy@n
  3640     03BA  3000               	movlw	0
  3641     03BB  00F5               	movwf	memcpy@n+1
  3642     03BC  3184  243C  3183   	fcall	_memcpy
  3643                           
  3644                           ;mcc_generated_files/LINDrivers/lin_slave.c: 221:   memset(LIN_packet.rawPacket, 0, size
      +                          of(LIN_packet.rawPacket));
  3645     03BF  3056               	movlw	low _LIN_packet
  3646     03C0  00F0               	movwf	memset@dest
  3647     03C1  3000               	movlw	high _LIN_packet
  3648     03C2  00F1               	movwf	memset@dest+1
  3649     03C3  3000               	movlw	0
  3650     03C4  00F2               	movwf	memset@c
  3651     03C5  00F3               	movwf	memset@c+1
  3652     03C6  300D               	movlw	13
  3653     03C7  00F4               	movwf	memset@n
  3654     03C8  3000               	movlw	0
  3655     03C9  00F5               	movwf	memset@n+1
  3656     03CA  3184  24AE  3183   	fcall	_memset
  3657     03CD                     l1772:
  3658                           
  3659                           ;mcc_generated_files/LINDrivers/lin_slave.c: 223:   return cmd;
  3660     03CD  087A               	movf	LIN_getPacket@cmd,w
  3661     03CE                     l177:
  3662     03CE  0008               	return
  3663     03CF                     __end_of_LIN_getPacket:
  3664                           
  3665                           	psect	text13
  3666     04AE                     __ptext13:	
  3667 ;; *************** function _memset *****************
  3668 ;; Defined at:
  3669 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  dest            2    0[COMMON] PTR void 
  3672 ;;		 -> LIN_packet(13), 
  3673 ;;  c               2    2[COMMON] int 
  3674 ;;  n               2    4[COMMON] unsigned int 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  p               1    6[COMMON] PTR unsigned char 
  3677 ;;		 -> LIN_packet(13), 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  2    0[COMMON] PTR void 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3687 ;;      Params:         6       0       0       0       0       0       0       0
  3688 ;;      Locals:         1       0       0       0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0
  3690 ;;      Totals:         7       0       0       0       0       0       0       0
  3691 ;;Total ram usage:        7 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 4
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_LIN_handler
  3698 ;;		_LIN_getPacket
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702     04AE                     _memset:	
  3703                           ;psect for function _memset
  3704                           
  3705     04AE                     l1730:	
  3706                           ;incstack = 0
  3707                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3708                           
  3709     04AE  0870               	movf	memset@dest,w
  3710     04AF  00F6               	movwf	memset@p
  3711     04B0  2CB8               	goto	l1736
  3712     04B1                     l1732:
  3713     04B1  0876               	movf	memset@p,w
  3714     04B2  0086               	movwf	6
  3715     04B3  0187               	clrf	7
  3716     04B4  0872               	movf	memset@c,w
  3717     04B5  0081               	movwf	1
  3718     04B6                     l1734:
  3719     04B6  3001               	movlw	1
  3720     04B7  07F6               	addwf	memset@p,f
  3721     04B8                     l1736:
  3722     04B8  3001               	movlw	1
  3723     04B9  02F4               	subwf	memset@n,f
  3724     04BA  3000               	movlw	0
  3725     04BB  3BF5               	subwfb	memset@n+1,f
  3726     04BC  0A74               	incf	memset@n,w
  3727     04BD  1D03               	skipz
  3728     04BE  2CC3               	goto	u841
  3729     04BF  0A75               	incf	memset@n+1,w
  3730     04C0  1D03               	btfss	3,2
  3731     04C1  2CC3               	goto	u841
  3732     04C2  2CC4               	goto	u840
  3733     04C3                     u841:
  3734     04C3  2CB1               	goto	l1732
  3735     04C4                     u840:
  3736     04C4                     l1142:
  3737     04C4  0008               	return
  3738     04C5                     __end_of_memset:
  3739                           
  3740                           	psect	text14
  3741     05A5                     __ptext14:	
  3742 ;; *************** function _LIN_stopTimer *****************
  3743 ;; Defined at:
  3744 ;;		line 316 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		status,2
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3758 ;;      Params:         0       0       0       0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0
  3761 ;;      Totals:         0       0       0       0       0       0       0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 4
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_LIN_init
  3769 ;;		_LIN_handler
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773     05A5                     _LIN_stopTimer:	
  3774                           ;psect for function _LIN_stopTimer
  3775                           
  3776     05A5                     l1694:	
  3777                           ;incstack = 0
  3778                           ; Regs used in _LIN_stopTimer: [status,2]
  3779                           
  3780                           
  3781                           ;mcc_generated_files/LINDrivers/lin_slave.c: 317:   __nop();
  3782     05A5  0000               	nop
  3783     05A6                     l1696:
  3784                           
  3785                           ;mcc_generated_files/LINDrivers/lin_slave.c: 319:   CountCallBack = 0;
  3786     05A6  0020               	movlb	0	; select bank0
  3787     05A7  01D2               	clrf	_CountCallBack	;volatile
  3788                           
  3789                           ;mcc_generated_files/LINDrivers/lin_slave.c: 320:   LIN_timerRunning = 0;
  3790     05A8  01D3               	clrf	_LIN_timerRunning
  3791     05A9                     l219:
  3792     05A9  0008               	return
  3793     05AA                     __end_of_LIN_stopTimer:
  3794                           
  3795                           	psect	text15
  3796     0534                     __ptext15:	
  3797 ;; *************** function _LIN_startTimer *****************
  3798 ;; Defined at:
  3799 ;;		line 298 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  timeout         1    wreg     unsigned char 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  timeout         1    1[COMMON] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, pclath, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3813 ;;      Params:         0       0       0       0       0       0       0       0
  3814 ;;      Locals:         1       0       0       0       0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0
  3816 ;;      Totals:         1       0       0       0       0       0       0       0
  3817 ;;Total ram usage:        1 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 5
  3820 ;; This function calls:
  3821 ;;		_TMR0_WriteTimer
  3822 ;; This function is called by:
  3823 ;;		_LIN_handler
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827     0534                     _LIN_startTimer:	
  3828                           ;psect for function _LIN_startTimer
  3829                           
  3830                           
  3831                           ;incstack = 0
  3832                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  3833                           ;LIN_startTimer@timeout stored from wreg
  3834     0534  00F1               	movwf	LIN_startTimer@timeout
  3835     0535                     l1902:
  3836                           
  3837                           ;mcc_generated_files/LINDrivers/lin_slave.c: 299:   LIN_timeout = timeout;
  3838     0535  0871               	movf	LIN_startTimer@timeout,w
  3839     0536  0020               	movlb	0	; select bank0
  3840     0537  00EC               	movwf	_LIN_timeout
  3841     0538                     l1904:
  3842                           
  3843                           ;mcc_generated_files/LINDrivers/lin_slave.c: 300:   TMR0_WriteTimer(0);
  3844     0538  3000               	movlw	0
  3845     0539  3185  25AA  3185   	fcall	_TMR0_WriteTimer
  3846     053C                     l1906:
  3847                           
  3848                           ;mcc_generated_files/LINDrivers/lin_slave.c: 301:   __nop();
  3849     053C  0000               	nop
  3850     053D                     l1908:
  3851                           
  3852                           ;mcc_generated_files/LINDrivers/lin_slave.c: 302:   LIN_timerRunning = 1;
  3853     053D  3001               	movlw	1
  3854     053E  0020               	movlb	0	; select bank0
  3855     053F  00D3               	movwf	_LIN_timerRunning
  3856     0540                     l209:
  3857     0540  0008               	return
  3858     0541                     __end_of_LIN_startTimer:
  3859                           
  3860                           	psect	text16
  3861     05AA                     __ptext16:	
  3862 ;; *************** function _TMR0_WriteTimer *****************
  3863 ;; Defined at:
  3864 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  timerVal        1    wreg     unsigned char 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  timerVal        1    0[COMMON] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3878 ;;      Params:         0       0       0       0       0       0       0       0
  3879 ;;      Locals:         1       0       0       0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0
  3881 ;;      Totals:         1       0       0       0       0       0       0       0
  3882 ;;Total ram usage:        1 bytes
  3883 ;; Hardware stack levels used: 1
  3884 ;; Hardware stack levels required when called: 4
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_LIN_startTimer
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892     05AA                     _TMR0_WriteTimer:	
  3893                           ;psect for function _TMR0_WriteTimer
  3894                           
  3895                           
  3896                           ;incstack = 0
  3897                           ; Regs used in _TMR0_WriteTimer: [wreg]
  3898                           ;TMR0_WriteTimer@timerVal stored from wreg
  3899     05AA  00F0               	movwf	TMR0_WriteTimer@timerVal
  3900     05AB                     l1842:
  3901                           
  3902                           ;mcc_generated_files/tmr0.c: 96: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_fi
      +                          les/tmr0.c: 97: {;mcc_generated_files/tmr0.c: 99:     TMR0 = timerVal;
  3903     05AB  0870               	movf	TMR0_WriteTimer@timerVal,w
  3904     05AC  0020               	movlb	0	; select bank0
  3905     05AD  0095               	movwf	21	;volatile
  3906     05AE                     l426:
  3907     05AE  0008               	return
  3908     05AF                     __end_of_TMR0_WriteTimer:
  3909                           
  3910                           	psect	text17
  3911     01F5                     __ptext17:	
  3912 ;; *************** function _LIN_queuePacket *****************
  3913 ;; Defined at:
  3914 ;;		line 67 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  cmd             1    wreg     unsigned char 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  cmd             1    1[BANK0 ] unsigned char 
  3919 ;;  i               1    2[BANK0 ] unsigned char 
  3920 ;;  tempSchedule    2    3[BANK0 ] PTR const struct .
  3921 ;;		 -> NULL(0), scheduleTable(5), 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3931 ;;      Params:         0       0       0       0       0       0       0       0
  3932 ;;      Locals:         0       4       0       0       0       0       0       0
  3933 ;;      Temps:          0       1       0       0       0       0       0       0
  3934 ;;      Totals:         0       5       0       0       0       0       0       0
  3935 ;;Total ram usage:        5 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; Hardware stack levels required when called: 6
  3938 ;; This function calls:
  3939 ;;		_LIN_getChecksum
  3940 ;;		_LIN_sendPacket
  3941 ;;		_memcpy
  3942 ;; This function is called by:
  3943 ;;		_LIN_handler
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947     01F5                     _LIN_queuePacket:	
  3948                           ;psect for function _LIN_queuePacket
  3949                           
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3953                           ;LIN_queuePacket@cmd stored from wreg
  3954     01F5  0020               	movlb	0	; select bank0
  3955     01F6  00E4               	movwf	LIN_queuePacket@cmd
  3956     01F7                     l2232:
  3957                           
  3958                           ;mcc_generated_files/LINDrivers/lin_slave.c: 68:   const lin_rx_cmd_t *tempSchedule =
  3959     01F7  0845               	movf	_LIN_rxCommand+1,w
  3960     01F8  00E7               	movwf	LIN_queuePacket@tempSchedule+1
  3961     01F9  0844               	movf	_LIN_rxCommand,w
  3962     01FA  00E6               	movwf	LIN_queuePacket@tempSchedule
  3963     01FB                     l2234:
  3964                           
  3965                           ;mcc_generated_files/LINDrivers/lin_slave.c: 71:   cmd &= 0x3F;
  3966     01FB  303F               	movlw	63
  3967     01FC  05E4               	andwf	LIN_queuePacket@cmd,f
  3968     01FD                     l2236:
  3969                           
  3970                           ;mcc_generated_files/LINDrivers/lin_slave.c: 72:   for (uint8_t i = 0; i < LIN_rxCommand
      +                          Length; i++) {
  3971     01FD  01E5               	clrf	LIN_queuePacket@i
  3972     01FE  2A10               	goto	l2246
  3973     01FF                     l2238:
  3974                           
  3975                           ;mcc_generated_files/LINDrivers/lin_slave.c: 73:     if (cmd == tempSchedule->cmd) {
  3976     01FF  0866               	movf	LIN_queuePacket@tempSchedule,w
  3977     0200  0084               	movwf	4
  3978     0201  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  3979     0202  0085               	movwf	5
  3980     0203  0800               	movf	0,w	;code access
  3981     0204  0664               	xorwf	LIN_queuePacket@cmd,w
  3982     0205  1D03               	skipz
  3983     0206  2A08               	goto	u1601
  3984     0207  2A09               	goto	u1600
  3985     0208                     u1601:
  3986     0208  2A0A               	goto	l2242
  3987     0209                     u1600:
  3988     0209  2A16               	goto	l2248
  3989     020A                     l2242:
  3990                           
  3991                           ;mcc_generated_files/LINDrivers/lin_slave.c: 76:     tempSchedule++;
  3992     020A  3005               	movlw	5
  3993     020B  07E6               	addwf	LIN_queuePacket@tempSchedule,f
  3994     020C  3000               	movlw	0
  3995     020D  3DE7               	addwfc	LIN_queuePacket@tempSchedule+1,f
  3996     020E                     l2244:
  3997                           
  3998                           ;mcc_generated_files/LINDrivers/lin_slave.c: 77:   }
  3999     020E  3001               	movlw	1
  4000     020F  07E5               	addwf	LIN_queuePacket@i,f
  4001     0210                     l2246:
  4002     0210  0854               	movf	_LIN_rxCommandLength,w
  4003     0211  0265               	subwf	LIN_queuePacket@i,w
  4004     0212  1C03               	skipc
  4005     0213  2A15               	goto	u1611
  4006     0214  2A16               	goto	u1610
  4007     0215                     u1611:
  4008     0215  29FF               	goto	l2238
  4009     0216                     u1610:
  4010     0216                     l2248:
  4011                           
  4012                           ;mcc_generated_files/LINDrivers/lin_slave.c: 79:   LIN_packet.type = tempSchedule->type;
  4013     0216  3001               	movlw	1
  4014     0217  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4015     0218  0084               	movwf	4
  4016     0219  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4017     021A  1803               	skipnc
  4018     021B  3E01               	addlw	1
  4019     021C  0085               	movwf	5
  4020     021D  0800               	movf	0,w	;code access
  4021     021E  00E0               	movwf	_LIN_packet+10
  4022                           
  4023                           ;mcc_generated_files/LINDrivers/lin_slave.c: 80:   LIN_packet.length = tempSchedule->len
      +                          gth;
  4024     021F  3002               	movlw	2
  4025     0220  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4026     0221  0084               	movwf	4
  4027     0222  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4028     0223  1803               	skipnc
  4029     0224  3E01               	addlw	1
  4030     0225  0085               	movwf	5
  4031     0226  0800               	movf	0,w	;code access
  4032     0227  00E1               	movwf	_LIN_packet+11
  4033     0228                     l2250:
  4034                           
  4035                           ;mcc_generated_files/LINDrivers/lin_slave.c: 84:   memcpy(LIN_packet.data, tempSchedule-
      +                          >data, LIN_packet.length);
  4036     0228  3057               	movlw	low (_LIN_packet+1)
  4037     0229  00F0               	movwf	memcpy@d1
  4038     022A  3000               	movlw	high (_LIN_packet+1)
  4039     022B  00F1               	movwf	memcpy@d1+1
  4040     022C  3003               	movlw	3
  4041     022D  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4042     022E  0084               	movwf	4
  4043     022F  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4044     0230  1803               	skipnc
  4045     0231  3E01               	addlw	1
  4046     0232  0085               	movwf	5
  4047     0233  3F00               	moviw [0]fsr0
  4048     0234  00F2               	movwf	memcpy@s1
  4049     0235  3F01               	moviw [1]fsr0
  4050     0236  00F3               	movwf	memcpy@s1+1
  4051     0237  0861               	movf	_LIN_packet+11,w
  4052     0238  00F4               	movwf	memcpy@n
  4053     0239  01F5               	clrf	memcpy@n+1
  4054     023A  1BF4               	btfsc	memcpy@n,7
  4055     023B  03F5               	decf	memcpy@n+1,f
  4056     023C  3184  243C  3181   	fcall	_memcpy
  4057     023F                     l2252:
  4058                           
  4059                           ;mcc_generated_files/LINDrivers/lin_slave.c: 87:   LIN_packet.checksum =
  4060     023F  0020               	movlb	0	; select bank0
  4061     0240  0856               	movf	_LIN_packet,w
  4062     0241  00F0               	movwf	LIN_getChecksum@pid
  4063     0242  3057               	movlw	low (_LIN_packet+1)
  4064     0243  00F1               	movwf	LIN_getChecksum@data
  4065     0244  3000               	movlw	high (_LIN_packet+1)
  4066     0245  00F2               	movwf	LIN_getChecksum@data+1
  4067     0246  0861               	movf	_LIN_packet+11,w
  4068     0247  3183  2373  3181   	fcall	_LIN_getChecksum
  4069     024A  0020               	movlb	0	; select bank0
  4070     024B  00DF               	movwf	_LIN_packet+9
  4071     024C                     l2254:
  4072                           
  4073                           ;mcc_generated_files/LINDrivers/lin_slave.c: 89:   LIN_sendPacket(LIN_packet.length, LIN
      +                          _packet.PID, LIN_packet.data);
  4074     024C  0856               	movf	_LIN_packet,w
  4075     024D  00F9               	movwf	LIN_sendPacket@pid
  4076     024E  3057               	movlw	low (_LIN_packet+1)
  4077     024F  00FA               	movwf	LIN_sendPacket@data
  4078     0250  3000               	movlw	high (_LIN_packet+1)
  4079     0251  00FB               	movwf	LIN_sendPacket@data+1
  4080     0252  0861               	movf	_LIN_packet+11,w
  4081     0253  3184  2419  3181   	fcall	_LIN_sendPacket
  4082     0256                     l132:
  4083     0256  0008               	return
  4084     0257                     __end_of_LIN_queuePacket:
  4085                           
  4086                           	psect	text18
  4087     043C                     __ptext18:	
  4088 ;; *************** function _memcpy *****************
  4089 ;; Defined at:
  4090 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  d1              2    0[COMMON] PTR void 
  4093 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4094 ;;  s1              2    2[COMMON] PTR const void 
  4095 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4096 ;;  n               2    4[COMMON] unsigned int 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  s               1    8[COMMON] PTR const unsigned char 
  4099 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4100 ;;  d               1    7[COMMON] PTR unsigned char 
  4101 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4102 ;;  tmp             1    6[COMMON] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  2    0[COMMON] PTR void 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4112 ;;      Params:         6       0       0       0       0       0       0       0
  4113 ;;      Locals:         3       0       0       0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0
  4115 ;;      Totals:         9       0       0       0       0       0       0       0
  4116 ;;Total ram usage:        9 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 4
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_LIN_queuePacket
  4123 ;;		_LIN_getPacket
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127     043C                     _memcpy:	
  4128                           ;psect for function _memcpy
  4129                           
  4130     043C                     l1702:	
  4131                           ;incstack = 0
  4132                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  4133                           
  4134     043C  0872               	movf	memcpy@s1,w
  4135     043D  00F8               	movwf	memcpy@s
  4136     043E  0870               	movf	memcpy@d1,w
  4137     043F  00F7               	movwf	memcpy@d
  4138     0440  2C4F               	goto	l1133
  4139     0441                     l1704:
  4140     0441  0878               	movf	memcpy@s,w
  4141     0442  0086               	movwf	6
  4142     0443  0187               	clrf	7
  4143     0444  0801               	movf	1,w
  4144     0445  00F6               	movwf	memcpy@tmp
  4145     0446                     l1706:
  4146     0446  3001               	movlw	1
  4147     0447  07F8               	addwf	memcpy@s,f
  4148     0448                     l1708:
  4149     0448  0877               	movf	memcpy@d,w
  4150     0449  0086               	movwf	6
  4151     044A  0187               	clrf	7
  4152     044B  0876               	movf	memcpy@tmp,w
  4153     044C  0081               	movwf	1
  4154     044D  3001               	movlw	1
  4155     044E  07F7               	addwf	memcpy@d,f
  4156     044F                     l1133:
  4157     044F  3001               	movlw	1
  4158     0450  02F4               	subwf	memcpy@n,f
  4159     0451  3000               	movlw	0
  4160     0452  3BF5               	subwfb	memcpy@n+1,f
  4161     0453  0A74               	incf	memcpy@n,w
  4162     0454  1D03               	skipz
  4163     0455  2C5A               	goto	u811
  4164     0456  0A75               	incf	memcpy@n+1,w
  4165     0457  1D03               	btfss	3,2
  4166     0458  2C5A               	goto	u811
  4167     0459  2C5B               	goto	u810
  4168     045A                     u811:
  4169     045A  2C41               	goto	l1704
  4170     045B                     u810:
  4171     045B                     l1136:
  4172     045B  0008               	return
  4173     045C                     __end_of_memcpy:
  4174                           
  4175                           	psect	text19
  4176     0419                     __ptext19:	
  4177 ;; *************** function _LIN_sendPacket *****************
  4178 ;; Defined at:
  4179 ;;		line 201 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  length          1    wreg     unsigned char 
  4182 ;;  pid             1    9[COMMON] unsigned char 
  4183 ;;  data            2   10[COMMON] PTR unsigned char 
  4184 ;;		 -> LIN_packet(13), 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  length          1   12[COMMON] unsigned char 
  4187 ;;  i               1   13[COMMON] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4197 ;;      Params:         3       0       0       0       0       0       0       0
  4198 ;;      Locals:         2       0       0       0       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0
  4200 ;;      Totals:         5       0       0       0       0       0       0       0
  4201 ;;Total ram usage:        5 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; Hardware stack levels required when called: 5
  4204 ;; This function calls:
  4205 ;;		_EUSART_Write
  4206 ;;		_LIN_getChecksum
  4207 ;; This function is called by:
  4208 ;;		_LIN_queuePacket
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212     0419                     _LIN_sendPacket:	
  4213                           ;psect for function _LIN_sendPacket
  4214                           
  4215                           
  4216                           ;incstack = 0
  4217                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4218                           ;LIN_sendPacket@length stored from wreg
  4219     0419  00FC               	movwf	LIN_sendPacket@length
  4220     041A                     l1776:
  4221                           
  4222                           ;mcc_generated_files/LINDrivers/lin_slave.c: 204:   for (uint8_t i = 0; i < length; i++)
      +                           {
  4223     041A  01FD               	clrf	LIN_sendPacket@i
  4224     041B  2C28               	goto	l1782
  4225     041C                     l1778:
  4226                           
  4227                           ;mcc_generated_files/LINDrivers/lin_slave.c: 205:     EUSART_Write(*(data + i));
  4228     041C  087D               	movf	LIN_sendPacket@i,w
  4229     041D  077A               	addwf	LIN_sendPacket@data,w
  4230     041E  0086               	movwf	6
  4231     041F  3000               	movlw	0
  4232     0420  3D7B               	addwfc	LIN_sendPacket@data+1,w
  4233     0421  0087               	movwf	7
  4234     0422  0801               	movf	1,w
  4235     0423  3183  23CF  3184   	fcall	_EUSART_Write
  4236     0426                     l1780:
  4237                           
  4238                           ;mcc_generated_files/LINDrivers/lin_slave.c: 206:   }
  4239     0426  3001               	movlw	1
  4240     0427  07FD               	addwf	LIN_sendPacket@i,f
  4241     0428                     l1782:
  4242     0428  087C               	movf	LIN_sendPacket@length,w
  4243     0429  027D               	subwf	LIN_sendPacket@i,w
  4244     042A  1C03               	skipc
  4245     042B  2C2D               	goto	u891
  4246     042C  2C2E               	goto	u890
  4247     042D                     u891:
  4248     042D  2C1C               	goto	l1778
  4249     042E                     u890:
  4250     042E                     l1784:
  4251                           
  4252                           ;mcc_generated_files/LINDrivers/lin_slave.c: 208:   EUSART_Write(LIN_getChecksum(length,
      +                           pid, data));
  4253     042E  0879               	movf	LIN_sendPacket@pid,w
  4254     042F  00F0               	movwf	LIN_getChecksum@pid
  4255     0430  087B               	movf	LIN_sendPacket@data+1,w
  4256     0431  00F2               	movwf	LIN_getChecksum@data+1
  4257     0432  087A               	movf	LIN_sendPacket@data,w
  4258     0433  00F1               	movwf	LIN_getChecksum@data
  4259     0434  087C               	movf	LIN_sendPacket@length,w
  4260     0435  3183  2373  3184   	fcall	_LIN_getChecksum
  4261     0438  3183  23CF  3184   	fcall	_EUSART_Write
  4262     043B                     l173:
  4263     043B  0008               	return
  4264     043C                     __end_of_LIN_sendPacket:
  4265                           
  4266                           	psect	text20
  4267     0373                     __ptext20:	
  4268 ;; *************** function _LIN_getChecksum *****************
  4269 ;; Defined at:
  4270 ;;		line 285 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  length          1    wreg     unsigned char 
  4273 ;;  pid             1    0[COMMON] unsigned char 
  4274 ;;  data            2    1[COMMON] PTR unsigned char 
  4275 ;;		 -> LIN_packet(13), 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  length          1    5[COMMON] unsigned char 
  4278 ;;  i               1    6[COMMON] unsigned char 
  4279 ;;  checksum        2    7[COMMON] unsigned short 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      unsigned char 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4289 ;;      Params:         3       0       0       0       0       0       0       0
  4290 ;;      Locals:         4       0       0       0       0       0       0       0
  4291 ;;      Temps:          2       0       0       0       0       0       0       0
  4292 ;;      Totals:         9       0       0       0       0       0       0       0
  4293 ;;Total ram usage:        9 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 4
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_LIN_queuePacket
  4300 ;;		_LIN_handler
  4301 ;;		_LIN_sendPacket
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305     0373                     _LIN_getChecksum:	
  4306                           ;psect for function _LIN_getChecksum
  4307                           
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4311                           ;LIN_getChecksum@length stored from wreg
  4312     0373  00F5               	movwf	LIN_getChecksum@length
  4313     0374                     l1710:
  4314                           
  4315                           ;mcc_generated_files/LINDrivers/lin_slave.c: 286:   uint16_t checksum = pid;
  4316     0374  0870               	movf	LIN_getChecksum@pid,w
  4317     0375  00F3               	movwf	??_LIN_getChecksum
  4318     0376  01F4               	clrf	??_LIN_getChecksum+1
  4319     0377  0873               	movf	??_LIN_getChecksum,w
  4320     0378  00F7               	movwf	LIN_getChecksum@checksum
  4321     0379  0874               	movf	??_LIN_getChecksum+1,w
  4322     037A  00F8               	movwf	LIN_getChecksum@checksum+1
  4323     037B                     l1712:
  4324                           
  4325                           ;mcc_generated_files/LINDrivers/lin_slave.c: 288:   for (uint8_t i = 0; i < length; i++)
      +                           {
  4326     037B  01F6               	clrf	LIN_getChecksum@i
  4327     037C  2B9B               	goto	l1724
  4328     037D                     l1714:
  4329                           
  4330                           ;mcc_generated_files/LINDrivers/lin_slave.c: 289:     checksum = checksum + *data++;
  4331     037D  0871               	movf	LIN_getChecksum@data,w
  4332     037E  0086               	movwf	6
  4333     037F  0872               	movf	LIN_getChecksum@data+1,w
  4334     0380  0087               	movwf	7
  4335     0381  0801               	movf	1,w
  4336     0382  0777               	addwf	LIN_getChecksum@checksum,w
  4337     0383  00F7               	movwf	LIN_getChecksum@checksum
  4338     0384  0878               	movf	LIN_getChecksum@checksum+1,w
  4339     0385  1803               	skipnc
  4340     0386  0A78               	incf	LIN_getChecksum@checksum+1,w
  4341     0387  00F8               	movwf	LIN_getChecksum@checksum+1
  4342     0388                     l1716:
  4343     0388  3001               	movlw	1
  4344     0389  07F1               	addwf	LIN_getChecksum@data,f
  4345     038A  3000               	movlw	0
  4346     038B  3DF2               	addwfc	LIN_getChecksum@data+1,f
  4347     038C                     l1718:
  4348                           
  4349                           ;mcc_generated_files/LINDrivers/lin_slave.c: 290:     if (checksum > 0xFF)
  4350     038C  3001               	movlw	1
  4351     038D  0278               	subwf	LIN_getChecksum@checksum+1,w
  4352     038E  3000               	movlw	0
  4353     038F  1903               	skipnz
  4354     0390  0277               	subwf	LIN_getChecksum@checksum,w
  4355     0391  1C03               	skipc
  4356     0392  2B94               	goto	u821
  4357     0393  2B95               	goto	u820
  4358     0394                     u821:
  4359     0394  2B99               	goto	l1722
  4360     0395                     u820:
  4361     0395                     l1720:
  4362                           
  4363                           ;mcc_generated_files/LINDrivers/lin_slave.c: 291:       checksum -= 0xFF;
  4364     0395  30FF               	movlw	255
  4365     0396  02F7               	subwf	LIN_getChecksum@checksum,f
  4366     0397  3000               	movlw	0
  4367     0398  3BF8               	subwfb	LIN_getChecksum@checksum+1,f
  4368     0399                     l1722:
  4369                           
  4370                           ;mcc_generated_files/LINDrivers/lin_slave.c: 292:   }
  4371     0399  3001               	movlw	1
  4372     039A  07F6               	addwf	LIN_getChecksum@i,f
  4373     039B                     l1724:
  4374     039B  0875               	movf	LIN_getChecksum@length,w
  4375     039C  0276               	subwf	LIN_getChecksum@i,w
  4376     039D  1C03               	skipc
  4377     039E  2BA0               	goto	u831
  4378     039F  2BA1               	goto	u830
  4379     03A0                     u831:
  4380     03A0  2B7D               	goto	l1714
  4381     03A1                     u830:
  4382     03A1                     l205:
  4383                           
  4384                           ;mcc_generated_files/LINDrivers/lin_slave.c: 293:   checksum = ~checksum;
  4385     03A1  09F7               	comf	LIN_getChecksum@checksum,f
  4386     03A2  09F8               	comf	LIN_getChecksum@checksum+1,f
  4387     03A3                     l1726:
  4388                           
  4389                           ;mcc_generated_files/LINDrivers/lin_slave.c: 295:   return (uint8_t)checksum;
  4390     03A3  0877               	movf	LIN_getChecksum@checksum,w
  4391     03A4                     l206:
  4392     03A4  0008               	return
  4393     03A5                     __end_of_LIN_getChecksum:
  4394                           
  4395                           	psect	text21
  4396     03CF                     __ptext21:	
  4397 ;; *************** function _EUSART_Write *****************
  4398 ;; Defined at:
  4399 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  txData          1    wreg     unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  txData          1    0[COMMON] unsigned char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4413 ;;      Params:         0       0       0       0       0       0       0       0
  4414 ;;      Locals:         1       0       0       0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0
  4416 ;;      Totals:         1       0       0       0       0       0       0       0
  4417 ;;Total ram usage:        1 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 4
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_LIN_sendPacket
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427     03CF                     _EUSART_Write:	
  4428                           ;psect for function _EUSART_Write
  4429                           
  4430                           
  4431                           ;incstack = 0
  4432                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4433                           ;EUSART_Write@txData stored from wreg
  4434     03CF  00F0               	movwf	EUSART_Write@txData
  4435     03D0                     l1738:
  4436     03D0                     l1740:	
  4437                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4438                           
  4439                           
  4440                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4441     03D0  0020               	movlb	0	; select bank0
  4442     03D1  084D               	movf	_eusartTxBufferRemaining,w	;volatile
  4443     03D2  1903               	btfsc	3,2
  4444     03D3  2BD5               	goto	u851
  4445     03D4  2BD6               	goto	u850
  4446     03D5                     u851:
  4447     03D5  2BD0               	goto	l1740
  4448     03D6                     u850:
  4449     03D6                     l358:
  4450                           
  4451                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4452     03D6  0021               	movlb	1	; select bank1
  4453     03D7  1A11               	btfsc	17,4	;volatile
  4454     03D8  2BDA               	goto	u861
  4455     03D9  2BDB               	goto	u860
  4456     03DA                     u861:
  4457     03DA  2BDF               	goto	l359
  4458     03DB                     u860:
  4459     03DB                     l1742:
  4460                           
  4461                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4462     03DB  0870               	movf	EUSART_Write@txData,w
  4463     03DC  0023               	movlb	3	; select bank3
  4464     03DD  009A               	movwf	26	;volatile
  4465                           
  4466                           ;mcc_generated_files/eusart.c: 182:     }
  4467     03DE  2BF2               	goto	l1754
  4468     03DF                     l359:	
  4469                           ;mcc_generated_files/eusart.c: 183:     else
  4470                           
  4471                           
  4472                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4473     03DF  1211               	bcf	17,4	;volatile
  4474     03E0                     l1744:
  4475                           
  4476                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4477     03E0  0020               	movlb	0	; select bank0
  4478     03E1  084F               	movf	_eusartTxHead,w
  4479     03E2  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4480     03E3  0086               	movwf	6
  4481     03E4  0187               	clrf	7
  4482     03E5  0870               	movf	EUSART_Write@txData,w
  4483     03E6  0081               	movwf	1
  4484     03E7                     l1746:
  4485     03E7  3001               	movlw	1
  4486     03E8  07CF               	addwf	_eusartTxHead,f	;volatile
  4487     03E9                     l1748:
  4488                           
  4489                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4490     03E9  3008               	movlw	8
  4491     03EA  024F               	subwf	_eusartTxHead,w	;volatile
  4492     03EB  1C03               	skipc
  4493     03EC  2BEE               	goto	u871
  4494     03ED  2BEF               	goto	u870
  4495     03EE                     u871:
  4496     03EE  2BF0               	goto	l1752
  4497     03EF                     u870:
  4498     03EF                     l1750:
  4499                           
  4500                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4501     03EF  01CF               	clrf	_eusartTxHead	;volatile
  4502     03F0                     l1752:
  4503                           
  4504                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4505     03F0  3001               	movlw	1
  4506     03F1  02CD               	subwf	_eusartTxBufferRemaining,f	;volatile
  4507     03F2                     l1754:
  4508                           
  4509                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4510     03F2  0021               	movlb	1	; select bank1
  4511     03F3  1611               	bsf	17,4	;volatile
  4512     03F4                     l362:
  4513     03F4  0008               	return
  4514     03F5                     __end_of_EUSART_Write:
  4515                           
  4516                           	psect	text22
  4517     05AF                     __ptext22:	
  4518 ;; *************** function _LIN_enableRx *****************
  4519 ;; Defined at:
  4520 ;;		line 323 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		None
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4534 ;;      Params:         0       0       0       0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0
  4537 ;;      Totals:         0       0       0       0       0       0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 4
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_LIN_init
  4545 ;;		_LIN_handler
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549     05AF                     _LIN_enableRx:	
  4550                           ;psect for function _LIN_enableRx
  4551                           
  4552     05AF                     l1698:	
  4553                           ;incstack = 0
  4554                           ; Regs used in _LIN_enableRx: []
  4555                           
  4556                           
  4557                           ;mcc_generated_files/LINDrivers/lin_slave.c: 324:   RCSTAbits.CREN = 1;
  4558     05AF  0023               	movlb	3	; select bank3
  4559     05B0  161D               	bsf	29,4	;volatile
  4560                           
  4561                           ;mcc_generated_files/LINDrivers/lin_slave.c: 325:   PIE1bits.RCIE = 1;
  4562     05B1  0021               	movlb	1	; select bank1
  4563     05B2  1691               	bsf	17,5	;volatile
  4564     05B3                     l222:
  4565     05B3  0008               	return
  4566     05B4                     __end_of_LIN_enableRx:
  4567                           
  4568                           	psect	text23
  4569     05B4                     __ptext23:	
  4570 ;; *************** function _LIN_disableRx *****************
  4571 ;; Defined at:
  4572 ;;		line 328 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;		None
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;		None
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		None
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4586 ;;      Params:         0       0       0       0       0       0       0       0
  4587 ;;      Locals:         0       0       0       0       0       0       0       0
  4588 ;;      Temps:          0       0       0       0       0       0       0       0
  4589 ;;      Totals:         0       0       0       0       0       0       0       0
  4590 ;;Total ram usage:        0 bytes
  4591 ;; Hardware stack levels used: 1
  4592 ;; Hardware stack levels required when called: 4
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_LIN_handler
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600     05B4                     _LIN_disableRx:	
  4601                           ;psect for function _LIN_disableRx
  4602                           
  4603     05B4                     l1910:	
  4604                           ;incstack = 0
  4605                           ; Regs used in _LIN_disableRx: []
  4606                           
  4607                           
  4608                           ;mcc_generated_files/LINDrivers/lin_slave.c: 329:   RCSTAbits.CREN = 0;
  4609     05B4  0023               	movlb	3	; select bank3
  4610     05B5  121D               	bcf	29,4	;volatile
  4611                           
  4612                           ;mcc_generated_files/LINDrivers/lin_slave.c: 330:   PIE1bits.RCIE = 0;
  4613     05B6  0021               	movlb	1	; select bank1
  4614     05B7  1291               	bcf	17,5	;volatile
  4615     05B8                     l225:
  4616     05B8  0008               	return
  4617     05B9                     __end_of_LIN_disableRx:
  4618                           
  4619                           	psect	text24
  4620     0494                     __ptext24:	
  4621 ;; *************** function _LIN_checkPID *****************
  4622 ;; Defined at:
  4623 ;;		line 257 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  pid             1    wreg     unsigned char 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  pid             1    7[COMMON] unsigned char 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      _Bool 
  4630 ;; Registers used:
  4631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4637 ;;      Params:         0       0       0       0       0       0       0       0
  4638 ;;      Locals:         1       0       0       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0       0
  4640 ;;      Totals:         1       0       0       0       0       0       0       0
  4641 ;;Total ram usage:        1 bytes
  4642 ;; Hardware stack levels used: 1
  4643 ;; Hardware stack levels required when called: 5
  4644 ;; This function calls:
  4645 ;;		_LIN_calcParity
  4646 ;;		_LIN_getFromTable
  4647 ;; This function is called by:
  4648 ;;		_LIN_handler
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652     0494                     _LIN_checkPID:	
  4653                           ;psect for function _LIN_checkPID
  4654                           
  4655                           
  4656                           ;incstack = 0
  4657                           ; Regs used in _LIN_checkPID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4658                           ;LIN_checkPID@pid stored from wreg
  4659     0494  00F7               	movwf	LIN_checkPID@pid
  4660     0495                     l1966:
  4661                           
  4662                           ;mcc_generated_files/LINDrivers/lin_slave.c: 258:   if (LIN_getFromTable(pid, TYPE) == E
      +                          RROR)
  4663     0495  01F0               	clrf	LIN_getFromTable@param
  4664     0496  0AF0               	incf	LIN_getFromTable@param,f
  4665     0497  0877               	movf	LIN_checkPID@pid,w
  4666     0498  3182  2257  3184   	fcall	_LIN_getFromTable
  4667     049B  3A02               	xorlw	2
  4668     049C  1D03               	skipz
  4669     049D  2C9F               	goto	u1321
  4670     049E  2CA0               	goto	u1320
  4671     049F                     u1321:
  4672     049F  2CA2               	goto	l1972
  4673     04A0                     u1320:
  4674     04A0                     l1968:
  4675                           
  4676                           ;mcc_generated_files/LINDrivers/lin_slave.c: 259:     return 0;
  4677     04A0  3000               	movlw	0
  4678     04A1  2CAD               	goto	l195
  4679     04A2                     l1972:
  4680                           
  4681                           ;mcc_generated_files/LINDrivers/lin_slave.c: 261:   if (pid == LIN_calcParity(pid & 0x3F
      +                          ))
  4682     04A2  0877               	movf	LIN_checkPID@pid,w
  4683     04A3  393F               	andlw	63
  4684     04A4  3181  216F  3184   	fcall	_LIN_calcParity
  4685     04A7  0677               	xorwf	LIN_checkPID@pid,w
  4686     04A8  1D03               	skipz
  4687     04A9  2CAB               	goto	u1331
  4688     04AA  2CAC               	goto	u1330
  4689     04AB                     u1331:
  4690     04AB  2CA0               	goto	l1968
  4691     04AC                     u1330:
  4692     04AC                     l1974:
  4693                           
  4694                           ;mcc_generated_files/LINDrivers/lin_slave.c: 262:     return 1;
  4695     04AC  3001               	movlw	1
  4696     04AD                     l195:
  4697     04AD  0008               	return
  4698     04AE                     __end_of_LIN_checkPID:
  4699                           
  4700                           	psect	text25
  4701     0257                     __ptext25:	
  4702 ;; *************** function _LIN_getFromTable *****************
  4703 ;; Defined at:
  4704 ;;		line 226 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  cmd             1    wreg     unsigned char 
  4707 ;;  param           1    0[COMMON] enum E221
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  cmd             1    3[COMMON] unsigned char 
  4710 ;;  length          1    4[COMMON] unsigned char 
  4711 ;;  rxCommand       2    5[COMMON] PTR const struct .
  4712 ;;		 -> NULL(0), scheduleTable(5), 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      unsigned char 
  4715 ;; Registers used:
  4716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4722 ;;      Params:         1       0       0       0       0       0       0       0
  4723 ;;      Locals:         4       0       0       0       0       0       0       0
  4724 ;;      Temps:          2       0       0       0       0       0       0       0
  4725 ;;      Totals:         7       0       0       0       0       0       0       0
  4726 ;;Total ram usage:        7 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; Hardware stack levels required when called: 4
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_LIN_handler
  4733 ;;		_LIN_checkPID
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737     0257                     _LIN_getFromTable:	
  4738                           ;psect for function _LIN_getFromTable
  4739                           
  4740                           
  4741                           ;incstack = 0
  4742                           ; Regs used in _LIN_getFromTable: [wreg-fsr0h+status,2+status,0+pclath]
  4743                           ;LIN_getFromTable@cmd stored from wreg
  4744     0257  00F3               	movwf	LIN_getFromTable@cmd
  4745     0258                     l1786:
  4746                           
  4747                           ;mcc_generated_files/LINDrivers/lin_slave.c: 227:   const lin_rx_cmd_t *rxCommand =
  4748     0258  0020               	movlb	0	; select bank0
  4749     0259  0845               	movf	_LIN_rxCommand+1,w
  4750     025A  00F6               	movwf	LIN_getFromTable@rxCommand+1
  4751     025B  0844               	movf	_LIN_rxCommand,w
  4752     025C  00F5               	movwf	LIN_getFromTable@rxCommand
  4753     025D                     l1788:
  4754                           
  4755                           ;mcc_generated_files/LINDrivers/lin_slave.c: 230:   cmd &= 0x3F;
  4756     025D  303F               	movlw	63
  4757     025E  05F3               	andwf	LIN_getFromTable@cmd,f
  4758     025F                     l1790:
  4759                           
  4760                           ;mcc_generated_files/LINDrivers/lin_slave.c: 232:   for (uint8_t length = 0; length < LI
      +                          N_rxCommandLength; length++) {
  4761     025F  01F4               	clrf	LIN_getFromTable@length
  4762     0260  2A82               	goto	l1804
  4763     0261                     l1792:
  4764                           
  4765                           ;mcc_generated_files/LINDrivers/lin_slave.c: 233:     if (cmd == rxCommand->cmd) {
  4766     0261  0875               	movf	LIN_getFromTable@rxCommand,w
  4767     0262  0084               	movwf	4
  4768     0263  0876               	movf	LIN_getFromTable@rxCommand+1,w
  4769     0264  0085               	movwf	5
  4770     0265  0800               	movf	0,w	;code access
  4771     0266  0673               	xorwf	LIN_getFromTable@cmd,w
  4772     0267  1D03               	skipz
  4773     0268  2A6A               	goto	u901
  4774     0269  2A6B               	goto	u900
  4775     026A                     u901:
  4776     026A  2A6C               	goto	l1796
  4777     026B                     u900:
  4778     026B  2AA1               	goto	l1820
  4779     026C                     l1796:
  4780                           
  4781                           ;mcc_generated_files/LINDrivers/lin_slave.c: 236:     rxCommand++;
  4782     026C  3005               	movlw	5
  4783     026D  07F5               	addwf	LIN_getFromTable@rxCommand,f
  4784     026E  3000               	movlw	0
  4785     026F  3DF6               	addwfc	LIN_getFromTable@rxCommand+1,f
  4786                           
  4787                           ;mcc_generated_files/LINDrivers/lin_slave.c: 238:     if (length == (LIN_rxCommandLength
      +                           - 1)) {
  4788     0270  0854               	movf	_LIN_rxCommandLength,w
  4789     0271  3EFF               	addlw	255
  4790     0272  00F1               	movwf	??_LIN_getFromTable
  4791     0273  30FF               	movlw	255
  4792     0274  1803               	skipnc
  4793     0275  3000               	movlw	0
  4794     0276  00F2               	movwf	??_LIN_getFromTable+1
  4795     0277  0874               	movf	LIN_getFromTable@length,w
  4796     0278  0671               	xorwf	??_LIN_getFromTable,w
  4797     0279  0472               	iorwf	??_LIN_getFromTable+1,w
  4798     027A  1D03               	skipz
  4799     027B  2A7D               	goto	u911
  4800     027C  2A7E               	goto	u910
  4801     027D                     u911:
  4802     027D  2A80               	goto	l1802
  4803     027E                     u910:
  4804     027E                     l1798:
  4805                           
  4806                           ;mcc_generated_files/LINDrivers/lin_slave.c: 239:       return ERROR;
  4807     027E  3002               	movlw	2
  4808     027F  2AB4               	goto	l185
  4809     0280                     l1802:
  4810                           
  4811                           ;mcc_generated_files/LINDrivers/lin_slave.c: 241:   }
  4812     0280  3001               	movlw	1
  4813     0281  07F4               	addwf	LIN_getFromTable@length,f
  4814     0282                     l1804:
  4815     0282  0854               	movf	_LIN_rxCommandLength,w
  4816     0283  0274               	subwf	LIN_getFromTable@length,w
  4817     0284  1C03               	skipc
  4818     0285  2A87               	goto	u921
  4819     0286  2A88               	goto	u920
  4820     0287                     u921:
  4821     0287  2A61               	goto	l1792
  4822     0288                     u920:
  4823     0288  2AA1               	goto	l1820
  4824     0289                     l1806:
  4825                           
  4826                           ;mcc_generated_files/LINDrivers/lin_slave.c: 245:     return rxCommand->cmd;
  4827     0289  0875               	movf	LIN_getFromTable@rxCommand,w
  4828     028A  0084               	movwf	4
  4829     028B  0876               	movf	LIN_getFromTable@rxCommand+1,w
  4830     028C  0085               	movwf	5
  4831     028D  0800               	movf	0,w	;code access
  4832     028E  2AB4               	goto	l185
  4833     028F                     l1810:
  4834                           
  4835                           ;mcc_generated_files/LINDrivers/lin_slave.c: 247:     return rxCommand->type;
  4836     028F  3001               	movlw	1
  4837     0290  0775               	addwf	LIN_getFromTable@rxCommand,w
  4838     0291  0084               	movwf	4
  4839     0292  0876               	movf	LIN_getFromTable@rxCommand+1,w
  4840     0293  1803               	skipnc
  4841     0294  3E01               	addlw	1
  4842     0295  0085               	movwf	5
  4843     0296  0800               	movf	0,w	;code access
  4844     0297  2AB4               	goto	l185
  4845     0298                     l1814:
  4846                           
  4847                           ;mcc_generated_files/LINDrivers/lin_slave.c: 249:     return rxCommand->length;
  4848     0298  3002               	movlw	2
  4849     0299  0775               	addwf	LIN_getFromTable@rxCommand,w
  4850     029A  0084               	movwf	4
  4851     029B  0876               	movf	LIN_getFromTable@rxCommand+1,w
  4852     029C  1803               	skipnc
  4853     029D  3E01               	addlw	1
  4854     029E  0085               	movwf	5
  4855     029F  0800               	movf	0,w	;code access
  4856     02A0  2AB4               	goto	l185
  4857     02A1                     l1820:
  4858     02A1  0870               	movf	LIN_getFromTable@param,w
  4859     02A2  00F1               	movwf	??_LIN_getFromTable
  4860     02A3  01F2               	clrf	??_LIN_getFromTable+1
  4861                           
  4862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4863                           ; Switch size 1, requested type "simple"
  4864                           ; Number of cases is 1, Range of values is 0 to 0
  4865                           ; switch strategies available:
  4866                           ; Name         Instructions Cycles
  4867                           ; simple_byte            4     3 (average)
  4868                           ; direct_byte            8     6 (fixed)
  4869                           ; jumptable            260     6 (fixed)
  4870                           ;	Chosen strategy is simple_byte
  4871     02A4  0872               	movf	??_LIN_getFromTable+1,w
  4872     02A5  3A00               	xorlw	0	; case 0
  4873     02A6  1903               	skipnz
  4874     02A7  2AA9               	goto	l2424
  4875     02A8  2A7E               	goto	l1798
  4876     02A9                     l2424:
  4877                           
  4878                           ; Switch size 1, requested type "simple"
  4879                           ; Number of cases is 3, Range of values is 0 to 2
  4880                           ; switch strategies available:
  4881                           ; Name         Instructions Cycles
  4882                           ; simple_byte           10     6 (average)
  4883                           ; direct_byte           12     6 (fixed)
  4884                           ; jumptable            260     6 (fixed)
  4885                           ;	Chosen strategy is simple_byte
  4886     02A9  0871               	movf	??_LIN_getFromTable,w
  4887     02AA  3A00               	xorlw	0	; case 0
  4888     02AB  1903               	skipnz
  4889     02AC  2A89               	goto	l1806
  4890     02AD  3A01               	xorlw	1	; case 1
  4891     02AE  1903               	skipnz
  4892     02AF  2A8F               	goto	l1810
  4893     02B0  3A03               	xorlw	3	; case 2
  4894     02B1  1903               	skipnz
  4895     02B2  2A98               	goto	l1814
  4896     02B3  2A7E               	goto	l1798
  4897     02B4                     l185:
  4898     02B4  0008               	return
  4899     02B5                     __end_of_LIN_getFromTable:
  4900                           
  4901                           	psect	text26
  4902     016F                     __ptext26:	
  4903 ;; *************** function _LIN_calcParity *****************
  4904 ;; Defined at:
  4905 ;;		line 267 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  CMD             1    wreg     unsigned char 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  CMD             1    1[COMMON] unsigned char 
  4910 ;;  PID             1    2[COMMON] struct .
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      unsigned char 
  4913 ;; Registers used:
  4914 ;;		wreg, status,0
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4920 ;;      Params:         0       0       0       0       0       0       0       0
  4921 ;;      Locals:         2       0       0       0       0       0       0       0
  4922 ;;      Temps:          1       0       0       0       0       0       0       0
  4923 ;;      Totals:         3       0       0       0       0       0       0       0
  4924 ;;Total ram usage:        3 bytes
  4925 ;; Hardware stack levels used: 1
  4926 ;; Hardware stack levels required when called: 4
  4927 ;; This function calls:
  4928 ;;		Nothing
  4929 ;; This function is called by:
  4930 ;;		_LIN_checkPID
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934     016F                     _LIN_calcParity:	
  4935                           ;psect for function _LIN_calcParity
  4936                           
  4937                           
  4938                           ;incstack = 0
  4939                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  4940                           ;LIN_calcParity@CMD stored from wreg
  4941     016F  00F1               	movwf	LIN_calcParity@CMD
  4942     0170                     l1834:
  4943                           
  4944                           ;mcc_generated_files/LINDrivers/lin_slave.c: 268:   lin_pid_t PID;;mcc_generated_files/L
      +                          INDrivers/lin_slave.c: 269:   PID.rawPID = CMD;
  4945     0170  0871               	movf	LIN_calcParity@CMD,w
  4946     0171  00F2               	movwf	LIN_calcParity@PID
  4947                           
  4948                           ;mcc_generated_files/LINDrivers/lin_slave.c: 274:   PID.P0 = PID.ID0 ^ PID.ID1;
  4949     0172  18F2               	btfsc	LIN_calcParity@PID,1
  4950     0173  2975               	goto	u931
  4951     0174  2977               	goto	u930
  4952     0175                     u931:
  4953     0175  3001               	movlw	1
  4954     0176  2978               	goto	u932
  4955     0177                     u930:
  4956     0177  3000               	movlw	0
  4957     0178                     u932:
  4958     0178  00F0               	movwf	??_LIN_calcParity
  4959     0179  1872               	btfsc	LIN_calcParity@PID,0
  4960     017A  297C               	goto	u941
  4961     017B  297E               	goto	u940
  4962     017C                     u941:
  4963     017C  3001               	movlw	1
  4964     017D  297F               	goto	u942
  4965     017E                     u940:
  4966     017E  3000               	movlw	0
  4967     017F                     u942:
  4968     017F  0670               	xorwf	??_LIN_calcParity,w
  4969     0180  1D03               	skipz
  4970     0181  2983               	goto	u951
  4971     0182  2985               	goto	u950
  4972     0183                     u951:
  4973     0183  1772               	bsf	LIN_calcParity@PID,6
  4974     0184  2986               	goto	u964
  4975     0185                     u950:
  4976     0185  1372               	bcf	LIN_calcParity@PID,6
  4977     0186                     u964:
  4978                           
  4979                           ;mcc_generated_files/LINDrivers/lin_slave.c: 275:   PID.P0 = PID.P0 ^ PID.ID2;
  4980     0186  1972               	btfsc	LIN_calcParity@PID,2
  4981     0187  2989               	goto	u971
  4982     0188  298B               	goto	u970
  4983     0189                     u971:
  4984     0189  3001               	movlw	1
  4985     018A  298C               	goto	u972
  4986     018B                     u970:
  4987     018B  3000               	movlw	0
  4988     018C                     u972:
  4989     018C  00F0               	movwf	??_LIN_calcParity
  4990     018D  1B72               	btfsc	LIN_calcParity@PID,6
  4991     018E  2990               	goto	u981
  4992     018F  2992               	goto	u980
  4993     0190                     u981:
  4994     0190  3001               	movlw	1
  4995     0191  2993               	goto	u982
  4996     0192                     u980:
  4997     0192  3000               	movlw	0
  4998     0193                     u982:
  4999     0193  0670               	xorwf	??_LIN_calcParity,w
  5000     0194  1D03               	skipz
  5001     0195  2997               	goto	u991
  5002     0196  2999               	goto	u990
  5003     0197                     u991:
  5004     0197  1772               	bsf	LIN_calcParity@PID,6
  5005     0198  299A               	goto	u1004
  5006     0199                     u990:
  5007     0199  1372               	bcf	LIN_calcParity@PID,6
  5008     019A                     u1004:
  5009                           
  5010                           ;mcc_generated_files/LINDrivers/lin_slave.c: 276:   PID.P0 = PID.P0 ^ PID.ID4;
  5011     019A  1A72               	btfsc	LIN_calcParity@PID,4
  5012     019B  299D               	goto	u1011
  5013     019C  299F               	goto	u1010
  5014     019D                     u1011:
  5015     019D  3001               	movlw	1
  5016     019E  29A0               	goto	u1012
  5017     019F                     u1010:
  5018     019F  3000               	movlw	0
  5019     01A0                     u1012:
  5020     01A0  00F0               	movwf	??_LIN_calcParity
  5021     01A1  1B72               	btfsc	LIN_calcParity@PID,6
  5022     01A2  29A4               	goto	u1021
  5023     01A3  29A6               	goto	u1020
  5024     01A4                     u1021:
  5025     01A4  3001               	movlw	1
  5026     01A5  29A7               	goto	u1022
  5027     01A6                     u1020:
  5028     01A6  3000               	movlw	0
  5029     01A7                     u1022:
  5030     01A7  0670               	xorwf	??_LIN_calcParity,w
  5031     01A8  1D03               	skipz
  5032     01A9  29AB               	goto	u1031
  5033     01AA  29AD               	goto	u1030
  5034     01AB                     u1031:
  5035     01AB  1772               	bsf	LIN_calcParity@PID,6
  5036     01AC  29AE               	goto	u1044
  5037     01AD                     u1030:
  5038     01AD  1372               	bcf	LIN_calcParity@PID,6
  5039     01AE                     u1044:
  5040                           
  5041                           ;mcc_generated_files/LINDrivers/lin_slave.c: 277:   PID.P1 = PID.ID1 ^ PID.ID3;
  5042     01AE  19F2               	btfsc	LIN_calcParity@PID,3
  5043     01AF  29B1               	goto	u1051
  5044     01B0  29B3               	goto	u1050
  5045     01B1                     u1051:
  5046     01B1  3001               	movlw	1
  5047     01B2  29B4               	goto	u1052
  5048     01B3                     u1050:
  5049     01B3  3000               	movlw	0
  5050     01B4                     u1052:
  5051     01B4  00F0               	movwf	??_LIN_calcParity
  5052     01B5  18F2               	btfsc	LIN_calcParity@PID,1
  5053     01B6  29B8               	goto	u1061
  5054     01B7  29BA               	goto	u1060
  5055     01B8                     u1061:
  5056     01B8  3001               	movlw	1
  5057     01B9  29BB               	goto	u1062
  5058     01BA                     u1060:
  5059     01BA  3000               	movlw	0
  5060     01BB                     u1062:
  5061     01BB  0670               	xorwf	??_LIN_calcParity,w
  5062     01BC  1D03               	skipz
  5063     01BD  29BF               	goto	u1071
  5064     01BE  29C1               	goto	u1070
  5065     01BF                     u1071:
  5066     01BF  17F2               	bsf	LIN_calcParity@PID,7
  5067     01C0  29C2               	goto	u1084
  5068     01C1                     u1070:
  5069     01C1  13F2               	bcf	LIN_calcParity@PID,7
  5070     01C2                     u1084:
  5071                           
  5072                           ;mcc_generated_files/LINDrivers/lin_slave.c: 278:   PID.P1 = PID.P1 ^ PID.ID4;
  5073     01C2  1A72               	btfsc	LIN_calcParity@PID,4
  5074     01C3  29C5               	goto	u1091
  5075     01C4  29C7               	goto	u1090
  5076     01C5                     u1091:
  5077     01C5  3001               	movlw	1
  5078     01C6  29C8               	goto	u1092
  5079     01C7                     u1090:
  5080     01C7  3000               	movlw	0
  5081     01C8                     u1092:
  5082     01C8  00F0               	movwf	??_LIN_calcParity
  5083     01C9  1BF2               	btfsc	LIN_calcParity@PID,7
  5084     01CA  29CC               	goto	u1101
  5085     01CB  29CE               	goto	u1100
  5086     01CC                     u1101:
  5087     01CC  3001               	movlw	1
  5088     01CD  29CF               	goto	u1102
  5089     01CE                     u1100:
  5090     01CE  3000               	movlw	0
  5091     01CF                     u1102:
  5092     01CF  0670               	xorwf	??_LIN_calcParity,w
  5093     01D0  1D03               	skipz
  5094     01D1  29D3               	goto	u1111
  5095     01D2  29D5               	goto	u1110
  5096     01D3                     u1111:
  5097     01D3  17F2               	bsf	LIN_calcParity@PID,7
  5098     01D4  29D6               	goto	u1124
  5099     01D5                     u1110:
  5100     01D5  13F2               	bcf	LIN_calcParity@PID,7
  5101     01D6                     u1124:
  5102                           
  5103                           ;mcc_generated_files/LINDrivers/lin_slave.c: 279:   PID.P1 = PID.P1 ^ PID.ID5;
  5104     01D6  1AF2               	btfsc	LIN_calcParity@PID,5
  5105     01D7  29D9               	goto	u1131
  5106     01D8  29DB               	goto	u1130
  5107     01D9                     u1131:
  5108     01D9  3001               	movlw	1
  5109     01DA  29DC               	goto	u1132
  5110     01DB                     u1130:
  5111     01DB  3000               	movlw	0
  5112     01DC                     u1132:
  5113     01DC  00F0               	movwf	??_LIN_calcParity
  5114     01DD  1BF2               	btfsc	LIN_calcParity@PID,7
  5115     01DE  29E0               	goto	u1141
  5116     01DF  29E2               	goto	u1140
  5117     01E0                     u1141:
  5118     01E0  3001               	movlw	1
  5119     01E1  29E3               	goto	u1142
  5120     01E2                     u1140:
  5121     01E2  3000               	movlw	0
  5122     01E3                     u1142:
  5123     01E3  0670               	xorwf	??_LIN_calcParity,w
  5124     01E4  1D03               	skipz
  5125     01E5  29E7               	goto	u1151
  5126     01E6  29E9               	goto	u1150
  5127     01E7                     u1151:
  5128     01E7  17F2               	bsf	LIN_calcParity@PID,7
  5129     01E8  29EA               	goto	u1164
  5130     01E9                     u1150:
  5131     01E9  13F2               	bcf	LIN_calcParity@PID,7
  5132     01EA                     u1164:
  5133     01EA                     l1836:
  5134                           
  5135                           ;mcc_generated_files/LINDrivers/lin_slave.c: 280:   PID.P1 = ~PID.P1;
  5136     01EA  1003               	clrc
  5137     01EB  1FF2               	btfss	LIN_calcParity@PID,7
  5138     01EC  1403               	setc
  5139     01ED  1803               	btfsc	3,0
  5140     01EE  29F0               	goto	u1171
  5141     01EF  29F2               	goto	u1170
  5142     01F0                     u1171:
  5143     01F0  17F2               	bsf	LIN_calcParity@PID,7
  5144     01F1  29F3               	goto	u1184
  5145     01F2                     u1170:
  5146     01F2  13F2               	bcf	LIN_calcParity@PID,7
  5147     01F3                     u1184:
  5148     01F3                     l1838:
  5149                           
  5150                           ;mcc_generated_files/LINDrivers/lin_slave.c: 282:   return PID.rawPID;
  5151     01F3  0872               	movf	LIN_calcParity@PID,w
  5152     01F4                     l199:
  5153     01F4  0008               	return
  5154     01F5                     __end_of_LIN_calcParity:
  5155                           
  5156                           	psect	text27
  5157     0565                     __ptext27:	
  5158 ;; *************** function _EUSART_is_rx_ready *****************
  5159 ;; Defined at:
  5160 ;;		line 137 in file "mcc_generated_files/eusart.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      _Bool 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5174 ;;      Params:         0       0       0       0       0       0       0       0
  5175 ;;      Locals:         0       0       0       0       0       0       0       0
  5176 ;;      Temps:          0       0       0       0       0       0       0       0
  5177 ;;      Totals:         0       0       0       0       0       0       0       0
  5178 ;;Total ram usage:        0 bytes
  5179 ;; Hardware stack levels used: 1
  5180 ;; Hardware stack levels required when called: 4
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		_LIN_handler
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188     0565                     _EUSART_is_rx_ready:	
  5189                           ;psect for function _EUSART_is_rx_ready
  5190                           
  5191     0565                     l1940:	
  5192                           ;incstack = 0
  5193                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5194                           
  5195                           
  5196                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  5197     0565  0020               	movlb	0	; select bank0
  5198     0566  084A               	movf	_eusartRxCount,w	;volatile
  5199     0567  1D03               	btfss	3,2
  5200     0568  2D6A               	goto	u1281
  5201     0569  2D6C               	goto	u1280
  5202     056A                     u1281:
  5203     056A  3001               	movlw	1
  5204     056B  2D6D               	goto	u1290
  5205     056C                     u1280:
  5206     056C  3000               	movlw	0
  5207     056D                     u1290:
  5208     056D                     l340:
  5209     056D  0008               	return
  5210     056E                     __end_of_EUSART_is_rx_ready:
  5211                           
  5212                           	psect	text28
  5213     03F5                     __ptext28:	
  5214 ;; *************** function _EUSART_Read *****************
  5215 ;; Defined at:
  5216 ;;		line 151 in file "mcc_generated_files/eusart.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;		None
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  readValue       1    0[COMMON] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      unsigned char 
  5223 ;; Registers used:
  5224 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5230 ;;      Params:         0       0       0       0       0       0       0       0
  5231 ;;      Locals:         1       0       0       0       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0       0       0       0
  5233 ;;      Totals:         1       0       0       0       0       0       0       0
  5234 ;;Total ram usage:        1 bytes
  5235 ;; Hardware stack levels used: 1
  5236 ;; Hardware stack levels required when called: 4
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_LIN_handler
  5241 ;;		_LIN_breakCheck
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245     03F5                     _EUSART_Read:	
  5246                           ;psect for function _EUSART_Read
  5247                           
  5248     03F5                     l1944:	
  5249                           ;incstack = 0
  5250                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5251                           
  5252     03F5                     l1946:	
  5253                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5254                           
  5255                           
  5256                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5257     03F5  0020               	movlb	0	; select bank0
  5258     03F6  084A               	movf	_eusartRxCount,w	;volatile
  5259     03F7  1903               	btfsc	3,2
  5260     03F8  2BFA               	goto	u1301
  5261     03F9  2BFB               	goto	u1300
  5262     03FA                     u1301:
  5263     03FA  2BF5               	goto	l1946
  5264     03FB                     u1300:
  5265     03FB                     l1948:
  5266                           
  5267                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  5268     03FB  084B               	movf	_eusartRxTail,w	;volatile
  5269     03FC  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5270     03FD  0086               	movwf	6
  5271     03FE  0187               	clrf	7
  5272     03FF  0801               	movf	1,w
  5273     0400  00C9               	movwf	_eusartRxLastError	;volatile
  5274                           
  5275                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  5276     0401  084B               	movf	_eusartRxTail,w
  5277     0402  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5278     0403  0086               	movwf	6
  5279     0404  0187               	clrf	7
  5280     0405  0801               	movf	1,w
  5281     0406  00F0               	movwf	EUSART_Read@readValue
  5282     0407                     l1950:
  5283     0407  3001               	movlw	1
  5284     0408  07CB               	addwf	_eusartRxTail,f	;volatile
  5285     0409                     l1952:
  5286                           
  5287                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  5288     0409  3008               	movlw	8
  5289     040A  024B               	subwf	_eusartRxTail,w	;volatile
  5290     040B  1C03               	skipc
  5291     040C  2C0E               	goto	u1311
  5292     040D  2C0F               	goto	u1310
  5293     040E                     u1311:
  5294     040E  2C10               	goto	l1956
  5295     040F                     u1310:
  5296     040F                     l1954:
  5297                           
  5298                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  5299     040F  01CB               	clrf	_eusartRxTail	;volatile
  5300     0410                     l1956:
  5301                           
  5302                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  5303     0410  0021               	movlb	1	; select bank1
  5304     0411  1291               	bcf	17,5	;volatile
  5305     0412                     l1958:
  5306                           
  5307                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  5308     0412  3001               	movlw	1
  5309     0413  0020               	movlb	0	; select bank0
  5310     0414  02CA               	subwf	_eusartRxCount,f	;volatile
  5311     0415                     l1960:
  5312                           
  5313                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  5314     0415  0021               	movlb	1	; select bank1
  5315     0416  1691               	bsf	17,5	;volatile
  5316     0417                     l1962:
  5317                           
  5318                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  5319     0417  0870               	movf	EUSART_Read@readValue,w
  5320     0418                     l353:
  5321     0418  0008               	return
  5322     0419                     __end_of_EUSART_Read:
  5323                           
  5324                           	psect	text29
  5325     02FF                     __ptext29:	
  5326 ;; *************** function _EUSART_Initialize *****************
  5327 ;; Defined at:
  5328 ;;		line 88 in file "mcc_generated_files/eusart.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0, pclath, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5342 ;;      Params:         0       0       0       0       0       0       0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0
  5345 ;;      Totals:         0       0       0       0       0       0       0       0
  5346 ;;Total ram usage:        0 bytes
  5347 ;; Hardware stack levels used: 1
  5348 ;; Hardware stack levels required when called: 5
  5349 ;; This function calls:
  5350 ;;		_EUSART_SetErrorHandler
  5351 ;;		_EUSART_SetFramingErrorHandler
  5352 ;;		_EUSART_SetOverrunErrorHandler
  5353 ;;		_EUSART_SetRxInterruptHandler
  5354 ;;		_EUSART_SetTxInterruptHandler
  5355 ;; This function is called by:
  5356 ;;		_LIN_handler
  5357 ;;		_SYSTEM_Initialize
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361     02FF                     _EUSART_Initialize:	
  5362                           ;psect for function _EUSART_Initialize
  5363                           
  5364     02FF                     l1912:	
  5365                           ;incstack = 0
  5366                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5367                           
  5368                           
  5369                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  5370     02FF  0021               	movlb	1	; select bank1
  5371     0300  1291               	bcf	17,5	;volatile
  5372     0301                     l1914:
  5373                           
  5374                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  5375     0301  3039               	movlw	low _EUSART_Receive_ISR
  5376     0302  00F0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  5377     0303  3003               	movlw	high _EUSART_Receive_ISR
  5378     0304  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  5379     0305  3185  2588  3182   	fcall	_EUSART_SetRxInterruptHandler
  5380     0308                     l1916:
  5381                           
  5382                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  5383     0308  0021               	movlb	1	; select bank1
  5384     0309  1211               	bcf	17,4	;volatile
  5385                           
  5386                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  5387     030A  305C               	movlw	low _EUSART_Transmit_ISR
  5388     030B  00F0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  5389     030C  3004               	movlw	high _EUSART_Transmit_ISR
  5390     030D  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  5391     030E  3185  2582  3182   	fcall	_EUSART_SetTxInterruptHandler
  5392     0311                     l1918:
  5393                           
  5394                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x18;
  5395     0311  3018               	movlw	24
  5396     0312  0023               	movlb	3	; select bank3
  5397     0313  009F               	movwf	31	;volatile
  5398     0314                     l1920:
  5399                           
  5400                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  5401     0314  3090               	movlw	144
  5402     0315  009D               	movwf	29	;volatile
  5403     0316                     l1922:
  5404                           
  5405                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  5406     0316  3024               	movlw	36
  5407     0317  009E               	movwf	30	;volatile
  5408                           
  5409                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  5410     0318  30D1               	movlw	low _EUSART_DefaultFramingErrorHandler
  5411     0319  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5412     031A  3005               	movlw	high _EUSART_DefaultFramingErrorHandler
  5413     031B  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5414     031C  3185  2594  3182   	fcall	_EUSART_SetFramingErrorHandler
  5415                           
  5416                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  5417     031F  30C7               	movlw	low _EUSART_DefaultOverrunErrorHandler
  5418     0320  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5419     0321  3005               	movlw	high _EUSART_DefaultOverrunErrorHandler
  5420     0322  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5421     0323  3185  258E  3182   	fcall	_EUSART_SetOverrunErrorHandler
  5422                           
  5423                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  5424     0326  30CB               	movlw	low _EUSART_DefaultErrorHandler
  5425     0327  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  5426     0328  3005               	movlw	high _EUSART_DefaultErrorHandler
  5427     0329  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5428     032A  3185  259A  3182   	fcall	_EUSART_SetErrorHandler
  5429     032D                     l1924:
  5430                           
  5431                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  5432     032D  0020               	movlb	0	; select bank0
  5433     032E  01C9               	clrf	_eusartRxLastError	;volatile
  5434     032F                     l1926:
  5435                           
  5436                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  5437     032F  01CF               	clrf	_eusartTxHead	;volatile
  5438     0330                     l1928:
  5439                           
  5440                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  5441     0330  01CE               	clrf	_eusartTxTail	;volatile
  5442     0331                     l1930:
  5443                           
  5444                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  5445     0331  3008               	movlw	8
  5446     0332  00CD               	movwf	_eusartTxBufferRemaining	;volatile
  5447     0333                     l1932:
  5448                           
  5449                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  5450     0333  01CC               	clrf	_eusartRxHead	;volatile
  5451     0334                     l1934:
  5452                           
  5453                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  5454     0334  01CB               	clrf	_eusartRxTail	;volatile
  5455     0335                     l1936:
  5456                           
  5457                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  5458     0335  01CA               	clrf	_eusartRxCount	;volatile
  5459     0336                     l1938:
  5460                           
  5461                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 0;
  5462     0336  0021               	movlb	1	; select bank1
  5463     0337  1291               	bcf	17,5	;volatile
  5464     0338                     l334:
  5465     0338  0008               	return
  5466     0339                     __end_of_EUSART_Initialize:
  5467                           
  5468                           	psect	text30
  5469     0582                     __ptext30:	
  5470 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  5471 ;; Defined at:
  5472 ;;		line 276 in file "mcc_generated_files/eusart.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5475 ;;		 -> EUSART_Transmit_ISR(1), 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5487 ;;      Params:         2       0       0       0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0
  5490 ;;      Totals:         2       0       0       0       0       0       0       0
  5491 ;;Total ram usage:        2 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 4
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_EUSART_Initialize
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501     0582                     _EUSART_SetTxInterruptHandler:	
  5502                           ;psect for function _EUSART_SetTxInterruptHandler
  5503                           
  5504     0582                     l1846:	
  5505                           ;incstack = 0
  5506                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  5507                           
  5508                           
  5509                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  5510     0582  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  5511     0583  0020               	movlb	0	; select bank0
  5512     0584  00C3               	movwf	_EUSART_TxDefaultInterruptHandler+1
  5513     0585  0870               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  5514     0586  00C2               	movwf	_EUSART_TxDefaultInterruptHandler
  5515     0587                     l400:
  5516     0587  0008               	return
  5517     0588                     __end_of_EUSART_SetTxInterruptHandler:
  5518                           
  5519                           	psect	text31
  5520     0588                     __ptext31:	
  5521 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  5522 ;; Defined at:
  5523 ;;		line 280 in file "mcc_generated_files/eusart.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5526 ;;		 -> EUSART_Receive_ISR(1), 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5538 ;;      Params:         2       0       0       0       0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0
  5541 ;;      Totals:         2       0       0       0       0       0       0       0
  5542 ;;Total ram usage:        2 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 4
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_EUSART_Initialize
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552     0588                     _EUSART_SetRxInterruptHandler:	
  5553                           ;psect for function _EUSART_SetRxInterruptHandler
  5554                           
  5555     0588                     l1844:	
  5556                           ;incstack = 0
  5557                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  5558                           
  5559                           
  5560                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  5561     0588  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  5562     0589  0020               	movlb	0	; select bank0
  5563     058A  00C1               	movwf	_EUSART_RxDefaultInterruptHandler+1
  5564     058B  0870               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  5565     058C  00C0               	movwf	_EUSART_RxDefaultInterruptHandler
  5566     058D                     l403:
  5567     058D  0008               	return
  5568     058E                     __end_of_EUSART_SetRxInterruptHandler:
  5569                           
  5570                           	psect	text32
  5571     058E                     __ptext32:	
  5572 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5573 ;; Defined at:
  5574 ;;		line 268 in file "mcc_generated_files/eusart.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5577 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      void 
  5582 ;; Registers used:
  5583 ;;		wreg
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5589 ;;      Params:         2       0       0       0       0       0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0       0       0
  5592 ;;      Totals:         2       0       0       0       0       0       0       0
  5593 ;;Total ram usage:        2 bytes
  5594 ;; Hardware stack levels used: 1
  5595 ;; Hardware stack levels required when called: 4
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_EUSART_Initialize
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603     058E                     _EUSART_SetOverrunErrorHandler:	
  5604                           ;psect for function _EUSART_SetOverrunErrorHandler
  5605                           
  5606     058E                     l1850:	
  5607                           ;incstack = 0
  5608                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5609                           
  5610                           
  5611                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  5612     058E  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5613     058F  0020               	movlb	0	; select bank0
  5614     0590  00BD               	movwf	_EUSART_OverrunErrorHandler+1
  5615     0591  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5616     0592  00BC               	movwf	_EUSART_OverrunErrorHandler
  5617     0593                     l394:
  5618     0593  0008               	return
  5619     0594                     __end_of_EUSART_SetOverrunErrorHandler:
  5620                           
  5621                           	psect	text33
  5622     0594                     __ptext33:	
  5623 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5624 ;; Defined at:
  5625 ;;		line 264 in file "mcc_generated_files/eusart.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5628 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		wreg
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5640 ;;      Params:         2       0       0       0       0       0       0       0
  5641 ;;      Locals:         0       0       0       0       0       0       0       0
  5642 ;;      Temps:          0       0       0       0       0       0       0       0
  5643 ;;      Totals:         2       0       0       0       0       0       0       0
  5644 ;;Total ram usage:        2 bytes
  5645 ;; Hardware stack levels used: 1
  5646 ;; Hardware stack levels required when called: 4
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_EUSART_Initialize
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654     0594                     _EUSART_SetFramingErrorHandler:	
  5655                           ;psect for function _EUSART_SetFramingErrorHandler
  5656                           
  5657     0594                     l1848:	
  5658                           ;incstack = 0
  5659                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5660                           
  5661                           
  5662                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  5663     0594  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5664     0595  0020               	movlb	0	; select bank0
  5665     0596  00BF               	movwf	_EUSART_FramingErrorHandler+1
  5666     0597  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5667     0598  00BE               	movwf	_EUSART_FramingErrorHandler
  5668     0599                     l391:
  5669     0599  0008               	return
  5670     059A                     __end_of_EUSART_SetFramingErrorHandler:
  5671                           
  5672                           	psect	text34
  5673     059A                     __ptext34:	
  5674 ;; *************** function _EUSART_SetErrorHandler *****************
  5675 ;; Defined at:
  5676 ;;		line 272 in file "mcc_generated_files/eusart.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5679 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;		None
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5691 ;;      Params:         2       0       0       0       0       0       0       0
  5692 ;;      Locals:         0       0       0       0       0       0       0       0
  5693 ;;      Temps:          0       0       0       0       0       0       0       0
  5694 ;;      Totals:         2       0       0       0       0       0       0       0
  5695 ;;Total ram usage:        2 bytes
  5696 ;; Hardware stack levels used: 1
  5697 ;; Hardware stack levels required when called: 4
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_EUSART_Initialize
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705     059A                     _EUSART_SetErrorHandler:	
  5706                           ;psect for function _EUSART_SetErrorHandler
  5707                           
  5708     059A                     l1852:	
  5709                           ;incstack = 0
  5710                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5711                           
  5712                           
  5713                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  5714     059A  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5715     059B  0020               	movlb	0	; select bank0
  5716     059C  00BB               	movwf	_EUSART_ErrorHandler+1
  5717     059D  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5718     059E  00BA               	movwf	_EUSART_ErrorHandler
  5719     059F                     l397:
  5720     059F  0008               	return
  5721     05A0                     __end_of_EUSART_SetErrorHandler:
  5722                           
  5723                           	psect	text35
  5724     05B9                     __ptext35:	
  5725 ;; *************** function _AutoBaud_Detect_ON *****************
  5726 ;; Defined at:
  5727 ;;		line 92 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;		None
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		None
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5741 ;;      Params:         0       0       0       0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used: 1
  5747 ;; Hardware stack levels required when called: 4
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_LIN_handler
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755     05B9                     _AutoBaud_Detect_ON:	
  5756                           ;psect for function _AutoBaud_Detect_ON
  5757                           
  5758     05B9                     l1900:	
  5759                           ;incstack = 0
  5760                           ; Regs used in _AutoBaud_Detect_ON: []
  5761                           
  5762                           
  5763                           ;mcc_generated_files/LINDrivers/lin_slave.c: 94:   BAUDCONbits.ABDOVF = 0;
  5764     05B9  0023               	movlb	3	; select bank3
  5765     05BA  139F               	bcf	31,7	;volatile
  5766                           
  5767                           ;mcc_generated_files/LINDrivers/lin_slave.c: 95:   BAUDCONbits.ABDEN = 1;
  5768     05BB  141F               	bsf	31,0	;volatile
  5769                           
  5770                           ;mcc_generated_files/LINDrivers/lin_slave.c: 96:   BAUDCONbits.WUE = 1;
  5771     05BC  149F               	bsf	31,1	;volatile
  5772     05BD                     l135:
  5773     05BD  0008               	return
  5774     05BE                     __end_of_AutoBaud_Detect_ON:
  5775                           
  5776                           	psect	intentry
  5777     0004                     __pintentry:	
  5778 ;; *************** function _INTERRUPT_InterruptManager *****************
  5779 ;; Defined at:
  5780 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;		None
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;		None
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      void 
  5787 ;; Registers used:
  5788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5794 ;;      Params:         0       0       0       0       0       0       0       0
  5795 ;;      Locals:         0       0       0       0       0       0       0       0
  5796 ;;      Temps:          0       0       0       0       0       0       0       0
  5797 ;;      Totals:         0       0       0       0       0       0       0       0
  5798 ;;Total ram usage:        0 bytes
  5799 ;; Hardware stack levels used: 1
  5800 ;; Hardware stack levels required when called: 3
  5801 ;; This function calls:
  5802 ;;		NULL
  5803 ;;		_EUSART_Receive_ISR
  5804 ;;		_EUSART_Transmit_ISR
  5805 ;;		_TMR0_ISR
  5806 ;; This function is called by:
  5807 ;;		Interrupt level 1
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811     0004                     _INTERRUPT_InterruptManager:
  5812                           
  5813                           ;incstack = 0
  5814     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5815                           
  5816                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5817     0005  3180               	pagesel	$
  5818     0006                     i1l2148:
  5819                           
  5820                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5821     0006  1E8B               	btfss	11,5	;volatile
  5822     0007  2809               	goto	u153_21
  5823     0008  280A               	goto	u153_20
  5824     0009                     u153_21:
  5825     0009  2812               	goto	i1l460
  5826     000A                     u153_20:
  5827     000A                     i1l2150:
  5828     000A  1D0B               	btfss	11,2	;volatile
  5829     000B  280D               	goto	u154_21
  5830     000C  280E               	goto	u154_20
  5831     000D                     u154_21:
  5832     000D  2812               	goto	i1l460
  5833     000E                     u154_20:
  5834     000E                     i1l2152:
  5835                           
  5836                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5837     000E  3185  2517  3180   	fcall	_TMR0_ISR
  5838                           
  5839                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5840     0011  2836               	goto	i1l468
  5841     0012                     i1l460:	
  5842                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5843                           
  5844     0012  1F0B               	btfss	11,6	;volatile
  5845     0013  2815               	goto	u155_21
  5846     0014  2816               	goto	u155_20
  5847     0015                     u155_21:
  5848     0015  2836               	goto	i1l468
  5849     0016                     u155_20:
  5850     0016                     i1l2154:
  5851                           
  5852                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5853     0016  0021               	movlb	1	; select bank1
  5854     0017  1E11               	btfss	17,4	;volatile
  5855     0018  281A               	goto	u156_21
  5856     0019  281B               	goto	u156_20
  5857     001A                     u156_21:
  5858     001A  2826               	goto	i1l463
  5859     001B                     u156_20:
  5860     001B                     i1l2156:
  5861     001B  0020               	movlb	0	; select bank0
  5862     001C  1E11               	btfss	17,4	;volatile
  5863     001D  281F               	goto	u157_21
  5864     001E  2820               	goto	u157_20
  5865     001F                     u157_21:
  5866     001F  2826               	goto	i1l463
  5867     0020                     u157_20:
  5868     0020                     i1l2158:
  5869                           
  5870                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
  5871     0020  0843               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5872     0021  008A               	movwf	10
  5873     0022  0842               	movf	_EUSART_TxDefaultInterruptHandler,w
  5874     0023  000A               	callw
  5875     0024  3180               	pagesel	$
  5876                           
  5877                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5878     0025  2836               	goto	i1l468
  5879     0026                     i1l463:	
  5880                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5881                           
  5882     0026  0021               	movlb	1	; select bank1
  5883     0027  1E91               	btfss	17,5	;volatile
  5884     0028  282A               	goto	u158_21
  5885     0029  282B               	goto	u158_20
  5886     002A                     u158_21:
  5887     002A  2836               	goto	i1l467
  5888     002B                     u158_20:
  5889     002B                     i1l2160:
  5890     002B  0020               	movlb	0	; select bank0
  5891     002C  1E91               	btfss	17,5	;volatile
  5892     002D  282F               	goto	u159_21
  5893     002E  2830               	goto	u159_20
  5894     002F                     u159_21:
  5895     002F  2836               	goto	i1l467
  5896     0030                     u159_20:
  5897     0030                     i1l2162:
  5898                           
  5899                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
  5900     0030  0841               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5901     0031  008A               	movwf	10
  5902     0032  0840               	movf	_EUSART_RxDefaultInterruptHandler,w
  5903     0033  000A               	callw
  5904     0034  3180               	pagesel	$
  5905                           
  5906                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5907     0035  2836               	goto	i1l468
  5908     0036                     i1l467:	
  5909                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  5910                           
  5911     0036                     i1l468:
  5912     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5913     0037  0009               	retfie
  5914     0038                     __end_of_INTERRUPT_InterruptManager:
  5915                           
  5916                           	psect	text37
  5917     0517                     __ptext37:	
  5918 ;; *************** function _TMR0_ISR *****************
  5919 ;; Defined at:
  5920 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;		None
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0, pclath, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5934 ;;      Params:         0       0       0       0       0       0       0       0
  5935 ;;      Locals:         0       0       0       0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0
  5937 ;;      Totals:         0       0       0       0       0       0       0       0
  5938 ;;Total ram usage:        0 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 2
  5941 ;; This function calls:
  5942 ;;		NULL
  5943 ;;		_LIN_timerHandler
  5944 ;;		_TMR0_DefaultInterruptHandler
  5945 ;; This function is called by:
  5946 ;;		_INTERRUPT_InterruptManager
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950     0517                     _TMR0_ISR:	
  5951                           ;psect for function _TMR0_ISR
  5952                           
  5953     0517                     i1l2120:	
  5954                           ;incstack = 0
  5955                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5956                           
  5957                           
  5958                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5959     0517  110B               	bcf	11,2	;volatile
  5960     0518                     i1l2122:
  5961                           
  5962                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5963     0518  0020               	movlb	0	; select bank0
  5964     0519  0848               	movf	_timer0ReloadVal,w	;volatile
  5965     051A  0095               	movwf	21	;volatile
  5966     051B                     i1l2124:
  5967                           
  5968                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5969     051B  0838               	movf	_TMR0_InterruptHandler,w
  5970     051C  0439               	iorwf	_TMR0_InterruptHandler+1,w
  5971     051D  1903               	btfsc	3,2
  5972     051E  2D20               	goto	u151_21
  5973     051F  2D21               	goto	u151_20
  5974     0520                     u151_21:
  5975     0520  2D26               	goto	i1l433
  5976     0521                     u151_20:
  5977     0521                     i1l2126:
  5978                           
  5979                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5980     0521  0839               	movf	_TMR0_InterruptHandler+1,w
  5981     0522  008A               	movwf	10
  5982     0523  0838               	movf	_TMR0_InterruptHandler,w
  5983     0524  000A               	callw
  5984     0525  3185               	pagesel	$
  5985     0526                     i1l433:
  5986     0526  0008               	return
  5987     0527                     __end_of_TMR0_ISR:
  5988                           
  5989                           	psect	text38
  5990     0541                     __ptext38:	
  5991 ;; *************** function _LIN_timerHandler *****************
  5992 ;; Defined at:
  5993 ;;		line 305 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		wreg, status,2, status,0, pclath, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6007 ;;      Params:         0       0       0       0       0       0       0       0
  6008 ;;      Locals:         0       0       0       0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0
  6010 ;;      Totals:         0       0       0       0       0       0       0       0
  6011 ;;Total ram usage:        0 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; Hardware stack levels required when called: 1
  6014 ;; This function calls:
  6015 ;;		i1_LIN_stopTimer
  6016 ;; This function is called by:
  6017 ;;		_LIN_setTimerHandler
  6018 ;;		_TMR0_ISR
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022     0541                     _LIN_timerHandler:	
  6023                           ;psect for function _LIN_timerHandler
  6024                           
  6025     0541                     i1l1982:	
  6026                           ;incstack = 0
  6027                           ; Regs used in _LIN_timerHandler: [wreg+status,2+status,0+pclath+cstack]
  6028                           
  6029                           
  6030                           ;mcc_generated_files/LINDrivers/lin_slave.c: 308:   if (++CountCallBack >= LIN_timeout) 
      +                          {
  6031     0541  3001               	movlw	1
  6032     0542  0020               	movlb	0	; select bank0
  6033     0543  07D2               	addwf	_CountCallBack,f	;volatile
  6034     0544  086C               	movf	_LIN_timeout,w
  6035     0545  0252               	subwf	_CountCallBack,w	;volatile
  6036     0546  1C03               	skipc
  6037     0547  2D49               	goto	u134_21
  6038     0548  2D4A               	goto	u134_20
  6039     0549                     u134_21:
  6040     0549  2D4D               	goto	i1l213
  6041     054A                     u134_20:
  6042     054A                     i1l1984:
  6043                           
  6044                           ;mcc_generated_files/LINDrivers/lin_slave.c: 310:     LIN_stopTimer();
  6045     054A  3185  25BE  3185   	fcall	i1_LIN_stopTimer
  6046     054D                     i1l213:
  6047     054D  0008               	return
  6048     054E                     __end_of_LIN_timerHandler:
  6049                           
  6050                           	psect	text39
  6051     05D0                     __ptext39:	
  6052 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6053 ;; Defined at:
  6054 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;		None
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		None
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6068 ;;      Params:         0       0       0       0       0       0       0       0
  6069 ;;      Locals:         0       0       0       0       0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0
  6071 ;;      Totals:         0       0       0       0       0       0       0       0
  6072 ;;Total ram usage:        0 bytes
  6073 ;; Hardware stack levels used: 1
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_TMR0_Initialize
  6078 ;;		_TMR0_ISR
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082     05D0                     _TMR0_DefaultInterruptHandler:	
  6083                           ;psect for function _TMR0_DefaultInterruptHandler
  6084                           
  6085     05D0                     i1l439:	
  6086                           ;incstack = 0
  6087                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6088                           
  6089     05D0  0008               	return
  6090     05D1                     __end_of_TMR0_DefaultInterruptHandler:
  6091                           
  6092                           	psect	text40
  6093     05BE                     __ptext40:	
  6094 ;; *************** function i1_LIN_stopTimer *****************
  6095 ;; Defined at:
  6096 ;;		line 316 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;		None
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		status,2
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6110 ;;      Params:         0       0       0       0       0       0       0       0
  6111 ;;      Locals:         0       0       0       0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0
  6113 ;;      Totals:         0       0       0       0       0       0       0       0
  6114 ;;Total ram usage:        0 bytes
  6115 ;; Hardware stack levels used: 1
  6116 ;; This function calls:
  6117 ;;		Nothing
  6118 ;; This function is called by:
  6119 ;;		_LIN_timerHandler
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123     05BE                     i1_LIN_stopTimer:	
  6124                           ;psect for function i1_LIN_stopTimer
  6125                           
  6126     05BE                     i1l1864:	
  6127                           ;incstack = 0
  6128                           ; Regs used in i1_LIN_stopTimer: [status,2]
  6129                           
  6130                           
  6131                           ;mcc_generated_files/LINDrivers/lin_slave.c: 317:   __nop();
  6132     05BE  0000               	nop
  6133     05BF                     i1l1866:
  6134                           
  6135                           ;mcc_generated_files/LINDrivers/lin_slave.c: 319:   CountCallBack = 0;
  6136     05BF  0020               	movlb	0	; select bank0
  6137     05C0  01D2               	clrf	_CountCallBack	;volatile
  6138                           
  6139                           ;mcc_generated_files/LINDrivers/lin_slave.c: 320:   LIN_timerRunning = 0;
  6140     05C1  01D3               	clrf	_LIN_timerRunning
  6141     05C2                     i1l219:
  6142     05C2  0008               	return
  6143     05C3                     __end_ofi1_LIN_stopTimer:
  6144                           
  6145                           	psect	text41
  6146     045C                     __ptext41:	
  6147 ;; *************** function _EUSART_Transmit_ISR *****************
  6148 ;; Defined at:
  6149 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6163 ;;      Params:         0       0       0       0       0       0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0
  6166 ;;      Totals:         0       0       0       0       0       0       0       0
  6167 ;;Total ram usage:        0 bytes
  6168 ;; Hardware stack levels used: 1
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_EUSART_Initialize
  6173 ;;		_INTERRUPT_InterruptManager
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177     045C                     _EUSART_Transmit_ISR:	
  6178                           ;psect for function _EUSART_Transmit_ISR
  6179                           
  6180     045C                     i1l2088:	
  6181                           ;incstack = 0
  6182                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6183                           
  6184                           
  6185                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6186     045C  3008               	movlw	8
  6187     045D  0020               	movlb	0	; select bank0
  6188     045E  024D               	subwf	_eusartTxBufferRemaining,w	;volatile
  6189     045F  1803               	skipnc
  6190     0460  2C62               	goto	u146_21
  6191     0461  2C63               	goto	u146_20
  6192     0462                     u146_21:
  6193     0462  2C77               	goto	i1l365
  6194     0463                     u146_20:
  6195     0463                     i1l2090:
  6196                           
  6197                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6198     0463  084E               	movf	_eusartTxTail,w
  6199     0464  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6200     0465  0086               	movwf	6
  6201     0466  0187               	clrf	7
  6202     0467  0801               	movf	1,w
  6203     0468  0023               	movlb	3	; select bank3
  6204     0469  009A               	movwf	26	;volatile
  6205     046A                     i1l2092:
  6206     046A  3001               	movlw	1
  6207     046B  0020               	movlb	0	; select bank0
  6208     046C  07CE               	addwf	_eusartTxTail,f	;volatile
  6209     046D                     i1l2094:
  6210                           
  6211                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6212     046D  3008               	movlw	8
  6213     046E  024E               	subwf	_eusartTxTail,w	;volatile
  6214     046F  1C03               	skipc
  6215     0470  2C72               	goto	u147_21
  6216     0471  2C73               	goto	u147_20
  6217     0472                     u147_21:
  6218     0472  2C74               	goto	i1l2098
  6219     0473                     u147_20:
  6220     0473                     i1l2096:
  6221                           
  6222                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6223     0473  01CE               	clrf	_eusartTxTail	;volatile
  6224     0474                     i1l2098:
  6225                           
  6226                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6227     0474  3001               	movlw	1
  6228     0475  07CD               	addwf	_eusartTxBufferRemaining,f	;volatile
  6229                           
  6230                           ;mcc_generated_files/eusart.c: 209:     }
  6231     0476  2C79               	goto	i1l368
  6232     0477                     i1l365:	
  6233                           ;mcc_generated_files/eusart.c: 210:     else
  6234                           
  6235                           
  6236                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  6237     0477  0021               	movlb	1	; select bank1
  6238     0478  1211               	bcf	17,4	;volatile
  6239     0479                     i1l368:
  6240     0479  0008               	return
  6241     047A                     __end_of_EUSART_Transmit_ISR:
  6242                           
  6243                           	psect	text42
  6244     0339                     __ptext42:	
  6245 ;; *************** function _EUSART_Receive_ISR *****************
  6246 ;; Defined at:
  6247 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6261 ;;      Params:         0       0       0       0       0       0       0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0
  6264 ;;      Totals:         0       0       0       0       0       0       0       0
  6265 ;;Total ram usage:        0 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; Hardware stack levels required when called: 2
  6268 ;; This function calls:
  6269 ;;		NULL
  6270 ;;		_EUSART_DefaultErrorHandler
  6271 ;;		_EUSART_DefaultFramingErrorHandler
  6272 ;;		_EUSART_DefaultOverrunErrorHandler
  6273 ;;		_EUSART_RxDataHandler
  6274 ;; This function is called by:
  6275 ;;		_EUSART_Initialize
  6276 ;;		_INTERRUPT_InterruptManager
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280     0339                     _EUSART_Receive_ISR:	
  6281                           ;psect for function _EUSART_Receive_ISR
  6282                           
  6283     0339                     i1l2100:	
  6284                           ;incstack = 0
  6285                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6286                           
  6287                           
  6288                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  6289     0339  0020               	movlb	0	; select bank0
  6290     033A  084C               	movf	_eusartRxHead,w	;volatile
  6291     033B  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6292     033C  0086               	movwf	6
  6293     033D  0187               	clrf	7
  6294     033E  0181               	clrf	1
  6295     033F                     i1l2102:
  6296                           
  6297                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  6298     033F  0023               	movlb	3	; select bank3
  6299     0340  1D1D               	btfss	29,2	;volatile
  6300     0341  2B43               	goto	u148_21
  6301     0342  2B44               	goto	u148_20
  6302     0343                     u148_21:
  6303     0343  2B4F               	goto	i1l2108
  6304     0344                     u148_20:
  6305     0344                     i1l2104:
  6306                           
  6307                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6308     0344  0020               	movlb	0	; select bank0
  6309     0345  084C               	movf	_eusartRxHead,w	;volatile
  6310     0346  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6311     0347  0086               	movwf	6
  6312     0348  0187               	clrf	7
  6313     0349  1481               	bsf	1,1
  6314     034A                     i1l2106:
  6315                           
  6316                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  6317     034A  083F               	movf	_EUSART_FramingErrorHandler+1,w
  6318     034B  008A               	movwf	10
  6319     034C  083E               	movf	_EUSART_FramingErrorHandler,w
  6320     034D  000A               	callw
  6321     034E  3183               	pagesel	$
  6322     034F                     i1l2108:
  6323                           
  6324                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  6325     034F  0023               	movlb	3	; select bank3
  6326     0350  1C9D               	btfss	29,1	;volatile
  6327     0351  2B53               	goto	u149_21
  6328     0352  2B54               	goto	u149_20
  6329     0353                     u149_21:
  6330     0353  2B5F               	goto	i1l2114
  6331     0354                     u149_20:
  6332     0354                     i1l2110:
  6333                           
  6334                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6335     0354  0020               	movlb	0	; select bank0
  6336     0355  084C               	movf	_eusartRxHead,w	;volatile
  6337     0356  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6338     0357  0086               	movwf	6
  6339     0358  0187               	clrf	7
  6340     0359  1501               	bsf	1,2
  6341     035A                     i1l2112:
  6342                           
  6343                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  6344     035A  083D               	movf	_EUSART_OverrunErrorHandler+1,w
  6345     035B  008A               	movwf	10
  6346     035C  083C               	movf	_EUSART_OverrunErrorHandler,w
  6347     035D  000A               	callw
  6348     035E  3183               	pagesel	$
  6349     035F                     i1l2114:
  6350                           
  6351                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  6352     035F  0020               	movlb	0	; select bank0
  6353     0360  084C               	movf	_eusartRxHead,w	;volatile
  6354     0361  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6355     0362  0086               	movwf	6
  6356     0363  0187               	clrf	7
  6357     0364  0801               	movf	1,w
  6358     0365  1903               	btfsc	3,2
  6359     0366  2B68               	goto	u150_21
  6360     0367  2B69               	goto	u150_20
  6361     0368                     u150_21:
  6362     0368  2B6F               	goto	i1l2118
  6363     0369                     u150_20:
  6364     0369                     i1l2116:
  6365                           
  6366                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  6367     0369  083B               	movf	_EUSART_ErrorHandler+1,w
  6368     036A  008A               	movwf	10
  6369     036B  083A               	movf	_EUSART_ErrorHandler,w
  6370     036C  000A               	callw
  6371     036D  3183               	pagesel	$
  6372                           
  6373                           ;mcc_generated_files/eusart.c: 233:     } else {
  6374     036E  2B72               	goto	i1l375
  6375     036F                     i1l2118:
  6376                           
  6377                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  6378     036F  3184  24DB  3183   	fcall	_EUSART_RxDataHandler
  6379     0372                     i1l375:
  6380     0372  0008               	return
  6381     0373                     __end_of_EUSART_Receive_ISR:
  6382                           
  6383                           	psect	text43
  6384     05C7                     __ptext43:	
  6385 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6386 ;; Defined at:
  6387 ;;		line 252 in file "mcc_generated_files/eusart.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		None
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6401 ;;      Params:         0       0       0       0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0
  6404 ;;      Totals:         0       0       0       0       0       0       0       0
  6405 ;;Total ram usage:        0 bytes
  6406 ;; Hardware stack levels used: 1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_EUSART_Initialize
  6411 ;;		_EUSART_Receive_ISR
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415     05C7                     _EUSART_DefaultOverrunErrorHandler:	
  6416                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6417                           
  6418     05C7                     i1l1986:	
  6419                           ;incstack = 0
  6420                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6421                           
  6422                           
  6423                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  6424     05C7  0023               	movlb	3	; select bank3
  6425     05C8  121D               	bcf	29,4	;volatile
  6426                           
  6427                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  6428     05C9  161D               	bsf	29,4	;volatile
  6429     05CA                     i1l385:
  6430     05CA  0008               	return
  6431     05CB                     __end_of_EUSART_DefaultOverrunErrorHandler:
  6432                           
  6433                           	psect	text44
  6434     05D1                     __ptext44:	
  6435 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6436 ;; Defined at:
  6437 ;;		line 250 in file "mcc_generated_files/eusart.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;		None
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  1    wreg      void 
  6444 ;; Registers used:
  6445 ;;		None
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6451 ;;      Params:         0       0       0       0       0       0       0       0
  6452 ;;      Locals:         0       0       0       0       0       0       0       0
  6453 ;;      Temps:          0       0       0       0       0       0       0       0
  6454 ;;      Totals:         0       0       0       0       0       0       0       0
  6455 ;;Total ram usage:        0 bytes
  6456 ;; Hardware stack levels used: 1
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_EUSART_Initialize
  6461 ;;		_EUSART_Receive_ISR
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465     05D1                     _EUSART_DefaultFramingErrorHandler:	
  6466                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6467                           
  6468     05D1                     i1l382:	
  6469                           ;incstack = 0
  6470                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6471                           
  6472     05D1  0008               	return
  6473     05D2                     __end_of_EUSART_DefaultFramingErrorHandler:
  6474                           
  6475                           	psect	text45
  6476     05CB                     __ptext45:	
  6477 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6478 ;; Defined at:
  6479 ;;		line 260 in file "mcc_generated_files/eusart.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1    wreg      void 
  6486 ;; Registers used:
  6487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6493 ;;      Params:         0       0       0       0       0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0
  6496 ;;      Totals:         0       0       0       0       0       0       0       0
  6497 ;;Total ram usage:        0 bytes
  6498 ;; Hardware stack levels used: 1
  6499 ;; Hardware stack levels required when called: 1
  6500 ;; This function calls:
  6501 ;;		_EUSART_RxDataHandler
  6502 ;; This function is called by:
  6503 ;;		_EUSART_Initialize
  6504 ;;		_EUSART_Receive_ISR
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508     05CB                     _EUSART_DefaultErrorHandler:	
  6509                           ;psect for function _EUSART_DefaultErrorHandler
  6510                           
  6511     05CB                     i1l1988:	
  6512                           ;incstack = 0
  6513                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6514                           
  6515                           
  6516                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  6517     05CB  3184  24DB  3185   	fcall	_EUSART_RxDataHandler
  6518     05CE                     i1l388:
  6519     05CE  0008               	return
  6520     05CF                     __end_of_EUSART_DefaultErrorHandler:
  6521                           
  6522                           	psect	text46
  6523     04DB                     __ptext46:	
  6524 ;; *************** function _EUSART_RxDataHandler *****************
  6525 ;; Defined at:
  6526 ;;		line 240 in file "mcc_generated_files/eusart.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;		None
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6540 ;;      Params:         0       0       0       0       0       0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0
  6543 ;;      Totals:         0       0       0       0       0       0       0       0
  6544 ;;Total ram usage:        0 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_EUSART_Receive_ISR
  6550 ;;		_EUSART_DefaultErrorHandler
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554     04DB                     _EUSART_RxDataHandler:	
  6555                           ;psect for function _EUSART_RxDataHandler
  6556                           
  6557     04DB                     i1l1854:	
  6558                           ;incstack = 0
  6559                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6560                           
  6561                           
  6562                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  6563     04DB  0020               	movlb	0	; select bank0
  6564     04DC  084C               	movf	_eusartRxHead,w
  6565     04DD  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6566     04DE  0086               	movwf	6
  6567     04DF  0187               	clrf	7
  6568     04E0  0023               	movlb	3	; select bank3
  6569     04E1  0819               	movf	25,w	;volatile
  6570     04E2  0081               	movwf	1
  6571     04E3                     i1l1856:
  6572     04E3  3001               	movlw	1
  6573     04E4  0020               	movlb	0	; select bank0
  6574     04E5  07CC               	addwf	_eusartRxHead,f	;volatile
  6575     04E6                     i1l1858:
  6576                           
  6577                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6578     04E6  3008               	movlw	8
  6579     04E7  024C               	subwf	_eusartRxHead,w	;volatile
  6580     04E8  1C03               	skipc
  6581     04E9  2CEB               	goto	u119_21
  6582     04EA  2CEC               	goto	u119_20
  6583     04EB                     u119_21:
  6584     04EB  2CED               	goto	i1l1862
  6585     04EC                     u119_20:
  6586     04EC                     i1l1860:
  6587                           
  6588                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  6589     04EC  01CC               	clrf	_eusartRxHead	;volatile
  6590     04ED                     i1l1862:
  6591                           
  6592                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  6593     04ED  3001               	movlw	1
  6594     04EE  07CA               	addwf	_eusartRxCount,f	;volatile
  6595     04EF                     i1l379:
  6596     04EF  0008               	return
  6597     04F0                     __end_of_EUSART_RxDataHandler:
  6598     0002                     ___latbits      equ	2
  6599     007E                     btemp           set	126	;btemp
  6600     007E                     int$flags       set	126
  6601     007E                     wtemp0          set	126
  6602                           
  6603                           	psect	config
  6604                           
  6605                           ;Config register CONFIG1 @ 0x8007
  6606                           ;	Oscillator Selection
  6607                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6608                           ;	Watchdog Timer Enable
  6609                           ;	WDTE = OFF, WDT disabled
  6610                           ;	Power-up Timer Enable
  6611                           ;	PWRTE = OFF, PWRT disabled
  6612                           ;	MCLR Pin Function Select
  6613                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6614                           ;	Flash Program Memory Code Protection
  6615                           ;	CP = OFF, Program memory code protection is disabled
  6616                           ;	Data Memory Code Protection
  6617                           ;	CPD = OFF, Data memory code protection is disabled
  6618                           ;	Brown-out Reset Enable
  6619                           ;	BOREN = ON, Brown-out Reset enabled
  6620                           ;	Clock Out Enable
  6621                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6622                           ;	Internal/External Switchover
  6623                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6624                           ;	Fail-Safe Clock Monitor Enable
  6625                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6626     8007                     	org	32775
  6627     8007  3FE4               	dw	16356
  6628                           
  6629                           ;Config register CONFIG2 @ 0x8008
  6630                           ;	Flash Memory Self-Write Protection
  6631                           ;	WRT = OFF, Write protection off
  6632                           ;	Voltage Regulator Capacitor Enable
  6633                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  6634                           ;	PLL Enable
  6635                           ;	PLLEN = ON, 4x PLL enabled
  6636                           ;	Stack Overflow/Underflow Reset Enable
  6637                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6638                           ;	Brown-out Reset Voltage Selection
  6639                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6640                           ;	Low-Voltage Programming Enable
  6641                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6642     8008                     	org	32776
  6643     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    5
    Data        1
    BSS         75
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      77
    BANK1            80      5      13
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    LIN_getChecksum@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    LIN_getFromTable@rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_getFromTable@rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK0[8]), 

    LIN_init@command	const PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), NULL(), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_queuePacket@tempSchedule$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_sendPacket@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@d1	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memset@dest	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memset@p	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    S26$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    scheduleTable$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    sp__memcpy	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    sp__memset	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Slave_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_queuePacket->_LIN_sendPacket
    _LIN_sendPacket->_LIN_getChecksum
    _LIN_checkPID->_LIN_getFromTable
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _LIN_handler->_processLIN

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LIN_handler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3044
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     238
                  _EUSART_Initialize
               _LIN_Slave_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Slave_Initialize                                 0     0      0      99
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             5     1      4      99
                                              2 COMMON     5     1      4
                       _LIN_enableRx
                _LIN_setTimerHandler
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      24
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          5     5      0    2806
                                              0 BANK1      5     5      0
                                NULL *
                 _AutoBaud_Detect_ON
                  _EUSART_Initialize
                        _EUSART_Read
                 _EUSART_is_rx_ready
                       _LIN_checkPID
                      _LIN_disableRx
                       _LIN_enableRx
                    _LIN_getChecksum
                   _LIN_getFromTable
                    _LIN_queuePacket
                     _LIN_startTimer
                      _LIN_stopTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                           9     9      0     504
                                              0 BANK0      9     9      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        2     1      1     319
                                              9 COMMON     2     1      1
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     1      6     102
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       1     1      0      58
                                              1 COMMON     1     1      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LIN_queuePacket                                      5     5      0     991
                                              0 BANK0      5     5      0
                    _LIN_getChecksum
                     _LIN_sendPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               9     3      6     149
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) _LIN_sendPacket                                       5     2      3     426
                                              9 COMMON     5     2      3
                       _EUSART_Write
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (4) _LIN_getChecksum                                      9     6      3     196
                                              0 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      58
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_checkPID                                         1     1      0     624
                                              7 COMMON     1     1      0
                     _LIN_calcParity
                   _LIN_getFromTable
 ---------------------------------------------------------------------------------
 (2) _LIN_getFromTable                                     7     6      1     192
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (3) _LIN_calcParity                                       3     3      0     345
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     115
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AutoBaud_Detect_ON                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                                NULL *
                   _LIN_timerHandler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     0     0      0       0
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_handler
     NULL(Fake) *
     _AutoBaud_Detect_ON *
     _EUSART_Initialize *
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EUSART_Read *
     _EUSART_is_rx_ready *
     _LIN_checkPID *
       _LIN_calcParity
       _LIN_getFromTable
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_getChecksum *
     _LIN_getFromTable *
     _LIN_queuePacket *
       _LIN_getChecksum
       _LIN_sendPacket
         _EUSART_Write
         _LIN_getChecksum
       _memcpy
     _LIN_startTimer *
       _TMR0_WriteTimer
     _LIN_stopTimer *
     _memset *
     _processLIN *
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _EUSART_Initialize
     _LIN_Slave_Initialize
       _LIN_init
         _LIN_enableRx
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _LIN_timerHandler *
       i1_LIN_stopTimer
     _TMR0_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      9      77     96.2%
BANK1               80      5      13     16.2%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      99      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jul 15 12:01:31 2025

                ?_EUSART_SetRxInterruptHandler 0070                          __end_of_LIN_getPacket 03CF  
                        ??_LIN_setTimerHandler 0072                          __end_of_LIN_disableRx 05B9  
                                           l21 02C1                                             l30 02CE  
                                           l23 02C6                                             l15 0533  
                                           l24 02C4                                             l41 02E4  
                                           l33 02D5                                             l42 02E2  
                                           l51 02F3                                             l35 02DA  
                                           l27 02CB                                             l19 02BD  
                                           l36 02D8                                             l45 02E9  
                                           l29 02D0                                             l54 02F6  
                                           l47 02EE                                             l39 02DF  
                                           l48 02EC                                             l58 02FE  
                              _timer0ReloadVal 0048                                ?_LIN_calcParity 0070  
                                          l132 0256                                            l205 03A1  
                                          l125 04DA                                            l222 05B3  
                                          l206 03A4                                            l135 05BD  
                                          l400 0587                                            l216 0575  
                                          l225 05B8                                            l209 0540  
                                          l162 011D                                            l403 058D  
                                          l219 05A9                                            l147 006E  
                                          l340 056D                                            l500 0554  
                                          l260 0493                                            l420 0503  
                                          l173 043B                                            l165 0144  
                                          l334 0338                                            l159 0112  
                                          l167 016E                                            l503 0559  
                                          l353 0418                                            l185 02B4  
                                          l177 03CE                                            l362 03F4  
                                          l426 05AE                                            l506 05C6  
                                          l195 04AD                                            l436 0581  
                                          l358 03D6                                            l391 0599  
                                          l199 01F4                                            l359 03DF  
                                          l394 0593                                            l397 059F  
                                          l497 0516                                            u550 0559  
                                          u551 0558                                            u810 045B  
                                          u811 045A                                            u900 026B  
                                          u820 0395                                            u901 026A  
                                          u821 0394                                            u910 027E  
                                          u830 03A1                                            u911 027D  
                                          u831 03A0                                            u920 0288  
                                          u840 04C4                                            u921 0287  
                                          u841 04C3                                            u930 0177  
                                          u850 03D6                                            u931 0175  
                                          u851 03D5                                            u940 017E  
                                          u932 0178                                            u860 03DB  
                                          u941 017C                                            u861 03DA  
                                          u950 0185                                            u942 017F  
                                          u870 03EF                                            u951 0183  
                                          u871 03EE                                            u880 03AE  
                                          u881 03AD                                            u970 018B  
                                          u890 042E                                            u971 0189  
                                          u891 042D                                            u980 0192  
                                          u972 018C                                            u964 0186  
                                          u981 0190                                            u990 0199  
                                          u982 0193                                            u991 0197  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0070  
                     __end_of_LIN_getFromTable 02B5                                            wreg 0009  
                        __end_of_scheduleTable 05A5                                   ?_EUSART_Read 0070  
                                         l2000 04FC                                           l1133 044F  
                                         l1142 04C4                                           l1136 045B  
                                         l2130 050D                                           l2300 00C1  
                                         l2132 0510                                           l2310 00FC  
                                         l2302 00D8                                           l2134 0513  
                                         l2232 01F7                                           l2320 0126  
                                         l2304 00EF                                           l1440 0482  
                                         l2128 0504                                           l2250 0228  
                                         l2242 020A                                           l2234 01FB  
                                         l2330 013E                                           l2322 0128  
                                         l2314 0115                                           l2306 00F1  
                                         l1442 0484                                           l2252 023F  
                                         l2244 020E                                           l2236 01FD  
                                         l2332 0141                                           l2324 0129  
                                         l2316 011A                                           l2308 00F4  
                                         l2260 005D                                           l1700 056E  
                                         l1444 0486                                           l1436 047A  
                                         l1710 0374                                           l1702 043C  
                                         l2254 024C                                           l2238 01FF  
                                         l2246 0210                                           l2422 0151  
                                         l2326 012B                                           l2318 0123  
                                         l2270 0073                                           l2262 0060  
                                         l1446 048A                                           l1438 047F  
                                         l1470 05C3                                           l2350 055F  
                                         l2424 02A9                                           l1720 0395  
                                         l1712 037B                                           l1704 0441  
                                         l2248 0216                                           l2328 0139  
                                         l2280 0087                                           l2272 0076  
                                         l2264 0064                                           l2336 0148  
                                         l2256 0052                                           l1448 048F  
                                         l2344 055A                                           l1810 028F  
                                         l1802 0280                                           l1722 0399  
                                         l1714 037D                                           l1706 0446  
                                         l1730 04AE                                           l2290 00A7  
                                         l2282 008C                                           l2274 0079  
                                         l2266 0067                                           l2258 0058  
                                         l1466 054E                                           l2346 055D  
                                         l1900 05B9                                           l1820 02A1  
                                         l1804 0282                                           l1740 03D0  
                                         l1716 0388                                           l1724 039B  
                                         l1708 0448                                           l1732 04B1  
                                         l2292 00AF                                           l2284 0095  
                                         l2276 007C                                           l2268 006A  
                                         l1468 0551                                           l2348 055E  
                                         l1814 0298                                           l1806 0289  
                                         l1910 05B4                                           l1750 03EF  
                                         l1742 03DB                                           l1726 03A3  
                                         l1718 038C                                           l1902 0535  
                                         l1734 04B6                                           l2294 00B2  
                                         l2286 0099                                           l2278 007F  
                                         l1920 0314                                           l1912 02FF  
                                         l1752 03F0                                           l1744 03E0  
                                         l1904 0538                                           l1736 04B8  
                                         l2296 00B5                                           l2288 00A2  
                                         l1760 04D4                                           l1850 058E  
                                         l1930 0331                                           l1922 0316  
                                         l1914 0301                                           l1834 0170  
                                         l1746 03E7                                           l1754 03F2  
                                         l1738 03D0                                           l1842 05AB  
                                         l1906 053C                                           l1770 03B1  
                                         l2298 00B9                                           l1762 04D7  
                                         l1852 059A                                           l1844 0588  
                                         l1932 0333                                           l1924 032D  
                                         l1916 0308                                           l1940 0565  
                                         l1836 01EA                                           l1748 03E9  
                                         l1780 0426                                           l1908 053D  
                                         l1772 03CD                                           l1764 03A5  
                                         l1692 057C                                           l1756 04C6  
                                         l1846 0582                                           l1934 0334  
                                         l1926 032F                                           l1918 0311  
                                         l1950 0407                                           l1838 01F3  
                                         l1790 025F                                           l1782 0428  
                                         l1694 05A5                                           l1766 03A9  
                                         l1870 02B5                                           l1758 04D1  
                                         l1848 0594                                           l1936 0335  
                                         l1928 0330                                           l1960 0415  
                                         l1952 0409                                           l1944 03F5  
                                         l1792 0261                                           l1784 042E  
                                         l1776 041A                                           l1696 05A6  
                                         l1768 03AE                                           l1938 0336  
                                         l1962 0417                                           l1954 040F  
                                         l1946 03F5                                           l1786 0258  
                                         l1698 05AF                                           l1778 041C  
                                         l1874 02F9                                           l1956 0410  
                                         l1948 03FB                                           l1796 026C  
                                         l1788 025D                                           l1972 04A2  
                                         l1868 0527                                           l1958 0412  
                                         l1798 027E                                           l1974 04AC  
                                         l1966 0495                                           l1990 04F0  
                                         l1968 04A0                                           l1992 04F5  
                                         l1994 04F8                                           l1996 04FA  
                                         l1998 04FB                                           u1010 019F  
                                         u1011 019D                                           u1100 01CE  
                                         u1020 01A6                                           u1012 01A0  
                                         u1004 019A                                           u1101 01CC  
                                         u1021 01A4                                           u1110 01D5  
                                         u1102 01CF                                           u1030 01AD  
                                         u1022 01A7                                           u1111 01D3  
                                         u1031 01AB                                           u1200 02C1  
                                         u1201 02C0                                           u1130 01DB  
                                         u1050 01B3                                           u1210 02CB  
                                         u1131 01D9                                           u1051 01B1  
                                         u1211 02CA                                           u1300 03FB  
                                         u1140 01E2                                           u1132 01DC  
                                         u1124 01D6                                           u1060 01BA  
                                         u1052 01B4                                           u1044 01AE  
                                         u1220 02D5                                           u1301 03FA  
                                         u1141 01E0                                           u1061 01B8  
                                         u1221 02D4                                           u1310 040F  
                                         u1150 01E9                                           u1142 01E3  
                                         u1070 01C1                                           u1062 01BB  
                                         u1230 02DF                                           u1311 040E  
                                         u1151 01E7                                           u1071 01BF  
                                         u1231 02DE                                           u1320 04A0  
                                         u1240 02E9                                           u1321 049F  
                                         u1241 02E8                                           u1170 01F2  
                                         u1090 01C7                                           u1330 04AC  
                                         u1250 02F3                                           u1171 01F0  
                                         u1091 01C5                                           u1331 04AB  
                                         u1251 02F2                                           u1164 01EA  
                                         u1092 01C8                                           u1084 01C2  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u1280 056C  
                                         u1184 01F3                                           u1600 0209  
                                         u1281 056A                                           u1601 0208  
                                         _LATE 0110                                           u1290 056D  
                                         u1610 0216                                           u1611 0215  
                                         u1700 00FC                                           u1620 0058  
                                         u1701 00FB                                           u1621 0057  
                                         u1710 0111                                           u1630 005D  
                                         u1711 0110                                           u1631 005C  
                                         u1720 013E                                           u1640 0073  
                                         u1721 013D                                           u1641 0072  
                                         u1650 0087                                           u1651 0086  
                                         u1660 0095                                           u1661 0094  
                                         u1670 00A7                                           u1671 00A6  
                                         u1680 00C1                                           u1681 00C0  
                                         u1690 00EF                                           u1691 00EE  
                                         u1695 00EB                                           _PLLR 04D6  
                                         _TMR0 0015                                           _WPUB 020D  
                                         _WPUE 0210                                 _LIN_sendPacket 0419  
                                         _main 055A                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0038                                  processLIN@cmd 006B  
                      __end_of_TMR0_Initialize 0504                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 055A  
                            LIN_sendPacket@pid 0079                                          ?_main 0070  
                              LIN_init@command 0072                                          i1l213 054D  
                                        i1l219 05C2                                          i1l433 0526  
                                        i1l460 0012                                          i1l365 0477  
                                        i1l382 05D1                                          i1l375 0372  
                                        i1l439 05D0                                          i1l463 0026  
                                        i1l368 0479                                          i1l385 05CA  
                                        i1l379 04EF                                          i1l467 0036  
                                        i1l388 05CE                                          i1l468 0036  
                              _TMR0_WriteTimer 05AA                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          _TXREG 019A  
                             __end_of_LIN_init 04DB                          __end_of_LIN_stopTimer 05AA  
                                        _TXSTA 019E                      ?_TMR0_SetInterruptHandler 0070  
                             __end_of_TMR0_ISR 0527                                 _WDT_Initialize 05C3  
                       __end_of_LIN_sendPacket 043C                                          pclath 000A  
                               _LIN_startTimer 0534                                          status 0003  
                                        wtemp0 007E                               ?_LIN_getChecksum 0070  
                  LIN_queuePacket@tempSchedule 0066                                __initialization 003A  
                                 ?_LIN_handler 0070                                   __end_of_main 0565  
                               ??_EUSART_Write 0070                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0072                                         ??_main 007E  
                       __end_of_WDT_Initialize 05C7                             LIN_sendPacket@data 007A  
    __end_of_EUSART_DefaultFramingErrorHandler 05D2            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 05D1  
                   _EUSART_OverrunErrorHandler 003C                         __end_of_LIN_startTimer 0541  
                              ?_LIN_sendPacket 0079                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 056E                                         _BORCON 0116  
                                       i1l2100 0339                                         i1l2110 0354  
                                       i1l2102 033F                                         i1l2112 035A  
                                       i1l2104 0344                                         i1l2120 0517  
                                       i1l2114 035F                                         i1l2106 034A  
                                       i1l2122 0518                                         i1l2116 0369  
                                       i1l2108 034F                                         i1l2124 051B  
                                       i1l2118 036F                                         i1l2126 0521  
                                       i1l2150 000A                                         i1l2160 002B  
                                       i1l2152 000E                                         i1l2090 0463  
                                       i1l2162 0030                                         i1l2154 0016  
                                       i1l2092 046A                                         i1l2156 001B  
                                       i1l2148 0006                                         i1l2094 046D  
                                       i1l2158 0020                                         i1l2096 0473  
                                       i1l2088 045C                                         i1l2098 0474  
                                       i1l1860 04EC                                         i1l1862 04ED  
                                       i1l1854 04DB                                         i1l1856 04E3  
                                       i1l1864 05BE                                         i1l1858 04E6  
                                       i1l1866 05BF                                         i1l1982 0541  
                                       i1l1984 054A                                         i1l1986 05C7  
                                       i1l1988 05CB                                         u150_20 0369  
                                       u134_20 054A                                         u150_21 0368  
                                       u134_21 0549                                         u119_20 04EC  
                                       u151_20 0521                                         u119_21 04EB  
                                       u151_21 0520                                         u153_20 000A  
                                       u153_21 0009                                         u146_20 0463  
                                       u154_20 000E                                         u146_21 0462  
                                       u154_21 000D                                         u147_20 0473  
                                       u155_20 0016                                         u147_21 0472  
                                       u155_21 0015                                         u148_20 0344  
                                       u156_20 001B                                         u148_21 0343  
                                       u156_21 001A                                         u149_20 0354  
                                       u157_20 0020                                         u149_21 0353  
                                       u157_21 001F                                         u158_20 002B  
                                       u158_21 002A                                         u159_20 0030  
                                       u159_21 002F                                         _OSCCON 0099  
                                       _WDTCON 0097                                _LIN_processData 0046  
                              _LIN_queuePacket 01F5                        __end_of_TMR0_WriteTimer 05AF  
                          _EUSART_Transmit_ISR 045C                                         _memcpy 043C  
                             ?_TMR0_Initialize 0070                                         _memset 04AE  
                              ?_WDT_Initialize 0070                               _LIN_rxInProgress 0055  
     TMR0_SetInterruptHandler@InterruptHandler 0070                                ?_LIN_startTimer 0070  
                         ?_EUSART_Transmit_ISR 0070                              _SYSTEM_Initialize 0504  
                      __end_of__initialization 004E                             ?_SYSTEM_Initialize 0070  
                                ?_LIN_checkPID 0070           __end_of_EUSART_SetTxInterruptHandler 0588  
                 _EUSART_SetTxInterruptHandler 0582                                      ?_LIN_init 0072  
                               __pcstackCOMMON 0070                                  ?_LIN_enableRx 0070  
                             ??_LIN_calcParity 0070                                LIN_sendPacket@i 007D  
                                 __pidataBANK0 05CF                            ??_SYSTEM_Initialize 0077  
                                    ?_TMR0_ISR 0070                         LIN_handler@rxDataIndex 0050  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 0020  
                            ?_LIN_getFromTable 0070                         LIN_handler@LIN_rxState 0051  
              ??_EUSART_SetOverrunErrorHandler 0072                             ??_LIN_getFromTable 0071  
                    __end_of_SYSTEM_Initialize 0517                          ??_EUSART_Transmit_ISR 0070  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 03F5                                 ??_LIN_checkPID 0077  
                  __end_of_LIN_setTimerHandler 0576                        __end_of_LIN_queuePacket 0257  
                               ??_LIN_enableRx 0070                                     __pmaintext 055A  
                             _LIN_timerHandler 0541                                     ??_LIN_init 0076  
                          LIN_getChecksum@data 0071                  ?_EUSART_SetTxInterruptHandler 0070  
             _EUSART_TxDefaultInterruptHandler 0042               __end_of_TMR0_SetInterruptHandler 0582  
                                   ??_TMR0_ISR 0070                                     __pintentry 0004  
                             ?_TMR0_WriteTimer 0070                                        ?_memcpy 0070  
                                      _BAUDCON 019F                                        ?_memset 0070  
                 ??_EUSART_DefaultErrorHandler 0070                          LIN_getChecksum@length 0075  
                             _LIN_timerRunning 0053                                  _eusartRxCount 004A  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                      LIN_getChecksum@checksum 0077                   __end_of_LIN_Slave_Initialize 0534  
                                _SW_STATE_Data 00A0                                        __ptext1 0504  
                                      __ptext2 05C3                                        __ptext3 04F0  
                                      __ptext4 047A                                        __ptext5 054E  
                                      __ptext6 0527                                        __ptext7 04C5  
                                      __ptext8 056E                                        __ptext9 057C  
                        _OSCILLATOR_Initialize 054E                               ??_LIN_sendPacket 007C  
                     ??_PIN_MANAGER_Initialize 0070                                        clrloop0 0577  
                    LIN_getFromTable@rxCommand 0075                           end_of_initialization 004E  
        __end_of_EUSART_SetOverrunErrorHandler 0594                  _EUSART_SetOverrunErrorHandler 058E  
                                      memcpy@d 0077                                        memcpy@n 0074  
                                      memcpy@s 0078                                        memset@c 0072  
                                      memset@n 0074                                        memset@p 0076  
                            _EUSART_Initialize 02FF                               ?_LIN_queuePacket 0070  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                            ??i1_LIN_stopTimer 0070                             _EUSART_is_rx_ready 0565  
                                _LIN_getPacket 03A5                                  _LIN_disableRx 05B4  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
               ??_EUSART_SetTxInterruptHandler 0072                              LIN_getPacket@data 0079  
                     _TMR0_SetInterruptHandler 057C                            ?_EUSART_is_rx_ready 0070  
                                   _processLIN 02B5                           __end_of_LIN_checkPID 04AE  
                          LIN_init@tableLength 0076                               ??_LIN_startTimer 0071  
                         __end_of_LIN_enableRx 05B4                                  _scheduleTable 05A0  
                    __end_of_EUSART_Initialize 0339                           ??_EUSART_is_rx_ready 0070  
                                    _TXSTAbits 019E                                  _LIN_rxCommand 0044  
                               ?_LIN_getPacket 0079                                 ?_LIN_disableRx 0070  
           __end_of_EUSART_DefaultErrorHandler 05CF                     _EUSART_DefaultErrorHandler 05CB  
                                  _BAUDCONbits 019F                                   _EUSART_Write 03CF  
                               __end_of_memcpy 045C                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_memset 04C5                            start_initialization 003A  
                                _LIN_stopTimer 05A5                       __end_of_LIN_timerHandler 054E  
                         _LIN_Slave_Initialize 0527                                  ??_EUSART_Read 0070  
                   __end_of_AutoBaud_Detect_ON 05BE   EUSART_SetRxInterruptHandler@interruptHandler 0070  
 EUSART_SetTxInterruptHandler@interruptHandler 0070                          LIN_startTimer@timeout 0071  
                            LIN_calcParity@CMD 0071                 ?_EUSART_SetOverrunErrorHandler 0070  
                            LIN_calcParity@PID 0072                     _EUSART_FramingErrorHandler 003E  
                       _EUSART_SetErrorHandler 059A                                    __pdataBANK0 006C  
                                     ??_memcpy 0076                                       ??_memset 0076  
                         processLIN@tempRxData 0063                                     memset@dest 0070  
                                  ?_processLIN 0070                            LIN_init@processData 0074  
                  __end_of_EUSART_Transmit_ISR 047A                                 ?_LIN_stopTimer 0070  
                                    ___latbits 0002                                  __pcstackBANK0 0063  
                                __pcstackBANK1 00A8                              ??_LIN_getChecksum 0073  
                        ?_LIN_Slave_Initialize 0070                     __end_of_EUSART_Receive_ISR 0373  
             _EUSART_RxDefaultInterruptHandler 0040                            __end_of_EUSART_Read 0419  
                        _TMR0_InterruptHandler 0038                   __end_of_EUSART_RxDataHandler 04F0  
                              ??_LIN_getPacket 007A                         _PIN_MANAGER_Initialize 047A  
                                ??_LIN_handler 00A8                               LIN_getChecksum@i 0076  
                              ??_LIN_disableRx 0070                           EUSART_Read@readValue 0070  
                           LIN_getChecksum@pid 0070                           LIN_sendPacket@length 007C  
                                 _eusartRxHead 004C                                   _eusartTxHead 004F  
                                 _eusartRxTail 004B                                   _eusartTxTail 004E  
                 ??_INTERRUPT_InterruptManager 0070                        _eusartTxBufferRemaining 004D  
                              LIN_checkPID@pid 0077                                i1_LIN_stopTimer 05BE  
                               _eusartRxBuffer 0028                              ??_TMR0_Initialize 0072  
                               _eusartTxBuffer 0030         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                      clear_ram0 0576  
                                     _PIE1bits 0091                              _eusartRxLastError 0049  
                                 _LIN_checkPID 0494                     ??_TMR0_SetInterruptHandler 0072  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
                                     _LIN_init 04C5                                   _LIN_enableRx 05AF  
                                     _TMR0_ISR 0517      __end_of_EUSART_DefaultOverrunErrorHandler 05CB  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 05C7                               LIN_getPacket@cmd 007A  
                          __end_of_LIN_handler 016F                                ??_LIN_stopTimer 0070  
                       ??_LIN_Slave_Initialize 0077                                    _EUSART_Read 03F5  
                             _LIN_getFromTable 0257                                      memcpy@tmp 0076  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 003A  
                  ?_EUSART_DefaultErrorHandler 0070                        __end_ofi1_LIN_stopTimer 05C3  
                         _EUSART_RxDataHandler 04DB                                       __ptext10 0052  
                                     __ptext11 02B5                                       __ptext20 0373  
                                     __ptext12 03A5                                       __ptext21 03CF  
                                     __ptext13 04AE                                       __ptext30 0582  
                                     __ptext22 05AF                                       __ptext14 05A5  
                                     __ptext31 0588                                       __ptext23 05B4  
                                     __ptext15 0534                                       __ptext40 05BE  
                                     __ptext32 058E                                       __ptext24 0494  
                                     __ptext16 05AA                                       __ptext41 045C  
                                     __ptext33 0594                                       __ptext25 0257  
                                     __ptext17 01F5                                       __ptext42 0339  
                                     __ptext34 059A                                       __ptext26 016F  
                                     __ptext18 043C                                       __ptext43 05C7  
                                     __ptext35 05B9                                       __ptext27 0565  
                                     __ptext19 0419                                       __ptext44 05D1  
                                     __ptext28 03F5                                       __ptext45 05CB  
                                     __ptext37 0517                                       __ptext29 02FF  
                                     __ptext46 04DB                                       __ptext38 0541  
                                     __ptext39 05D0                              ?_LIN_timerHandler 0070  
                      TMR0_WriteTimer@timerVal 0070                             ??_LIN_timerHandler 0070  
                            ??_TMR0_WriteTimer 0070                         LIN_getFromTable@length 0074  
         __end_of_TMR0_DefaultInterruptHandler 05D1                   _TMR0_DefaultInterruptHandler 05D0  
                      ?_EUSART_SetErrorHandler 0070                             _AutoBaud_Detect_ON 05B9  
                          _LIN_rxCommandLength 0054  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                  _LIN_handler 0052                                       int$flags 007E  
                              _LIN_getChecksum 0373             __end_of_INTERRUPT_InterruptManager 0038  
                   _INTERRUPT_InterruptManager 0004                            ?_AutoBaud_Detect_ON 0070  
        __end_of_EUSART_SetFramingErrorHandler 059A                  _EUSART_SetFramingErrorHandler 0594  
                                 ??_processLIN 007B                                    _LIN_timeout 006C  
                               _LIN_calcParity 016F                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                       memcpy@d1 0070  
                                     memcpy@s1 0072                            _LIN_setTimerHandler 056E  
                         ??_AutoBaud_Detect_ON 0070                                       intlevel1 0000  
                                _CountCallBack 0052                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 05A0                          LIN_getFromTable@param 0070  
                           __end_of_processLIN 02FF           __end_of_EUSART_SetRxInterruptHandler 058E  
                 _EUSART_SetRxInterruptHandler 0588                  ?_TMR0_DefaultInterruptHandler 0070  
                                   _LIN_packet 0056                             _EUSART_Receive_ISR 0339  
                         ?_LIN_setTimerHandler 0070  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                       __end_of_LIN_calcParity 01F5                                  __pstringtext1 05A0  
                           LIN_queuePacket@cmd 0064                                     _OPTION_REG 0095  
                          ?_EUSART_Receive_ISR 0070                                _TMR0_Initialize 04F0  
                            ??_LIN_queuePacket 0063                               ?i1_LIN_stopTimer 0070  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 0494  
                          LIN_getFromTable@cmd 0073                               LIN_queuePacket@i 0065  
                         ??_EUSART_Receive_ISR 0070                        __end_of_LIN_getChecksum 03A5  
