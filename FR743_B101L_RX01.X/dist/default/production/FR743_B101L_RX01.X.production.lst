

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jul 15 08:32:18 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,space=0,delta=2
    53                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    64                           	dabs	1,0x7E,2
    65     0000                     
    66                           ; Version 2.20
    67                           ; Generated 12/02/2020 GMT
    68                           ; 
    69                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F1936 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100     0008                     bsr             equ	8
   101     0005                     fsr0h           equ	5
   102     0004                     fsr0l           equ	4
   103     0007                     fsr1h           equ	7
   104     0006                     fsr1l           equ	6
   105     0000                     indf            equ	0
   106     0000                     indf0           equ	0
   107     0001                     indf1           equ	1
   108     000B                     intcon          equ	11
   109     0002                     pc              equ	2
   110     0002                     pcl             equ	2
   111     000A                     pclath          equ	10
   112     0003                     status          equ	3
   113     0009                     wreg            equ	9
   114     0000                     INDF0           equ	0	;# 
   115     0001                     INDF1           equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR0L           equ	4	;# 
   119     0005                     FSR0H           equ	5	;# 
   120     0006                     FSR1L           equ	6	;# 
   121     0007                     FSR1H           equ	7	;# 
   122     0008                     BSR             equ	8	;# 
   123     0009                     WREG            equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PORTA           equ	12	;# 
   127     000D                     PORTB           equ	13	;# 
   128     000E                     PORTC           equ	14	;# 
   129     0010                     PORTE           equ	16	;# 
   130     0011                     PIR1            equ	17	;# 
   131     0012                     PIR2            equ	18	;# 
   132     0013                     PIR3            equ	19	;# 
   133     0015                     TMR0            equ	21	;# 
   134     0016                     TMR1            equ	22	;# 
   135     0016                     TMR1L           equ	22	;# 
   136     0017                     TMR1H           equ	23	;# 
   137     0018                     T1CON           equ	24	;# 
   138     0019                     T1GCON          equ	25	;# 
   139     001A                     TMR2            equ	26	;# 
   140     001B                     PR2             equ	27	;# 
   141     001C                     T2CON           equ	28	;# 
   142     001E                     CPSCON0         equ	30	;# 
   143     001F                     CPSCON1         equ	31	;# 
   144     008C                     TRISA           equ	140	;# 
   145     008D                     TRISB           equ	141	;# 
   146     008E                     TRISC           equ	142	;# 
   147     0090                     TRISE           equ	144	;# 
   148     0091                     PIE1            equ	145	;# 
   149     0092                     PIE2            equ	146	;# 
   150     0093                     PIE3            equ	147	;# 
   151     0095                     OPTION_REG      equ	149	;# 
   152     0096                     PCON            equ	150	;# 
   153     0097                     WDTCON          equ	151	;# 
   154     0098                     OSCTUNE         equ	152	;# 
   155     0099                     OSCCON          equ	153	;# 
   156     009A                     OSCSTAT         equ	154	;# 
   157     009B                     ADRES           equ	155	;# 
   158     009B                     ADRESL          equ	155	;# 
   159     009C                     ADRESH          equ	156	;# 
   160     009D                     ADCON0          equ	157	;# 
   161     009E                     ADCON1          equ	158	;# 
   162     010C                     LATA            equ	268	;# 
   163     010D                     LATB            equ	269	;# 
   164     010E                     LATC            equ	270	;# 
   165     0110                     LATE            equ	272	;# 
   166     0111                     CM1CON0         equ	273	;# 
   167     0112                     CM1CON1         equ	274	;# 
   168     0113                     CM2CON0         equ	275	;# 
   169     0114                     CM2CON1         equ	276	;# 
   170     0115                     CMOUT           equ	277	;# 
   171     0116                     BORCON          equ	278	;# 
   172     0117                     FVRCON          equ	279	;# 
   173     0118                     DACCON0         equ	280	;# 
   174     0119                     DACCON1         equ	281	;# 
   175     011A                     SRCON0          equ	282	;# 
   176     011B                     SRCON1          equ	283	;# 
   177     011D                     APFCON          equ	285	;# 
   178     018C                     ANSELA          equ	396	;# 
   179     018D                     ANSELB          equ	397	;# 
   180     0191                     EEADR           equ	401	;# 
   181     0191                     EEADRL          equ	401	;# 
   182     0192                     EEADRH          equ	402	;# 
   183     0193                     EEDAT           equ	403	;# 
   184     0193                     EEDATL          equ	403	;# 
   185     0193                     EEDATA          equ	403	;# 
   186     0194                     EEDATH          equ	404	;# 
   187     0195                     EECON1          equ	405	;# 
   188     0196                     EECON2          equ	406	;# 
   189     0199                     RCREG           equ	409	;# 
   190     019A                     TXREG           equ	410	;# 
   191     019B                     SP1BRG          equ	411	;# 
   192     019B                     SP1BRGL         equ	411	;# 
   193     019B                     SPBRG           equ	411	;# 
   194     019B                     SPBRGL          equ	411	;# 
   195     019C                     SP1BRGH         equ	412	;# 
   196     019C                     SPBRGH          equ	412	;# 
   197     019D                     RCSTA           equ	413	;# 
   198     019E                     TXSTA           equ	414	;# 
   199     019F                     BAUDCON         equ	415	;# 
   200     020D                     WPUB            equ	525	;# 
   201     0210                     WPUE            equ	528	;# 
   202     0211                     SSPBUF          equ	529	;# 
   203     0212                     SSPADD          equ	530	;# 
   204     0213                     SSPMSK          equ	531	;# 
   205     0214                     SSPSTAT         equ	532	;# 
   206     0215                     SSPCON1         equ	533	;# 
   207     0215                     SSPCON          equ	533	;# 
   208     0216                     SSPCON2         equ	534	;# 
   209     0217                     SSPCON3         equ	535	;# 
   210     0291                     CCPR1           equ	657	;# 
   211     0291                     CCPR1L          equ	657	;# 
   212     0292                     CCPR1H          equ	658	;# 
   213     0293                     CCP1CON         equ	659	;# 
   214     0294                     PWM1CON         equ	660	;# 
   215     0295                     CCP1AS          equ	661	;# 
   216     0295                     ECCP1AS         equ	661	;# 
   217     0296                     PSTR1CON        equ	662	;# 
   218     0298                     CCPR2           equ	664	;# 
   219     0298                     CCPR2L          equ	664	;# 
   220     0299                     CCPR2H          equ	665	;# 
   221     029A                     CCP2CON         equ	666	;# 
   222     029B                     PWM2CON         equ	667	;# 
   223     029C                     CCP2AS          equ	668	;# 
   224     029C                     ECCP2AS         equ	668	;# 
   225     029D                     PSTR2CON        equ	669	;# 
   226     029E                     CCPTMRS0        equ	670	;# 
   227     029F                     CCPTMRS1        equ	671	;# 
   228     0311                     CCPR3           equ	785	;# 
   229     0311                     CCPR3L          equ	785	;# 
   230     0312                     CCPR3H          equ	786	;# 
   231     0313                     CCP3CON         equ	787	;# 
   232     0314                     PWM3CON         equ	788	;# 
   233     0315                     CCP3AS          equ	789	;# 
   234     0315                     ECCP3AS         equ	789	;# 
   235     0316                     PSTR3CON        equ	790	;# 
   236     0318                     CCPR4           equ	792	;# 
   237     0318                     CCPR4L          equ	792	;# 
   238     0319                     CCPR4H          equ	793	;# 
   239     031A                     CCP4CON         equ	794	;# 
   240     031C                     CCPR5           equ	796	;# 
   241     031C                     CCPR5L          equ	796	;# 
   242     031D                     CCPR5H          equ	797	;# 
   243     031E                     CCP5CON         equ	798	;# 
   244     0394                     IOCBP           equ	916	;# 
   245     0395                     IOCBN           equ	917	;# 
   246     0396                     IOCBF           equ	918	;# 
   247     0415                     TMR4            equ	1045	;# 
   248     0416                     PR4             equ	1046	;# 
   249     0417                     T4CON           equ	1047	;# 
   250     041C                     TMR6            equ	1052	;# 
   251     041D                     PR6             equ	1053	;# 
   252     041E                     T6CON           equ	1054	;# 
   253     0791                     LCDCON          equ	1937	;# 
   254     0792                     LCDPS           equ	1938	;# 
   255     0793                     LCDREF          equ	1939	;# 
   256     0794                     LCDCST          equ	1940	;# 
   257     0795                     LCDRL           equ	1941	;# 
   258     0798                     LCDSE0          equ	1944	;# 
   259     0799                     LCDSE1          equ	1945	;# 
   260     07A0                     LCDDATA0        equ	1952	;# 
   261     07A1                     LCDDATA1        equ	1953	;# 
   262     07A3                     LCDDATA3        equ	1955	;# 
   263     07A4                     LCDDATA4        equ	1956	;# 
   264     07A6                     LCDDATA6        equ	1958	;# 
   265     07A7                     LCDDATA7        equ	1959	;# 
   266     07A9                     LCDDATA9        equ	1961	;# 
   267     07AA                     LCDDATA10       equ	1962	;# 
   268     0FE4                     STATUS_SHAD     equ	4068	;# 
   269     0FE5                     WREG_SHAD       equ	4069	;# 
   270     0FE6                     BSR_SHAD        equ	4070	;# 
   271     0FE7                     PCLATH_SHAD     equ	4071	;# 
   272     0FE8                     FSR0L_SHAD      equ	4072	;# 
   273     0FE9                     FSR0H_SHAD      equ	4073	;# 
   274     0FEA                     FSR1L_SHAD      equ	4074	;# 
   275     0FEB                     FSR1H_SHAD      equ	4075	;# 
   276     0FED                     STKPTR          equ	4077	;# 
   277     0FEE                     TOSL            equ	4078	;# 
   278     0FEF                     TOSH            equ	4079	;# 
   279     0000                     INDF0           equ	0	;# 
   280     0001                     INDF1           equ	1	;# 
   281     0002                     PCL             equ	2	;# 
   282     0003                     STATUS          equ	3	;# 
   283     0004                     FSR0L           equ	4	;# 
   284     0005                     FSR0H           equ	5	;# 
   285     0006                     FSR1L           equ	6	;# 
   286     0007                     FSR1H           equ	7	;# 
   287     0008                     BSR             equ	8	;# 
   288     0009                     WREG            equ	9	;# 
   289     000A                     PCLATH          equ	10	;# 
   290     000B                     INTCON          equ	11	;# 
   291     000C                     PORTA           equ	12	;# 
   292     000D                     PORTB           equ	13	;# 
   293     000E                     PORTC           equ	14	;# 
   294     0010                     PORTE           equ	16	;# 
   295     0011                     PIR1            equ	17	;# 
   296     0012                     PIR2            equ	18	;# 
   297     0013                     PIR3            equ	19	;# 
   298     0015                     TMR0            equ	21	;# 
   299     0016                     TMR1            equ	22	;# 
   300     0016                     TMR1L           equ	22	;# 
   301     0017                     TMR1H           equ	23	;# 
   302     0018                     T1CON           equ	24	;# 
   303     0019                     T1GCON          equ	25	;# 
   304     001A                     TMR2            equ	26	;# 
   305     001B                     PR2             equ	27	;# 
   306     001C                     T2CON           equ	28	;# 
   307     001E                     CPSCON0         equ	30	;# 
   308     001F                     CPSCON1         equ	31	;# 
   309     008C                     TRISA           equ	140	;# 
   310     008D                     TRISB           equ	141	;# 
   311     008E                     TRISC           equ	142	;# 
   312     0090                     TRISE           equ	144	;# 
   313     0091                     PIE1            equ	145	;# 
   314     0092                     PIE2            equ	146	;# 
   315     0093                     PIE3            equ	147	;# 
   316     0095                     OPTION_REG      equ	149	;# 
   317     0096                     PCON            equ	150	;# 
   318     0097                     WDTCON          equ	151	;# 
   319     0098                     OSCTUNE         equ	152	;# 
   320     0099                     OSCCON          equ	153	;# 
   321     009A                     OSCSTAT         equ	154	;# 
   322     009B                     ADRES           equ	155	;# 
   323     009B                     ADRESL          equ	155	;# 
   324     009C                     ADRESH          equ	156	;# 
   325     009D                     ADCON0          equ	157	;# 
   326     009E                     ADCON1          equ	158	;# 
   327     010C                     LATA            equ	268	;# 
   328     010D                     LATB            equ	269	;# 
   329     010E                     LATC            equ	270	;# 
   330     0110                     LATE            equ	272	;# 
   331     0111                     CM1CON0         equ	273	;# 
   332     0112                     CM1CON1         equ	274	;# 
   333     0113                     CM2CON0         equ	275	;# 
   334     0114                     CM2CON1         equ	276	;# 
   335     0115                     CMOUT           equ	277	;# 
   336     0116                     BORCON          equ	278	;# 
   337     0117                     FVRCON          equ	279	;# 
   338     0118                     DACCON0         equ	280	;# 
   339     0119                     DACCON1         equ	281	;# 
   340     011A                     SRCON0          equ	282	;# 
   341     011B                     SRCON1          equ	283	;# 
   342     011D                     APFCON          equ	285	;# 
   343     018C                     ANSELA          equ	396	;# 
   344     018D                     ANSELB          equ	397	;# 
   345     0191                     EEADR           equ	401	;# 
   346     0191                     EEADRL          equ	401	;# 
   347     0192                     EEADRH          equ	402	;# 
   348     0193                     EEDAT           equ	403	;# 
   349     0193                     EEDATL          equ	403	;# 
   350     0193                     EEDATA          equ	403	;# 
   351     0194                     EEDATH          equ	404	;# 
   352     0195                     EECON1          equ	405	;# 
   353     0196                     EECON2          equ	406	;# 
   354     0199                     RCREG           equ	409	;# 
   355     019A                     TXREG           equ	410	;# 
   356     019B                     SP1BRG          equ	411	;# 
   357     019B                     SP1BRGL         equ	411	;# 
   358     019B                     SPBRG           equ	411	;# 
   359     019B                     SPBRGL          equ	411	;# 
   360     019C                     SP1BRGH         equ	412	;# 
   361     019C                     SPBRGH          equ	412	;# 
   362     019D                     RCSTA           equ	413	;# 
   363     019E                     TXSTA           equ	414	;# 
   364     019F                     BAUDCON         equ	415	;# 
   365     020D                     WPUB            equ	525	;# 
   366     0210                     WPUE            equ	528	;# 
   367     0211                     SSPBUF          equ	529	;# 
   368     0212                     SSPADD          equ	530	;# 
   369     0213                     SSPMSK          equ	531	;# 
   370     0214                     SSPSTAT         equ	532	;# 
   371     0215                     SSPCON1         equ	533	;# 
   372     0215                     SSPCON          equ	533	;# 
   373     0216                     SSPCON2         equ	534	;# 
   374     0217                     SSPCON3         equ	535	;# 
   375     0291                     CCPR1           equ	657	;# 
   376     0291                     CCPR1L          equ	657	;# 
   377     0292                     CCPR1H          equ	658	;# 
   378     0293                     CCP1CON         equ	659	;# 
   379     0294                     PWM1CON         equ	660	;# 
   380     0295                     CCP1AS          equ	661	;# 
   381     0295                     ECCP1AS         equ	661	;# 
   382     0296                     PSTR1CON        equ	662	;# 
   383     0298                     CCPR2           equ	664	;# 
   384     0298                     CCPR2L          equ	664	;# 
   385     0299                     CCPR2H          equ	665	;# 
   386     029A                     CCP2CON         equ	666	;# 
   387     029B                     PWM2CON         equ	667	;# 
   388     029C                     CCP2AS          equ	668	;# 
   389     029C                     ECCP2AS         equ	668	;# 
   390     029D                     PSTR2CON        equ	669	;# 
   391     029E                     CCPTMRS0        equ	670	;# 
   392     029F                     CCPTMRS1        equ	671	;# 
   393     0311                     CCPR3           equ	785	;# 
   394     0311                     CCPR3L          equ	785	;# 
   395     0312                     CCPR3H          equ	786	;# 
   396     0313                     CCP3CON         equ	787	;# 
   397     0314                     PWM3CON         equ	788	;# 
   398     0315                     CCP3AS          equ	789	;# 
   399     0315                     ECCP3AS         equ	789	;# 
   400     0316                     PSTR3CON        equ	790	;# 
   401     0318                     CCPR4           equ	792	;# 
   402     0318                     CCPR4L          equ	792	;# 
   403     0319                     CCPR4H          equ	793	;# 
   404     031A                     CCP4CON         equ	794	;# 
   405     031C                     CCPR5           equ	796	;# 
   406     031C                     CCPR5L          equ	796	;# 
   407     031D                     CCPR5H          equ	797	;# 
   408     031E                     CCP5CON         equ	798	;# 
   409     0394                     IOCBP           equ	916	;# 
   410     0395                     IOCBN           equ	917	;# 
   411     0396                     IOCBF           equ	918	;# 
   412     0415                     TMR4            equ	1045	;# 
   413     0416                     PR4             equ	1046	;# 
   414     0417                     T4CON           equ	1047	;# 
   415     041C                     TMR6            equ	1052	;# 
   416     041D                     PR6             equ	1053	;# 
   417     041E                     T6CON           equ	1054	;# 
   418     0791                     LCDCON          equ	1937	;# 
   419     0792                     LCDPS           equ	1938	;# 
   420     0793                     LCDREF          equ	1939	;# 
   421     0794                     LCDCST          equ	1940	;# 
   422     0795                     LCDRL           equ	1941	;# 
   423     0798                     LCDSE0          equ	1944	;# 
   424     0799                     LCDSE1          equ	1945	;# 
   425     07A0                     LCDDATA0        equ	1952	;# 
   426     07A1                     LCDDATA1        equ	1953	;# 
   427     07A3                     LCDDATA3        equ	1955	;# 
   428     07A4                     LCDDATA4        equ	1956	;# 
   429     07A6                     LCDDATA6        equ	1958	;# 
   430     07A7                     LCDDATA7        equ	1959	;# 
   431     07A9                     LCDDATA9        equ	1961	;# 
   432     07AA                     LCDDATA10       equ	1962	;# 
   433     0FE4                     STATUS_SHAD     equ	4068	;# 
   434     0FE5                     WREG_SHAD       equ	4069	;# 
   435     0FE6                     BSR_SHAD        equ	4070	;# 
   436     0FE7                     PCLATH_SHAD     equ	4071	;# 
   437     0FE8                     FSR0L_SHAD      equ	4072	;# 
   438     0FE9                     FSR0H_SHAD      equ	4073	;# 
   439     0FEA                     FSR1L_SHAD      equ	4074	;# 
   440     0FEB                     FSR1H_SHAD      equ	4075	;# 
   441     0FED                     STKPTR          equ	4077	;# 
   442     0FEE                     TOSL            equ	4078	;# 
   443     0FEF                     TOSH            equ	4079	;# 
   444     0000                     INDF0           equ	0	;# 
   445     0001                     INDF1           equ	1	;# 
   446     0002                     PCL             equ	2	;# 
   447     0003                     STATUS          equ	3	;# 
   448     0004                     FSR0L           equ	4	;# 
   449     0005                     FSR0H           equ	5	;# 
   450     0006                     FSR1L           equ	6	;# 
   451     0007                     FSR1H           equ	7	;# 
   452     0008                     BSR             equ	8	;# 
   453     0009                     WREG            equ	9	;# 
   454     000A                     PCLATH          equ	10	;# 
   455     000B                     INTCON          equ	11	;# 
   456     000C                     PORTA           equ	12	;# 
   457     000D                     PORTB           equ	13	;# 
   458     000E                     PORTC           equ	14	;# 
   459     0010                     PORTE           equ	16	;# 
   460     0011                     PIR1            equ	17	;# 
   461     0012                     PIR2            equ	18	;# 
   462     0013                     PIR3            equ	19	;# 
   463     0015                     TMR0            equ	21	;# 
   464     0016                     TMR1            equ	22	;# 
   465     0016                     TMR1L           equ	22	;# 
   466     0017                     TMR1H           equ	23	;# 
   467     0018                     T1CON           equ	24	;# 
   468     0019                     T1GCON          equ	25	;# 
   469     001A                     TMR2            equ	26	;# 
   470     001B                     PR2             equ	27	;# 
   471     001C                     T2CON           equ	28	;# 
   472     001E                     CPSCON0         equ	30	;# 
   473     001F                     CPSCON1         equ	31	;# 
   474     008C                     TRISA           equ	140	;# 
   475     008D                     TRISB           equ	141	;# 
   476     008E                     TRISC           equ	142	;# 
   477     0090                     TRISE           equ	144	;# 
   478     0091                     PIE1            equ	145	;# 
   479     0092                     PIE2            equ	146	;# 
   480     0093                     PIE3            equ	147	;# 
   481     0095                     OPTION_REG      equ	149	;# 
   482     0096                     PCON            equ	150	;# 
   483     0097                     WDTCON          equ	151	;# 
   484     0098                     OSCTUNE         equ	152	;# 
   485     0099                     OSCCON          equ	153	;# 
   486     009A                     OSCSTAT         equ	154	;# 
   487     009B                     ADRES           equ	155	;# 
   488     009B                     ADRESL          equ	155	;# 
   489     009C                     ADRESH          equ	156	;# 
   490     009D                     ADCON0          equ	157	;# 
   491     009E                     ADCON1          equ	158	;# 
   492     010C                     LATA            equ	268	;# 
   493     010D                     LATB            equ	269	;# 
   494     010E                     LATC            equ	270	;# 
   495     0110                     LATE            equ	272	;# 
   496     0111                     CM1CON0         equ	273	;# 
   497     0112                     CM1CON1         equ	274	;# 
   498     0113                     CM2CON0         equ	275	;# 
   499     0114                     CM2CON1         equ	276	;# 
   500     0115                     CMOUT           equ	277	;# 
   501     0116                     BORCON          equ	278	;# 
   502     0117                     FVRCON          equ	279	;# 
   503     0118                     DACCON0         equ	280	;# 
   504     0119                     DACCON1         equ	281	;# 
   505     011A                     SRCON0          equ	282	;# 
   506     011B                     SRCON1          equ	283	;# 
   507     011D                     APFCON          equ	285	;# 
   508     018C                     ANSELA          equ	396	;# 
   509     018D                     ANSELB          equ	397	;# 
   510     0191                     EEADR           equ	401	;# 
   511     0191                     EEADRL          equ	401	;# 
   512     0192                     EEADRH          equ	402	;# 
   513     0193                     EEDAT           equ	403	;# 
   514     0193                     EEDATL          equ	403	;# 
   515     0193                     EEDATA          equ	403	;# 
   516     0194                     EEDATH          equ	404	;# 
   517     0195                     EECON1          equ	405	;# 
   518     0196                     EECON2          equ	406	;# 
   519     0199                     RCREG           equ	409	;# 
   520     019A                     TXREG           equ	410	;# 
   521     019B                     SP1BRG          equ	411	;# 
   522     019B                     SP1BRGL         equ	411	;# 
   523     019B                     SPBRG           equ	411	;# 
   524     019B                     SPBRGL          equ	411	;# 
   525     019C                     SP1BRGH         equ	412	;# 
   526     019C                     SPBRGH          equ	412	;# 
   527     019D                     RCSTA           equ	413	;# 
   528     019E                     TXSTA           equ	414	;# 
   529     019F                     BAUDCON         equ	415	;# 
   530     020D                     WPUB            equ	525	;# 
   531     0210                     WPUE            equ	528	;# 
   532     0211                     SSPBUF          equ	529	;# 
   533     0212                     SSPADD          equ	530	;# 
   534     0213                     SSPMSK          equ	531	;# 
   535     0214                     SSPSTAT         equ	532	;# 
   536     0215                     SSPCON1         equ	533	;# 
   537     0215                     SSPCON          equ	533	;# 
   538     0216                     SSPCON2         equ	534	;# 
   539     0217                     SSPCON3         equ	535	;# 
   540     0291                     CCPR1           equ	657	;# 
   541     0291                     CCPR1L          equ	657	;# 
   542     0292                     CCPR1H          equ	658	;# 
   543     0293                     CCP1CON         equ	659	;# 
   544     0294                     PWM1CON         equ	660	;# 
   545     0295                     CCP1AS          equ	661	;# 
   546     0295                     ECCP1AS         equ	661	;# 
   547     0296                     PSTR1CON        equ	662	;# 
   548     0298                     CCPR2           equ	664	;# 
   549     0298                     CCPR2L          equ	664	;# 
   550     0299                     CCPR2H          equ	665	;# 
   551     029A                     CCP2CON         equ	666	;# 
   552     029B                     PWM2CON         equ	667	;# 
   553     029C                     CCP2AS          equ	668	;# 
   554     029C                     ECCP2AS         equ	668	;# 
   555     029D                     PSTR2CON        equ	669	;# 
   556     029E                     CCPTMRS0        equ	670	;# 
   557     029F                     CCPTMRS1        equ	671	;# 
   558     0311                     CCPR3           equ	785	;# 
   559     0311                     CCPR3L          equ	785	;# 
   560     0312                     CCPR3H          equ	786	;# 
   561     0313                     CCP3CON         equ	787	;# 
   562     0314                     PWM3CON         equ	788	;# 
   563     0315                     CCP3AS          equ	789	;# 
   564     0315                     ECCP3AS         equ	789	;# 
   565     0316                     PSTR3CON        equ	790	;# 
   566     0318                     CCPR4           equ	792	;# 
   567     0318                     CCPR4L          equ	792	;# 
   568     0319                     CCPR4H          equ	793	;# 
   569     031A                     CCP4CON         equ	794	;# 
   570     031C                     CCPR5           equ	796	;# 
   571     031C                     CCPR5L          equ	796	;# 
   572     031D                     CCPR5H          equ	797	;# 
   573     031E                     CCP5CON         equ	798	;# 
   574     0394                     IOCBP           equ	916	;# 
   575     0395                     IOCBN           equ	917	;# 
   576     0396                     IOCBF           equ	918	;# 
   577     0415                     TMR4            equ	1045	;# 
   578     0416                     PR4             equ	1046	;# 
   579     0417                     T4CON           equ	1047	;# 
   580     041C                     TMR6            equ	1052	;# 
   581     041D                     PR6             equ	1053	;# 
   582     041E                     T6CON           equ	1054	;# 
   583     0791                     LCDCON          equ	1937	;# 
   584     0792                     LCDPS           equ	1938	;# 
   585     0793                     LCDREF          equ	1939	;# 
   586     0794                     LCDCST          equ	1940	;# 
   587     0795                     LCDRL           equ	1941	;# 
   588     0798                     LCDSE0          equ	1944	;# 
   589     0799                     LCDSE1          equ	1945	;# 
   590     07A0                     LCDDATA0        equ	1952	;# 
   591     07A1                     LCDDATA1        equ	1953	;# 
   592     07A3                     LCDDATA3        equ	1955	;# 
   593     07A4                     LCDDATA4        equ	1956	;# 
   594     07A6                     LCDDATA6        equ	1958	;# 
   595     07A7                     LCDDATA7        equ	1959	;# 
   596     07A9                     LCDDATA9        equ	1961	;# 
   597     07AA                     LCDDATA10       equ	1962	;# 
   598     0FE4                     STATUS_SHAD     equ	4068	;# 
   599     0FE5                     WREG_SHAD       equ	4069	;# 
   600     0FE6                     BSR_SHAD        equ	4070	;# 
   601     0FE7                     PCLATH_SHAD     equ	4071	;# 
   602     0FE8                     FSR0L_SHAD      equ	4072	;# 
   603     0FE9                     FSR0H_SHAD      equ	4073	;# 
   604     0FEA                     FSR1L_SHAD      equ	4074	;# 
   605     0FEB                     FSR1H_SHAD      equ	4075	;# 
   606     0FED                     STKPTR          equ	4077	;# 
   607     0FEE                     TOSL            equ	4078	;# 
   608     0FEF                     TOSH            equ	4079	;# 
   609     0000                     INDF0           equ	0	;# 
   610     0001                     INDF1           equ	1	;# 
   611     0002                     PCL             equ	2	;# 
   612     0003                     STATUS          equ	3	;# 
   613     0004                     FSR0L           equ	4	;# 
   614     0005                     FSR0H           equ	5	;# 
   615     0006                     FSR1L           equ	6	;# 
   616     0007                     FSR1H           equ	7	;# 
   617     0008                     BSR             equ	8	;# 
   618     0009                     WREG            equ	9	;# 
   619     000A                     PCLATH          equ	10	;# 
   620     000B                     INTCON          equ	11	;# 
   621     000C                     PORTA           equ	12	;# 
   622     000D                     PORTB           equ	13	;# 
   623     000E                     PORTC           equ	14	;# 
   624     0010                     PORTE           equ	16	;# 
   625     0011                     PIR1            equ	17	;# 
   626     0012                     PIR2            equ	18	;# 
   627     0013                     PIR3            equ	19	;# 
   628     0015                     TMR0            equ	21	;# 
   629     0016                     TMR1            equ	22	;# 
   630     0016                     TMR1L           equ	22	;# 
   631     0017                     TMR1H           equ	23	;# 
   632     0018                     T1CON           equ	24	;# 
   633     0019                     T1GCON          equ	25	;# 
   634     001A                     TMR2            equ	26	;# 
   635     001B                     PR2             equ	27	;# 
   636     001C                     T2CON           equ	28	;# 
   637     001E                     CPSCON0         equ	30	;# 
   638     001F                     CPSCON1         equ	31	;# 
   639     008C                     TRISA           equ	140	;# 
   640     008D                     TRISB           equ	141	;# 
   641     008E                     TRISC           equ	142	;# 
   642     0090                     TRISE           equ	144	;# 
   643     0091                     PIE1            equ	145	;# 
   644     0092                     PIE2            equ	146	;# 
   645     0093                     PIE3            equ	147	;# 
   646     0095                     OPTION_REG      equ	149	;# 
   647     0096                     PCON            equ	150	;# 
   648     0097                     WDTCON          equ	151	;# 
   649     0098                     OSCTUNE         equ	152	;# 
   650     0099                     OSCCON          equ	153	;# 
   651     009A                     OSCSTAT         equ	154	;# 
   652     009B                     ADRES           equ	155	;# 
   653     009B                     ADRESL          equ	155	;# 
   654     009C                     ADRESH          equ	156	;# 
   655     009D                     ADCON0          equ	157	;# 
   656     009E                     ADCON1          equ	158	;# 
   657     010C                     LATA            equ	268	;# 
   658     010D                     LATB            equ	269	;# 
   659     010E                     LATC            equ	270	;# 
   660     0110                     LATE            equ	272	;# 
   661     0111                     CM1CON0         equ	273	;# 
   662     0112                     CM1CON1         equ	274	;# 
   663     0113                     CM2CON0         equ	275	;# 
   664     0114                     CM2CON1         equ	276	;# 
   665     0115                     CMOUT           equ	277	;# 
   666     0116                     BORCON          equ	278	;# 
   667     0117                     FVRCON          equ	279	;# 
   668     0118                     DACCON0         equ	280	;# 
   669     0119                     DACCON1         equ	281	;# 
   670     011A                     SRCON0          equ	282	;# 
   671     011B                     SRCON1          equ	283	;# 
   672     011D                     APFCON          equ	285	;# 
   673     018C                     ANSELA          equ	396	;# 
   674     018D                     ANSELB          equ	397	;# 
   675     0191                     EEADR           equ	401	;# 
   676     0191                     EEADRL          equ	401	;# 
   677     0192                     EEADRH          equ	402	;# 
   678     0193                     EEDAT           equ	403	;# 
   679     0193                     EEDATL          equ	403	;# 
   680     0193                     EEDATA          equ	403	;# 
   681     0194                     EEDATH          equ	404	;# 
   682     0195                     EECON1          equ	405	;# 
   683     0196                     EECON2          equ	406	;# 
   684     0199                     RCREG           equ	409	;# 
   685     019A                     TXREG           equ	410	;# 
   686     019B                     SP1BRG          equ	411	;# 
   687     019B                     SP1BRGL         equ	411	;# 
   688     019B                     SPBRG           equ	411	;# 
   689     019B                     SPBRGL          equ	411	;# 
   690     019C                     SP1BRGH         equ	412	;# 
   691     019C                     SPBRGH          equ	412	;# 
   692     019D                     RCSTA           equ	413	;# 
   693     019E                     TXSTA           equ	414	;# 
   694     019F                     BAUDCON         equ	415	;# 
   695     020D                     WPUB            equ	525	;# 
   696     0210                     WPUE            equ	528	;# 
   697     0211                     SSPBUF          equ	529	;# 
   698     0212                     SSPADD          equ	530	;# 
   699     0213                     SSPMSK          equ	531	;# 
   700     0214                     SSPSTAT         equ	532	;# 
   701     0215                     SSPCON1         equ	533	;# 
   702     0215                     SSPCON          equ	533	;# 
   703     0216                     SSPCON2         equ	534	;# 
   704     0217                     SSPCON3         equ	535	;# 
   705     0291                     CCPR1           equ	657	;# 
   706     0291                     CCPR1L          equ	657	;# 
   707     0292                     CCPR1H          equ	658	;# 
   708     0293                     CCP1CON         equ	659	;# 
   709     0294                     PWM1CON         equ	660	;# 
   710     0295                     CCP1AS          equ	661	;# 
   711     0295                     ECCP1AS         equ	661	;# 
   712     0296                     PSTR1CON        equ	662	;# 
   713     0298                     CCPR2           equ	664	;# 
   714     0298                     CCPR2L          equ	664	;# 
   715     0299                     CCPR2H          equ	665	;# 
   716     029A                     CCP2CON         equ	666	;# 
   717     029B                     PWM2CON         equ	667	;# 
   718     029C                     CCP2AS          equ	668	;# 
   719     029C                     ECCP2AS         equ	668	;# 
   720     029D                     PSTR2CON        equ	669	;# 
   721     029E                     CCPTMRS0        equ	670	;# 
   722     029F                     CCPTMRS1        equ	671	;# 
   723     0311                     CCPR3           equ	785	;# 
   724     0311                     CCPR3L          equ	785	;# 
   725     0312                     CCPR3H          equ	786	;# 
   726     0313                     CCP3CON         equ	787	;# 
   727     0314                     PWM3CON         equ	788	;# 
   728     0315                     CCP3AS          equ	789	;# 
   729     0315                     ECCP3AS         equ	789	;# 
   730     0316                     PSTR3CON        equ	790	;# 
   731     0318                     CCPR4           equ	792	;# 
   732     0318                     CCPR4L          equ	792	;# 
   733     0319                     CCPR4H          equ	793	;# 
   734     031A                     CCP4CON         equ	794	;# 
   735     031C                     CCPR5           equ	796	;# 
   736     031C                     CCPR5L          equ	796	;# 
   737     031D                     CCPR5H          equ	797	;# 
   738     031E                     CCP5CON         equ	798	;# 
   739     0394                     IOCBP           equ	916	;# 
   740     0395                     IOCBN           equ	917	;# 
   741     0396                     IOCBF           equ	918	;# 
   742     0415                     TMR4            equ	1045	;# 
   743     0416                     PR4             equ	1046	;# 
   744     0417                     T4CON           equ	1047	;# 
   745     041C                     TMR6            equ	1052	;# 
   746     041D                     PR6             equ	1053	;# 
   747     041E                     T6CON           equ	1054	;# 
   748     0791                     LCDCON          equ	1937	;# 
   749     0792                     LCDPS           equ	1938	;# 
   750     0793                     LCDREF          equ	1939	;# 
   751     0794                     LCDCST          equ	1940	;# 
   752     0795                     LCDRL           equ	1941	;# 
   753     0798                     LCDSE0          equ	1944	;# 
   754     0799                     LCDSE1          equ	1945	;# 
   755     07A0                     LCDDATA0        equ	1952	;# 
   756     07A1                     LCDDATA1        equ	1953	;# 
   757     07A3                     LCDDATA3        equ	1955	;# 
   758     07A4                     LCDDATA4        equ	1956	;# 
   759     07A6                     LCDDATA6        equ	1958	;# 
   760     07A7                     LCDDATA7        equ	1959	;# 
   761     07A9                     LCDDATA9        equ	1961	;# 
   762     07AA                     LCDDATA10       equ	1962	;# 
   763     0FE4                     STATUS_SHAD     equ	4068	;# 
   764     0FE5                     WREG_SHAD       equ	4069	;# 
   765     0FE6                     BSR_SHAD        equ	4070	;# 
   766     0FE7                     PCLATH_SHAD     equ	4071	;# 
   767     0FE8                     FSR0L_SHAD      equ	4072	;# 
   768     0FE9                     FSR0H_SHAD      equ	4073	;# 
   769     0FEA                     FSR1L_SHAD      equ	4074	;# 
   770     0FEB                     FSR1H_SHAD      equ	4075	;# 
   771     0FED                     STKPTR          equ	4077	;# 
   772     0FEE                     TOSL            equ	4078	;# 
   773     0FEF                     TOSH            equ	4079	;# 
   774     0000                     INDF0           equ	0	;# 
   775     0001                     INDF1           equ	1	;# 
   776     0002                     PCL             equ	2	;# 
   777     0003                     STATUS          equ	3	;# 
   778     0004                     FSR0L           equ	4	;# 
   779     0005                     FSR0H           equ	5	;# 
   780     0006                     FSR1L           equ	6	;# 
   781     0007                     FSR1H           equ	7	;# 
   782     0008                     BSR             equ	8	;# 
   783     0009                     WREG            equ	9	;# 
   784     000A                     PCLATH          equ	10	;# 
   785     000B                     INTCON          equ	11	;# 
   786     000C                     PORTA           equ	12	;# 
   787     000D                     PORTB           equ	13	;# 
   788     000E                     PORTC           equ	14	;# 
   789     0010                     PORTE           equ	16	;# 
   790     0011                     PIR1            equ	17	;# 
   791     0012                     PIR2            equ	18	;# 
   792     0013                     PIR3            equ	19	;# 
   793     0015                     TMR0            equ	21	;# 
   794     0016                     TMR1            equ	22	;# 
   795     0016                     TMR1L           equ	22	;# 
   796     0017                     TMR1H           equ	23	;# 
   797     0018                     T1CON           equ	24	;# 
   798     0019                     T1GCON          equ	25	;# 
   799     001A                     TMR2            equ	26	;# 
   800     001B                     PR2             equ	27	;# 
   801     001C                     T2CON           equ	28	;# 
   802     001E                     CPSCON0         equ	30	;# 
   803     001F                     CPSCON1         equ	31	;# 
   804     008C                     TRISA           equ	140	;# 
   805     008D                     TRISB           equ	141	;# 
   806     008E                     TRISC           equ	142	;# 
   807     0090                     TRISE           equ	144	;# 
   808     0091                     PIE1            equ	145	;# 
   809     0092                     PIE2            equ	146	;# 
   810     0093                     PIE3            equ	147	;# 
   811     0095                     OPTION_REG      equ	149	;# 
   812     0096                     PCON            equ	150	;# 
   813     0097                     WDTCON          equ	151	;# 
   814     0098                     OSCTUNE         equ	152	;# 
   815     0099                     OSCCON          equ	153	;# 
   816     009A                     OSCSTAT         equ	154	;# 
   817     009B                     ADRES           equ	155	;# 
   818     009B                     ADRESL          equ	155	;# 
   819     009C                     ADRESH          equ	156	;# 
   820     009D                     ADCON0          equ	157	;# 
   821     009E                     ADCON1          equ	158	;# 
   822     010C                     LATA            equ	268	;# 
   823     010D                     LATB            equ	269	;# 
   824     010E                     LATC            equ	270	;# 
   825     0110                     LATE            equ	272	;# 
   826     0111                     CM1CON0         equ	273	;# 
   827     0112                     CM1CON1         equ	274	;# 
   828     0113                     CM2CON0         equ	275	;# 
   829     0114                     CM2CON1         equ	276	;# 
   830     0115                     CMOUT           equ	277	;# 
   831     0116                     BORCON          equ	278	;# 
   832     0117                     FVRCON          equ	279	;# 
   833     0118                     DACCON0         equ	280	;# 
   834     0119                     DACCON1         equ	281	;# 
   835     011A                     SRCON0          equ	282	;# 
   836     011B                     SRCON1          equ	283	;# 
   837     011D                     APFCON          equ	285	;# 
   838     018C                     ANSELA          equ	396	;# 
   839     018D                     ANSELB          equ	397	;# 
   840     0191                     EEADR           equ	401	;# 
   841     0191                     EEADRL          equ	401	;# 
   842     0192                     EEADRH          equ	402	;# 
   843     0193                     EEDAT           equ	403	;# 
   844     0193                     EEDATL          equ	403	;# 
   845     0193                     EEDATA          equ	403	;# 
   846     0194                     EEDATH          equ	404	;# 
   847     0195                     EECON1          equ	405	;# 
   848     0196                     EECON2          equ	406	;# 
   849     0199                     RCREG           equ	409	;# 
   850     019A                     TXREG           equ	410	;# 
   851     019B                     SP1BRG          equ	411	;# 
   852     019B                     SP1BRGL         equ	411	;# 
   853     019B                     SPBRG           equ	411	;# 
   854     019B                     SPBRGL          equ	411	;# 
   855     019C                     SP1BRGH         equ	412	;# 
   856     019C                     SPBRGH          equ	412	;# 
   857     019D                     RCSTA           equ	413	;# 
   858     019E                     TXSTA           equ	414	;# 
   859     019F                     BAUDCON         equ	415	;# 
   860     020D                     WPUB            equ	525	;# 
   861     0210                     WPUE            equ	528	;# 
   862     0211                     SSPBUF          equ	529	;# 
   863     0212                     SSPADD          equ	530	;# 
   864     0213                     SSPMSK          equ	531	;# 
   865     0214                     SSPSTAT         equ	532	;# 
   866     0215                     SSPCON1         equ	533	;# 
   867     0215                     SSPCON          equ	533	;# 
   868     0216                     SSPCON2         equ	534	;# 
   869     0217                     SSPCON3         equ	535	;# 
   870     0291                     CCPR1           equ	657	;# 
   871     0291                     CCPR1L          equ	657	;# 
   872     0292                     CCPR1H          equ	658	;# 
   873     0293                     CCP1CON         equ	659	;# 
   874     0294                     PWM1CON         equ	660	;# 
   875     0295                     CCP1AS          equ	661	;# 
   876     0295                     ECCP1AS         equ	661	;# 
   877     0296                     PSTR1CON        equ	662	;# 
   878     0298                     CCPR2           equ	664	;# 
   879     0298                     CCPR2L          equ	664	;# 
   880     0299                     CCPR2H          equ	665	;# 
   881     029A                     CCP2CON         equ	666	;# 
   882     029B                     PWM2CON         equ	667	;# 
   883     029C                     CCP2AS          equ	668	;# 
   884     029C                     ECCP2AS         equ	668	;# 
   885     029D                     PSTR2CON        equ	669	;# 
   886     029E                     CCPTMRS0        equ	670	;# 
   887     029F                     CCPTMRS1        equ	671	;# 
   888     0311                     CCPR3           equ	785	;# 
   889     0311                     CCPR3L          equ	785	;# 
   890     0312                     CCPR3H          equ	786	;# 
   891     0313                     CCP3CON         equ	787	;# 
   892     0314                     PWM3CON         equ	788	;# 
   893     0315                     CCP3AS          equ	789	;# 
   894     0315                     ECCP3AS         equ	789	;# 
   895     0316                     PSTR3CON        equ	790	;# 
   896     0318                     CCPR4           equ	792	;# 
   897     0318                     CCPR4L          equ	792	;# 
   898     0319                     CCPR4H          equ	793	;# 
   899     031A                     CCP4CON         equ	794	;# 
   900     031C                     CCPR5           equ	796	;# 
   901     031C                     CCPR5L          equ	796	;# 
   902     031D                     CCPR5H          equ	797	;# 
   903     031E                     CCP5CON         equ	798	;# 
   904     0394                     IOCBP           equ	916	;# 
   905     0395                     IOCBN           equ	917	;# 
   906     0396                     IOCBF           equ	918	;# 
   907     0415                     TMR4            equ	1045	;# 
   908     0416                     PR4             equ	1046	;# 
   909     0417                     T4CON           equ	1047	;# 
   910     041C                     TMR6            equ	1052	;# 
   911     041D                     PR6             equ	1053	;# 
   912     041E                     T6CON           equ	1054	;# 
   913     0791                     LCDCON          equ	1937	;# 
   914     0792                     LCDPS           equ	1938	;# 
   915     0793                     LCDREF          equ	1939	;# 
   916     0794                     LCDCST          equ	1940	;# 
   917     0795                     LCDRL           equ	1941	;# 
   918     0798                     LCDSE0          equ	1944	;# 
   919     0799                     LCDSE1          equ	1945	;# 
   920     07A0                     LCDDATA0        equ	1952	;# 
   921     07A1                     LCDDATA1        equ	1953	;# 
   922     07A3                     LCDDATA3        equ	1955	;# 
   923     07A4                     LCDDATA4        equ	1956	;# 
   924     07A6                     LCDDATA6        equ	1958	;# 
   925     07A7                     LCDDATA7        equ	1959	;# 
   926     07A9                     LCDDATA9        equ	1961	;# 
   927     07AA                     LCDDATA10       equ	1962	;# 
   928     0FE4                     STATUS_SHAD     equ	4068	;# 
   929     0FE5                     WREG_SHAD       equ	4069	;# 
   930     0FE6                     BSR_SHAD        equ	4070	;# 
   931     0FE7                     PCLATH_SHAD     equ	4071	;# 
   932     0FE8                     FSR0L_SHAD      equ	4072	;# 
   933     0FE9                     FSR0H_SHAD      equ	4073	;# 
   934     0FEA                     FSR1L_SHAD      equ	4074	;# 
   935     0FEB                     FSR1H_SHAD      equ	4075	;# 
   936     0FED                     STKPTR          equ	4077	;# 
   937     0FEE                     TOSL            equ	4078	;# 
   938     0FEF                     TOSH            equ	4079	;# 
   939     0000                     INDF0           equ	0	;# 
   940     0001                     INDF1           equ	1	;# 
   941     0002                     PCL             equ	2	;# 
   942     0003                     STATUS          equ	3	;# 
   943     0004                     FSR0L           equ	4	;# 
   944     0005                     FSR0H           equ	5	;# 
   945     0006                     FSR1L           equ	6	;# 
   946     0007                     FSR1H           equ	7	;# 
   947     0008                     BSR             equ	8	;# 
   948     0009                     WREG            equ	9	;# 
   949     000A                     PCLATH          equ	10	;# 
   950     000B                     INTCON          equ	11	;# 
   951     000C                     PORTA           equ	12	;# 
   952     000D                     PORTB           equ	13	;# 
   953     000E                     PORTC           equ	14	;# 
   954     0010                     PORTE           equ	16	;# 
   955     0011                     PIR1            equ	17	;# 
   956     0012                     PIR2            equ	18	;# 
   957     0013                     PIR3            equ	19	;# 
   958     0015                     TMR0            equ	21	;# 
   959     0016                     TMR1            equ	22	;# 
   960     0016                     TMR1L           equ	22	;# 
   961     0017                     TMR1H           equ	23	;# 
   962     0018                     T1CON           equ	24	;# 
   963     0019                     T1GCON          equ	25	;# 
   964     001A                     TMR2            equ	26	;# 
   965     001B                     PR2             equ	27	;# 
   966     001C                     T2CON           equ	28	;# 
   967     001E                     CPSCON0         equ	30	;# 
   968     001F                     CPSCON1         equ	31	;# 
   969     008C                     TRISA           equ	140	;# 
   970     008D                     TRISB           equ	141	;# 
   971     008E                     TRISC           equ	142	;# 
   972     0090                     TRISE           equ	144	;# 
   973     0091                     PIE1            equ	145	;# 
   974     0092                     PIE2            equ	146	;# 
   975     0093                     PIE3            equ	147	;# 
   976     0095                     OPTION_REG      equ	149	;# 
   977     0096                     PCON            equ	150	;# 
   978     0097                     WDTCON          equ	151	;# 
   979     0098                     OSCTUNE         equ	152	;# 
   980     0099                     OSCCON          equ	153	;# 
   981     009A                     OSCSTAT         equ	154	;# 
   982     009B                     ADRES           equ	155	;# 
   983     009B                     ADRESL          equ	155	;# 
   984     009C                     ADRESH          equ	156	;# 
   985     009D                     ADCON0          equ	157	;# 
   986     009E                     ADCON1          equ	158	;# 
   987     010C                     LATA            equ	268	;# 
   988     010D                     LATB            equ	269	;# 
   989     010E                     LATC            equ	270	;# 
   990     0110                     LATE            equ	272	;# 
   991     0111                     CM1CON0         equ	273	;# 
   992     0112                     CM1CON1         equ	274	;# 
   993     0113                     CM2CON0         equ	275	;# 
   994     0114                     CM2CON1         equ	276	;# 
   995     0115                     CMOUT           equ	277	;# 
   996     0116                     BORCON          equ	278	;# 
   997     0117                     FVRCON          equ	279	;# 
   998     0118                     DACCON0         equ	280	;# 
   999     0119                     DACCON1         equ	281	;# 
  1000     011A                     SRCON0          equ	282	;# 
  1001     011B                     SRCON1          equ	283	;# 
  1002     011D                     APFCON          equ	285	;# 
  1003     018C                     ANSELA          equ	396	;# 
  1004     018D                     ANSELB          equ	397	;# 
  1005     0191                     EEADR           equ	401	;# 
  1006     0191                     EEADRL          equ	401	;# 
  1007     0192                     EEADRH          equ	402	;# 
  1008     0193                     EEDAT           equ	403	;# 
  1009     0193                     EEDATL          equ	403	;# 
  1010     0193                     EEDATA          equ	403	;# 
  1011     0194                     EEDATH          equ	404	;# 
  1012     0195                     EECON1          equ	405	;# 
  1013     0196                     EECON2          equ	406	;# 
  1014     0199                     RCREG           equ	409	;# 
  1015     019A                     TXREG           equ	410	;# 
  1016     019B                     SP1BRG          equ	411	;# 
  1017     019B                     SP1BRGL         equ	411	;# 
  1018     019B                     SPBRG           equ	411	;# 
  1019     019B                     SPBRGL          equ	411	;# 
  1020     019C                     SP1BRGH         equ	412	;# 
  1021     019C                     SPBRGH          equ	412	;# 
  1022     019D                     RCSTA           equ	413	;# 
  1023     019E                     TXSTA           equ	414	;# 
  1024     019F                     BAUDCON         equ	415	;# 
  1025     020D                     WPUB            equ	525	;# 
  1026     0210                     WPUE            equ	528	;# 
  1027     0211                     SSPBUF          equ	529	;# 
  1028     0212                     SSPADD          equ	530	;# 
  1029     0213                     SSPMSK          equ	531	;# 
  1030     0214                     SSPSTAT         equ	532	;# 
  1031     0215                     SSPCON1         equ	533	;# 
  1032     0215                     SSPCON          equ	533	;# 
  1033     0216                     SSPCON2         equ	534	;# 
  1034     0217                     SSPCON3         equ	535	;# 
  1035     0291                     CCPR1           equ	657	;# 
  1036     0291                     CCPR1L          equ	657	;# 
  1037     0292                     CCPR1H          equ	658	;# 
  1038     0293                     CCP1CON         equ	659	;# 
  1039     0294                     PWM1CON         equ	660	;# 
  1040     0295                     CCP1AS          equ	661	;# 
  1041     0295                     ECCP1AS         equ	661	;# 
  1042     0296                     PSTR1CON        equ	662	;# 
  1043     0298                     CCPR2           equ	664	;# 
  1044     0298                     CCPR2L          equ	664	;# 
  1045     0299                     CCPR2H          equ	665	;# 
  1046     029A                     CCP2CON         equ	666	;# 
  1047     029B                     PWM2CON         equ	667	;# 
  1048     029C                     CCP2AS          equ	668	;# 
  1049     029C                     ECCP2AS         equ	668	;# 
  1050     029D                     PSTR2CON        equ	669	;# 
  1051     029E                     CCPTMRS0        equ	670	;# 
  1052     029F                     CCPTMRS1        equ	671	;# 
  1053     0311                     CCPR3           equ	785	;# 
  1054     0311                     CCPR3L          equ	785	;# 
  1055     0312                     CCPR3H          equ	786	;# 
  1056     0313                     CCP3CON         equ	787	;# 
  1057     0314                     PWM3CON         equ	788	;# 
  1058     0315                     CCP3AS          equ	789	;# 
  1059     0315                     ECCP3AS         equ	789	;# 
  1060     0316                     PSTR3CON        equ	790	;# 
  1061     0318                     CCPR4           equ	792	;# 
  1062     0318                     CCPR4L          equ	792	;# 
  1063     0319                     CCPR4H          equ	793	;# 
  1064     031A                     CCP4CON         equ	794	;# 
  1065     031C                     CCPR5           equ	796	;# 
  1066     031C                     CCPR5L          equ	796	;# 
  1067     031D                     CCPR5H          equ	797	;# 
  1068     031E                     CCP5CON         equ	798	;# 
  1069     0394                     IOCBP           equ	916	;# 
  1070     0395                     IOCBN           equ	917	;# 
  1071     0396                     IOCBF           equ	918	;# 
  1072     0415                     TMR4            equ	1045	;# 
  1073     0416                     PR4             equ	1046	;# 
  1074     0417                     T4CON           equ	1047	;# 
  1075     041C                     TMR6            equ	1052	;# 
  1076     041D                     PR6             equ	1053	;# 
  1077     041E                     T6CON           equ	1054	;# 
  1078     0791                     LCDCON          equ	1937	;# 
  1079     0792                     LCDPS           equ	1938	;# 
  1080     0793                     LCDREF          equ	1939	;# 
  1081     0794                     LCDCST          equ	1940	;# 
  1082     0795                     LCDRL           equ	1941	;# 
  1083     0798                     LCDSE0          equ	1944	;# 
  1084     0799                     LCDSE1          equ	1945	;# 
  1085     07A0                     LCDDATA0        equ	1952	;# 
  1086     07A1                     LCDDATA1        equ	1953	;# 
  1087     07A3                     LCDDATA3        equ	1955	;# 
  1088     07A4                     LCDDATA4        equ	1956	;# 
  1089     07A6                     LCDDATA6        equ	1958	;# 
  1090     07A7                     LCDDATA7        equ	1959	;# 
  1091     07A9                     LCDDATA9        equ	1961	;# 
  1092     07AA                     LCDDATA10       equ	1962	;# 
  1093     0FE4                     STATUS_SHAD     equ	4068	;# 
  1094     0FE5                     WREG_SHAD       equ	4069	;# 
  1095     0FE6                     BSR_SHAD        equ	4070	;# 
  1096     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1097     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1098     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1099     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1100     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1101     0FED                     STKPTR          equ	4077	;# 
  1102     0FEE                     TOSL            equ	4078	;# 
  1103     0FEF                     TOSH            equ	4079	;# 
  1104     0000                     INDF0           equ	0	;# 
  1105     0001                     INDF1           equ	1	;# 
  1106     0002                     PCL             equ	2	;# 
  1107     0003                     STATUS          equ	3	;# 
  1108     0004                     FSR0L           equ	4	;# 
  1109     0005                     FSR0H           equ	5	;# 
  1110     0006                     FSR1L           equ	6	;# 
  1111     0007                     FSR1H           equ	7	;# 
  1112     0008                     BSR             equ	8	;# 
  1113     0009                     WREG            equ	9	;# 
  1114     000A                     PCLATH          equ	10	;# 
  1115     000B                     INTCON          equ	11	;# 
  1116     000C                     PORTA           equ	12	;# 
  1117     000D                     PORTB           equ	13	;# 
  1118     000E                     PORTC           equ	14	;# 
  1119     0010                     PORTE           equ	16	;# 
  1120     0011                     PIR1            equ	17	;# 
  1121     0012                     PIR2            equ	18	;# 
  1122     0013                     PIR3            equ	19	;# 
  1123     0015                     TMR0            equ	21	;# 
  1124     0016                     TMR1            equ	22	;# 
  1125     0016                     TMR1L           equ	22	;# 
  1126     0017                     TMR1H           equ	23	;# 
  1127     0018                     T1CON           equ	24	;# 
  1128     0019                     T1GCON          equ	25	;# 
  1129     001A                     TMR2            equ	26	;# 
  1130     001B                     PR2             equ	27	;# 
  1131     001C                     T2CON           equ	28	;# 
  1132     001E                     CPSCON0         equ	30	;# 
  1133     001F                     CPSCON1         equ	31	;# 
  1134     008C                     TRISA           equ	140	;# 
  1135     008D                     TRISB           equ	141	;# 
  1136     008E                     TRISC           equ	142	;# 
  1137     0090                     TRISE           equ	144	;# 
  1138     0091                     PIE1            equ	145	;# 
  1139     0092                     PIE2            equ	146	;# 
  1140     0093                     PIE3            equ	147	;# 
  1141     0095                     OPTION_REG      equ	149	;# 
  1142     0096                     PCON            equ	150	;# 
  1143     0097                     WDTCON          equ	151	;# 
  1144     0098                     OSCTUNE         equ	152	;# 
  1145     0099                     OSCCON          equ	153	;# 
  1146     009A                     OSCSTAT         equ	154	;# 
  1147     009B                     ADRES           equ	155	;# 
  1148     009B                     ADRESL          equ	155	;# 
  1149     009C                     ADRESH          equ	156	;# 
  1150     009D                     ADCON0          equ	157	;# 
  1151     009E                     ADCON1          equ	158	;# 
  1152     010C                     LATA            equ	268	;# 
  1153     010D                     LATB            equ	269	;# 
  1154     010E                     LATC            equ	270	;# 
  1155     0110                     LATE            equ	272	;# 
  1156     0111                     CM1CON0         equ	273	;# 
  1157     0112                     CM1CON1         equ	274	;# 
  1158     0113                     CM2CON0         equ	275	;# 
  1159     0114                     CM2CON1         equ	276	;# 
  1160     0115                     CMOUT           equ	277	;# 
  1161     0116                     BORCON          equ	278	;# 
  1162     0117                     FVRCON          equ	279	;# 
  1163     0118                     DACCON0         equ	280	;# 
  1164     0119                     DACCON1         equ	281	;# 
  1165     011A                     SRCON0          equ	282	;# 
  1166     011B                     SRCON1          equ	283	;# 
  1167     011D                     APFCON          equ	285	;# 
  1168     018C                     ANSELA          equ	396	;# 
  1169     018D                     ANSELB          equ	397	;# 
  1170     0191                     EEADR           equ	401	;# 
  1171     0191                     EEADRL          equ	401	;# 
  1172     0192                     EEADRH          equ	402	;# 
  1173     0193                     EEDAT           equ	403	;# 
  1174     0193                     EEDATL          equ	403	;# 
  1175     0193                     EEDATA          equ	403	;# 
  1176     0194                     EEDATH          equ	404	;# 
  1177     0195                     EECON1          equ	405	;# 
  1178     0196                     EECON2          equ	406	;# 
  1179     0199                     RCREG           equ	409	;# 
  1180     019A                     TXREG           equ	410	;# 
  1181     019B                     SP1BRG          equ	411	;# 
  1182     019B                     SP1BRGL         equ	411	;# 
  1183     019B                     SPBRG           equ	411	;# 
  1184     019B                     SPBRGL          equ	411	;# 
  1185     019C                     SP1BRGH         equ	412	;# 
  1186     019C                     SPBRGH          equ	412	;# 
  1187     019D                     RCSTA           equ	413	;# 
  1188     019E                     TXSTA           equ	414	;# 
  1189     019F                     BAUDCON         equ	415	;# 
  1190     020D                     WPUB            equ	525	;# 
  1191     0210                     WPUE            equ	528	;# 
  1192     0211                     SSPBUF          equ	529	;# 
  1193     0212                     SSPADD          equ	530	;# 
  1194     0213                     SSPMSK          equ	531	;# 
  1195     0214                     SSPSTAT         equ	532	;# 
  1196     0215                     SSPCON1         equ	533	;# 
  1197     0215                     SSPCON          equ	533	;# 
  1198     0216                     SSPCON2         equ	534	;# 
  1199     0217                     SSPCON3         equ	535	;# 
  1200     0291                     CCPR1           equ	657	;# 
  1201     0291                     CCPR1L          equ	657	;# 
  1202     0292                     CCPR1H          equ	658	;# 
  1203     0293                     CCP1CON         equ	659	;# 
  1204     0294                     PWM1CON         equ	660	;# 
  1205     0295                     CCP1AS          equ	661	;# 
  1206     0295                     ECCP1AS         equ	661	;# 
  1207     0296                     PSTR1CON        equ	662	;# 
  1208     0298                     CCPR2           equ	664	;# 
  1209     0298                     CCPR2L          equ	664	;# 
  1210     0299                     CCPR2H          equ	665	;# 
  1211     029A                     CCP2CON         equ	666	;# 
  1212     029B                     PWM2CON         equ	667	;# 
  1213     029C                     CCP2AS          equ	668	;# 
  1214     029C                     ECCP2AS         equ	668	;# 
  1215     029D                     PSTR2CON        equ	669	;# 
  1216     029E                     CCPTMRS0        equ	670	;# 
  1217     029F                     CCPTMRS1        equ	671	;# 
  1218     0311                     CCPR3           equ	785	;# 
  1219     0311                     CCPR3L          equ	785	;# 
  1220     0312                     CCPR3H          equ	786	;# 
  1221     0313                     CCP3CON         equ	787	;# 
  1222     0314                     PWM3CON         equ	788	;# 
  1223     0315                     CCP3AS          equ	789	;# 
  1224     0315                     ECCP3AS         equ	789	;# 
  1225     0316                     PSTR3CON        equ	790	;# 
  1226     0318                     CCPR4           equ	792	;# 
  1227     0318                     CCPR4L          equ	792	;# 
  1228     0319                     CCPR4H          equ	793	;# 
  1229     031A                     CCP4CON         equ	794	;# 
  1230     031C                     CCPR5           equ	796	;# 
  1231     031C                     CCPR5L          equ	796	;# 
  1232     031D                     CCPR5H          equ	797	;# 
  1233     031E                     CCP5CON         equ	798	;# 
  1234     0394                     IOCBP           equ	916	;# 
  1235     0395                     IOCBN           equ	917	;# 
  1236     0396                     IOCBF           equ	918	;# 
  1237     0415                     TMR4            equ	1045	;# 
  1238     0416                     PR4             equ	1046	;# 
  1239     0417                     T4CON           equ	1047	;# 
  1240     041C                     TMR6            equ	1052	;# 
  1241     041D                     PR6             equ	1053	;# 
  1242     041E                     T6CON           equ	1054	;# 
  1243     0791                     LCDCON          equ	1937	;# 
  1244     0792                     LCDPS           equ	1938	;# 
  1245     0793                     LCDREF          equ	1939	;# 
  1246     0794                     LCDCST          equ	1940	;# 
  1247     0795                     LCDRL           equ	1941	;# 
  1248     0798                     LCDSE0          equ	1944	;# 
  1249     0799                     LCDSE1          equ	1945	;# 
  1250     07A0                     LCDDATA0        equ	1952	;# 
  1251     07A1                     LCDDATA1        equ	1953	;# 
  1252     07A3                     LCDDATA3        equ	1955	;# 
  1253     07A4                     LCDDATA4        equ	1956	;# 
  1254     07A6                     LCDDATA6        equ	1958	;# 
  1255     07A7                     LCDDATA7        equ	1959	;# 
  1256     07A9                     LCDDATA9        equ	1961	;# 
  1257     07AA                     LCDDATA10       equ	1962	;# 
  1258     0FE4                     STATUS_SHAD     equ	4068	;# 
  1259     0FE5                     WREG_SHAD       equ	4069	;# 
  1260     0FE6                     BSR_SHAD        equ	4070	;# 
  1261     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1262     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1263     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1264     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1265     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1266     0FED                     STKPTR          equ	4077	;# 
  1267     0FEE                     TOSL            equ	4078	;# 
  1268     0FEF                     TOSH            equ	4079	;# 
  1269     0000                     INDF0           equ	0	;# 
  1270     0001                     INDF1           equ	1	;# 
  1271     0002                     PCL             equ	2	;# 
  1272     0003                     STATUS          equ	3	;# 
  1273     0004                     FSR0L           equ	4	;# 
  1274     0005                     FSR0H           equ	5	;# 
  1275     0006                     FSR1L           equ	6	;# 
  1276     0007                     FSR1H           equ	7	;# 
  1277     0008                     BSR             equ	8	;# 
  1278     0009                     WREG            equ	9	;# 
  1279     000A                     PCLATH          equ	10	;# 
  1280     000B                     INTCON          equ	11	;# 
  1281     000C                     PORTA           equ	12	;# 
  1282     000D                     PORTB           equ	13	;# 
  1283     000E                     PORTC           equ	14	;# 
  1284     0010                     PORTE           equ	16	;# 
  1285     0011                     PIR1            equ	17	;# 
  1286     0012                     PIR2            equ	18	;# 
  1287     0013                     PIR3            equ	19	;# 
  1288     0015                     TMR0            equ	21	;# 
  1289     0016                     TMR1            equ	22	;# 
  1290     0016                     TMR1L           equ	22	;# 
  1291     0017                     TMR1H           equ	23	;# 
  1292     0018                     T1CON           equ	24	;# 
  1293     0019                     T1GCON          equ	25	;# 
  1294     001A                     TMR2            equ	26	;# 
  1295     001B                     PR2             equ	27	;# 
  1296     001C                     T2CON           equ	28	;# 
  1297     001E                     CPSCON0         equ	30	;# 
  1298     001F                     CPSCON1         equ	31	;# 
  1299     008C                     TRISA           equ	140	;# 
  1300     008D                     TRISB           equ	141	;# 
  1301     008E                     TRISC           equ	142	;# 
  1302     0090                     TRISE           equ	144	;# 
  1303     0091                     PIE1            equ	145	;# 
  1304     0092                     PIE2            equ	146	;# 
  1305     0093                     PIE3            equ	147	;# 
  1306     0095                     OPTION_REG      equ	149	;# 
  1307     0096                     PCON            equ	150	;# 
  1308     0097                     WDTCON          equ	151	;# 
  1309     0098                     OSCTUNE         equ	152	;# 
  1310     0099                     OSCCON          equ	153	;# 
  1311     009A                     OSCSTAT         equ	154	;# 
  1312     009B                     ADRES           equ	155	;# 
  1313     009B                     ADRESL          equ	155	;# 
  1314     009C                     ADRESH          equ	156	;# 
  1315     009D                     ADCON0          equ	157	;# 
  1316     009E                     ADCON1          equ	158	;# 
  1317     010C                     LATA            equ	268	;# 
  1318     010D                     LATB            equ	269	;# 
  1319     010E                     LATC            equ	270	;# 
  1320     0110                     LATE            equ	272	;# 
  1321     0111                     CM1CON0         equ	273	;# 
  1322     0112                     CM1CON1         equ	274	;# 
  1323     0113                     CM2CON0         equ	275	;# 
  1324     0114                     CM2CON1         equ	276	;# 
  1325     0115                     CMOUT           equ	277	;# 
  1326     0116                     BORCON          equ	278	;# 
  1327     0117                     FVRCON          equ	279	;# 
  1328     0118                     DACCON0         equ	280	;# 
  1329     0119                     DACCON1         equ	281	;# 
  1330     011A                     SRCON0          equ	282	;# 
  1331     011B                     SRCON1          equ	283	;# 
  1332     011D                     APFCON          equ	285	;# 
  1333     018C                     ANSELA          equ	396	;# 
  1334     018D                     ANSELB          equ	397	;# 
  1335     0191                     EEADR           equ	401	;# 
  1336     0191                     EEADRL          equ	401	;# 
  1337     0192                     EEADRH          equ	402	;# 
  1338     0193                     EEDAT           equ	403	;# 
  1339     0193                     EEDATL          equ	403	;# 
  1340     0193                     EEDATA          equ	403	;# 
  1341     0194                     EEDATH          equ	404	;# 
  1342     0195                     EECON1          equ	405	;# 
  1343     0196                     EECON2          equ	406	;# 
  1344     0199                     RCREG           equ	409	;# 
  1345     019A                     TXREG           equ	410	;# 
  1346     019B                     SP1BRG          equ	411	;# 
  1347     019B                     SP1BRGL         equ	411	;# 
  1348     019B                     SPBRG           equ	411	;# 
  1349     019B                     SPBRGL          equ	411	;# 
  1350     019C                     SP1BRGH         equ	412	;# 
  1351     019C                     SPBRGH          equ	412	;# 
  1352     019D                     RCSTA           equ	413	;# 
  1353     019E                     TXSTA           equ	414	;# 
  1354     019F                     BAUDCON         equ	415	;# 
  1355     020D                     WPUB            equ	525	;# 
  1356     0210                     WPUE            equ	528	;# 
  1357     0211                     SSPBUF          equ	529	;# 
  1358     0212                     SSPADD          equ	530	;# 
  1359     0213                     SSPMSK          equ	531	;# 
  1360     0214                     SSPSTAT         equ	532	;# 
  1361     0215                     SSPCON1         equ	533	;# 
  1362     0215                     SSPCON          equ	533	;# 
  1363     0216                     SSPCON2         equ	534	;# 
  1364     0217                     SSPCON3         equ	535	;# 
  1365     0291                     CCPR1           equ	657	;# 
  1366     0291                     CCPR1L          equ	657	;# 
  1367     0292                     CCPR1H          equ	658	;# 
  1368     0293                     CCP1CON         equ	659	;# 
  1369     0294                     PWM1CON         equ	660	;# 
  1370     0295                     CCP1AS          equ	661	;# 
  1371     0295                     ECCP1AS         equ	661	;# 
  1372     0296                     PSTR1CON        equ	662	;# 
  1373     0298                     CCPR2           equ	664	;# 
  1374     0298                     CCPR2L          equ	664	;# 
  1375     0299                     CCPR2H          equ	665	;# 
  1376     029A                     CCP2CON         equ	666	;# 
  1377     029B                     PWM2CON         equ	667	;# 
  1378     029C                     CCP2AS          equ	668	;# 
  1379     029C                     ECCP2AS         equ	668	;# 
  1380     029D                     PSTR2CON        equ	669	;# 
  1381     029E                     CCPTMRS0        equ	670	;# 
  1382     029F                     CCPTMRS1        equ	671	;# 
  1383     0311                     CCPR3           equ	785	;# 
  1384     0311                     CCPR3L          equ	785	;# 
  1385     0312                     CCPR3H          equ	786	;# 
  1386     0313                     CCP3CON         equ	787	;# 
  1387     0314                     PWM3CON         equ	788	;# 
  1388     0315                     CCP3AS          equ	789	;# 
  1389     0315                     ECCP3AS         equ	789	;# 
  1390     0316                     PSTR3CON        equ	790	;# 
  1391     0318                     CCPR4           equ	792	;# 
  1392     0318                     CCPR4L          equ	792	;# 
  1393     0319                     CCPR4H          equ	793	;# 
  1394     031A                     CCP4CON         equ	794	;# 
  1395     031C                     CCPR5           equ	796	;# 
  1396     031C                     CCPR5L          equ	796	;# 
  1397     031D                     CCPR5H          equ	797	;# 
  1398     031E                     CCP5CON         equ	798	;# 
  1399     0394                     IOCBP           equ	916	;# 
  1400     0395                     IOCBN           equ	917	;# 
  1401     0396                     IOCBF           equ	918	;# 
  1402     0415                     TMR4            equ	1045	;# 
  1403     0416                     PR4             equ	1046	;# 
  1404     0417                     T4CON           equ	1047	;# 
  1405     041C                     TMR6            equ	1052	;# 
  1406     041D                     PR6             equ	1053	;# 
  1407     041E                     T6CON           equ	1054	;# 
  1408     0791                     LCDCON          equ	1937	;# 
  1409     0792                     LCDPS           equ	1938	;# 
  1410     0793                     LCDREF          equ	1939	;# 
  1411     0794                     LCDCST          equ	1940	;# 
  1412     0795                     LCDRL           equ	1941	;# 
  1413     0798                     LCDSE0          equ	1944	;# 
  1414     0799                     LCDSE1          equ	1945	;# 
  1415     07A0                     LCDDATA0        equ	1952	;# 
  1416     07A1                     LCDDATA1        equ	1953	;# 
  1417     07A3                     LCDDATA3        equ	1955	;# 
  1418     07A4                     LCDDATA4        equ	1956	;# 
  1419     07A6                     LCDDATA6        equ	1958	;# 
  1420     07A7                     LCDDATA7        equ	1959	;# 
  1421     07A9                     LCDDATA9        equ	1961	;# 
  1422     07AA                     LCDDATA10       equ	1962	;# 
  1423     0FE4                     STATUS_SHAD     equ	4068	;# 
  1424     0FE5                     WREG_SHAD       equ	4069	;# 
  1425     0FE6                     BSR_SHAD        equ	4070	;# 
  1426     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1427     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1428     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1429     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1430     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1431     0FED                     STKPTR          equ	4077	;# 
  1432     0FEE                     TOSL            equ	4078	;# 
  1433     0FEF                     TOSH            equ	4079	;# 
  1434     0000                     INDF0           equ	0	;# 
  1435     0001                     INDF1           equ	1	;# 
  1436     0002                     PCL             equ	2	;# 
  1437     0003                     STATUS          equ	3	;# 
  1438     0004                     FSR0L           equ	4	;# 
  1439     0005                     FSR0H           equ	5	;# 
  1440     0006                     FSR1L           equ	6	;# 
  1441     0007                     FSR1H           equ	7	;# 
  1442     0008                     BSR             equ	8	;# 
  1443     0009                     WREG            equ	9	;# 
  1444     000A                     PCLATH          equ	10	;# 
  1445     000B                     INTCON          equ	11	;# 
  1446     000C                     PORTA           equ	12	;# 
  1447     000D                     PORTB           equ	13	;# 
  1448     000E                     PORTC           equ	14	;# 
  1449     0010                     PORTE           equ	16	;# 
  1450     0011                     PIR1            equ	17	;# 
  1451     0012                     PIR2            equ	18	;# 
  1452     0013                     PIR3            equ	19	;# 
  1453     0015                     TMR0            equ	21	;# 
  1454     0016                     TMR1            equ	22	;# 
  1455     0016                     TMR1L           equ	22	;# 
  1456     0017                     TMR1H           equ	23	;# 
  1457     0018                     T1CON           equ	24	;# 
  1458     0019                     T1GCON          equ	25	;# 
  1459     001A                     TMR2            equ	26	;# 
  1460     001B                     PR2             equ	27	;# 
  1461     001C                     T2CON           equ	28	;# 
  1462     001E                     CPSCON0         equ	30	;# 
  1463     001F                     CPSCON1         equ	31	;# 
  1464     008C                     TRISA           equ	140	;# 
  1465     008D                     TRISB           equ	141	;# 
  1466     008E                     TRISC           equ	142	;# 
  1467     0090                     TRISE           equ	144	;# 
  1468     0091                     PIE1            equ	145	;# 
  1469     0092                     PIE2            equ	146	;# 
  1470     0093                     PIE3            equ	147	;# 
  1471     0095                     OPTION_REG      equ	149	;# 
  1472     0096                     PCON            equ	150	;# 
  1473     0097                     WDTCON          equ	151	;# 
  1474     0098                     OSCTUNE         equ	152	;# 
  1475     0099                     OSCCON          equ	153	;# 
  1476     009A                     OSCSTAT         equ	154	;# 
  1477     009B                     ADRES           equ	155	;# 
  1478     009B                     ADRESL          equ	155	;# 
  1479     009C                     ADRESH          equ	156	;# 
  1480     009D                     ADCON0          equ	157	;# 
  1481     009E                     ADCON1          equ	158	;# 
  1482     010C                     LATA            equ	268	;# 
  1483     010D                     LATB            equ	269	;# 
  1484     010E                     LATC            equ	270	;# 
  1485     0110                     LATE            equ	272	;# 
  1486     0111                     CM1CON0         equ	273	;# 
  1487     0112                     CM1CON1         equ	274	;# 
  1488     0113                     CM2CON0         equ	275	;# 
  1489     0114                     CM2CON1         equ	276	;# 
  1490     0115                     CMOUT           equ	277	;# 
  1491     0116                     BORCON          equ	278	;# 
  1492     0117                     FVRCON          equ	279	;# 
  1493     0118                     DACCON0         equ	280	;# 
  1494     0119                     DACCON1         equ	281	;# 
  1495     011A                     SRCON0          equ	282	;# 
  1496     011B                     SRCON1          equ	283	;# 
  1497     011D                     APFCON          equ	285	;# 
  1498     018C                     ANSELA          equ	396	;# 
  1499     018D                     ANSELB          equ	397	;# 
  1500     0191                     EEADR           equ	401	;# 
  1501     0191                     EEADRL          equ	401	;# 
  1502     0192                     EEADRH          equ	402	;# 
  1503     0193                     EEDAT           equ	403	;# 
  1504     0193                     EEDATL          equ	403	;# 
  1505     0193                     EEDATA          equ	403	;# 
  1506     0194                     EEDATH          equ	404	;# 
  1507     0195                     EECON1          equ	405	;# 
  1508     0196                     EECON2          equ	406	;# 
  1509     0199                     RCREG           equ	409	;# 
  1510     019A                     TXREG           equ	410	;# 
  1511     019B                     SP1BRG          equ	411	;# 
  1512     019B                     SP1BRGL         equ	411	;# 
  1513     019B                     SPBRG           equ	411	;# 
  1514     019B                     SPBRGL          equ	411	;# 
  1515     019C                     SP1BRGH         equ	412	;# 
  1516     019C                     SPBRGH          equ	412	;# 
  1517     019D                     RCSTA           equ	413	;# 
  1518     019E                     TXSTA           equ	414	;# 
  1519     019F                     BAUDCON         equ	415	;# 
  1520     020D                     WPUB            equ	525	;# 
  1521     0210                     WPUE            equ	528	;# 
  1522     0211                     SSPBUF          equ	529	;# 
  1523     0212                     SSPADD          equ	530	;# 
  1524     0213                     SSPMSK          equ	531	;# 
  1525     0214                     SSPSTAT         equ	532	;# 
  1526     0215                     SSPCON1         equ	533	;# 
  1527     0215                     SSPCON          equ	533	;# 
  1528     0216                     SSPCON2         equ	534	;# 
  1529     0217                     SSPCON3         equ	535	;# 
  1530     0291                     CCPR1           equ	657	;# 
  1531     0291                     CCPR1L          equ	657	;# 
  1532     0292                     CCPR1H          equ	658	;# 
  1533     0293                     CCP1CON         equ	659	;# 
  1534     0294                     PWM1CON         equ	660	;# 
  1535     0295                     CCP1AS          equ	661	;# 
  1536     0295                     ECCP1AS         equ	661	;# 
  1537     0296                     PSTR1CON        equ	662	;# 
  1538     0298                     CCPR2           equ	664	;# 
  1539     0298                     CCPR2L          equ	664	;# 
  1540     0299                     CCPR2H          equ	665	;# 
  1541     029A                     CCP2CON         equ	666	;# 
  1542     029B                     PWM2CON         equ	667	;# 
  1543     029C                     CCP2AS          equ	668	;# 
  1544     029C                     ECCP2AS         equ	668	;# 
  1545     029D                     PSTR2CON        equ	669	;# 
  1546     029E                     CCPTMRS0        equ	670	;# 
  1547     029F                     CCPTMRS1        equ	671	;# 
  1548     0311                     CCPR3           equ	785	;# 
  1549     0311                     CCPR3L          equ	785	;# 
  1550     0312                     CCPR3H          equ	786	;# 
  1551     0313                     CCP3CON         equ	787	;# 
  1552     0314                     PWM3CON         equ	788	;# 
  1553     0315                     CCP3AS          equ	789	;# 
  1554     0315                     ECCP3AS         equ	789	;# 
  1555     0316                     PSTR3CON        equ	790	;# 
  1556     0318                     CCPR4           equ	792	;# 
  1557     0318                     CCPR4L          equ	792	;# 
  1558     0319                     CCPR4H          equ	793	;# 
  1559     031A                     CCP4CON         equ	794	;# 
  1560     031C                     CCPR5           equ	796	;# 
  1561     031C                     CCPR5L          equ	796	;# 
  1562     031D                     CCPR5H          equ	797	;# 
  1563     031E                     CCP5CON         equ	798	;# 
  1564     0394                     IOCBP           equ	916	;# 
  1565     0395                     IOCBN           equ	917	;# 
  1566     0396                     IOCBF           equ	918	;# 
  1567     0415                     TMR4            equ	1045	;# 
  1568     0416                     PR4             equ	1046	;# 
  1569     0417                     T4CON           equ	1047	;# 
  1570     041C                     TMR6            equ	1052	;# 
  1571     041D                     PR6             equ	1053	;# 
  1572     041E                     T6CON           equ	1054	;# 
  1573     0791                     LCDCON          equ	1937	;# 
  1574     0792                     LCDPS           equ	1938	;# 
  1575     0793                     LCDREF          equ	1939	;# 
  1576     0794                     LCDCST          equ	1940	;# 
  1577     0795                     LCDRL           equ	1941	;# 
  1578     0798                     LCDSE0          equ	1944	;# 
  1579     0799                     LCDSE1          equ	1945	;# 
  1580     07A0                     LCDDATA0        equ	1952	;# 
  1581     07A1                     LCDDATA1        equ	1953	;# 
  1582     07A3                     LCDDATA3        equ	1955	;# 
  1583     07A4                     LCDDATA4        equ	1956	;# 
  1584     07A6                     LCDDATA6        equ	1958	;# 
  1585     07A7                     LCDDATA7        equ	1959	;# 
  1586     07A9                     LCDDATA9        equ	1961	;# 
  1587     07AA                     LCDDATA10       equ	1962	;# 
  1588     0FE4                     STATUS_SHAD     equ	4068	;# 
  1589     0FE5                     WREG_SHAD       equ	4069	;# 
  1590     0FE6                     BSR_SHAD        equ	4070	;# 
  1591     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1592     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1593     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1594     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1595     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1596     0FED                     STKPTR          equ	4077	;# 
  1597     0FEE                     TOSL            equ	4078	;# 
  1598     0FEF                     TOSH            equ	4079	;# 
  1599                           
  1600                           	psect	idataBANK0
  1601     0630                     __pidataBANK0:
  1602                           
  1603                           ;initializer for _LIN_timeout
  1604     0630  340A               	retlw	10
  1605                           
  1606                           	psect	stringtext1
  1607     0603                     __pstringtext1:
  1608     0603                     _scheduleTable:
  1609     0603  3401               	retlw	1
  1610     0604  3401               	retlw	1
  1611     0605  3408               	retlw	8
  1612     0606  34A0               	retlw	low (_SW_STATE_Data| 0)
  1613     0607  3400               	retlw	high (_SW_STATE_Data| 0)
  1614     0608                     __end_of_scheduleTable:
  1615     0011                     _PIR1bits       set	17
  1616     000B                     _INTCONbits     set	11
  1617     0015                     _TMR0           set	21
  1618     0097                     _WDTCON         set	151
  1619     0098                     _OSCTUNE        set	152
  1620     0099                     _OSCCON         set	153
  1621     0095                     _OPTION_REG     set	149
  1622     0095                     _OPTION_REGbits set	149
  1623     008E                     _TRISC          set	142
  1624     008D                     _TRISB          set	141
  1625     008C                     _TRISA          set	140
  1626     0090                     _TRISE          set	144
  1627     0091                     _PIE1bits       set	145
  1628     04D6                     _PLLR           set	1238
  1629     0116                     _BORCON         set	278
  1630     011D                     _APFCON         set	285
  1631     010E                     _LATC           set	270
  1632     010D                     _LATB           set	269
  1633     010C                     _LATA           set	268
  1634     0110                     _LATE           set	272
  1635     010D                     _LATBbits       set	269
  1636     019F                     _BAUDCONbits    set	415
  1637     0199                     _RCREG          set	409
  1638     019A                     _TXREG          set	410
  1639     019C                     _SPBRGH         set	412
  1640     019B                     _SPBRGL         set	411
  1641     019E                     _TXSTA          set	414
  1642     019D                     _RCSTA          set	413
  1643     019F                     _BAUDCON        set	415
  1644     018C                     _ANSELA         set	396
  1645     018D                     _ANSELB         set	397
  1646     019D                     _RCSTAbits      set	413
  1647     019E                     _TXSTAbits      set	414
  1648     020D                     _WPUB           set	525
  1649     0210                     _WPUE           set	528
  1650                           
  1651                           	psect	cinit
  1652     003A                     start_initialization:	
  1653                           ; #config settings
  1654                           
  1655     003A                     __initialization:
  1656                           
  1657                           ; Initialize objects allocated to BANK0
  1658     003A  3186  2630  3180   	fcall	__pidataBANK0	;fetch initializer
  1659     003D  00EC               	movwf	__pdataBANK0& (0+127)
  1660                           
  1661                           ; Clear objects allocated to BANK0
  1662     003E  3020               	movlw	low __pbssBANK0
  1663     003F  0084               	movwf	4
  1664     0040  3000               	movlw	high __pbssBANK0
  1665     0041  0085               	movwf	5
  1666     0042  3043               	movlw	67
  1667     0043  3185  25D9  3180   	fcall	clear_ram0
  1668                           
  1669                           ; Clear objects allocated to BANK1
  1670     0046  30A0               	movlw	low __pbssBANK1
  1671     0047  0084               	movwf	4
  1672     0048  3000               	movlw	high __pbssBANK1
  1673     0049  0085               	movwf	5
  1674     004A  3008               	movlw	8
  1675     004B  3185  25D9  3180   	fcall	clear_ram0
  1676     004E                     end_of_initialization:	
  1677                           ;End of C runtime variable initialization code
  1678                           
  1679     004E                     __end_of__initialization:
  1680     004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1681     004F  0020               	movlb	0
  1682     0050  3185  2D87         	ljmp	_main	;jump to C main() function
  1683                           
  1684                           	psect	bssBANK0
  1685     0020                     __pbssBANK0:
  1686     0020                     _eusartRxStatusBuffer:
  1687     0020                     	ds	8
  1688     0028                     _eusartRxBuffer:
  1689     0028                     	ds	8
  1690     0030                     _eusartTxBuffer:
  1691     0030                     	ds	8
  1692     0038                     _TMR0_InterruptHandler:
  1693     0038                     	ds	2
  1694     003A                     _EUSART_ErrorHandler:
  1695     003A                     	ds	2
  1696     003C                     _EUSART_OverrunErrorHandler:
  1697     003C                     	ds	2
  1698     003E                     _EUSART_FramingErrorHandler:
  1699     003E                     	ds	2
  1700     0040                     _EUSART_RxDefaultInterruptHandler:
  1701     0040                     	ds	2
  1702     0042                     _EUSART_TxDefaultInterruptHandler:
  1703     0042                     	ds	2
  1704     0044                     _LIN_rxCommand:
  1705     0044                     	ds	2
  1706     0046                     _LIN_processData:
  1707     0046                     	ds	2
  1708     0048                     _timer0ReloadVal:
  1709     0048                     	ds	1
  1710     0049                     _eusartRxLastError:
  1711     0049                     	ds	1
  1712     004A                     _eusartRxCount:
  1713     004A                     	ds	1
  1714     004B                     _eusartRxTail:
  1715     004B                     	ds	1
  1716     004C                     _eusartRxHead:
  1717     004C                     	ds	1
  1718     004D                     _eusartTxBufferRemaining:
  1719     004D                     	ds	1
  1720     004E                     _eusartTxTail:
  1721     004E                     	ds	1
  1722     004F                     _eusartTxHead:
  1723     004F                     	ds	1
  1724     0050                     LIN_handler@rxDataIndex:
  1725     0050                     	ds	1
  1726     0051                     LIN_handler@LIN_rxState:
  1727     0051                     	ds	1
  1728     0052                     _CountCallBack:
  1729     0052                     	ds	1
  1730     0053                     _LIN_timerRunning:
  1731     0053                     	ds	1
  1732     0054                     _LIN_rxCommandLength:
  1733     0054                     	ds	1
  1734     0055                     _LIN_rxInProgress:
  1735     0055                     	ds	1
  1736     0056                     _LIN_packet:
  1737     0056                     	ds	13
  1738                           
  1739                           	psect	dataBANK0
  1740     006C                     __pdataBANK0:
  1741     006C                     _LIN_timeout:
  1742     006C                     	ds	1
  1743                           
  1744                           	psect	bssBANK1
  1745     00A0                     __pbssBANK1:
  1746     00A0                     _SW_STATE_Data:
  1747     00A0                     	ds	8
  1748                           
  1749                           	psect	clrtext
  1750     05D9                     clear_ram0:	
  1751                           ;	Called with FSR0 containing the base address, and
  1752                           ;	WREG with the size to clear
  1753                           
  1754     05D9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1755     05DA                     clrloop0:
  1756     05DA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1757     05DB  3101               	addfsr 0,1
  1758     05DC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1759     05DD  2DDA               	goto	clrloop0	;have we reached the end yet?
  1760     05DE  3400               	retlw	0	;all done for this memory range, return
  1761                           
  1762                           	psect	cstackBANK1
  1763     00A8                     __pcstackBANK1:
  1764     00A8                     ??_LIN_handler:
  1765                           
  1766                           ; 1 bytes @ 0x0
  1767     00A8                     	ds	5
  1768                           
  1769                           	psect	cstackCOMMON
  1770     0070                     __pcstackCOMMON:
  1771     0070                     ?_processLIN:
  1772     0070                     ?_LIN_stopTimer:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775     0070                     ?_LIN_enableRx:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778     0070                     ?_LIN_setTimerHandler:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781     0070                     ?_LIN_getChecksum:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784     0070                     ?_EUSART_is_rx_ready:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787     0070                     ?_LIN_startTimer:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790     0070                     ?_LIN_breakCheck:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793     0070                     ?_EUSART_Read:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796     0070                     ?_LIN_checkPID:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799     0070                     ?_LIN_getFromTable:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802     0070                     ?_LIN_disableRx:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805     0070                     ?_EUSART_Write:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808     0070                     ?_LIN_calcParity:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811     0070                     ?_TMR0_WriteTimer:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814     0070                     ?_TMR0_SetInterruptHandler:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817     0070                     ?_EUSART_get_last_status:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820     0070                     ?_EUSART_SetRxInterruptHandler:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823     0070                     ?_EUSART_Receive_ISR:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826     0070                     ?_EUSART_SetTxInterruptHandler:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829     0070                     ?_EUSART_Transmit_ISR:	
  1830                           ; 1 bytes @ 0x0
  1831                           
  1832     0070                     ?_EUSART_SetFramingErrorHandler:	
  1833                           ; 1 bytes @ 0x0
  1834                           
  1835     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844     0070                     ?_EUSART_SetErrorHandler:	
  1845                           ; 1 bytes @ 0x0
  1846                           
  1847     0070                     ?_EUSART_DefaultErrorHandler:	
  1848                           ; 1 bytes @ 0x0
  1849                           
  1850     0070                     ?_EUSART_RxDataHandler:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853     0070                     ?_TMR0_DefaultInterruptHandler:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856     0070                     ?_OSCILLATOR_Initialize:	
  1857                           ; 1 bytes @ 0x0
  1858                           
  1859     0070                     ?_WDT_Initialize:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862     0070                     ?_LIN_Slave_Initialize:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865     0070                     ?_LIN_queuePacket:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868     0070                     ?_LIN_handler:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871     0070                     ?_LIN_timerHandler:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874     0070                     ?_PIN_MANAGER_Initialize:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877     0070                     ?_EUSART_Initialize:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880     0070                     ?_TMR0_Initialize:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883     0070                     ?_TMR0_ISR:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886     0070                     ?_INTERRUPT_InterruptManager:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889     0070                     ?_SYSTEM_Initialize:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892     0070                     ?_AutoBaud_Detect:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895     0070                     ?_main:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898     0070                     ?i1_LIN_stopTimer:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901     0070                     ?_memcpy:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904     0070                     ?_memset:	
  1905                           ; 2 bytes @ 0x0
  1906                           
  1907     0070                     LIN_getFromTable@param:	
  1908                           ; 2 bytes @ 0x0
  1909                           
  1910     0070                     LIN_getChecksum@pid:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913     0070                     EUSART_Read@readValue:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0070                     EUSART_Write@txData:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919     0070                     TMR0_WriteTimer@timerVal:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1926                           ; 2 bytes @ 0x0
  1927                           
  1928     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1929                           ; 2 bytes @ 0x0
  1930                           
  1931     0070                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1932                           ; 2 bytes @ 0x0
  1933                           
  1934     0070                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1935                           ; 2 bytes @ 0x0
  1936                           
  1937     0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  1938                           ; 2 bytes @ 0x0
  1939                           
  1940     0070                     memcpy@d1:	
  1941                           ; 2 bytes @ 0x0
  1942                           
  1943     0070                     memset@dest:	
  1944                           ; 2 bytes @ 0x0
  1945                           
  1946     0070                     ??_LIN_stopTimer:	
  1947                           ; 2 bytes @ 0x0
  1948                           
  1949     0070                     ??_LIN_enableRx:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952     0070                     ??_EUSART_is_rx_ready:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955     0070                     ??_EUSART_Read:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958     0070                     ??_LIN_disableRx:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961     0070                     ??_EUSART_Write:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964     0070                     ??_LIN_calcParity:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967     0070                     ??_TMR0_WriteTimer:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970     0070                     ??_EUSART_get_last_status:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973     0070                     ??_EUSART_Receive_ISR:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976     0070                     ??_EUSART_Transmit_ISR:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985     0070                     ??_EUSART_DefaultErrorHandler:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988     0070                     ??_EUSART_RxDataHandler:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991     0070                     ??_TMR0_DefaultInterruptHandler:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994     0070                     ??_OSCILLATOR_Initialize:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997     0070                     ??_WDT_Initialize:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000     0070                     ??_LIN_timerHandler:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003     0070                     ??_PIN_MANAGER_Initialize:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006     0070                     ??_TMR0_ISR:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009     0070                     ??_INTERRUPT_InterruptManager:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012     0070                     ??_AutoBaud_Detect:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015     0070                     ??i1_LIN_stopTimer:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018                           
  2019                           ; 1 bytes @ 0x0
  2020     0070                     	ds	1
  2021     0071                     LIN_calcParity@CMD:
  2022     0071                     LIN_startTimer@timeout:	
  2023                           ; 1 bytes @ 0x1
  2024                           
  2025     0071                     LIN_getChecksum@data:	
  2026                           ; 1 bytes @ 0x1
  2027                           
  2028     0071                     ??_LIN_startTimer:	
  2029                           ; 2 bytes @ 0x1
  2030                           
  2031     0071                     ??_LIN_breakCheck:	
  2032                           ; 1 bytes @ 0x1
  2033                           
  2034     0071                     ??_LIN_getFromTable:	
  2035                           ; 1 bytes @ 0x1
  2036                           
  2037                           
  2038                           ; 1 bytes @ 0x1
  2039     0071                     	ds	1
  2040     0072                     ?_LIN_init:
  2041     0072                     LIN_calcParity@PID:	
  2042                           ; 1 bytes @ 0x2
  2043                           
  2044     0072                     AutoBaud_Detect@i:	
  2045                           ; 1 bytes @ 0x2
  2046                           
  2047     0072                     LIN_init@command:	
  2048                           ; 1 bytes @ 0x2
  2049                           
  2050     0072                     memcpy@s1:	
  2051                           ; 2 bytes @ 0x2
  2052                           
  2053     0072                     memset@c:	
  2054                           ; 2 bytes @ 0x2
  2055                           
  2056     0072                     ??_LIN_setTimerHandler:	
  2057                           ; 2 bytes @ 0x2
  2058                           
  2059     0072                     ??_TMR0_SetInterruptHandler:	
  2060                           ; 1 bytes @ 0x2
  2061                           
  2062     0072                     ??_EUSART_SetRxInterruptHandler:	
  2063                           ; 1 bytes @ 0x2
  2064                           
  2065     0072                     ??_EUSART_SetTxInterruptHandler:	
  2066                           ; 1 bytes @ 0x2
  2067                           
  2068     0072                     ??_EUSART_SetFramingErrorHandler:	
  2069                           ; 1 bytes @ 0x2
  2070                           
  2071     0072                     ??_EUSART_SetOverrunErrorHandler:	
  2072                           ; 1 bytes @ 0x2
  2073                           
  2074     0072                     ??_EUSART_SetErrorHandler:	
  2075                           ; 1 bytes @ 0x2
  2076                           
  2077     0072                     ??_EUSART_Initialize:	
  2078                           ; 1 bytes @ 0x2
  2079                           
  2080     0072                     ??_TMR0_Initialize:	
  2081                           ; 1 bytes @ 0x2
  2082                           
  2083                           
  2084                           ; 1 bytes @ 0x2
  2085     0072                     	ds	1
  2086     0073                     LIN_getFromTable@cmd:
  2087     0073                     ??_LIN_getChecksum:	
  2088                           ; 1 bytes @ 0x3
  2089                           
  2090                           
  2091                           ; 1 bytes @ 0x3
  2092     0073                     	ds	1
  2093     0074                     LIN_getFromTable@length:
  2094     0074                     LIN_init@processData:	
  2095                           ; 1 bytes @ 0x4
  2096                           
  2097     0074                     memcpy@n:	
  2098                           ; 2 bytes @ 0x4
  2099                           
  2100     0074                     memset@n:	
  2101                           ; 2 bytes @ 0x4
  2102                           
  2103                           
  2104                           ; 2 bytes @ 0x4
  2105     0074                     	ds	1
  2106     0075                     LIN_getChecksum@length:
  2107     0075                     LIN_getFromTable@rxCommand:	
  2108                           ; 1 bytes @ 0x5
  2109                           
  2110                           
  2111                           ; 2 bytes @ 0x5
  2112     0075                     	ds	1
  2113     0076                     LIN_init@tableLength:
  2114     0076                     LIN_getChecksum@i:	
  2115                           ; 1 bytes @ 0x6
  2116                           
  2117     0076                     memcpy@tmp:	
  2118                           ; 1 bytes @ 0x6
  2119                           
  2120     0076                     memset@p:	
  2121                           ; 1 bytes @ 0x6
  2122                           
  2123     0076                     ??_LIN_init:	
  2124                           ; 1 bytes @ 0x6
  2125                           
  2126     0076                     ??_memcpy:	
  2127                           ; 1 bytes @ 0x6
  2128                           
  2129     0076                     ??_memset:	
  2130                           ; 1 bytes @ 0x6
  2131                           
  2132                           
  2133                           ; 1 bytes @ 0x6
  2134     0076                     	ds	1
  2135     0077                     LIN_checkPID@pid:
  2136     0077                     memcpy@d:	
  2137                           ; 1 bytes @ 0x7
  2138                           
  2139     0077                     LIN_getChecksum@checksum:	
  2140                           ; 1 bytes @ 0x7
  2141                           
  2142     0077                     ??_LIN_checkPID:	
  2143                           ; 2 bytes @ 0x7
  2144                           
  2145     0077                     ??_LIN_Slave_Initialize:	
  2146                           ; 1 bytes @ 0x7
  2147                           
  2148     0077                     ??_SYSTEM_Initialize:	
  2149                           ; 1 bytes @ 0x7
  2150                           
  2151                           
  2152                           ; 1 bytes @ 0x7
  2153     0077                     	ds	1
  2154     0078                     memcpy@s:
  2155                           
  2156                           ; 1 bytes @ 0x8
  2157     0078                     	ds	1
  2158     0079                     ?_LIN_getPacket:
  2159     0079                     ?_LIN_sendPacket:	
  2160                           ; 1 bytes @ 0x9
  2161                           
  2162     0079                     LIN_sendPacket@pid:	
  2163                           ; 1 bytes @ 0x9
  2164                           
  2165     0079                     LIN_getPacket@data:	
  2166                           ; 1 bytes @ 0x9
  2167                           
  2168                           
  2169                           ; 1 bytes @ 0x9
  2170     0079                     	ds	1
  2171     007A                     LIN_getPacket@cmd:
  2172     007A                     LIN_sendPacket@data:	
  2173                           ; 1 bytes @ 0xA
  2174                           
  2175     007A                     ??_LIN_getPacket:	
  2176                           ; 2 bytes @ 0xA
  2177                           
  2178                           
  2179                           ; 1 bytes @ 0xA
  2180     007A                     	ds	1
  2181     007B                     ??_processLIN:
  2182                           
  2183                           ; 1 bytes @ 0xB
  2184     007B                     	ds	1
  2185     007C                     LIN_sendPacket@length:
  2186     007C                     ??_LIN_sendPacket:	
  2187                           ; 1 bytes @ 0xC
  2188                           
  2189                           
  2190                           ; 1 bytes @ 0xC
  2191     007C                     	ds	1
  2192     007D                     LIN_sendPacket@i:
  2193                           
  2194                           ; 1 bytes @ 0xD
  2195     007D                     	ds	1
  2196     007E                     ??_main:
  2197                           
  2198                           	psect	cstackBANK0
  2199     0063                     __pcstackBANK0:	
  2200                           ; 1 bytes @ 0xE
  2201                           
  2202     0063                     processLIN@tempRxData:
  2203     0063                     ??_LIN_queuePacket:	
  2204                           ; 8 bytes @ 0x0
  2205                           
  2206                           
  2207                           ; 1 bytes @ 0x0
  2208     0063                     	ds	1
  2209     0064                     LIN_queuePacket@cmd:
  2210                           
  2211                           ; 1 bytes @ 0x1
  2212     0064                     	ds	1
  2213     0065                     LIN_queuePacket@i:
  2214                           
  2215                           ; 1 bytes @ 0x2
  2216     0065                     	ds	1
  2217     0066                     LIN_queuePacket@tempSchedule:
  2218                           
  2219                           ; 2 bytes @ 0x3
  2220     0066                     	ds	5
  2221     006B                     processLIN@cmd:
  2222                           
  2223                           ; 1 bytes @ 0x8
  2224     006B                     	ds	1
  2225                           
  2226                           	psect	maintext
  2227     0587                     __pmaintext:	
  2228 ;;
  2229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2230 ;;
  2231 ;; *************** function _main *****************
  2232 ;; Defined at:
  2233 ;;		line 90 in file "main.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : B1F/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2247 ;;      Params:         0       0       0       0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels required when called: 9
  2253 ;; This function calls:
  2254 ;;		_AutoBaud_Detect
  2255 ;;		_LIN_handler
  2256 ;;		_SYSTEM_Initialize
  2257 ;; This function is called by:
  2258 ;;		Startup code after reset
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262     0587                     _main:	
  2263                           ;psect for function _main
  2264                           
  2265     0587                     l2409:	
  2266                           ;incstack = 0
  2267                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2268                           
  2269                           
  2270                           ;main.c: 92:   SYSTEM_Initialize();
  2271     0587  3185  2551  3185   	fcall	_SYSTEM_Initialize
  2272                           
  2273                           ;main.c: 95:   AutoBaud_Detect();
  2274     058A  3183  23C6  3185   	fcall	_AutoBaud_Detect
  2275     058D                     l2411:
  2276                           
  2277                           ;main.c: 101:   (INTCONbits.GIE = 1);
  2278     058D  178B               	bsf	11,7	;volatile
  2279     058E                     l2413:
  2280                           
  2281                           ;main.c: 104:   (INTCONbits.PEIE = 1);
  2282     058E  170B               	bsf	11,6	;volatile
  2283     058F                     l2415:
  2284                           
  2285                           ;main.c: 114:     LIN_handler();
  2286     058F  3180  2052  3185   	fcall	_LIN_handler
  2287     0592  2D8F               	goto	l2415
  2288     0593  3180  2838         	ljmp	start
  2289     0595                     __end_of_main:
  2290                           
  2291                           	psect	text1
  2292     0551                     __ptext1:	
  2293 ;; *************** function _SYSTEM_Initialize *****************
  2294 ;; Defined at:
  2295 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, pclath, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2309 ;;      Params:         0       0       0       0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; Hardware stack levels required when called: 8
  2316 ;; This function calls:
  2317 ;;		_EUSART_Initialize
  2318 ;;		_LIN_Slave_Initialize
  2319 ;;		_OSCILLATOR_Initialize
  2320 ;;		_PIN_MANAGER_Initialize
  2321 ;;		_TMR0_Initialize
  2322 ;;		_WDT_Initialize
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328     0551                     _SYSTEM_Initialize:	
  2329                           ;psect for function _SYSTEM_Initialize
  2330                           
  2331     0551                     l2201:	
  2332                           ;incstack = 0
  2333                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2334                           
  2335                           
  2336                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2337     0551  3184  24C7  3185   	fcall	_PIN_MANAGER_Initialize
  2338                           
  2339                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2340     0554  3185  25BC  3185   	fcall	_OSCILLATOR_Initialize
  2341                           
  2342                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2343     0557  3186  2621  3185   	fcall	_WDT_Initialize
  2344     055A                     l2203:
  2345                           
  2346                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2347     055A  3185  253D  3185   	fcall	_TMR0_Initialize
  2348     055D                     l2205:
  2349                           
  2350                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2351     055D  3183  231C  3185   	fcall	_EUSART_Initialize
  2352     0560                     l2207:
  2353                           
  2354                           ;mcc_generated_files/mcc.c: 58:     LIN_Slave_Initialize();
  2355     0560  3185  2595  3185   	fcall	_LIN_Slave_Initialize
  2356     0563                     l503:
  2357     0563  0008               	return
  2358     0564                     __end_of_SYSTEM_Initialize:
  2359                           
  2360                           	psect	text2
  2361     0621                     __ptext2:	
  2362 ;; *************** function _WDT_Initialize *****************
  2363 ;; Defined at:
  2364 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		None
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2378 ;;      Params:         0       0       0       0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0
  2381 ;;      Totals:         0       0       0       0       0       0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 4
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_SYSTEM_Initialize
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392     0621                     _WDT_Initialize:	
  2393                           ;psect for function _WDT_Initialize
  2394                           
  2395     0621                     l1513:	
  2396                           ;incstack = 0
  2397                           ; Regs used in _WDT_Initialize: []
  2398                           
  2399                           
  2400                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  2401     0621  3016               	movlw	22
  2402     0622  0021               	movlb	1	; select bank1
  2403     0623  0097               	movwf	23	;volatile
  2404     0624                     l512:
  2405     0624  0008               	return
  2406     0625                     __end_of_WDT_Initialize:
  2407                           
  2408                           	psect	text3
  2409     053D                     __ptext3:	
  2410 ;; *************** function _TMR0_Initialize *****************
  2411 ;; Defined at:
  2412 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0, pclath, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2426 ;;      Params:         0       0       0       0       0       0       0       0
  2427 ;;      Locals:         0       0       0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0
  2429 ;;      Totals:         0       0       0       0       0       0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 5
  2433 ;; This function calls:
  2434 ;;		_TMR0_SetInterruptHandler
  2435 ;; This function is called by:
  2436 ;;		_SYSTEM_Initialize
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440     053D                     _TMR0_Initialize:	
  2441                           ;psect for function _TMR0_Initialize
  2442                           
  2443     053D                     l2061:	
  2444                           ;incstack = 0
  2445                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2446                           
  2447                           
  2448                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  2449     053D  0021               	movlb	1	; select bank1
  2450     053E  0815               	movf	21,w	;volatile
  2451     053F  39C0               	andlw	192
  2452     0540  3814               	iorlw	20
  2453     0541  0095               	movwf	21	;volatile
  2454     0542                     l2063:
  2455                           
  2456                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  2457     0542  3006               	movlw	6
  2458     0543  0020               	movlb	0	; select bank0
  2459     0544  0095               	movwf	21	;volatile
  2460     0545                     l2065:
  2461                           
  2462                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  2463     0545  3006               	movlw	6
  2464     0546  00C8               	movwf	_timer0ReloadVal	;volatile
  2465     0547                     l2067:
  2466                           
  2467                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2468     0547  110B               	bcf	11,2	;volatile
  2469     0548                     l2069:
  2470                           
  2471                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2472     0548  168B               	bsf	11,5	;volatile
  2473     0549                     l2071:
  2474                           
  2475                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2476     0549  3031               	movlw	low _TMR0_DefaultInterruptHandler
  2477     054A  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2478     054B  3006               	movlw	high _TMR0_DefaultInterruptHandler
  2479     054C  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2480     054D  3185  25DF  3185   	fcall	_TMR0_SetInterruptHandler
  2481     0550                     l426:
  2482     0550  0008               	return
  2483     0551                     __end_of_TMR0_Initialize:
  2484                           
  2485                           	psect	text4
  2486     04C7                     __ptext4:	
  2487 ;; *************** function _PIN_MANAGER_Initialize *****************
  2488 ;; Defined at:
  2489 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		status,2
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2503 ;;      Params:         0       0       0       0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 4
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_SYSTEM_Initialize
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517     04C7                     _PIN_MANAGER_Initialize:	
  2518                           ;psect for function _PIN_MANAGER_Initialize
  2519                           
  2520     04C7                     l1447:	
  2521                           ;incstack = 0
  2522                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2523                           
  2524                           
  2525                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2526     04C7  0022               	movlb	2	; select bank2
  2527     04C8  0190               	clrf	16	;volatile
  2528                           
  2529                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2530     04C9  018C               	clrf	12	;volatile
  2531                           
  2532                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2533     04CA  018D               	clrf	13	;volatile
  2534                           
  2535                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  2536     04CB  018E               	clrf	14	;volatile
  2537     04CC                     l1449:
  2538                           
  2539                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2540     04CC  3008               	movlw	8
  2541     04CD  0021               	movlb	1	; select bank1
  2542     04CE  0090               	movwf	16	;volatile
  2543     04CF                     l1451:
  2544                           
  2545                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2546     04CF  30FF               	movlw	255
  2547     04D0  008C               	movwf	12	;volatile
  2548     04D1                     l1453:
  2549                           
  2550                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
  2551     04D1  30C0               	movlw	192
  2552     04D2  008D               	movwf	13	;volatile
  2553     04D3                     l1455:
  2554                           
  2555                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xBF;
  2556     04D3  30BF               	movlw	191
  2557     04D4  008E               	movwf	14	;volatile
  2558                           
  2559                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  2560     04D5  0023               	movlb	3	; select bank3
  2561     04D6  018D               	clrf	13	;volatile
  2562     04D7                     l1457:
  2563                           
  2564                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x3F;
  2565     04D7  303F               	movlw	63
  2566     04D8  008C               	movwf	12	;volatile
  2567                           
  2568                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2569     04D9  0024               	movlb	4	; select bank4
  2570     04DA  0190               	clrf	16	;volatile
  2571                           
  2572                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2573     04DB  018D               	clrf	13	;volatile
  2574     04DC                     l1459:
  2575                           
  2576                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2577     04DC  0021               	movlb	1	; select bank1
  2578     04DD  1795               	bsf	21,7	;volatile
  2579                           
  2580                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2581     04DE  0022               	movlb	2	; select bank2
  2582     04DF  019D               	clrf	29	;volatile
  2583     04E0                     l262:
  2584     04E0  0008               	return
  2585     04E1                     __end_of_PIN_MANAGER_Initialize:
  2586                           
  2587                           	psect	text5
  2588     05BC                     __ptext5:	
  2589 ;; *************** function _OSCILLATOR_Initialize *****************
  2590 ;; Defined at:
  2591 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		status,2
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2605 ;;      Params:         0       0       0       0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0
  2608 ;;      Totals:         0       0       0       0       0       0       0       0
  2609 ;;Total ram usage:        0 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 4
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_SYSTEM_Initialize
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619     05BC                     _OSCILLATOR_Initialize:	
  2620                           ;psect for function _OSCILLATOR_Initialize
  2621                           
  2622     05BC                     l1509:	
  2623                           ;incstack = 0
  2624                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2625                           
  2626                           
  2627                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2628     05BC  3070               	movlw	112
  2629     05BD  0021               	movlb	1	; select bank1
  2630     05BE  0099               	movwf	25	;volatile
  2631     05BF                     l1511:
  2632                           
  2633                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2634     05BF  0198               	clrf	24	;volatile
  2635                           
  2636                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2637     05C0  0022               	movlb	2	; select bank2
  2638     05C1  0196               	clrf	22	;volatile
  2639     05C2                     l506:	
  2640                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2641                           
  2642                           
  2643                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2644     05C2  0021               	movlb	1	; select bank1
  2645     05C3  1F1A               	btfss	26,6	;volatile
  2646     05C4  2DC6               	goto	u571
  2647     05C5  2DC7               	goto	u570
  2648     05C6                     u571:
  2649     05C6  2DC2               	goto	l506
  2650     05C7                     u570:
  2651     05C7                     l509:
  2652     05C7  0008               	return
  2653     05C8                     __end_of_OSCILLATOR_Initialize:
  2654                           
  2655                           	psect	text6
  2656     0595                     __ptext6:	
  2657 ;; *************** function _LIN_Slave_Initialize *****************
  2658 ;; Defined at:
  2659 ;;		line 60 in file "mcc_generated_files/LINDrivers/lin_app.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2673 ;;      Params:         0       0       0       0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0
  2676 ;;      Totals:         0       0       0       0       0       0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 7
  2680 ;; This function calls:
  2681 ;;		_LIN_init
  2682 ;; This function is called by:
  2683 ;;		_SYSTEM_Initialize
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687     0595                     _LIN_Slave_Initialize:	
  2688                           ;psect for function _LIN_Slave_Initialize
  2689                           
  2690     0595                     l1947:	
  2691                           ;incstack = 0
  2692                           ; Regs used in _LIN_Slave_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2693                           
  2694                           
  2695                           ;mcc_generated_files/LINDrivers/lin_app.c: 62:     LIN_init((sizeof(scheduleTable)/sizeo
      +                          f(lin_rx_cmd_t)), scheduleTable, processLIN);
  2696     0595  3003               	movlw	low (_scheduleTable| (0+32768))
  2697     0596  00F2               	movwf	LIN_init@command
  2698     0597  3086               	movlw	high (_scheduleTable| (0+32768))
  2699     0598  00F3               	movwf	LIN_init@command+1
  2700     0599  30D2               	movlw	low _processLIN
  2701     059A  00F4               	movwf	LIN_init@processData
  2702     059B  3002               	movlw	high _processLIN
  2703     059C  00F5               	movwf	LIN_init@processData+1
  2704     059D  3001               	movlw	1
  2705     059E  3185  2512  3185   	fcall	_LIN_init
  2706     05A1                     l15:
  2707     05A1  0008               	return
  2708     05A2                     __end_of_LIN_Slave_Initialize:
  2709                           
  2710                           	psect	text7
  2711     0512                     __ptext7:	
  2712 ;; *************** function _LIN_init *****************
  2713 ;; Defined at:
  2714 ;;		line 57 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  tableLength     1    wreg     unsigned char 
  2717 ;;  command         2    2[COMMON] const PTR const struct .
  2718 ;;		 -> scheduleTable(5), 
  2719 ;;  processData     2    4[COMMON] PTR FTN()void 
  2720 ;;		 -> processLIN(1), 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  tableLength     1    6[COMMON] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0, pclath, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2732 ;;      Params:         4       0       0       0       0       0       0       0
  2733 ;;      Locals:         1       0       0       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0
  2735 ;;      Totals:         5       0       0       0       0       0       0       0
  2736 ;;Total ram usage:        5 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 6
  2739 ;; This function calls:
  2740 ;;		_LIN_enableRx
  2741 ;;		_LIN_setTimerHandler
  2742 ;;		_LIN_stopTimer
  2743 ;; This function is called by:
  2744 ;;		_LIN_Slave_Initialize
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748     0512                     _LIN_init:	
  2749                           ;psect for function _LIN_init
  2750                           
  2751                           
  2752                           ;incstack = 0
  2753                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2754                           ;LIN_init@tableLength stored from wreg
  2755     0512  00F6               	movwf	LIN_init@tableLength
  2756     0513                     l1809:
  2757                           
  2758                           ;mcc_generated_files/LINDrivers/lin_slave.c: 57: void LIN_init(uint8_t tableLength, cons
      +                          t lin_rx_cmd_t *const command,;mcc_generated_files/LINDrivers/lin_slave.c: 58:          
      +                               void (*processData)(void)) {;mcc_generated_files/LINDrivers/lin_slave.c: 59:   LIN_
      +                          rxCommand = command;
  2759     0513  0873               	movf	LIN_init@command+1,w
  2760     0514  0020               	movlb	0	; select bank0
  2761     0515  00C5               	movwf	_LIN_rxCommand+1
  2762     0516  0872               	movf	LIN_init@command,w
  2763     0517  00C4               	movwf	_LIN_rxCommand
  2764                           
  2765                           ;mcc_generated_files/LINDrivers/lin_slave.c: 60:   LIN_rxCommandLength = tableLength;
  2766     0518  0876               	movf	LIN_init@tableLength,w
  2767     0519  00D4               	movwf	_LIN_rxCommandLength
  2768                           
  2769                           ;mcc_generated_files/LINDrivers/lin_slave.c: 61:   LIN_processData = processData;
  2770     051A  0875               	movf	LIN_init@processData+1,w
  2771     051B  00C7               	movwf	_LIN_processData+1
  2772     051C  0874               	movf	LIN_init@processData,w
  2773     051D  00C6               	movwf	_LIN_processData
  2774     051E                     l1811:
  2775                           
  2776                           ;mcc_generated_files/LINDrivers/lin_slave.c: 62:   LIN_stopTimer();
  2777     051E  3186  2608  3185   	fcall	_LIN_stopTimer
  2778     0521                     l1813:
  2779                           
  2780                           ;mcc_generated_files/LINDrivers/lin_slave.c: 63:   LIN_enableRx();
  2781     0521  3186  2612  3185   	fcall	_LIN_enableRx
  2782     0524                     l1815:
  2783                           
  2784                           ;mcc_generated_files/LINDrivers/lin_slave.c: 64:   LIN_setTimerHandler();
  2785     0524  3185  25D1  3185   	fcall	_LIN_setTimerHandler
  2786     0527                     l123:
  2787     0527  0008               	return
  2788     0528                     __end_of_LIN_init:
  2789                           
  2790                           	psect	text8
  2791     05D1                     __ptext8:	
  2792 ;; *************** function _LIN_setTimerHandler *****************
  2793 ;; Defined at:
  2794 ;;		line 306 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2808 ;;      Params:         0       0       0       0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 5
  2815 ;; This function calls:
  2816 ;;		_TMR0_SetInterruptHandler
  2817 ;; This function is called by:
  2818 ;;		_LIN_init
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822     05D1                     _LIN_setTimerHandler:	
  2823                           ;psect for function _LIN_setTimerHandler
  2824                           
  2825     05D1                     l1753:	
  2826                           ;incstack = 0
  2827                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  2828                           
  2829     05D1  30AF               	movlw	low _LIN_timerHandler
  2830     05D2  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2831     05D3  3005               	movlw	high _LIN_timerHandler
  2832     05D4  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2833     05D5  3185  25DF  3185   	fcall	_TMR0_SetInterruptHandler
  2834     05D8                     l218:
  2835     05D8  0008               	return
  2836     05D9                     __end_of_LIN_setTimerHandler:
  2837                           
  2838                           	psect	text9
  2839     05DF                     __ptext9:	
  2840 ;; *************** function _TMR0_SetInterruptHandler *****************
  2841 ;; Defined at:
  2842 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2845 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2857 ;;      Params:         2       0       0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0
  2860 ;;      Totals:         2       0       0       0       0       0       0       0
  2861 ;;Total ram usage:        2 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 4
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_LIN_setTimerHandler
  2868 ;;		_TMR0_Initialize
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872     05DF                     _TMR0_SetInterruptHandler:	
  2873                           ;psect for function _TMR0_SetInterruptHandler
  2874                           
  2875     05DF                     l1745:	
  2876                           ;incstack = 0
  2877                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2878                           
  2879                           
  2880                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2881     05DF  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2882     05E0  0020               	movlb	0	; select bank0
  2883     05E1  00B9               	movwf	_TMR0_InterruptHandler+1
  2884     05E2  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2885     05E3  00B8               	movwf	_TMR0_InterruptHandler
  2886     05E4                     l442:
  2887     05E4  0008               	return
  2888     05E5                     __end_of_TMR0_SetInterruptHandler:
  2889                           
  2890                           	psect	text10
  2891     031C                     __ptext10:	
  2892 ;; *************** function _EUSART_Initialize *****************
  2893 ;; Defined at:
  2894 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2908 ;;      Params:         0       0       0       0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0       0
  2911 ;;      Totals:         0       0       0       0       0       0       0       0
  2912 ;;Total ram usage:        0 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 5
  2915 ;; This function calls:
  2916 ;;		_EUSART_SetErrorHandler
  2917 ;;		_EUSART_SetFramingErrorHandler
  2918 ;;		_EUSART_SetOverrunErrorHandler
  2919 ;;		_EUSART_SetRxInterruptHandler
  2920 ;;		_EUSART_SetTxInterruptHandler
  2921 ;; This function is called by:
  2922 ;;		_SYSTEM_Initialize
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926     031C                     _EUSART_Initialize:	
  2927                           ;psect for function _EUSART_Initialize
  2928                           
  2929     031C                     l2025:	
  2930                           ;incstack = 0
  2931                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2932                           
  2933                           
  2934                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  2935     031C  0021               	movlb	1	; select bank1
  2936     031D  1291               	bcf	17,5	;volatile
  2937     031E                     l2027:
  2938                           
  2939                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2940     031E  305A               	movlw	low _EUSART_Receive_ISR
  2941     031F  00F0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  2942     0320  3003               	movlw	high _EUSART_Receive_ISR
  2943     0321  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  2944     0322  3185  25EB  3183   	fcall	_EUSART_SetRxInterruptHandler
  2945     0325                     l2029:
  2946                           
  2947                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  2948     0325  0021               	movlb	1	; select bank1
  2949     0326  1211               	bcf	17,4	;volatile
  2950                           
  2951                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  2952     0327  30A9               	movlw	low _EUSART_Transmit_ISR
  2953     0328  00F0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  2954     0329  3004               	movlw	high _EUSART_Transmit_ISR
  2955     032A  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  2956     032B  3185  25E5  3183   	fcall	_EUSART_SetTxInterruptHandler
  2957     032E                     l2031:
  2958                           
  2959                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x18;
  2960     032E  3018               	movlw	24
  2961     032F  0023               	movlb	3	; select bank3
  2962     0330  009F               	movwf	31	;volatile
  2963     0331                     l2033:
  2964                           
  2965                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  2966     0331  3090               	movlw	144
  2967     0332  009D               	movwf	29	;volatile
  2968     0333                     l2035:
  2969                           
  2970                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  2971     0333  3024               	movlw	36
  2972     0334  009E               	movwf	30	;volatile
  2973     0335                     l2037:
  2974                           
  2975                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x40;
  2976     0335  3040               	movlw	64
  2977     0336  009B               	movwf	27	;volatile
  2978     0337                     l2039:
  2979                           
  2980                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x03;
  2981     0337  3003               	movlw	3
  2982     0338  009C               	movwf	28	;volatile
  2983                           
  2984                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  2985     0339  3032               	movlw	low _EUSART_DefaultFramingErrorHandler
  2986     033A  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2987     033B  3006               	movlw	high _EUSART_DefaultFramingErrorHandler
  2988     033C  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2989     033D  3185  25F7  3183   	fcall	_EUSART_SetFramingErrorHandler
  2990                           
  2991                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  2992     0340  3025               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2993     0341  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2994     0342  3006               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2995     0343  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2996     0344  3185  25F1  3183   	fcall	_EUSART_SetOverrunErrorHandler
  2997                           
  2998                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  2999     0347  3029               	movlw	low _EUSART_DefaultErrorHandler
  3000     0348  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  3001     0349  3006               	movlw	high _EUSART_DefaultErrorHandler
  3002     034A  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3003     034B  3185  25FD  3183   	fcall	_EUSART_SetErrorHandler
  3004     034E                     l2041:
  3005                           
  3006                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3007     034E  0020               	movlb	0	; select bank0
  3008     034F  01C9               	clrf	_eusartRxLastError	;volatile
  3009     0350                     l2043:
  3010                           
  3011                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3012     0350  01CF               	clrf	_eusartTxHead	;volatile
  3013     0351                     l2045:
  3014                           
  3015                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3016     0351  01CE               	clrf	_eusartTxTail	;volatile
  3017     0352                     l2047:
  3018                           
  3019                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3020     0352  3008               	movlw	8
  3021     0353  00CD               	movwf	_eusartTxBufferRemaining	;volatile
  3022     0354                     l2049:
  3023                           
  3024                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3025     0354  01CC               	clrf	_eusartRxHead	;volatile
  3026     0355                     l2051:
  3027                           
  3028                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3029     0355  01CB               	clrf	_eusartRxTail	;volatile
  3030     0356                     l2053:
  3031                           
  3032                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3033     0356  01CA               	clrf	_eusartRxCount	;volatile
  3034     0357                     l2055:
  3035                           
  3036                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  3037     0357  0021               	movlb	1	; select bank1
  3038     0358  1691               	bsf	17,5	;volatile
  3039     0359                     l340:
  3040     0359  0008               	return
  3041     035A                     __end_of_EUSART_Initialize:
  3042                           
  3043                           	psect	text11
  3044     05E5                     __ptext11:	
  3045 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3046 ;; Defined at:
  3047 ;;		line 276 in file "mcc_generated_files/eusart.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3050 ;;		 -> EUSART_Transmit_ISR(1), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3062 ;;      Params:         2       0       0       0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0
  3065 ;;      Totals:         2       0       0       0       0       0       0       0
  3066 ;;Total ram usage:        2 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 4
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_EUSART_Initialize
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076     05E5                     _EUSART_SetTxInterruptHandler:	
  3077                           ;psect for function _EUSART_SetTxInterruptHandler
  3078                           
  3079     05E5                     l1925:	
  3080                           ;incstack = 0
  3081                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3082                           
  3083                           
  3084                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3085     05E5  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3086     05E6  0020               	movlb	0	; select bank0
  3087     05E7  00C3               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3088     05E8  0870               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3089     05E9  00C2               	movwf	_EUSART_TxDefaultInterruptHandler
  3090     05EA                     l406:
  3091     05EA  0008               	return
  3092     05EB                     __end_of_EUSART_SetTxInterruptHandler:
  3093                           
  3094                           	psect	text12
  3095     05EB                     __ptext12:	
  3096 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3097 ;; Defined at:
  3098 ;;		line 280 in file "mcc_generated_files/eusart.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3101 ;;		 -> EUSART_Receive_ISR(1), 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3113 ;;      Params:         2       0       0       0       0       0       0       0
  3114 ;;      Locals:         0       0       0       0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0       0
  3116 ;;      Totals:         2       0       0       0       0       0       0       0
  3117 ;;Total ram usage:        2 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 4
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_EUSART_Initialize
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127     05EB                     _EUSART_SetRxInterruptHandler:	
  3128                           ;psect for function _EUSART_SetRxInterruptHandler
  3129                           
  3130     05EB                     l1923:	
  3131                           ;incstack = 0
  3132                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3133                           
  3134                           
  3135                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3136     05EB  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3137     05EC  0020               	movlb	0	; select bank0
  3138     05ED  00C1               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3139     05EE  0870               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3140     05EF  00C0               	movwf	_EUSART_RxDefaultInterruptHandler
  3141     05F0                     l409:
  3142     05F0  0008               	return
  3143     05F1                     __end_of_EUSART_SetRxInterruptHandler:
  3144                           
  3145                           	psect	text13
  3146     05F1                     __ptext13:	
  3147 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3148 ;; Defined at:
  3149 ;;		line 268 in file "mcc_generated_files/eusart.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3152 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3164 ;;      Params:         2       0       0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0
  3167 ;;      Totals:         2       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        2 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 4
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_EUSART_Initialize
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178     05F1                     _EUSART_SetOverrunErrorHandler:	
  3179                           ;psect for function _EUSART_SetOverrunErrorHandler
  3180                           
  3181     05F1                     l1929:	
  3182                           ;incstack = 0
  3183                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3184                           
  3185                           
  3186                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  3187     05F1  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3188     05F2  0020               	movlb	0	; select bank0
  3189     05F3  00BD               	movwf	_EUSART_OverrunErrorHandler+1
  3190     05F4  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3191     05F5  00BC               	movwf	_EUSART_OverrunErrorHandler
  3192     05F6                     l400:
  3193     05F6  0008               	return
  3194     05F7                     __end_of_EUSART_SetOverrunErrorHandler:
  3195                           
  3196                           	psect	text14
  3197     05F7                     __ptext14:	
  3198 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3199 ;; Defined at:
  3200 ;;		line 264 in file "mcc_generated_files/eusart.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3203 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3215 ;;      Params:         2       0       0       0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0
  3218 ;;      Totals:         2       0       0       0       0       0       0       0
  3219 ;;Total ram usage:        2 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 4
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_EUSART_Initialize
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229     05F7                     _EUSART_SetFramingErrorHandler:	
  3230                           ;psect for function _EUSART_SetFramingErrorHandler
  3231                           
  3232     05F7                     l1927:	
  3233                           ;incstack = 0
  3234                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3235                           
  3236                           
  3237                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  3238     05F7  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3239     05F8  0020               	movlb	0	; select bank0
  3240     05F9  00BF               	movwf	_EUSART_FramingErrorHandler+1
  3241     05FA  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3242     05FB  00BE               	movwf	_EUSART_FramingErrorHandler
  3243     05FC                     l397:
  3244     05FC  0008               	return
  3245     05FD                     __end_of_EUSART_SetFramingErrorHandler:
  3246                           
  3247                           	psect	text15
  3248     05FD                     __ptext15:	
  3249 ;; *************** function _EUSART_SetErrorHandler *****************
  3250 ;; Defined at:
  3251 ;;		line 272 in file "mcc_generated_files/eusart.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3254 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3266 ;;      Params:         2       0       0       0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0
  3269 ;;      Totals:         2       0       0       0       0       0       0       0
  3270 ;;Total ram usage:        2 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 4
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		_EUSART_Initialize
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280     05FD                     _EUSART_SetErrorHandler:	
  3281                           ;psect for function _EUSART_SetErrorHandler
  3282                           
  3283     05FD                     l1931:	
  3284                           ;incstack = 0
  3285                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3286                           
  3287                           
  3288                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  3289     05FD  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3290     05FE  0020               	movlb	0	; select bank0
  3291     05FF  00BB               	movwf	_EUSART_ErrorHandler+1
  3292     0600  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3293     0601  00BA               	movwf	_EUSART_ErrorHandler
  3294     0602                     l403:
  3295     0602  0008               	return
  3296     0603                     __end_of_EUSART_SetErrorHandler:
  3297                           
  3298                           	psect	text16
  3299     0052                     __ptext16:	
  3300 ;; *************** function _LIN_handler *****************
  3301 ;; Defined at:
  3302 ;;		line 92 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      enum E204
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3316 ;;      Params:         0       0       0       0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       5       0       0       0       0       0
  3319 ;;      Totals:         0       0       5       0       0       0       0       0
  3320 ;;Total ram usage:        5 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 7
  3323 ;; This function calls:
  3324 ;;		NULL
  3325 ;;		_EUSART_Read
  3326 ;;		_EUSART_is_rx_ready
  3327 ;;		_LIN_breakCheck
  3328 ;;		_LIN_checkPID
  3329 ;;		_LIN_disableRx
  3330 ;;		_LIN_enableRx
  3331 ;;		_LIN_getChecksum
  3332 ;;		_LIN_getFromTable
  3333 ;;		_LIN_queuePacket
  3334 ;;		_LIN_startTimer
  3335 ;;		_LIN_stopTimer
  3336 ;;		_memset
  3337 ;;		_processLIN
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343     0052                     _LIN_handler:	
  3344                           ;psect for function _LIN_handler
  3345                           
  3346     0052                     l2319:	
  3347                           ;incstack = 0
  3348                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3349                           
  3350                           
  3351                           ;mcc_generated_files/LINDrivers/lin_slave.c: 93:   static lin_rx_state_t LIN_rxState = L
      +                          IN_RX_IDLE;;mcc_generated_files/LINDrivers/lin_slave.c: 94:   static uint8_t rxDataIndex
      +                           = 0;;mcc_generated_files/LINDrivers/lin_slave.c: 96:   if (LIN_rxInProgress == 1) {
  3352     0052  0020               	movlb	0	; select bank0
  3353     0053  0355               	decf	_LIN_rxInProgress,w
  3354     0054  1D03               	btfss	3,2
  3355     0055  2857               	goto	u1761
  3356     0056  2858               	goto	u1760
  3357     0057                     u1761:
  3358     0057  2962               	goto	l2401
  3359     0058                     u1760:
  3360     0058                     l2321:
  3361                           
  3362                           ;mcc_generated_files/LINDrivers/lin_slave.c: 97:     if (LIN_timerRunning == 0) {
  3363     0058  0853               	movf	_LIN_timerRunning,w
  3364     0059  1D03               	btfss	3,2
  3365     005A  285C               	goto	u1771
  3366     005B  285D               	goto	u1770
  3367     005C                     u1771:
  3368     005C  2962               	goto	l2401
  3369     005D                     u1770:
  3370     005D                     l2323:
  3371                           
  3372                           ;mcc_generated_files/LINDrivers/lin_slave.c: 99:       LIN_rxState = LIN_RX_ERROR;
  3373     005D  3008               	movlw	8
  3374     005E  00D1               	movwf	LIN_handler@LIN_rxState
  3375     005F  2962               	goto	l2401
  3376     0060                     l2325:
  3377                           
  3378                           ;mcc_generated_files/LINDrivers/lin_slave.c: 105:     if (EUSART_is_rx_ready() > 0) {
  3379     0060  3185  25C8  3180   	fcall	_EUSART_is_rx_ready
  3380     0063  3A00               	xorlw	0
  3381     0064  1903               	skipnz
  3382     0065  2867               	goto	u1781
  3383     0066  2868               	goto	u1780
  3384     0067                     u1781:
  3385     0067  298B               	goto	l169
  3386     0068                     u1780:
  3387     0068                     l2327:
  3388                           
  3389                           ;mcc_generated_files/LINDrivers/lin_slave.c: 107:       LIN_startTimer(15);
  3390     0068  300F               	movlw	15
  3391     0069  3185  25A2  3180   	fcall	_LIN_startTimer
  3392     006C                     l2329:
  3393                           
  3394                           ;mcc_generated_files/LINDrivers/lin_slave.c: 108:       LIN_rxInProgress = 1;
  3395     006C  3001               	movlw	1
  3396     006D  0020               	movlb	0	; select bank0
  3397     006E  00D5               	movwf	_LIN_rxInProgress
  3398     006F                     l2331:
  3399                           
  3400                           ;mcc_generated_files/LINDrivers/lin_slave.c: 109:       LIN_rxState = LIN_RX_BREAK;
  3401     006F  3001               	movlw	1
  3402     0070  00D1               	movwf	LIN_handler@LIN_rxState
  3403     0071  298B               	goto	l169
  3404     0072                     l2333:
  3405                           
  3406                           ;mcc_generated_files/LINDrivers/lin_slave.c: 113:     if (EUSART_is_rx_ready() > 0) {
  3407     0072  3185  25C8  3180   	fcall	_EUSART_is_rx_ready
  3408     0075  3A00               	xorlw	0
  3409     0076  1903               	skipnz
  3410     0077  2879               	goto	u1791
  3411     0078  287A               	goto	u1790
  3412     0079                     u1791:
  3413     0079  298B               	goto	l169
  3414     007A                     u1790:
  3415     007A                     l2335:
  3416                           
  3417                           ;mcc_generated_files/LINDrivers/lin_slave.c: 114:       if (LIN_breakCheck() == 1) {
  3418     007A  3185  2564  3180   	fcall	_LIN_breakCheck
  3419     007D  3A01               	xorlw	1
  3420     007E  1D03               	skipz
  3421     007F  2881               	goto	u1801
  3422     0080  2882               	goto	u1800
  3423     0081                     u1801:
  3424     0081  2886               	goto	l145
  3425     0082                     u1800:
  3426     0082                     l2337:
  3427                           
  3428                           ;mcc_generated_files/LINDrivers/lin_slave.c: 115:         LIN_rxState = LIN_RX_SYNC;
  3429     0082  3002               	movlw	2
  3430     0083  0020               	movlb	0	; select bank0
  3431     0084  00D1               	movwf	LIN_handler@LIN_rxState
  3432                           
  3433                           ;mcc_generated_files/LINDrivers/lin_slave.c: 116:       } else {
  3434     0085  298B               	goto	l169
  3435     0086                     l145:
  3436                           
  3437                           ;mcc_generated_files/LINDrivers/lin_slave.c: 117:         LIN_rxState = LIN_RX_ERROR;
  3438     0086  3008               	movlw	8
  3439     0087  0020               	movlb	0	; select bank0
  3440     0088  00D1               	movwf	LIN_handler@LIN_rxState
  3441     0089  298B               	goto	l169
  3442     008A                     l2339:
  3443                           
  3444                           ;mcc_generated_files/LINDrivers/lin_slave.c: 122:     if (EUSART_is_rx_ready() > 0) {
  3445     008A  3185  25C8  3180   	fcall	_EUSART_is_rx_ready
  3446     008D  3A00               	xorlw	0
  3447     008E  1903               	skipnz
  3448     008F  2891               	goto	u1811
  3449     0090  2892               	goto	u1810
  3450     0091                     u1811:
  3451     0091  298B               	goto	l169
  3452     0092                     u1810:
  3453     0092                     l2341:
  3454                           
  3455                           ;mcc_generated_files/LINDrivers/lin_slave.c: 123:       if (EUSART_Read() == 0x55) {
  3456     0092  3184  2442  3180   	fcall	_EUSART_Read
  3457     0095  3A55               	xorlw	85
  3458     0096  1D03               	skipz
  3459     0097  2899               	goto	u1821
  3460     0098  289A               	goto	u1820
  3461     0099                     u1821:
  3462     0099  2886               	goto	l145
  3463     009A                     u1820:
  3464     009A                     l2343:
  3465                           
  3466                           ;mcc_generated_files/LINDrivers/lin_slave.c: 124:         LIN_rxState = LIN_RX_PID;
  3467     009A  3003               	movlw	3
  3468     009B  0020               	movlb	0	; select bank0
  3469     009C  00D1               	movwf	LIN_handler@LIN_rxState
  3470                           
  3471                           ;mcc_generated_files/LINDrivers/lin_slave.c: 125:       } else {
  3472     009D  298B               	goto	l169
  3473     009E                     l2345:
  3474                           
  3475                           ;mcc_generated_files/LINDrivers/lin_slave.c: 131:     if (EUSART_is_rx_ready() > 0) {
  3476     009E  3185  25C8  3180   	fcall	_EUSART_is_rx_ready
  3477     00A1  3A00               	xorlw	0
  3478     00A2  1903               	skipnz
  3479     00A3  28A5               	goto	u1831
  3480     00A4  28A6               	goto	u1830
  3481     00A5                     u1831:
  3482     00A5  298B               	goto	l169
  3483     00A6                     u1830:
  3484     00A6                     l2347:
  3485                           
  3486                           ;mcc_generated_files/LINDrivers/lin_slave.c: 132:       LIN_packet.PID = EUSART_Read();
  3487     00A6  3184  2442  3180   	fcall	_EUSART_Read
  3488     00A9  0020               	movlb	0	; select bank0
  3489     00AA  00D6               	movwf	_LIN_packet
  3490     00AB                     l2349:
  3491                           
  3492                           ;mcc_generated_files/LINDrivers/lin_slave.c: 135:       if (LIN_checkPID(LIN_packet.PID)
      +                           == 0) {
  3493     00AB  0856               	movf	_LIN_packet,w
  3494     00AC  3184  24E1  3180   	fcall	_LIN_checkPID
  3495     00AF  3A00               	xorlw	0
  3496     00B0  1D03               	skipz
  3497     00B1  28B3               	goto	u1841
  3498     00B2  28B4               	goto	u1840
  3499     00B3                     u1841:
  3500     00B3  28B5               	goto	l2353
  3501     00B4                     u1840:
  3502     00B4  2886               	goto	l145
  3503     00B5                     l2353:
  3504                           
  3505                           ;mcc_generated_files/LINDrivers/lin_slave.c: 139:       LIN_packet.type = LIN_getFromTab
      +                          le(LIN_packet.PID, TYPE);
  3506     00B5  01F0               	clrf	LIN_getFromTable@param
  3507     00B6  0AF0               	incf	LIN_getFromTable@param,f
  3508     00B7  0020               	movlb	0	; select bank0
  3509     00B8  0856               	movf	_LIN_packet,w
  3510     00B9  3182  2274  3180   	fcall	_LIN_getFromTable
  3511     00BC  0020               	movlb	0	; select bank0
  3512     00BD  00E0               	movwf	_LIN_packet+10
  3513     00BE                     l2355:
  3514                           
  3515                           ;mcc_generated_files/LINDrivers/lin_slave.c: 140:       if (LIN_packet.type == RECEIVE) 
      +                          {
  3516     00BE  0360               	decf	_LIN_packet+10,w
  3517     00BF  1D03               	btfss	3,2
  3518     00C0  28C2               	goto	u1851
  3519     00C1  28C3               	goto	u1850
  3520     00C2                     u1851:
  3521     00C2  28CE               	goto	l2361
  3522     00C3                     u1850:
  3523     00C3                     l2357:
  3524                           
  3525                           ;mcc_generated_files/LINDrivers/lin_slave.c: 141:         LIN_packet.length = LIN_getFro
      +                          mTable(LIN_packet.PID, LENGTH);
  3526     00C3  3002               	movlw	2
  3527     00C4  00F0               	movwf	LIN_getFromTable@param
  3528     00C5  0856               	movf	_LIN_packet,w
  3529     00C6  3182  2274  3180   	fcall	_LIN_getFromTable
  3530     00C9  0020               	movlb	0	; select bank0
  3531     00CA  00E1               	movwf	_LIN_packet+11
  3532     00CB                     l2359:
  3533                           
  3534                           ;mcc_generated_files/LINDrivers/lin_slave.c: 142:         LIN_rxState = LIN_RX_DATA;
  3535     00CB  3004               	movlw	4
  3536     00CC  00D1               	movwf	LIN_handler@LIN_rxState
  3537                           
  3538                           ;mcc_generated_files/LINDrivers/lin_slave.c: 143:       } else {
  3539     00CD  298B               	goto	l169
  3540     00CE                     l2361:
  3541                           
  3542                           ;mcc_generated_files/LINDrivers/lin_slave.c: 144:         LIN_disableRx();
  3543     00CE  3186  2617  3180   	fcall	_LIN_disableRx
  3544     00D1                     l2363:
  3545                           
  3546                           ;mcc_generated_files/LINDrivers/lin_slave.c: 145:         LIN_rxState = LIN_RX_TX_DATA;
  3547     00D1  3006               	movlw	6
  3548     00D2  0020               	movlb	0	; select bank0
  3549     00D3  00D1               	movwf	LIN_handler@LIN_rxState
  3550     00D4  298B               	goto	l169
  3551     00D5                     l2365:
  3552                           
  3553                           ;mcc_generated_files/LINDrivers/lin_slave.c: 150:     if (EUSART_is_rx_ready() > 0) {
  3554     00D5  3185  25C8  3180   	fcall	_EUSART_is_rx_ready
  3555     00D8  3A00               	xorlw	0
  3556     00D9  1903               	skipnz
  3557     00DA  28DC               	goto	u1861
  3558     00DB  28DD               	goto	u1860
  3559     00DC                     u1861:
  3560     00DC  298B               	goto	l169
  3561     00DD                     u1860:
  3562     00DD                     l2367:
  3563                           
  3564                           ;mcc_generated_files/LINDrivers/lin_slave.c: 151:       LIN_packet.data[rxDataIndex] = E
      +                          USART_Read();
  3565     00DD  3184  2442  3180   	fcall	_EUSART_Read
  3566     00E0  0021               	movlb	1	; select bank1
  3567     00E1  00A8               	movwf	??_LIN_handler^(0+128)
  3568     00E2  3057               	movlw	low (_LIN_packet+1)
  3569     00E3  00A9               	movwf	(??_LIN_handler+1)^(0+128)
  3570     00E4  3000               	movlw	high (_LIN_packet+1)
  3571     00E5  00AA               	movwf	((??_LIN_handler+1)^(0+128)+1)
  3572     00E6  0020               	movlb	0	; select bank0
  3573     00E7  0850               	movf	LIN_handler@rxDataIndex,w
  3574     00E8  0021               	movlb	1	; select bank1
  3575     00E9  0729               	addwf	(??_LIN_handler+1)^(0+128),w
  3576     00EA  00AB               	movwf	(??_LIN_handler+3)^(0+128)
  3577     00EB  3000               	movlw	0
  3578     00EC  3D2A               	addwfc	(??_LIN_handler+2)^(0+128),w
  3579     00ED  00AC               	movwf	(??_LIN_handler+4)^(0+128)
  3580     00EE  082B               	movf	(??_LIN_handler+3)^(0+128),w
  3581     00EF  0086               	movwf	6
  3582     00F0  082C               	movf	(??_LIN_handler+4)^(0+128),w
  3583     00F1  0087               	movwf	7
  3584     00F2  0828               	movf	??_LIN_handler^(0+128),w
  3585     00F3  0081               	movwf	1
  3586     00F4                     l2369:
  3587                           
  3588                           ;mcc_generated_files/LINDrivers/lin_slave.c: 152:       if (++rxDataIndex >= LIN_packet.
      +                          length) {
  3589     00F4  0020               	movlb	0	; select bank0
  3590     00F5  0861               	movf	_LIN_packet+11,w
  3591     00F6  0021               	movlb	1	; select bank1
  3592     00F7  00A8               	movwf	??_LIN_handler^(0+128)
  3593     00F8  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3594     00F9  1BA8               	btfsc	??_LIN_handler^(0+128),7
  3595     00FA  03A9               	decf	(??_LIN_handler^(0+128)+1),f
  3596     00FB  3001               	movlw	1
  3597     00FC  0020               	movlb	0	; select bank0
  3598     00FD  07D0               	addwf	LIN_handler@rxDataIndex,f
  3599     00FE  0021               	movlb	1	; select bank1
  3600     00FF  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3601     0100  3A80               	xorlw	128
  3602     0101  3C80               	sublw	128
  3603     0102  1D03               	skipz
  3604     0103  2907               	goto	u1875
  3605     0104  0828               	movf	??_LIN_handler^(0+128),w
  3606     0105  0020               	movlb	0	; select bank0
  3607     0106  0250               	subwf	LIN_handler@rxDataIndex,w
  3608     0107                     u1875:
  3609     0107  1C03               	skipc
  3610     0108  290A               	goto	u1871
  3611     0109  290B               	goto	u1870
  3612     010A                     u1871:
  3613     010A  298B               	goto	l169
  3614     010B                     u1870:
  3615     010B                     l2371:
  3616                           
  3617                           ;mcc_generated_files/LINDrivers/lin_slave.c: 154:         rxDataIndex = 0;
  3618     010B  0020               	movlb	0	; select bank0
  3619     010C  01D0               	clrf	LIN_handler@rxDataIndex
  3620     010D                     l2373:
  3621                           
  3622                           ;mcc_generated_files/LINDrivers/lin_slave.c: 155:         LIN_rxState = LIN_RX_CHECKSUM;
  3623     010D  3005               	movlw	5
  3624     010E  00D1               	movwf	LIN_handler@LIN_rxState
  3625     010F  298B               	goto	l169
  3626     0110                     l2375:
  3627                           
  3628                           ;mcc_generated_files/LINDrivers/lin_slave.c: 160:     if (EUSART_is_rx_ready() > 0) {
  3629     0110  3185  25C8  3180   	fcall	_EUSART_is_rx_ready
  3630     0113  3A00               	xorlw	0
  3631     0114  1903               	skipnz
  3632     0115  2917               	goto	u1881
  3633     0116  2918               	goto	u1880
  3634     0117                     u1881:
  3635     0117  298B               	goto	l169
  3636     0118                     u1880:
  3637     0118                     l2377:
  3638                           
  3639                           ;mcc_generated_files/LINDrivers/lin_slave.c: 161:       LIN_packet.checksum = EUSART_Rea
      +                          d();
  3640     0118  3184  2442  3180   	fcall	_EUSART_Read
  3641     011B  0020               	movlb	0	; select bank0
  3642     011C  00DF               	movwf	_LIN_packet+9
  3643                           
  3644                           ;mcc_generated_files/LINDrivers/lin_slave.c: 162:       if (LIN_packet.checksum !=
  3645     011D  0856               	movf	_LIN_packet,w
  3646     011E  00F0               	movwf	LIN_getChecksum@pid
  3647     011F  3057               	movlw	low (_LIN_packet+1)
  3648     0120  00F1               	movwf	LIN_getChecksum@data
  3649     0121  3000               	movlw	high (_LIN_packet+1)
  3650     0122  00F2               	movwf	LIN_getChecksum@data+1
  3651     0123  0861               	movf	_LIN_packet+11,w
  3652     0124  3183  2394  3180   	fcall	_LIN_getChecksum
  3653     0127  0020               	movlb	0	; select bank0
  3654     0128  065F               	xorwf	_LIN_packet+9,w
  3655     0129  1903               	skipnz
  3656     012A  292C               	goto	u1891
  3657     012B  292D               	goto	u1890
  3658     012C                     u1891:
  3659     012C  292E               	goto	l161
  3660     012D                     u1890:
  3661     012D  2886               	goto	l145
  3662     012E                     l161:
  3663                           
  3664                           ;mcc_generated_files/LINDrivers/lin_slave.c: 166:         LIN_rxState = LIN_RX_RDY;
  3665     012E  3007               	movlw	7
  3666     012F  00D1               	movwf	LIN_handler@LIN_rxState
  3667     0130  298B               	goto	l169
  3668     0131                     l2381:
  3669                           
  3670                           ;mcc_generated_files/LINDrivers/lin_slave.c: 171:     LIN_queuePacket(LIN_packet.PID);
  3671     0131  0020               	movlb	0	; select bank0
  3672     0132  0856               	movf	_LIN_packet,w
  3673     0133  3182  2212  3180   	fcall	_LIN_queuePacket
  3674     0136                     l2383:
  3675                           
  3676                           ;mcc_generated_files/LINDrivers/lin_slave.c: 172:     LIN_rxState = LIN_RX_RDY;
  3677     0136  3007               	movlw	7
  3678     0137  0020               	movlb	0	; select bank0
  3679     0138  00D1               	movwf	LIN_handler@LIN_rxState
  3680     0139                     l164:	
  3681                           ;mcc_generated_files/LINDrivers/lin_slave.c: 173:   case LIN_RX_RDY:
  3682                           
  3683                           
  3684                           ;mcc_generated_files/LINDrivers/lin_slave.c: 174:     LIN_processData();
  3685     0139  0020               	movlb	0	; select bank0
  3686     013A  0847               	movf	_LIN_processData+1,w
  3687     013B  008A               	movwf	10
  3688     013C  0846               	movf	_LIN_processData,w
  3689     013D  000A               	callw
  3690     013E  3180               	pagesel	$
  3691     013F                     l2385:
  3692                           
  3693                           ;mcc_generated_files/LINDrivers/lin_slave.c: 176:     LIN_stopTimer();
  3694     013F  3186  2608  3180   	fcall	_LIN_stopTimer
  3695     0142                     l2387:
  3696                           
  3697                           ;mcc_generated_files/LINDrivers/lin_slave.c: 177:     rxDataIndex = 0;
  3698     0142  0020               	movlb	0	; select bank0
  3699     0143  01D0               	clrf	LIN_handler@rxDataIndex
  3700     0144                     l2389:
  3701                           
  3702                           ;mcc_generated_files/LINDrivers/lin_slave.c: 178:     LIN_rxInProgress = 0;
  3703     0144  01D5               	clrf	_LIN_rxInProgress
  3704     0145                     l2391:
  3705                           
  3706                           ;mcc_generated_files/LINDrivers/lin_slave.c: 179:     memset(LIN_packet.rawPacket, 0,
  3707     0145  3056               	movlw	low _LIN_packet
  3708     0146  00F0               	movwf	memset@dest
  3709     0147  3000               	movlw	high _LIN_packet
  3710     0148  00F1               	movwf	memset@dest+1
  3711     0149  3000               	movlw	0
  3712     014A  00F2               	movwf	memset@c
  3713     014B  00F3               	movwf	memset@c+1
  3714     014C  300D               	movlw	13
  3715     014D  00F4               	movwf	memset@n
  3716     014E  3000               	movlw	0
  3717     014F  00F5               	movwf	memset@n+1
  3718     0150  3184  24FB  3180   	fcall	_memset
  3719     0153                     l2393:
  3720                           
  3721                           ;mcc_generated_files/LINDrivers/lin_slave.c: 182:     if (TXSTAbits.TRMT) {
  3722     0153  0023               	movlb	3	; select bank3
  3723     0154  1C9E               	btfss	30,1	;volatile
  3724     0155  2957               	goto	u1901
  3725     0156  2958               	goto	u1900
  3726     0157                     u1901:
  3727     0157  295E               	goto	l167
  3728     0158                     u1900:
  3729     0158                     l2395:
  3730                           
  3731                           ;mcc_generated_files/LINDrivers/lin_slave.c: 183:       LIN_enableRx();
  3732     0158  3186  2612  3180   	fcall	_LIN_enableRx
  3733     015B                     l2397:
  3734                           
  3735                           ;mcc_generated_files/LINDrivers/lin_slave.c: 184:       LIN_rxState = LIN_RX_IDLE;
  3736     015B  0020               	movlb	0	; select bank0
  3737     015C  01D1               	clrf	LIN_handler@LIN_rxState
  3738                           
  3739                           ;mcc_generated_files/LINDrivers/lin_slave.c: 185:     } else {
  3740     015D  298B               	goto	l169
  3741     015E                     l167:
  3742                           
  3743                           ;mcc_generated_files/LINDrivers/lin_slave.c: 186:       LIN_rxState = LIN_RX_WAIT;
  3744     015E  3009               	movlw	9
  3745     015F  0020               	movlb	0	; select bank0
  3746     0160  00D1               	movwf	LIN_handler@LIN_rxState
  3747     0161  298B               	goto	l169
  3748     0162                     l2401:
  3749     0162  0851               	movf	LIN_handler@LIN_rxState,w
  3750     0163  0021               	movlb	1	; select bank1
  3751     0164  00A8               	movwf	??_LIN_handler^(0+128)
  3752     0165  01A9               	clrf	(??_LIN_handler^(0+128)+1)
  3753                           
  3754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3755                           ; Switch size 1, requested type "simple"
  3756                           ; Number of cases is 1, Range of values is 0 to 0
  3757                           ; switch strategies available:
  3758                           ; Name         Instructions Cycles
  3759                           ; simple_byte            4     3 (average)
  3760                           ; direct_byte            8     6 (fixed)
  3761                           ; jumptable            260     6 (fixed)
  3762                           ;	Chosen strategy is simple_byte
  3763     0166  0829               	movf	(??_LIN_handler+1)^(0+128),w
  3764     0167  3A00               	xorlw	0	; case 0
  3765     0168  1903               	skipnz
  3766     0169  296B               	goto	l2487
  3767     016A  298B               	goto	l169
  3768     016B                     l2487:
  3769                           
  3770                           ; Switch size 1, requested type "simple"
  3771                           ; Number of cases is 10, Range of values is 0 to 9
  3772                           ; switch strategies available:
  3773                           ; Name         Instructions Cycles
  3774                           ; direct_byte           26     6 (fixed)
  3775                           ; simple_byte           31    16 (average)
  3776                           ; jumptable            260     6 (fixed)
  3777                           ;	Chosen strategy is simple_byte
  3778     016B  0828               	movf	??_LIN_handler^(0+128),w
  3779     016C  3A00               	xorlw	0	; case 0
  3780     016D  1903               	skipnz
  3781     016E  2860               	goto	l2325
  3782     016F  3A01               	xorlw	1	; case 1
  3783     0170  1903               	skipnz
  3784     0171  2872               	goto	l2333
  3785     0172  3A03               	xorlw	3	; case 2
  3786     0173  1903               	skipnz
  3787     0174  288A               	goto	l2339
  3788     0175  3A01               	xorlw	1	; case 3
  3789     0176  1903               	skipnz
  3790     0177  289E               	goto	l2345
  3791     0178  3A07               	xorlw	7	; case 4
  3792     0179  1903               	skipnz
  3793     017A  28D5               	goto	l2365
  3794     017B  3A01               	xorlw	1	; case 5
  3795     017C  1903               	skipnz
  3796     017D  2910               	goto	l2375
  3797     017E  3A03               	xorlw	3	; case 6
  3798     017F  1903               	skipnz
  3799     0180  2931               	goto	l2381
  3800     0181  3A01               	xorlw	1	; case 7
  3801     0182  1903               	skipnz
  3802     0183  2939               	goto	l164
  3803     0184  3A0F               	xorlw	15	; case 8
  3804     0185  1903               	skipnz
  3805     0186  293F               	goto	l2385
  3806     0187  3A01               	xorlw	1	; case 9
  3807     0188  1903               	skipnz
  3808     0189  2953               	goto	l2393
  3809     018A  298B               	goto	l169
  3810     018B                     l169:
  3811     018B  0008               	return
  3812     018C                     __end_of_LIN_handler:
  3813                           
  3814                           	psect	text17
  3815     02D2                     __ptext17:	
  3816 ;; *************** function _processLIN *****************
  3817 ;; Defined at:
  3818 ;;		line 65 in file "mcc_generated_files/LINDrivers/lin_app.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  tempRxData      8    0[BANK0 ] unsigned char [8]
  3823 ;;  cmd             1    8[BANK0 ] unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3833 ;;      Params:         0       0       0       0       0       0       0       0
  3834 ;;      Locals:         0       9       0       0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0
  3836 ;;      Totals:         0       9       0       0       0       0       0       0
  3837 ;;Total ram usage:        9 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; Hardware stack levels required when called: 6
  3840 ;; This function calls:
  3841 ;;		_LIN_getPacket
  3842 ;; This function is called by:
  3843 ;;		_LIN_Slave_Initialize
  3844 ;;		_LIN_handler
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848     02D2                     _processLIN:	
  3849                           ;psect for function _processLIN
  3850                           
  3851     02D2                     l1949:	
  3852                           ;incstack = 0
  3853                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3854                           
  3855                           
  3856                           ;mcc_generated_files/LINDrivers/lin_app.c: 66:     uint8_t tempRxData[8];;mcc_generated_
      +                          files/LINDrivers/lin_app.c: 67:     uint8_t cmd;;mcc_generated_files/LINDrivers/lin_app.
      +                          c: 69:     cmd = LIN_getPacket(tempRxData);
  3857     02D2  3063               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3858     02D3  00F9               	movwf	LIN_getPacket@data
  3859     02D4  3183  23F2  3182   	fcall	_LIN_getPacket
  3860     02D7  0020               	movlb	0	; select bank0
  3861     02D8  00EB               	movwf	processLIN@cmd
  3862                           
  3863                           ;mcc_generated_files/LINDrivers/lin_app.c: 70:     switch (cmd) {
  3864     02D9  2B16               	goto	l1953
  3865     02DA                     l19:	
  3866                           ;mcc_generated_files/LINDrivers/lin_app.c: 72:         case SW_STATE:
  3867                           
  3868                           
  3869                           ;mcc_generated_files/LINDrivers/lin_app.c: 73:             if ( (tempRxData[5] & 0B00100
      +                          000) == 0B00100000) {
  3870     02DA  1EE8               	btfss	processLIN@tempRxData+5,5
  3871     02DB  2ADD               	goto	u1311
  3872     02DC  2ADE               	goto	u1310
  3873     02DD                     u1311:
  3874     02DD  2AE1               	goto	l24
  3875     02DE                     u1310:
  3876     02DE                     l21:	
  3877                           ;mcc_generated_files/LINDrivers/lin_app.c: 74:                 do { LATBbits.LATB5 = 1; 
      +                          } while(0);
  3878                           
  3879     02DE  0022               	movlb	2	; select bank2
  3880     02DF  168D               	bsf	13,5	;volatile
  3881     02E0  2AE3               	goto	l23
  3882     02E1                     l24:	
  3883                           ;mcc_generated_files/LINDrivers/lin_app.c: 76:                 do { LATBbits.LATB5 = 0; 
      +                          } while(0);
  3884                           
  3885     02E1  0022               	movlb	2	; select bank2
  3886     02E2  128D               	bcf	13,5	;volatile
  3887     02E3                     l23:	
  3888                           ;mcc_generated_files/LINDrivers/lin_app.c: 77:             }
  3889                           
  3890                           
  3891                           ;mcc_generated_files/LINDrivers/lin_app.c: 79:             if ( (tempRxData[2] & 0B00000
      +                          001) == 0B00000001) {
  3892     02E3  0020               	movlb	0	; select bank0
  3893     02E4  1C65               	btfss	processLIN@tempRxData+2,0
  3894     02E5  2AE7               	goto	u1321
  3895     02E6  2AE8               	goto	u1320
  3896     02E7                     u1321:
  3897     02E7  2AEB               	goto	l30
  3898     02E8                     u1320:
  3899     02E8                     l27:	
  3900                           ;mcc_generated_files/LINDrivers/lin_app.c: 80:                 do { LATBbits.LATB4 = 1; 
      +                          } while(0);
  3901                           
  3902     02E8  0022               	movlb	2	; select bank2
  3903     02E9  160D               	bsf	13,4	;volatile
  3904     02EA  2AED               	goto	l29
  3905     02EB                     l30:	
  3906                           ;mcc_generated_files/LINDrivers/lin_app.c: 82:                 do { LATBbits.LATB4 = 0; 
      +                          } while(0);
  3907                           
  3908     02EB  0022               	movlb	2	; select bank2
  3909     02EC  120D               	bcf	13,4	;volatile
  3910     02ED                     l29:	
  3911                           ;mcc_generated_files/LINDrivers/lin_app.c: 83:             }
  3912                           
  3913                           
  3914                           ;mcc_generated_files/LINDrivers/lin_app.c: 85:             if ( (tempRxData[1] & 0B00001
      +                          000) == 0B00001000) {
  3915     02ED  0020               	movlb	0	; select bank0
  3916     02EE  1DE4               	btfss	processLIN@tempRxData+1,3
  3917     02EF  2AF1               	goto	u1331
  3918     02F0  2AF2               	goto	u1330
  3919     02F1                     u1331:
  3920     02F1  2AF5               	goto	l36
  3921     02F2                     u1330:
  3922     02F2                     l33:	
  3923                           ;mcc_generated_files/LINDrivers/lin_app.c: 86:                 do { LATBbits.LATB3 = 1; 
      +                          } while(0);
  3924                           
  3925     02F2  0022               	movlb	2	; select bank2
  3926     02F3  158D               	bsf	13,3	;volatile
  3927     02F4  2AF7               	goto	l35
  3928     02F5                     l36:	
  3929                           ;mcc_generated_files/LINDrivers/lin_app.c: 88:                 do { LATBbits.LATB3 = 0; 
      +                          } while(0);
  3930                           
  3931     02F5  0022               	movlb	2	; select bank2
  3932     02F6  118D               	bcf	13,3	;volatile
  3933     02F7                     l35:	
  3934                           ;mcc_generated_files/LINDrivers/lin_app.c: 89:             }
  3935                           
  3936                           
  3937                           ;mcc_generated_files/LINDrivers/lin_app.c: 91:             if ( (tempRxData[1] & 0B01000
      +                          000) == 0B01000000) {
  3938     02F7  0020               	movlb	0	; select bank0
  3939     02F8  1F64               	btfss	processLIN@tempRxData+1,6
  3940     02F9  2AFB               	goto	u1341
  3941     02FA  2AFC               	goto	u1340
  3942     02FB                     u1341:
  3943     02FB  2AFF               	goto	l42
  3944     02FC                     u1340:
  3945     02FC                     l39:	
  3946                           ;mcc_generated_files/LINDrivers/lin_app.c: 92:                 do { LATBbits.LATB2 = 1; 
      +                          } while(0);
  3947                           
  3948     02FC  0022               	movlb	2	; select bank2
  3949     02FD  150D               	bsf	13,2	;volatile
  3950     02FE  2B01               	goto	l41
  3951     02FF                     l42:	
  3952                           ;mcc_generated_files/LINDrivers/lin_app.c: 94:                 do { LATBbits.LATB2 = 0; 
      +                          } while(0);
  3953                           
  3954     02FF  0022               	movlb	2	; select bank2
  3955     0300  110D               	bcf	13,2	;volatile
  3956     0301                     l41:	
  3957                           ;mcc_generated_files/LINDrivers/lin_app.c: 95:             }
  3958                           
  3959                           
  3960                           ;mcc_generated_files/LINDrivers/lin_app.c: 97:             if ( (tempRxData[1] & 0B00010
      +                          000) == 0B00010000) {
  3961     0301  0020               	movlb	0	; select bank0
  3962     0302  1E64               	btfss	processLIN@tempRxData+1,4
  3963     0303  2B05               	goto	u1351
  3964     0304  2B06               	goto	u1350
  3965     0305                     u1351:
  3966     0305  2B09               	goto	l48
  3967     0306                     u1350:
  3968     0306                     l45:	
  3969                           ;mcc_generated_files/LINDrivers/lin_app.c: 98:                 do { LATBbits.LATB1 = 1; 
      +                          } while(0);
  3970                           
  3971     0306  0022               	movlb	2	; select bank2
  3972     0307  148D               	bsf	13,1	;volatile
  3973     0308  2B0B               	goto	l47
  3974     0309                     l48:	
  3975                           ;mcc_generated_files/LINDrivers/lin_app.c: 100:                 do { LATBbits.LATB1 = 0;
      +                           } while(0);
  3976                           
  3977     0309  0022               	movlb	2	; select bank2
  3978     030A  108D               	bcf	13,1	;volatile
  3979     030B                     l47:	
  3980                           ;mcc_generated_files/LINDrivers/lin_app.c: 101:             }
  3981                           
  3982                           
  3983                           ;mcc_generated_files/LINDrivers/lin_app.c: 103:             if ( (tempRxData[1] & 0B0010
      +                          0000) == 0B00100000) {
  3984     030B  0020               	movlb	0	; select bank0
  3985     030C  1EE4               	btfss	processLIN@tempRxData+1,5
  3986     030D  2B0F               	goto	u1361
  3987     030E  2B10               	goto	u1360
  3988     030F                     u1361:
  3989     030F  2B13               	goto	l54
  3990     0310                     u1360:
  3991     0310                     l51:	
  3992                           ;mcc_generated_files/LINDrivers/lin_app.c: 104:                 do { LATBbits.LATB0 = 1;
      +                           } while(0);
  3993                           
  3994     0310  0022               	movlb	2	; select bank2
  3995     0311  140D               	bsf	13,0	;volatile
  3996     0312  2B1B               	goto	l58
  3997     0313                     l54:	
  3998                           ;mcc_generated_files/LINDrivers/lin_app.c: 106:                 do { LATBbits.LATB0 = 0;
      +                           } while(0);
  3999                           
  4000     0313  0022               	movlb	2	; select bank2
  4001     0314  100D               	bcf	13,0	;volatile
  4002     0315  2B1B               	goto	l58
  4003     0316                     l1953:
  4004     0316  086B               	movf	processLIN@cmd,w
  4005                           
  4006                           ; Switch size 1, requested type "simple"
  4007                           ; Number of cases is 1, Range of values is 1 to 1
  4008                           ; switch strategies available:
  4009                           ; Name         Instructions Cycles
  4010                           ; simple_byte            4     3 (average)
  4011                           ; direct_byte           11     9 (fixed)
  4012                           ; jumptable            263     9 (fixed)
  4013                           ;	Chosen strategy is simple_byte
  4014     0317  3A01               	xorlw	1	; case 1
  4015     0318  1903               	skipnz
  4016     0319  2ADA               	goto	l19
  4017     031A  2B1B               	goto	l58
  4018     031B                     l58:
  4019     031B  0008               	return
  4020     031C                     __end_of_processLIN:
  4021                           
  4022                           	psect	text18
  4023     03F2                     __ptext18:	
  4024 ;; *************** function _LIN_getPacket *****************
  4025 ;; Defined at:
  4026 ;;		line 203 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  data            1    9[COMMON] PTR unsigned char 
  4029 ;;		 -> processLIN@tempRxData(8), 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  cmd             1   10[COMMON] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      unsigned char 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4041 ;;      Params:         1       0       0       0       0       0       0       0
  4042 ;;      Locals:         1       0       0       0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0
  4044 ;;      Totals:         2       0       0       0       0       0       0       0
  4045 ;;Total ram usage:        2 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 5
  4048 ;; This function calls:
  4049 ;;		_memcpy
  4050 ;;		_memset
  4051 ;; This function is called by:
  4052 ;;		_processLIN
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056     03F2                     _LIN_getPacket:	
  4057                           ;psect for function _LIN_getPacket
  4058                           
  4059     03F2                     l1817:	
  4060                           ;incstack = 0
  4061                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4062                           
  4063                           
  4064                           ;mcc_generated_files/LINDrivers/lin_slave.c: 204:   uint8_t cmd = LIN_packet.PID & 0x3F;
  4065     03F2  0020               	movlb	0	; select bank0
  4066     03F3  0856               	movf	_LIN_packet,w
  4067     03F4  393F               	andlw	63
  4068     03F5  00FA               	movwf	LIN_getPacket@cmd
  4069     03F6                     l1819:
  4070                           
  4071                           ;mcc_generated_files/LINDrivers/lin_slave.c: 206:   if (cmd != 0) {
  4072     03F6  087A               	movf	LIN_getPacket@cmd,w
  4073     03F7  1903               	btfsc	3,2
  4074     03F8  2BFA               	goto	u971
  4075     03F9  2BFB               	goto	u970
  4076     03FA                     u971:
  4077     03FA  2BFE               	goto	l1823
  4078     03FB                     u970:
  4079     03FB                     l1821:
  4080                           
  4081                           ;mcc_generated_files/LINDrivers/lin_slave.c: 207:     __nop();
  4082     03FB  0000               	nop
  4083                           
  4084                           ;mcc_generated_files/LINDrivers/lin_slave.c: 208:     __nop();
  4085     03FC  0000               	nop
  4086                           
  4087                           ;mcc_generated_files/LINDrivers/lin_slave.c: 209:     __nop();
  4088     03FD  0000               	nop
  4089     03FE                     l1823:
  4090                           
  4091                           ;mcc_generated_files/LINDrivers/lin_slave.c: 212:   memcpy(data, LIN_packet.data, sizeof
      +                          (LIN_packet.data));
  4092     03FE  0879               	movf	LIN_getPacket@data,w
  4093     03FF  00F0               	movwf	memcpy@d1
  4094     0400  01F1               	clrf	memcpy@d1+1
  4095     0401  3057               	movlw	low (_LIN_packet+1)
  4096     0402  00F2               	movwf	memcpy@s1
  4097     0403  3000               	movlw	high (_LIN_packet+1)
  4098     0404  00F3               	movwf	memcpy@s1+1
  4099     0405  3008               	movlw	8
  4100     0406  00F4               	movwf	memcpy@n
  4101     0407  3000               	movlw	0
  4102     0408  00F5               	movwf	memcpy@n+1
  4103     0409  3184  2489  3183   	fcall	_memcpy
  4104                           
  4105                           ;mcc_generated_files/LINDrivers/lin_slave.c: 213:   memset(LIN_packet.rawPacket, 0, size
      +                          of(LIN_packet.rawPacket));
  4106     040C  3056               	movlw	low _LIN_packet
  4107     040D  00F0               	movwf	memset@dest
  4108     040E  3000               	movlw	high _LIN_packet
  4109     040F  00F1               	movwf	memset@dest+1
  4110     0410  3000               	movlw	0
  4111     0411  00F2               	movwf	memset@c
  4112     0412  00F3               	movwf	memset@c+1
  4113     0413  300D               	movlw	13
  4114     0414  00F4               	movwf	memset@n
  4115     0415  3000               	movlw	0
  4116     0416  00F5               	movwf	memset@n+1
  4117     0417  3184  24FB  3183   	fcall	_memset
  4118     041A                     l1825:
  4119                           
  4120                           ;mcc_generated_files/LINDrivers/lin_slave.c: 215:   return cmd;
  4121     041A  087A               	movf	LIN_getPacket@cmd,w
  4122     041B                     l179:
  4123     041B  0008               	return
  4124     041C                     __end_of_LIN_getPacket:
  4125                           
  4126                           	psect	text19
  4127     04FB                     __ptext19:	
  4128 ;; *************** function _memset *****************
  4129 ;; Defined at:
  4130 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  dest            2    0[COMMON] PTR void 
  4133 ;;		 -> LIN_packet(13), 
  4134 ;;  c               2    2[COMMON] int 
  4135 ;;  n               2    4[COMMON] unsigned int 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  p               1    6[COMMON] PTR unsigned char 
  4138 ;;		 -> LIN_packet(13), 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  2    0[COMMON] PTR void 
  4141 ;; Registers used:
  4142 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4148 ;;      Params:         6       0       0       0       0       0       0       0
  4149 ;;      Locals:         1       0       0       0       0       0       0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0
  4151 ;;      Totals:         7       0       0       0       0       0       0       0
  4152 ;;Total ram usage:        7 bytes
  4153 ;; Hardware stack levels used: 1
  4154 ;; Hardware stack levels required when called: 4
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_LIN_handler
  4159 ;;		_LIN_getPacket
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163     04FB                     _memset:	
  4164                           ;psect for function _memset
  4165                           
  4166     04FB                     l1783:	
  4167                           ;incstack = 0
  4168                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4169                           
  4170     04FB  0870               	movf	memset@dest,w
  4171     04FC  00F6               	movwf	memset@p
  4172     04FD  2D05               	goto	l1789
  4173     04FE                     l1785:
  4174     04FE  0876               	movf	memset@p,w
  4175     04FF  0086               	movwf	6
  4176     0500  0187               	clrf	7
  4177     0501  0872               	movf	memset@c,w
  4178     0502  0081               	movwf	1
  4179     0503                     l1787:
  4180     0503  3001               	movlw	1
  4181     0504  07F6               	addwf	memset@p,f
  4182     0505                     l1789:
  4183     0505  3001               	movlw	1
  4184     0506  02F4               	subwf	memset@n,f
  4185     0507  3000               	movlw	0
  4186     0508  3BF5               	subwfb	memset@n+1,f
  4187     0509  0A74               	incf	memset@n,w
  4188     050A  1D03               	skipz
  4189     050B  2D10               	goto	u931
  4190     050C  0A75               	incf	memset@n+1,w
  4191     050D  1D03               	btfss	3,2
  4192     050E  2D10               	goto	u931
  4193     050F  2D11               	goto	u930
  4194     0510                     u931:
  4195     0510  2CFE               	goto	l1785
  4196     0511                     u930:
  4197     0511                     l1167:
  4198     0511  0008               	return
  4199     0512                     __end_of_memset:
  4200                           
  4201                           	psect	text20
  4202     0608                     __ptext20:	
  4203 ;; *************** function _LIN_stopTimer *****************
  4204 ;; Defined at:
  4205 ;;		line 308 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      void 
  4212 ;; Registers used:
  4213 ;;		status,2
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4219 ;;      Params:         0       0       0       0       0       0       0       0
  4220 ;;      Locals:         0       0       0       0       0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0       0
  4222 ;;      Totals:         0       0       0       0       0       0       0       0
  4223 ;;Total ram usage:        0 bytes
  4224 ;; Hardware stack levels used: 1
  4225 ;; Hardware stack levels required when called: 4
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_LIN_init
  4230 ;;		_LIN_handler
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234     0608                     _LIN_stopTimer:	
  4235                           ;psect for function _LIN_stopTimer
  4236                           
  4237     0608                     l1747:	
  4238                           ;incstack = 0
  4239                           ; Regs used in _LIN_stopTimer: [status,2]
  4240                           
  4241                           
  4242                           ;mcc_generated_files/LINDrivers/lin_slave.c: 309:   __nop();
  4243     0608  0000               	nop
  4244     0609                     l1749:
  4245                           
  4246                           ;mcc_generated_files/LINDrivers/lin_slave.c: 311:   CountCallBack = 0;
  4247     0609  0020               	movlb	0	; select bank0
  4248     060A  01D2               	clrf	_CountCallBack	;volatile
  4249                           
  4250                           ;mcc_generated_files/LINDrivers/lin_slave.c: 312:   LIN_timerRunning = 0;
  4251     060B  01D3               	clrf	_LIN_timerRunning
  4252     060C                     l221:
  4253     060C  0008               	return
  4254     060D                     __end_of_LIN_stopTimer:
  4255                           
  4256                           	psect	text21
  4257     05A2                     __ptext21:	
  4258 ;; *************** function _LIN_startTimer *****************
  4259 ;; Defined at:
  4260 ;;		line 290 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  timeout         1    wreg     unsigned char 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  timeout         1    1[COMMON] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0, pclath, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4274 ;;      Params:         0       0       0       0       0       0       0       0
  4275 ;;      Locals:         1       0       0       0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0
  4277 ;;      Totals:         1       0       0       0       0       0       0       0
  4278 ;;Total ram usage:        1 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 5
  4281 ;; This function calls:
  4282 ;;		_TMR0_WriteTimer
  4283 ;; This function is called by:
  4284 ;;		_LIN_handler
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288     05A2                     _LIN_startTimer:	
  4289                           ;psect for function _LIN_startTimer
  4290                           
  4291                           
  4292                           ;incstack = 0
  4293                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  4294                           ;LIN_startTimer@timeout stored from wreg
  4295     05A2  00F1               	movwf	LIN_startTimer@timeout
  4296     05A3                     l1983:
  4297                           
  4298                           ;mcc_generated_files/LINDrivers/lin_slave.c: 291:   LIN_timeout = timeout;
  4299     05A3  0871               	movf	LIN_startTimer@timeout,w
  4300     05A4  0020               	movlb	0	; select bank0
  4301     05A5  00EC               	movwf	_LIN_timeout
  4302     05A6                     l1985:
  4303                           
  4304                           ;mcc_generated_files/LINDrivers/lin_slave.c: 292:   TMR0_WriteTimer(0);
  4305     05A6  3000               	movlw	0
  4306     05A7  3186  260D  3185   	fcall	_TMR0_WriteTimer
  4307     05AA                     l1987:
  4308                           
  4309                           ;mcc_generated_files/LINDrivers/lin_slave.c: 293:   __nop();
  4310     05AA  0000               	nop
  4311     05AB                     l1989:
  4312                           
  4313                           ;mcc_generated_files/LINDrivers/lin_slave.c: 294:   LIN_timerRunning = 1;
  4314     05AB  3001               	movlw	1
  4315     05AC  0020               	movlb	0	; select bank0
  4316     05AD  00D3               	movwf	_LIN_timerRunning
  4317     05AE                     l211:
  4318     05AE  0008               	return
  4319     05AF                     __end_of_LIN_startTimer:
  4320                           
  4321                           	psect	text22
  4322     060D                     __ptext22:	
  4323 ;; *************** function _TMR0_WriteTimer *****************
  4324 ;; Defined at:
  4325 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  timerVal        1    wreg     unsigned char 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  timerVal        1    0[COMMON] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4339 ;;      Params:         0       0       0       0       0       0       0       0
  4340 ;;      Locals:         1       0       0       0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0
  4342 ;;      Totals:         1       0       0       0       0       0       0       0
  4343 ;;Total ram usage:        1 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 4
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_LIN_startTimer
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353     060D                     _TMR0_WriteTimer:	
  4354                           ;psect for function _TMR0_WriteTimer
  4355                           
  4356                           
  4357                           ;incstack = 0
  4358                           ; Regs used in _TMR0_WriteTimer: [wreg]
  4359                           ;TMR0_WriteTimer@timerVal stored from wreg
  4360     060D  00F0               	movwf	TMR0_WriteTimer@timerVal
  4361     060E                     l1917:
  4362                           
  4363                           ;mcc_generated_files/tmr0.c: 96: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_fi
      +                          les/tmr0.c: 97: {;mcc_generated_files/tmr0.c: 99:     TMR0 = timerVal;
  4364     060E  0870               	movf	TMR0_WriteTimer@timerVal,w
  4365     060F  0020               	movlb	0	; select bank0
  4366     0610  0095               	movwf	21	;volatile
  4367     0611                     l432:
  4368     0611  0008               	return
  4369     0612                     __end_of_TMR0_WriteTimer:
  4370                           
  4371                           	psect	text23
  4372     0212                     __ptext23:	
  4373 ;; *************** function _LIN_queuePacket *****************
  4374 ;; Defined at:
  4375 ;;		line 67 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  cmd             1    wreg     unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  cmd             1    1[BANK0 ] unsigned char 
  4380 ;;  i               1    2[BANK0 ] unsigned char 
  4381 ;;  tempSchedule    2    3[BANK0 ] PTR const struct .
  4382 ;;		 -> NULL(0), scheduleTable(5), 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4392 ;;      Params:         0       0       0       0       0       0       0       0
  4393 ;;      Locals:         0       4       0       0       0       0       0       0
  4394 ;;      Temps:          0       1       0       0       0       0       0       0
  4395 ;;      Totals:         0       5       0       0       0       0       0       0
  4396 ;;Total ram usage:        5 bytes
  4397 ;; Hardware stack levels used: 1
  4398 ;; Hardware stack levels required when called: 6
  4399 ;; This function calls:
  4400 ;;		_LIN_getChecksum
  4401 ;;		_LIN_sendPacket
  4402 ;;		_memcpy
  4403 ;; This function is called by:
  4404 ;;		_LIN_handler
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408     0212                     _LIN_queuePacket:	
  4409                           ;psect for function _LIN_queuePacket
  4410                           
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4414                           ;LIN_queuePacket@cmd stored from wreg
  4415     0212  0020               	movlb	0	; select bank0
  4416     0213  00E4               	movwf	LIN_queuePacket@cmd
  4417     0214                     l2295:
  4418                           
  4419                           ;mcc_generated_files/LINDrivers/lin_slave.c: 68:   const lin_rx_cmd_t *tempSchedule =
  4420     0214  0845               	movf	_LIN_rxCommand+1,w
  4421     0215  00E7               	movwf	LIN_queuePacket@tempSchedule+1
  4422     0216  0844               	movf	_LIN_rxCommand,w
  4423     0217  00E6               	movwf	LIN_queuePacket@tempSchedule
  4424     0218                     l2297:
  4425                           
  4426                           ;mcc_generated_files/LINDrivers/lin_slave.c: 71:   cmd &= 0x3F;
  4427     0218  303F               	movlw	63
  4428     0219  05E4               	andwf	LIN_queuePacket@cmd,f
  4429     021A                     l2299:
  4430                           
  4431                           ;mcc_generated_files/LINDrivers/lin_slave.c: 72:   for (uint8_t i = 0; i < LIN_rxCommand
      +                          Length; i++) {
  4432     021A  01E5               	clrf	LIN_queuePacket@i
  4433     021B  2A2D               	goto	l2309
  4434     021C                     l2301:
  4435                           
  4436                           ;mcc_generated_files/LINDrivers/lin_slave.c: 73:     if (cmd == tempSchedule->cmd) {
  4437     021C  0866               	movf	LIN_queuePacket@tempSchedule,w
  4438     021D  0084               	movwf	4
  4439     021E  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4440     021F  0085               	movwf	5
  4441     0220  0800               	movf	0,w	;code access
  4442     0221  0664               	xorwf	LIN_queuePacket@cmd,w
  4443     0222  1D03               	skipz
  4444     0223  2A25               	goto	u1741
  4445     0224  2A26               	goto	u1740
  4446     0225                     u1741:
  4447     0225  2A27               	goto	l2305
  4448     0226                     u1740:
  4449     0226  2A33               	goto	l2311
  4450     0227                     l2305:
  4451                           
  4452                           ;mcc_generated_files/LINDrivers/lin_slave.c: 76:     tempSchedule++;
  4453     0227  3005               	movlw	5
  4454     0228  07E6               	addwf	LIN_queuePacket@tempSchedule,f
  4455     0229  3000               	movlw	0
  4456     022A  3DE7               	addwfc	LIN_queuePacket@tempSchedule+1,f
  4457     022B                     l2307:
  4458                           
  4459                           ;mcc_generated_files/LINDrivers/lin_slave.c: 77:   }
  4460     022B  3001               	movlw	1
  4461     022C  07E5               	addwf	LIN_queuePacket@i,f
  4462     022D                     l2309:
  4463     022D  0854               	movf	_LIN_rxCommandLength,w
  4464     022E  0265               	subwf	LIN_queuePacket@i,w
  4465     022F  1C03               	skipc
  4466     0230  2A32               	goto	u1751
  4467     0231  2A33               	goto	u1750
  4468     0232                     u1751:
  4469     0232  2A1C               	goto	l2301
  4470     0233                     u1750:
  4471     0233                     l2311:
  4472                           
  4473                           ;mcc_generated_files/LINDrivers/lin_slave.c: 79:   LIN_packet.type = tempSchedule->type;
  4474     0233  3001               	movlw	1
  4475     0234  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4476     0235  0084               	movwf	4
  4477     0236  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4478     0237  1803               	skipnc
  4479     0238  3E01               	addlw	1
  4480     0239  0085               	movwf	5
  4481     023A  0800               	movf	0,w	;code access
  4482     023B  00E0               	movwf	_LIN_packet+10
  4483                           
  4484                           ;mcc_generated_files/LINDrivers/lin_slave.c: 80:   LIN_packet.length = tempSchedule->len
      +                          gth;
  4485     023C  3002               	movlw	2
  4486     023D  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4487     023E  0084               	movwf	4
  4488     023F  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4489     0240  1803               	skipnc
  4490     0241  3E01               	addlw	1
  4491     0242  0085               	movwf	5
  4492     0243  0800               	movf	0,w	;code access
  4493     0244  00E1               	movwf	_LIN_packet+11
  4494     0245                     l2313:
  4495                           
  4496                           ;mcc_generated_files/LINDrivers/lin_slave.c: 84:   memcpy(LIN_packet.data, tempSchedule-
      +                          >data, LIN_packet.length);
  4497     0245  3057               	movlw	low (_LIN_packet+1)
  4498     0246  00F0               	movwf	memcpy@d1
  4499     0247  3000               	movlw	high (_LIN_packet+1)
  4500     0248  00F1               	movwf	memcpy@d1+1
  4501     0249  3003               	movlw	3
  4502     024A  0766               	addwf	LIN_queuePacket@tempSchedule,w
  4503     024B  0084               	movwf	4
  4504     024C  0867               	movf	LIN_queuePacket@tempSchedule+1,w
  4505     024D  1803               	skipnc
  4506     024E  3E01               	addlw	1
  4507     024F  0085               	movwf	5
  4508     0250  3F00               	moviw [0]fsr0
  4509     0251  00F2               	movwf	memcpy@s1
  4510     0252  3F01               	moviw [1]fsr0
  4511     0253  00F3               	movwf	memcpy@s1+1
  4512     0254  0861               	movf	_LIN_packet+11,w
  4513     0255  00F4               	movwf	memcpy@n
  4514     0256  01F5               	clrf	memcpy@n+1
  4515     0257  1BF4               	btfsc	memcpy@n,7
  4516     0258  03F5               	decf	memcpy@n+1,f
  4517     0259  3184  2489  3182   	fcall	_memcpy
  4518     025C                     l2315:
  4519                           
  4520                           ;mcc_generated_files/LINDrivers/lin_slave.c: 87:   LIN_packet.checksum =
  4521     025C  0020               	movlb	0	; select bank0
  4522     025D  0856               	movf	_LIN_packet,w
  4523     025E  00F0               	movwf	LIN_getChecksum@pid
  4524     025F  3057               	movlw	low (_LIN_packet+1)
  4525     0260  00F1               	movwf	LIN_getChecksum@data
  4526     0261  3000               	movlw	high (_LIN_packet+1)
  4527     0262  00F2               	movwf	LIN_getChecksum@data+1
  4528     0263  0861               	movf	_LIN_packet+11,w
  4529     0264  3183  2394  3182   	fcall	_LIN_getChecksum
  4530     0267  0020               	movlb	0	; select bank0
  4531     0268  00DF               	movwf	_LIN_packet+9
  4532     0269                     l2317:
  4533                           
  4534                           ;mcc_generated_files/LINDrivers/lin_slave.c: 89:   LIN_sendPacket(LIN_packet.length, LIN
      +                          _packet.PID, LIN_packet.data);
  4535     0269  0856               	movf	_LIN_packet,w
  4536     026A  00F9               	movwf	LIN_sendPacket@pid
  4537     026B  3057               	movlw	low (_LIN_packet+1)
  4538     026C  00FA               	movwf	LIN_sendPacket@data
  4539     026D  3000               	movlw	high (_LIN_packet+1)
  4540     026E  00FB               	movwf	LIN_sendPacket@data+1
  4541     026F  0861               	movf	_LIN_packet+11,w
  4542     0270  3184  2466  3182   	fcall	_LIN_sendPacket
  4543     0273                     l130:
  4544     0273  0008               	return
  4545     0274                     __end_of_LIN_queuePacket:
  4546                           
  4547                           	psect	text24
  4548     0489                     __ptext24:	
  4549 ;; *************** function _memcpy *****************
  4550 ;; Defined at:
  4551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  d1              2    0[COMMON] PTR void 
  4554 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4555 ;;  s1              2    2[COMMON] PTR const void 
  4556 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4557 ;;  n               2    4[COMMON] unsigned int 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  s               1    8[COMMON] PTR const unsigned char 
  4560 ;;		 -> LIN_packet$data(8), LIN_packet(13), SW_STATE_Data(8), 
  4561 ;;  d               1    7[COMMON] PTR unsigned char 
  4562 ;;		 -> LIN_packet(13), processLIN@tempRxData(8), 
  4563 ;;  tmp             1    6[COMMON] unsigned char 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  2    0[COMMON] PTR void 
  4566 ;; Registers used:
  4567 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4573 ;;      Params:         6       0       0       0       0       0       0       0
  4574 ;;      Locals:         3       0       0       0       0       0       0       0
  4575 ;;      Temps:          0       0       0       0       0       0       0       0
  4576 ;;      Totals:         9       0       0       0       0       0       0       0
  4577 ;;Total ram usage:        9 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 4
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_LIN_queuePacket
  4584 ;;		_LIN_getPacket
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588     0489                     _memcpy:	
  4589                           ;psect for function _memcpy
  4590                           
  4591     0489                     l1755:	
  4592                           ;incstack = 0
  4593                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  4594                           
  4595     0489  0872               	movf	memcpy@s1,w
  4596     048A  00F8               	movwf	memcpy@s
  4597     048B  0870               	movf	memcpy@d1,w
  4598     048C  00F7               	movwf	memcpy@d
  4599     048D  2C9C               	goto	l1158
  4600     048E                     l1757:
  4601     048E  0878               	movf	memcpy@s,w
  4602     048F  0086               	movwf	6
  4603     0490  0187               	clrf	7
  4604     0491  0801               	movf	1,w
  4605     0492  00F6               	movwf	memcpy@tmp
  4606     0493                     l1759:
  4607     0493  3001               	movlw	1
  4608     0494  07F8               	addwf	memcpy@s,f
  4609     0495                     l1761:
  4610     0495  0877               	movf	memcpy@d,w
  4611     0496  0086               	movwf	6
  4612     0497  0187               	clrf	7
  4613     0498  0876               	movf	memcpy@tmp,w
  4614     0499  0081               	movwf	1
  4615     049A  3001               	movlw	1
  4616     049B  07F7               	addwf	memcpy@d,f
  4617     049C                     l1158:
  4618     049C  3001               	movlw	1
  4619     049D  02F4               	subwf	memcpy@n,f
  4620     049E  3000               	movlw	0
  4621     049F  3BF5               	subwfb	memcpy@n+1,f
  4622     04A0  0A74               	incf	memcpy@n,w
  4623     04A1  1D03               	skipz
  4624     04A2  2CA7               	goto	u901
  4625     04A3  0A75               	incf	memcpy@n+1,w
  4626     04A4  1D03               	btfss	3,2
  4627     04A5  2CA7               	goto	u901
  4628     04A6  2CA8               	goto	u900
  4629     04A7                     u901:
  4630     04A7  2C8E               	goto	l1757
  4631     04A8                     u900:
  4632     04A8                     l1161:
  4633     04A8  0008               	return
  4634     04A9                     __end_of_memcpy:
  4635                           
  4636                           	psect	text25
  4637     0466                     __ptext25:	
  4638 ;; *************** function _LIN_sendPacket *****************
  4639 ;; Defined at:
  4640 ;;		line 193 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  length          1    wreg     unsigned char 
  4643 ;;  pid             1    9[COMMON] unsigned char 
  4644 ;;  data            2   10[COMMON] PTR unsigned char 
  4645 ;;		 -> LIN_packet(13), 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  length          1   12[COMMON] unsigned char 
  4648 ;;  i               1   13[COMMON] unsigned char 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4658 ;;      Params:         3       0       0       0       0       0       0       0
  4659 ;;      Locals:         2       0       0       0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0
  4661 ;;      Totals:         5       0       0       0       0       0       0       0
  4662 ;;Total ram usage:        5 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 5
  4665 ;; This function calls:
  4666 ;;		_EUSART_Write
  4667 ;;		_LIN_getChecksum
  4668 ;; This function is called by:
  4669 ;;		_LIN_queuePacket
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673     0466                     _LIN_sendPacket:	
  4674                           ;psect for function _LIN_sendPacket
  4675                           
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4679                           ;LIN_sendPacket@length stored from wreg
  4680     0466  00FC               	movwf	LIN_sendPacket@length
  4681     0467                     l1829:
  4682                           
  4683                           ;mcc_generated_files/LINDrivers/lin_slave.c: 196:   for (uint8_t i = 0; i < length; i++)
      +                           {
  4684     0467  01FD               	clrf	LIN_sendPacket@i
  4685     0468  2C75               	goto	l1835
  4686     0469                     l1831:
  4687                           
  4688                           ;mcc_generated_files/LINDrivers/lin_slave.c: 197:     EUSART_Write(*(data + i));
  4689     0469  087D               	movf	LIN_sendPacket@i,w
  4690     046A  077A               	addwf	LIN_sendPacket@data,w
  4691     046B  0086               	movwf	6
  4692     046C  3000               	movlw	0
  4693     046D  3D7B               	addwfc	LIN_sendPacket@data+1,w
  4694     046E  0087               	movwf	7
  4695     046F  0801               	movf	1,w
  4696     0470  3184  241C  3184   	fcall	_EUSART_Write
  4697     0473                     l1833:
  4698                           
  4699                           ;mcc_generated_files/LINDrivers/lin_slave.c: 198:   }
  4700     0473  3001               	movlw	1
  4701     0474  07FD               	addwf	LIN_sendPacket@i,f
  4702     0475                     l1835:
  4703     0475  087C               	movf	LIN_sendPacket@length,w
  4704     0476  027D               	subwf	LIN_sendPacket@i,w
  4705     0477  1C03               	skipc
  4706     0478  2C7A               	goto	u981
  4707     0479  2C7B               	goto	u980
  4708     047A                     u981:
  4709     047A  2C69               	goto	l1831
  4710     047B                     u980:
  4711     047B                     l1837:
  4712                           
  4713                           ;mcc_generated_files/LINDrivers/lin_slave.c: 200:   EUSART_Write(LIN_getChecksum(length,
      +                           pid, data));
  4714     047B  0879               	movf	LIN_sendPacket@pid,w
  4715     047C  00F0               	movwf	LIN_getChecksum@pid
  4716     047D  087B               	movf	LIN_sendPacket@data+1,w
  4717     047E  00F2               	movwf	LIN_getChecksum@data+1
  4718     047F  087A               	movf	LIN_sendPacket@data,w
  4719     0480  00F1               	movwf	LIN_getChecksum@data
  4720     0481  087C               	movf	LIN_sendPacket@length,w
  4721     0482  3183  2394  3184   	fcall	_LIN_getChecksum
  4722     0485  3184  241C  3184   	fcall	_EUSART_Write
  4723     0488                     l175:
  4724     0488  0008               	return
  4725     0489                     __end_of_LIN_sendPacket:
  4726                           
  4727                           	psect	text26
  4728     0394                     __ptext26:	
  4729 ;; *************** function _LIN_getChecksum *****************
  4730 ;; Defined at:
  4731 ;;		line 277 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  length          1    wreg     unsigned char 
  4734 ;;  pid             1    0[COMMON] unsigned char 
  4735 ;;  data            2    1[COMMON] PTR unsigned char 
  4736 ;;		 -> LIN_packet(13), 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  length          1    5[COMMON] unsigned char 
  4739 ;;  i               1    6[COMMON] unsigned char 
  4740 ;;  checksum        2    7[COMMON] unsigned short 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      unsigned char 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4750 ;;      Params:         3       0       0       0       0       0       0       0
  4751 ;;      Locals:         4       0       0       0       0       0       0       0
  4752 ;;      Temps:          2       0       0       0       0       0       0       0
  4753 ;;      Totals:         9       0       0       0       0       0       0       0
  4754 ;;Total ram usage:        9 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 4
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_LIN_queuePacket
  4761 ;;		_LIN_handler
  4762 ;;		_LIN_sendPacket
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766     0394                     _LIN_getChecksum:	
  4767                           ;psect for function _LIN_getChecksum
  4768                           
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4772                           ;LIN_getChecksum@length stored from wreg
  4773     0394  00F5               	movwf	LIN_getChecksum@length
  4774     0395                     l1763:
  4775                           
  4776                           ;mcc_generated_files/LINDrivers/lin_slave.c: 278:   uint16_t checksum = pid;
  4777     0395  0870               	movf	LIN_getChecksum@pid,w
  4778     0396  00F3               	movwf	??_LIN_getChecksum
  4779     0397  01F4               	clrf	??_LIN_getChecksum+1
  4780     0398  0873               	movf	??_LIN_getChecksum,w
  4781     0399  00F7               	movwf	LIN_getChecksum@checksum
  4782     039A  0874               	movf	??_LIN_getChecksum+1,w
  4783     039B  00F8               	movwf	LIN_getChecksum@checksum+1
  4784     039C                     l1765:
  4785                           
  4786                           ;mcc_generated_files/LINDrivers/lin_slave.c: 280:   for (uint8_t i = 0; i < length; i++)
      +                           {
  4787     039C  01F6               	clrf	LIN_getChecksum@i
  4788     039D  2BBC               	goto	l1777
  4789     039E                     l1767:
  4790                           
  4791                           ;mcc_generated_files/LINDrivers/lin_slave.c: 281:     checksum = checksum + *data++;
  4792     039E  0871               	movf	LIN_getChecksum@data,w
  4793     039F  0086               	movwf	6
  4794     03A0  0872               	movf	LIN_getChecksum@data+1,w
  4795     03A1  0087               	movwf	7
  4796     03A2  0801               	movf	1,w
  4797     03A3  0777               	addwf	LIN_getChecksum@checksum,w
  4798     03A4  00F7               	movwf	LIN_getChecksum@checksum
  4799     03A5  0878               	movf	LIN_getChecksum@checksum+1,w
  4800     03A6  1803               	skipnc
  4801     03A7  0A78               	incf	LIN_getChecksum@checksum+1,w
  4802     03A8  00F8               	movwf	LIN_getChecksum@checksum+1
  4803     03A9                     l1769:
  4804     03A9  3001               	movlw	1
  4805     03AA  07F1               	addwf	LIN_getChecksum@data,f
  4806     03AB  3000               	movlw	0
  4807     03AC  3DF2               	addwfc	LIN_getChecksum@data+1,f
  4808     03AD                     l1771:
  4809                           
  4810                           ;mcc_generated_files/LINDrivers/lin_slave.c: 282:     if (checksum > 0xFF)
  4811     03AD  3001               	movlw	1
  4812     03AE  0278               	subwf	LIN_getChecksum@checksum+1,w
  4813     03AF  3000               	movlw	0
  4814     03B0  1903               	skipnz
  4815     03B1  0277               	subwf	LIN_getChecksum@checksum,w
  4816     03B2  1C03               	skipc
  4817     03B3  2BB5               	goto	u911
  4818     03B4  2BB6               	goto	u910
  4819     03B5                     u911:
  4820     03B5  2BBA               	goto	l1775
  4821     03B6                     u910:
  4822     03B6                     l1773:
  4823                           
  4824                           ;mcc_generated_files/LINDrivers/lin_slave.c: 283:       checksum -= 0xFF;
  4825     03B6  30FF               	movlw	255
  4826     03B7  02F7               	subwf	LIN_getChecksum@checksum,f
  4827     03B8  3000               	movlw	0
  4828     03B9  3BF8               	subwfb	LIN_getChecksum@checksum+1,f
  4829     03BA                     l1775:
  4830                           
  4831                           ;mcc_generated_files/LINDrivers/lin_slave.c: 284:   }
  4832     03BA  3001               	movlw	1
  4833     03BB  07F6               	addwf	LIN_getChecksum@i,f
  4834     03BC                     l1777:
  4835     03BC  0875               	movf	LIN_getChecksum@length,w
  4836     03BD  0276               	subwf	LIN_getChecksum@i,w
  4837     03BE  1C03               	skipc
  4838     03BF  2BC1               	goto	u921
  4839     03C0  2BC2               	goto	u920
  4840     03C1                     u921:
  4841     03C1  2B9E               	goto	l1767
  4842     03C2                     u920:
  4843     03C2                     l207:
  4844                           
  4845                           ;mcc_generated_files/LINDrivers/lin_slave.c: 285:   checksum = ~checksum;
  4846     03C2  09F7               	comf	LIN_getChecksum@checksum,f
  4847     03C3  09F8               	comf	LIN_getChecksum@checksum+1,f
  4848     03C4                     l1779:
  4849                           
  4850                           ;mcc_generated_files/LINDrivers/lin_slave.c: 287:   return (uint8_t)checksum;
  4851     03C4  0877               	movf	LIN_getChecksum@checksum,w
  4852     03C5                     l208:
  4853     03C5  0008               	return
  4854     03C6                     __end_of_LIN_getChecksum:
  4855                           
  4856                           	psect	text27
  4857     041C                     __ptext27:	
  4858 ;; *************** function _EUSART_Write *****************
  4859 ;; Defined at:
  4860 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  txData          1    wreg     unsigned char 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  txData          1    0[COMMON] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4874 ;;      Params:         0       0       0       0       0       0       0       0
  4875 ;;      Locals:         1       0       0       0       0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0
  4877 ;;      Totals:         1       0       0       0       0       0       0       0
  4878 ;;Total ram usage:        1 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 4
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_LIN_sendPacket
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888     041C                     _EUSART_Write:	
  4889                           ;psect for function _EUSART_Write
  4890                           
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4894                           ;EUSART_Write@txData stored from wreg
  4895     041C  00F0               	movwf	EUSART_Write@txData
  4896     041D                     l1791:
  4897     041D                     l1793:	
  4898                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4899                           
  4900                           
  4901                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4902     041D  0020               	movlb	0	; select bank0
  4903     041E  084D               	movf	_eusartTxBufferRemaining,w	;volatile
  4904     041F  1903               	btfsc	3,2
  4905     0420  2C22               	goto	u941
  4906     0421  2C23               	goto	u940
  4907     0422                     u941:
  4908     0422  2C1D               	goto	l1793
  4909     0423                     u940:
  4910     0423                     l364:
  4911                           
  4912                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4913     0423  0021               	movlb	1	; select bank1
  4914     0424  1A11               	btfsc	17,4	;volatile
  4915     0425  2C27               	goto	u951
  4916     0426  2C28               	goto	u950
  4917     0427                     u951:
  4918     0427  2C2C               	goto	l365
  4919     0428                     u950:
  4920     0428                     l1795:
  4921                           
  4922                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4923     0428  0870               	movf	EUSART_Write@txData,w
  4924     0429  0023               	movlb	3	; select bank3
  4925     042A  009A               	movwf	26	;volatile
  4926                           
  4927                           ;mcc_generated_files/eusart.c: 182:     }
  4928     042B  2C3F               	goto	l1807
  4929     042C                     l365:	
  4930                           ;mcc_generated_files/eusart.c: 183:     else
  4931                           
  4932                           
  4933                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4934     042C  1211               	bcf	17,4	;volatile
  4935     042D                     l1797:
  4936                           
  4937                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4938     042D  0020               	movlb	0	; select bank0
  4939     042E  084F               	movf	_eusartTxHead,w
  4940     042F  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4941     0430  0086               	movwf	6
  4942     0431  0187               	clrf	7
  4943     0432  0870               	movf	EUSART_Write@txData,w
  4944     0433  0081               	movwf	1
  4945     0434                     l1799:
  4946     0434  3001               	movlw	1
  4947     0435  07CF               	addwf	_eusartTxHead,f	;volatile
  4948     0436                     l1801:
  4949                           
  4950                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4951     0436  3008               	movlw	8
  4952     0437  024F               	subwf	_eusartTxHead,w	;volatile
  4953     0438  1C03               	skipc
  4954     0439  2C3B               	goto	u961
  4955     043A  2C3C               	goto	u960
  4956     043B                     u961:
  4957     043B  2C3D               	goto	l1805
  4958     043C                     u960:
  4959     043C                     l1803:
  4960                           
  4961                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4962     043C  01CF               	clrf	_eusartTxHead	;volatile
  4963     043D                     l1805:
  4964                           
  4965                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4966     043D  3001               	movlw	1
  4967     043E  02CD               	subwf	_eusartTxBufferRemaining,f	;volatile
  4968     043F                     l1807:
  4969                           
  4970                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4971     043F  0021               	movlb	1	; select bank1
  4972     0440  1611               	bsf	17,4	;volatile
  4973     0441                     l368:
  4974     0441  0008               	return
  4975     0442                     __end_of_EUSART_Write:
  4976                           
  4977                           	psect	text28
  4978     0612                     __ptext28:	
  4979 ;; *************** function _LIN_enableRx *****************
  4980 ;; Defined at:
  4981 ;;		line 315 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		None
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4995 ;;      Params:         0       0       0       0       0       0       0       0
  4996 ;;      Locals:         0       0       0       0       0       0       0       0
  4997 ;;      Temps:          0       0       0       0       0       0       0       0
  4998 ;;      Totals:         0       0       0       0       0       0       0       0
  4999 ;;Total ram usage:        0 bytes
  5000 ;; Hardware stack levels used: 1
  5001 ;; Hardware stack levels required when called: 4
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_LIN_init
  5006 ;;		_LIN_handler
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010     0612                     _LIN_enableRx:	
  5011                           ;psect for function _LIN_enableRx
  5012                           
  5013     0612                     l1751:	
  5014                           ;incstack = 0
  5015                           ; Regs used in _LIN_enableRx: []
  5016                           
  5017                           
  5018                           ;mcc_generated_files/LINDrivers/lin_slave.c: 316:   RCSTAbits.CREN = 1;
  5019     0612  0023               	movlb	3	; select bank3
  5020     0613  161D               	bsf	29,4	;volatile
  5021                           
  5022                           ;mcc_generated_files/LINDrivers/lin_slave.c: 317:   PIE1bits.RCIE = 1;
  5023     0614  0021               	movlb	1	; select bank1
  5024     0615  1691               	bsf	17,5	;volatile
  5025     0616                     l224:
  5026     0616  0008               	return
  5027     0617                     __end_of_LIN_enableRx:
  5028                           
  5029                           	psect	text29
  5030     0617                     __ptext29:	
  5031 ;; *************** function _LIN_disableRx *****************
  5032 ;; Defined at:
  5033 ;;		line 320 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;		None
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;		None
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  1    wreg      void 
  5040 ;; Registers used:
  5041 ;;		None
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5047 ;;      Params:         0       0       0       0       0       0       0       0
  5048 ;;      Locals:         0       0       0       0       0       0       0       0
  5049 ;;      Temps:          0       0       0       0       0       0       0       0
  5050 ;;      Totals:         0       0       0       0       0       0       0       0
  5051 ;;Total ram usage:        0 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; Hardware stack levels required when called: 4
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_LIN_handler
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061     0617                     _LIN_disableRx:	
  5062                           ;psect for function _LIN_disableRx
  5063                           
  5064     0617                     l2019:	
  5065                           ;incstack = 0
  5066                           ; Regs used in _LIN_disableRx: []
  5067                           
  5068                           
  5069                           ;mcc_generated_files/LINDrivers/lin_slave.c: 321:   RCSTAbits.CREN = 0;
  5070     0617  0023               	movlb	3	; select bank3
  5071     0618  121D               	bcf	29,4	;volatile
  5072                           
  5073                           ;mcc_generated_files/LINDrivers/lin_slave.c: 322:   PIE1bits.RCIE = 0;
  5074     0619  0021               	movlb	1	; select bank1
  5075     061A  1291               	bcf	17,5	;volatile
  5076     061B                     l227:
  5077     061B  0008               	return
  5078     061C                     __end_of_LIN_disableRx:
  5079                           
  5080                           	psect	text30
  5081     04E1                     __ptext30:	
  5082 ;; *************** function _LIN_checkPID *****************
  5083 ;; Defined at:
  5084 ;;		line 249 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  pid             1    wreg     unsigned char 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;  pid             1    7[COMMON] unsigned char 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      _Bool 
  5091 ;; Registers used:
  5092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5098 ;;      Params:         0       0       0       0       0       0       0       0
  5099 ;;      Locals:         1       0       0       0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0
  5101 ;;      Totals:         1       0       0       0       0       0       0       0
  5102 ;;Total ram usage:        1 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; Hardware stack levels required when called: 5
  5105 ;; This function calls:
  5106 ;;		_LIN_calcParity
  5107 ;;		_LIN_getFromTable
  5108 ;; This function is called by:
  5109 ;;		_LIN_handler
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113     04E1                     _LIN_checkPID:	
  5114                           ;psect for function _LIN_checkPID
  5115                           
  5116                           
  5117                           ;incstack = 0
  5118                           ; Regs used in _LIN_checkPID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5119                           ;LIN_checkPID@pid stored from wreg
  5120     04E1  00F7               	movwf	LIN_checkPID@pid
  5121     04E2                     l2003:
  5122                           
  5123                           ;mcc_generated_files/LINDrivers/lin_slave.c: 250:   if (LIN_getFromTable(pid, TYPE) == E
      +                          RROR)
  5124     04E2  01F0               	clrf	LIN_getFromTable@param
  5125     04E3  0AF0               	incf	LIN_getFromTable@param,f
  5126     04E4  0877               	movf	LIN_checkPID@pid,w
  5127     04E5  3182  2274  3184   	fcall	_LIN_getFromTable
  5128     04E8  3A02               	xorlw	2
  5129     04E9  1D03               	skipz
  5130     04EA  2CEC               	goto	u1431
  5131     04EB  2CED               	goto	u1430
  5132     04EC                     u1431:
  5133     04EC  2CEF               	goto	l2009
  5134     04ED                     u1430:
  5135     04ED                     l2005:
  5136                           
  5137                           ;mcc_generated_files/LINDrivers/lin_slave.c: 251:     return 0;
  5138     04ED  3000               	movlw	0
  5139     04EE  2CFA               	goto	l197
  5140     04EF                     l2009:
  5141                           
  5142                           ;mcc_generated_files/LINDrivers/lin_slave.c: 253:   if (pid == LIN_calcParity(pid & 0x3F
      +                          ))
  5143     04EF  0877               	movf	LIN_checkPID@pid,w
  5144     04F0  393F               	andlw	63
  5145     04F1  3181  218C  3184   	fcall	_LIN_calcParity
  5146     04F4  0677               	xorwf	LIN_checkPID@pid,w
  5147     04F5  1D03               	skipz
  5148     04F6  2CF8               	goto	u1441
  5149     04F7  2CF9               	goto	u1440
  5150     04F8                     u1441:
  5151     04F8  2CED               	goto	l2005
  5152     04F9                     u1440:
  5153     04F9                     l2011:
  5154                           
  5155                           ;mcc_generated_files/LINDrivers/lin_slave.c: 254:     return 1;
  5156     04F9  3001               	movlw	1
  5157     04FA                     l197:
  5158     04FA  0008               	return
  5159     04FB                     __end_of_LIN_checkPID:
  5160                           
  5161                           	psect	text31
  5162     0274                     __ptext31:	
  5163 ;; *************** function _LIN_getFromTable *****************
  5164 ;; Defined at:
  5165 ;;		line 218 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  cmd             1    wreg     unsigned char 
  5168 ;;  param           1    0[COMMON] enum E221
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  cmd             1    3[COMMON] unsigned char 
  5171 ;;  length          1    4[COMMON] unsigned char 
  5172 ;;  rxCommand       2    5[COMMON] PTR const struct .
  5173 ;;		 -> NULL(0), scheduleTable(5), 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      unsigned char 
  5176 ;; Registers used:
  5177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5183 ;;      Params:         1       0       0       0       0       0       0       0
  5184 ;;      Locals:         4       0       0       0       0       0       0       0
  5185 ;;      Temps:          2       0       0       0       0       0       0       0
  5186 ;;      Totals:         7       0       0       0       0       0       0       0
  5187 ;;Total ram usage:        7 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 4
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_LIN_handler
  5194 ;;		_LIN_checkPID
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198     0274                     _LIN_getFromTable:	
  5199                           ;psect for function _LIN_getFromTable
  5200                           
  5201                           
  5202                           ;incstack = 0
  5203                           ; Regs used in _LIN_getFromTable: [wreg-fsr0h+status,2+status,0+pclath]
  5204                           ;LIN_getFromTable@cmd stored from wreg
  5205     0274  00F3               	movwf	LIN_getFromTable@cmd
  5206     0275                     l1861:
  5207                           
  5208                           ;mcc_generated_files/LINDrivers/lin_slave.c: 219:   const lin_rx_cmd_t *rxCommand =
  5209     0275  0020               	movlb	0	; select bank0
  5210     0276  0845               	movf	_LIN_rxCommand+1,w
  5211     0277  00F6               	movwf	LIN_getFromTable@rxCommand+1
  5212     0278  0844               	movf	_LIN_rxCommand,w
  5213     0279  00F5               	movwf	LIN_getFromTable@rxCommand
  5214     027A                     l1863:
  5215                           
  5216                           ;mcc_generated_files/LINDrivers/lin_slave.c: 222:   cmd &= 0x3F;
  5217     027A  303F               	movlw	63
  5218     027B  05F3               	andwf	LIN_getFromTable@cmd,f
  5219     027C                     l1865:
  5220                           
  5221                           ;mcc_generated_files/LINDrivers/lin_slave.c: 224:   for (uint8_t length = 0; length < LI
      +                          N_rxCommandLength; length++) {
  5222     027C  01F4               	clrf	LIN_getFromTable@length
  5223     027D  2A9F               	goto	l1879
  5224     027E                     l1867:
  5225                           
  5226                           ;mcc_generated_files/LINDrivers/lin_slave.c: 225:     if (cmd == rxCommand->cmd) {
  5227     027E  0875               	movf	LIN_getFromTable@rxCommand,w
  5228     027F  0084               	movwf	4
  5229     0280  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5230     0281  0085               	movwf	5
  5231     0282  0800               	movf	0,w	;code access
  5232     0283  0673               	xorwf	LIN_getFromTable@cmd,w
  5233     0284  1D03               	skipz
  5234     0285  2A87               	goto	u1011
  5235     0286  2A88               	goto	u1010
  5236     0287                     u1011:
  5237     0287  2A89               	goto	l1871
  5238     0288                     u1010:
  5239     0288  2ABE               	goto	l1895
  5240     0289                     l1871:
  5241                           
  5242                           ;mcc_generated_files/LINDrivers/lin_slave.c: 228:     rxCommand++;
  5243     0289  3005               	movlw	5
  5244     028A  07F5               	addwf	LIN_getFromTable@rxCommand,f
  5245     028B  3000               	movlw	0
  5246     028C  3DF6               	addwfc	LIN_getFromTable@rxCommand+1,f
  5247                           
  5248                           ;mcc_generated_files/LINDrivers/lin_slave.c: 230:     if (length == (LIN_rxCommandLength
      +                           - 1)) {
  5249     028D  0854               	movf	_LIN_rxCommandLength,w
  5250     028E  3EFF               	addlw	255
  5251     028F  00F1               	movwf	??_LIN_getFromTable
  5252     0290  30FF               	movlw	255
  5253     0291  1803               	skipnc
  5254     0292  3000               	movlw	0
  5255     0293  00F2               	movwf	??_LIN_getFromTable+1
  5256     0294  0874               	movf	LIN_getFromTable@length,w
  5257     0295  0671               	xorwf	??_LIN_getFromTable,w
  5258     0296  0472               	iorwf	??_LIN_getFromTable+1,w
  5259     0297  1D03               	skipz
  5260     0298  2A9A               	goto	u1021
  5261     0299  2A9B               	goto	u1020
  5262     029A                     u1021:
  5263     029A  2A9D               	goto	l1877
  5264     029B                     u1020:
  5265     029B                     l1873:
  5266                           
  5267                           ;mcc_generated_files/LINDrivers/lin_slave.c: 231:       return ERROR;
  5268     029B  3002               	movlw	2
  5269     029C  2AD1               	goto	l187
  5270     029D                     l1877:
  5271                           
  5272                           ;mcc_generated_files/LINDrivers/lin_slave.c: 233:   }
  5273     029D  3001               	movlw	1
  5274     029E  07F4               	addwf	LIN_getFromTable@length,f
  5275     029F                     l1879:
  5276     029F  0854               	movf	_LIN_rxCommandLength,w
  5277     02A0  0274               	subwf	LIN_getFromTable@length,w
  5278     02A1  1C03               	skipc
  5279     02A2  2AA4               	goto	u1031
  5280     02A3  2AA5               	goto	u1030
  5281     02A4                     u1031:
  5282     02A4  2A7E               	goto	l1867
  5283     02A5                     u1030:
  5284     02A5  2ABE               	goto	l1895
  5285     02A6                     l1881:
  5286                           
  5287                           ;mcc_generated_files/LINDrivers/lin_slave.c: 237:     return rxCommand->cmd;
  5288     02A6  0875               	movf	LIN_getFromTable@rxCommand,w
  5289     02A7  0084               	movwf	4
  5290     02A8  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5291     02A9  0085               	movwf	5
  5292     02AA  0800               	movf	0,w	;code access
  5293     02AB  2AD1               	goto	l187
  5294     02AC                     l1885:
  5295                           
  5296                           ;mcc_generated_files/LINDrivers/lin_slave.c: 239:     return rxCommand->type;
  5297     02AC  3001               	movlw	1
  5298     02AD  0775               	addwf	LIN_getFromTable@rxCommand,w
  5299     02AE  0084               	movwf	4
  5300     02AF  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5301     02B0  1803               	skipnc
  5302     02B1  3E01               	addlw	1
  5303     02B2  0085               	movwf	5
  5304     02B3  0800               	movf	0,w	;code access
  5305     02B4  2AD1               	goto	l187
  5306     02B5                     l1889:
  5307                           
  5308                           ;mcc_generated_files/LINDrivers/lin_slave.c: 241:     return rxCommand->length;
  5309     02B5  3002               	movlw	2
  5310     02B6  0775               	addwf	LIN_getFromTable@rxCommand,w
  5311     02B7  0084               	movwf	4
  5312     02B8  0876               	movf	LIN_getFromTable@rxCommand+1,w
  5313     02B9  1803               	skipnc
  5314     02BA  3E01               	addlw	1
  5315     02BB  0085               	movwf	5
  5316     02BC  0800               	movf	0,w	;code access
  5317     02BD  2AD1               	goto	l187
  5318     02BE                     l1895:
  5319     02BE  0870               	movf	LIN_getFromTable@param,w
  5320     02BF  00F1               	movwf	??_LIN_getFromTable
  5321     02C0  01F2               	clrf	??_LIN_getFromTable+1
  5322                           
  5323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5324                           ; Switch size 1, requested type "simple"
  5325                           ; Number of cases is 1, Range of values is 0 to 0
  5326                           ; switch strategies available:
  5327                           ; Name         Instructions Cycles
  5328                           ; simple_byte            4     3 (average)
  5329                           ; direct_byte            8     6 (fixed)
  5330                           ; jumptable            260     6 (fixed)
  5331                           ;	Chosen strategy is simple_byte
  5332     02C1  0872               	movf	??_LIN_getFromTable+1,w
  5333     02C2  3A00               	xorlw	0	; case 0
  5334     02C3  1903               	skipnz
  5335     02C4  2AC6               	goto	l2489
  5336     02C5  2A9B               	goto	l1873
  5337     02C6                     l2489:
  5338                           
  5339                           ; Switch size 1, requested type "simple"
  5340                           ; Number of cases is 3, Range of values is 0 to 2
  5341                           ; switch strategies available:
  5342                           ; Name         Instructions Cycles
  5343                           ; simple_byte           10     6 (average)
  5344                           ; direct_byte           12     6 (fixed)
  5345                           ; jumptable            260     6 (fixed)
  5346                           ;	Chosen strategy is simple_byte
  5347     02C6  0871               	movf	??_LIN_getFromTable,w
  5348     02C7  3A00               	xorlw	0	; case 0
  5349     02C8  1903               	skipnz
  5350     02C9  2AA6               	goto	l1881
  5351     02CA  3A01               	xorlw	1	; case 1
  5352     02CB  1903               	skipnz
  5353     02CC  2AAC               	goto	l1885
  5354     02CD  3A03               	xorlw	3	; case 2
  5355     02CE  1903               	skipnz
  5356     02CF  2AB5               	goto	l1889
  5357     02D0  2A9B               	goto	l1873
  5358     02D1                     l187:
  5359     02D1  0008               	return
  5360     02D2                     __end_of_LIN_getFromTable:
  5361                           
  5362                           	psect	text32
  5363     018C                     __ptext32:	
  5364 ;; *************** function _LIN_calcParity *****************
  5365 ;; Defined at:
  5366 ;;		line 259 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  CMD             1    wreg     unsigned char 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  CMD             1    1[COMMON] unsigned char 
  5371 ;;  PID             1    2[COMMON] struct .
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      unsigned char 
  5374 ;; Registers used:
  5375 ;;		wreg, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5381 ;;      Params:         0       0       0       0       0       0       0       0
  5382 ;;      Locals:         2       0       0       0       0       0       0       0
  5383 ;;      Temps:          1       0       0       0       0       0       0       0
  5384 ;;      Totals:         3       0       0       0       0       0       0       0
  5385 ;;Total ram usage:        3 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; Hardware stack levels required when called: 4
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_LIN_checkPID
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395     018C                     _LIN_calcParity:	
  5396                           ;psect for function _LIN_calcParity
  5397                           
  5398                           
  5399                           ;incstack = 0
  5400                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  5401                           ;LIN_calcParity@CMD stored from wreg
  5402     018C  00F1               	movwf	LIN_calcParity@CMD
  5403     018D                     l1909:
  5404                           
  5405                           ;mcc_generated_files/LINDrivers/lin_slave.c: 260:   lin_pid_t PID;;mcc_generated_files/L
      +                          INDrivers/lin_slave.c: 261:   PID.rawPID = CMD;
  5406     018D  0871               	movf	LIN_calcParity@CMD,w
  5407     018E  00F2               	movwf	LIN_calcParity@PID
  5408                           
  5409                           ;mcc_generated_files/LINDrivers/lin_slave.c: 266:   PID.P0 = PID.ID0 ^ PID.ID1;
  5410     018F  18F2               	btfsc	LIN_calcParity@PID,1
  5411     0190  2992               	goto	u1041
  5412     0191  2994               	goto	u1040
  5413     0192                     u1041:
  5414     0192  3001               	movlw	1
  5415     0193  2995               	goto	u1042
  5416     0194                     u1040:
  5417     0194  3000               	movlw	0
  5418     0195                     u1042:
  5419     0195  00F0               	movwf	??_LIN_calcParity
  5420     0196  1872               	btfsc	LIN_calcParity@PID,0
  5421     0197  2999               	goto	u1051
  5422     0198  299B               	goto	u1050
  5423     0199                     u1051:
  5424     0199  3001               	movlw	1
  5425     019A  299C               	goto	u1052
  5426     019B                     u1050:
  5427     019B  3000               	movlw	0
  5428     019C                     u1052:
  5429     019C  0670               	xorwf	??_LIN_calcParity,w
  5430     019D  1D03               	skipz
  5431     019E  29A0               	goto	u1061
  5432     019F  29A2               	goto	u1060
  5433     01A0                     u1061:
  5434     01A0  1772               	bsf	LIN_calcParity@PID,6
  5435     01A1  29A3               	goto	u1074
  5436     01A2                     u1060:
  5437     01A2  1372               	bcf	LIN_calcParity@PID,6
  5438     01A3                     u1074:
  5439                           
  5440                           ;mcc_generated_files/LINDrivers/lin_slave.c: 267:   PID.P0 = PID.P0 ^ PID.ID2;
  5441     01A3  1972               	btfsc	LIN_calcParity@PID,2
  5442     01A4  29A6               	goto	u1081
  5443     01A5  29A8               	goto	u1080
  5444     01A6                     u1081:
  5445     01A6  3001               	movlw	1
  5446     01A7  29A9               	goto	u1082
  5447     01A8                     u1080:
  5448     01A8  3000               	movlw	0
  5449     01A9                     u1082:
  5450     01A9  00F0               	movwf	??_LIN_calcParity
  5451     01AA  1B72               	btfsc	LIN_calcParity@PID,6
  5452     01AB  29AD               	goto	u1091
  5453     01AC  29AF               	goto	u1090
  5454     01AD                     u1091:
  5455     01AD  3001               	movlw	1
  5456     01AE  29B0               	goto	u1092
  5457     01AF                     u1090:
  5458     01AF  3000               	movlw	0
  5459     01B0                     u1092:
  5460     01B0  0670               	xorwf	??_LIN_calcParity,w
  5461     01B1  1D03               	skipz
  5462     01B2  29B4               	goto	u1101
  5463     01B3  29B6               	goto	u1100
  5464     01B4                     u1101:
  5465     01B4  1772               	bsf	LIN_calcParity@PID,6
  5466     01B5  29B7               	goto	u1114
  5467     01B6                     u1100:
  5468     01B6  1372               	bcf	LIN_calcParity@PID,6
  5469     01B7                     u1114:
  5470                           
  5471                           ;mcc_generated_files/LINDrivers/lin_slave.c: 268:   PID.P0 = PID.P0 ^ PID.ID4;
  5472     01B7  1A72               	btfsc	LIN_calcParity@PID,4
  5473     01B8  29BA               	goto	u1121
  5474     01B9  29BC               	goto	u1120
  5475     01BA                     u1121:
  5476     01BA  3001               	movlw	1
  5477     01BB  29BD               	goto	u1122
  5478     01BC                     u1120:
  5479     01BC  3000               	movlw	0
  5480     01BD                     u1122:
  5481     01BD  00F0               	movwf	??_LIN_calcParity
  5482     01BE  1B72               	btfsc	LIN_calcParity@PID,6
  5483     01BF  29C1               	goto	u1131
  5484     01C0  29C3               	goto	u1130
  5485     01C1                     u1131:
  5486     01C1  3001               	movlw	1
  5487     01C2  29C4               	goto	u1132
  5488     01C3                     u1130:
  5489     01C3  3000               	movlw	0
  5490     01C4                     u1132:
  5491     01C4  0670               	xorwf	??_LIN_calcParity,w
  5492     01C5  1D03               	skipz
  5493     01C6  29C8               	goto	u1141
  5494     01C7  29CA               	goto	u1140
  5495     01C8                     u1141:
  5496     01C8  1772               	bsf	LIN_calcParity@PID,6
  5497     01C9  29CB               	goto	u1154
  5498     01CA                     u1140:
  5499     01CA  1372               	bcf	LIN_calcParity@PID,6
  5500     01CB                     u1154:
  5501                           
  5502                           ;mcc_generated_files/LINDrivers/lin_slave.c: 269:   PID.P1 = PID.ID1 ^ PID.ID3;
  5503     01CB  19F2               	btfsc	LIN_calcParity@PID,3
  5504     01CC  29CE               	goto	u1161
  5505     01CD  29D0               	goto	u1160
  5506     01CE                     u1161:
  5507     01CE  3001               	movlw	1
  5508     01CF  29D1               	goto	u1162
  5509     01D0                     u1160:
  5510     01D0  3000               	movlw	0
  5511     01D1                     u1162:
  5512     01D1  00F0               	movwf	??_LIN_calcParity
  5513     01D2  18F2               	btfsc	LIN_calcParity@PID,1
  5514     01D3  29D5               	goto	u1171
  5515     01D4  29D7               	goto	u1170
  5516     01D5                     u1171:
  5517     01D5  3001               	movlw	1
  5518     01D6  29D8               	goto	u1172
  5519     01D7                     u1170:
  5520     01D7  3000               	movlw	0
  5521     01D8                     u1172:
  5522     01D8  0670               	xorwf	??_LIN_calcParity,w
  5523     01D9  1D03               	skipz
  5524     01DA  29DC               	goto	u1181
  5525     01DB  29DE               	goto	u1180
  5526     01DC                     u1181:
  5527     01DC  17F2               	bsf	LIN_calcParity@PID,7
  5528     01DD  29DF               	goto	u1194
  5529     01DE                     u1180:
  5530     01DE  13F2               	bcf	LIN_calcParity@PID,7
  5531     01DF                     u1194:
  5532                           
  5533                           ;mcc_generated_files/LINDrivers/lin_slave.c: 270:   PID.P1 = PID.P1 ^ PID.ID4;
  5534     01DF  1A72               	btfsc	LIN_calcParity@PID,4
  5535     01E0  29E2               	goto	u1201
  5536     01E1  29E4               	goto	u1200
  5537     01E2                     u1201:
  5538     01E2  3001               	movlw	1
  5539     01E3  29E5               	goto	u1202
  5540     01E4                     u1200:
  5541     01E4  3000               	movlw	0
  5542     01E5                     u1202:
  5543     01E5  00F0               	movwf	??_LIN_calcParity
  5544     01E6  1BF2               	btfsc	LIN_calcParity@PID,7
  5545     01E7  29E9               	goto	u1211
  5546     01E8  29EB               	goto	u1210
  5547     01E9                     u1211:
  5548     01E9  3001               	movlw	1
  5549     01EA  29EC               	goto	u1212
  5550     01EB                     u1210:
  5551     01EB  3000               	movlw	0
  5552     01EC                     u1212:
  5553     01EC  0670               	xorwf	??_LIN_calcParity,w
  5554     01ED  1D03               	skipz
  5555     01EE  29F0               	goto	u1221
  5556     01EF  29F2               	goto	u1220
  5557     01F0                     u1221:
  5558     01F0  17F2               	bsf	LIN_calcParity@PID,7
  5559     01F1  29F3               	goto	u1234
  5560     01F2                     u1220:
  5561     01F2  13F2               	bcf	LIN_calcParity@PID,7
  5562     01F3                     u1234:
  5563                           
  5564                           ;mcc_generated_files/LINDrivers/lin_slave.c: 271:   PID.P1 = PID.P1 ^ PID.ID5;
  5565     01F3  1AF2               	btfsc	LIN_calcParity@PID,5
  5566     01F4  29F6               	goto	u1241
  5567     01F5  29F8               	goto	u1240
  5568     01F6                     u1241:
  5569     01F6  3001               	movlw	1
  5570     01F7  29F9               	goto	u1242
  5571     01F8                     u1240:
  5572     01F8  3000               	movlw	0
  5573     01F9                     u1242:
  5574     01F9  00F0               	movwf	??_LIN_calcParity
  5575     01FA  1BF2               	btfsc	LIN_calcParity@PID,7
  5576     01FB  29FD               	goto	u1251
  5577     01FC  29FF               	goto	u1250
  5578     01FD                     u1251:
  5579     01FD  3001               	movlw	1
  5580     01FE  2A00               	goto	u1252
  5581     01FF                     u1250:
  5582     01FF  3000               	movlw	0
  5583     0200                     u1252:
  5584     0200  0670               	xorwf	??_LIN_calcParity,w
  5585     0201  1D03               	skipz
  5586     0202  2A04               	goto	u1261
  5587     0203  2A06               	goto	u1260
  5588     0204                     u1261:
  5589     0204  17F2               	bsf	LIN_calcParity@PID,7
  5590     0205  2A07               	goto	u1274
  5591     0206                     u1260:
  5592     0206  13F2               	bcf	LIN_calcParity@PID,7
  5593     0207                     u1274:
  5594     0207                     l1911:
  5595                           
  5596                           ;mcc_generated_files/LINDrivers/lin_slave.c: 272:   PID.P1 = ~PID.P1;
  5597     0207  1003               	clrc
  5598     0208  1FF2               	btfss	LIN_calcParity@PID,7
  5599     0209  1403               	setc
  5600     020A  1803               	btfsc	3,0
  5601     020B  2A0D               	goto	u1281
  5602     020C  2A0F               	goto	u1280
  5603     020D                     u1281:
  5604     020D  17F2               	bsf	LIN_calcParity@PID,7
  5605     020E  2A10               	goto	u1294
  5606     020F                     u1280:
  5607     020F  13F2               	bcf	LIN_calcParity@PID,7
  5608     0210                     u1294:
  5609     0210                     l1913:
  5610                           
  5611                           ;mcc_generated_files/LINDrivers/lin_slave.c: 274:   return PID.rawPID;
  5612     0210  0872               	movf	LIN_calcParity@PID,w
  5613     0211                     l201:
  5614     0211  0008               	return
  5615     0212                     __end_of_LIN_calcParity:
  5616                           
  5617                           	psect	text33
  5618     0564                     __ptext33:	
  5619 ;; *************** function _LIN_breakCheck *****************
  5620 ;; Defined at:
  5621 ;;		line 325 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;		None
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      _Bool 
  5628 ;; Registers used:
  5629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5635 ;;      Params:         0       0       0       0       0       0       0       0
  5636 ;;      Locals:         0       0       0       0       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0
  5638 ;;      Totals:         0       0       0       0       0       0       0       0
  5639 ;;Total ram usage:        0 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; Hardware stack levels required when called: 5
  5642 ;; This function calls:
  5643 ;;		_EUSART_Read
  5644 ;;		_EUSART_get_last_status
  5645 ;; This function is called by:
  5646 ;;		_LIN_handler
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650     0564                     _LIN_breakCheck:	
  5651                           ;psect for function _LIN_breakCheck
  5652                           
  5653     0564                     l1991:	
  5654                           ;incstack = 0
  5655                           ; Regs used in _LIN_breakCheck: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5656                           
  5657                           
  5658                           ;mcc_generated_files/LINDrivers/lin_slave.c: 327:   if ((EUSART_Read() == 0x00) && (EUSA
      +                          RT_get_last_status().ferr == 1)) {
  5659     0564  3184  2442  3185   	fcall	_EUSART_Read
  5660     0567  3A00               	xorlw	0
  5661     0568  1D03               	skipz
  5662     0569  2D6B               	goto	u1411
  5663     056A  2D6C               	goto	u1410
  5664     056B                     u1411:
  5665     056B  2D75               	goto	l1999
  5666     056C                     u1410:
  5667     056C                     l1993:
  5668     056C  3186  262D  3185   	fcall	_EUSART_get_last_status
  5669     056F  1C89               	btfss	9,1
  5670     0570  2D72               	goto	u1421
  5671     0571  2D73               	goto	u1420
  5672     0572                     u1421:
  5673     0572  2D75               	goto	l1999
  5674     0573                     u1420:
  5675     0573                     l1995:
  5676                           
  5677                           ;mcc_generated_files/LINDrivers/lin_slave.c: 328:     return 1;
  5678     0573  3001               	movlw	1
  5679     0574  2D76               	goto	l231
  5680     0575                     l1999:
  5681                           
  5682                           ;mcc_generated_files/LINDrivers/lin_slave.c: 331:   return 0;
  5683     0575  3000               	movlw	0
  5684     0576                     l231:
  5685     0576  0008               	return
  5686     0577                     __end_of_LIN_breakCheck:
  5687                           
  5688                           	psect	text34
  5689     062D                     __ptext34:	
  5690 ;; *************** function _EUSART_get_last_status *****************
  5691 ;; Defined at:
  5692 ;;		line 147 in file "mcc_generated_files/eusart.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;		None
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;		None
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      struct .
  5699 ;; Registers used:
  5700 ;;		wreg
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5706 ;;      Params:         0       0       0       0       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0       0       0       0
  5708 ;;      Temps:          0       0       0       0       0       0       0       0
  5709 ;;      Totals:         0       0       0       0       0       0       0       0
  5710 ;;Total ram usage:        0 bytes
  5711 ;; Hardware stack levels used: 1
  5712 ;; Hardware stack levels required when called: 4
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_LIN_breakCheck
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720     062D                     _EUSART_get_last_status:	
  5721                           ;psect for function _EUSART_get_last_status
  5722                           
  5723     062D                     l1919:	
  5724                           ;incstack = 0
  5725                           ; Regs used in _EUSART_get_last_status: [wreg]
  5726                           
  5727                           
  5728                           ;mcc_generated_files/eusart.c: 148:     return eusartRxLastError;
  5729     062D  0020               	movlb	0	; select bank0
  5730     062E  0849               	movf	_eusartRxLastError,w	;volatile
  5731     062F                     l352:
  5732     062F  0008               	return
  5733     0630                     __end_of_EUSART_get_last_status:
  5734                           
  5735                           	psect	text35
  5736     0442                     __ptext35:	
  5737 ;; *************** function _EUSART_Read *****************
  5738 ;; Defined at:
  5739 ;;		line 151 in file "mcc_generated_files/eusart.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;		None
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;  readValue       1    0[COMMON] unsigned char 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  1    wreg      unsigned char 
  5746 ;; Registers used:
  5747 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5753 ;;      Params:         0       0       0       0       0       0       0       0
  5754 ;;      Locals:         1       0       0       0       0       0       0       0
  5755 ;;      Temps:          0       0       0       0       0       0       0       0
  5756 ;;      Totals:         1       0       0       0       0       0       0       0
  5757 ;;Total ram usage:        1 bytes
  5758 ;; Hardware stack levels used: 1
  5759 ;; Hardware stack levels required when called: 4
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_LIN_handler
  5764 ;;		_LIN_breakCheck
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768     0442                     _EUSART_Read:	
  5769                           ;psect for function _EUSART_Read
  5770                           
  5771     0442                     l1839:	
  5772                           ;incstack = 0
  5773                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5774                           
  5775     0442                     l1841:	
  5776                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5777                           
  5778                           
  5779                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5780     0442  0020               	movlb	0	; select bank0
  5781     0443  084A               	movf	_eusartRxCount,w	;volatile
  5782     0444  1903               	btfsc	3,2
  5783     0445  2C47               	goto	u991
  5784     0446  2C48               	goto	u990
  5785     0447                     u991:
  5786     0447  2C42               	goto	l1841
  5787     0448                     u990:
  5788     0448                     l1843:
  5789                           
  5790                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  5791     0448  084B               	movf	_eusartRxTail,w	;volatile
  5792     0449  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5793     044A  0086               	movwf	6
  5794     044B  0187               	clrf	7
  5795     044C  0801               	movf	1,w
  5796     044D  00C9               	movwf	_eusartRxLastError	;volatile
  5797                           
  5798                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  5799     044E  084B               	movf	_eusartRxTail,w
  5800     044F  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5801     0450  0086               	movwf	6
  5802     0451  0187               	clrf	7
  5803     0452  0801               	movf	1,w
  5804     0453  00F0               	movwf	EUSART_Read@readValue
  5805     0454                     l1845:
  5806     0454  3001               	movlw	1
  5807     0455  07CB               	addwf	_eusartRxTail,f	;volatile
  5808     0456                     l1847:
  5809                           
  5810                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  5811     0456  3008               	movlw	8
  5812     0457  024B               	subwf	_eusartRxTail,w	;volatile
  5813     0458  1C03               	skipc
  5814     0459  2C5B               	goto	u1001
  5815     045A  2C5C               	goto	u1000
  5816     045B                     u1001:
  5817     045B  2C5D               	goto	l1851
  5818     045C                     u1000:
  5819     045C                     l1849:
  5820                           
  5821                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  5822     045C  01CB               	clrf	_eusartRxTail	;volatile
  5823     045D                     l1851:
  5824                           
  5825                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  5826     045D  0021               	movlb	1	; select bank1
  5827     045E  1291               	bcf	17,5	;volatile
  5828     045F                     l1853:
  5829                           
  5830                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  5831     045F  3001               	movlw	1
  5832     0460  0020               	movlb	0	; select bank0
  5833     0461  02CA               	subwf	_eusartRxCount,f	;volatile
  5834     0462                     l1855:
  5835                           
  5836                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  5837     0462  0021               	movlb	1	; select bank1
  5838     0463  1691               	bsf	17,5	;volatile
  5839     0464                     l1857:
  5840                           
  5841                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  5842     0464  0870               	movf	EUSART_Read@readValue,w
  5843     0465                     l359:
  5844     0465  0008               	return
  5845     0466                     __end_of_EUSART_Read:
  5846                           
  5847                           	psect	text36
  5848     05C8                     __ptext36:	
  5849 ;; *************** function _EUSART_is_rx_ready *****************
  5850 ;; Defined at:
  5851 ;;		line 137 in file "mcc_generated_files/eusart.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      _Bool 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5865 ;;      Params:         0       0       0       0       0       0       0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0
  5867 ;;      Temps:          0       0       0       0       0       0       0       0
  5868 ;;      Totals:         0       0       0       0       0       0       0       0
  5869 ;;Total ram usage:        0 bytes
  5870 ;; Hardware stack levels used: 1
  5871 ;; Hardware stack levels required when called: 4
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_LIN_handler
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879     05C8                     _EUSART_is_rx_ready:	
  5880                           ;psect for function _EUSART_is_rx_ready
  5881                           
  5882     05C8                     l1979:	
  5883                           ;incstack = 0
  5884                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5885                           
  5886                           
  5887                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  5888     05C8  0020               	movlb	0	; select bank0
  5889     05C9  084A               	movf	_eusartRxCount,w	;volatile
  5890     05CA  1D03               	btfss	3,2
  5891     05CB  2DCD               	goto	u1391
  5892     05CC  2DCF               	goto	u1390
  5893     05CD                     u1391:
  5894     05CD  3001               	movlw	1
  5895     05CE  2DD0               	goto	u1400
  5896     05CF                     u1390:
  5897     05CF  3000               	movlw	0
  5898     05D0                     u1400:
  5899     05D0                     l346:
  5900     05D0  0008               	return
  5901     05D1                     __end_of_EUSART_is_rx_ready:
  5902                           
  5903                           	psect	text37
  5904     03C6                     __ptext37:	
  5905 ;; *************** function _AutoBaud_Detect *****************
  5906 ;; Defined at:
  5907 ;;		line 61 in file "main.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;		None
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;  i               1    2[COMMON] unsigned char 
  5912 ;;  sync            1    0        unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5922 ;;      Params:         0       0       0       0       0       0       0       0
  5923 ;;      Locals:         1       0       0       0       0       0       0       0
  5924 ;;      Temps:          2       0       0       0       0       0       0       0
  5925 ;;      Totals:         3       0       0       0       0       0       0       0
  5926 ;;Total ram usage:        3 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; Hardware stack levels required when called: 4
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936     03C6                     _AutoBaud_Detect:	
  5937                           ;psect for function _AutoBaud_Detect
  5938                           
  5939     03C6                     l1651:	
  5940                           ;incstack = 0
  5941                           ; Regs used in _AutoBaud_Detect: [wreg+status,2+status,0]
  5942                           
  5943                           
  5944                           ;main.c: 62:   uint8_t sync;;main.c: 64:   for (uint8_t i = 0; i < 10; i++) {
  5945     03C6  01F2               	clrf	AutoBaud_Detect@i
  5946     03C7                     l533:
  5947                           
  5948                           ;main.c: 66:     BAUDCONbits.ABDOVF = 0;
  5949     03C7  0023               	movlb	3	; select bank3
  5950     03C8  139F               	bcf	31,7	;volatile
  5951                           
  5952                           ;main.c: 67:     BAUDCONbits.ABDEN = 1;
  5953     03C9  141F               	bsf	31,0	;volatile
  5954                           
  5955                           ;main.c: 68:     BAUDCONbits.WUE = 1;
  5956     03CA  149F               	bsf	31,1	;volatile
  5957                           
  5958                           ;main.c: 70:     while (!BAUDCONbits.ABDOVF) {
  5959     03CB  2BD1               	goto	l535
  5960     03CC                     l536:
  5961                           
  5962                           ;main.c: 71:       if (!BAUDCONbits.ABDEN) {
  5963     03CC  181F               	btfsc	31,0	;volatile
  5964     03CD  2BCF               	goto	u791
  5965     03CE  2BD0               	goto	u790
  5966     03CF                     u791:
  5967     03CF  2BD1               	goto	l535
  5968     03D0                     u790:
  5969     03D0  2BD5               	goto	l538
  5970     03D1                     l535:	
  5971                           ;main.c: 74:     }
  5972                           
  5973                           
  5974                           ;main.c: 70:     while (!BAUDCONbits.ABDOVF) {
  5975     03D1  1F9F               	btfss	31,7	;volatile
  5976     03D2  2BD4               	goto	u801
  5977     03D3  2BD5               	goto	u800
  5978     03D4                     u801:
  5979     03D4  2BCC               	goto	l536
  5980     03D5                     u800:
  5981     03D5                     l538:
  5982                           
  5983                           ;main.c: 76:     if (!BAUDCONbits.ABDOVF) {
  5984     03D5  1B9F               	btfsc	31,7	;volatile
  5985     03D6  2BD8               	goto	u811
  5986     03D7  2BD9               	goto	u810
  5987     03D8                     u811:
  5988     03D8  2BDA               	goto	l1663
  5989     03D9                     u810:
  5990     03D9  2BF0               	goto	l534
  5991     03DA                     l1663:
  5992                           
  5993                           ;main.c: 79:       _delay((unsigned long)((100)*(32000000/4000.0)));
  5994     03DA  3005               	movlw	5
  5995     03DB  00F1               	movwf	??_AutoBaud_Detect+1
  5996     03DC  300F               	movlw	15
  5997     03DD  00F0               	movwf	??_AutoBaud_Detect
  5998     03DE  30F1               	movlw	241
  5999     03DF                     u1917:
  6000     03DF  0B89               	decfsz	9,f
  6001     03E0  2BDF               	goto	u1917
  6002     03E1  0BF0               	decfsz	??_AutoBaud_Detect,f
  6003     03E2  2BDF               	goto	u1917
  6004     03E3  0BF1               	decfsz	??_AutoBaud_Detect+1,f
  6005     03E4  2BDF               	goto	u1917
  6006     03E5  0000               	nop
  6007     03E6                     l540:	
  6008                           ;main.c: 80:     }
  6009                           
  6010     03E6  0023               	movlb	3	; select bank3
  6011     03E7  0819               	movf	25,w	;volatile
  6012     03E8                     l1665:
  6013                           
  6014                           ;main.c: 82:   }
  6015     03E8  3001               	movlw	1
  6016     03E9  07F2               	addwf	AutoBaud_Detect@i,f
  6017     03EA                     l1667:
  6018     03EA  300A               	movlw	10
  6019     03EB  0272               	subwf	AutoBaud_Detect@i,w
  6020     03EC  1C03               	skipc
  6021     03ED  2BEF               	goto	u821
  6022     03EE  2BF0               	goto	u820
  6023     03EF                     u821:
  6024     03EF  2BC7               	goto	l533
  6025     03F0                     u820:
  6026     03F0                     l534:
  6027                           
  6028                           ;main.c: 84:   __nop();
  6029     03F0  0000               	nop
  6030     03F1                     l541:
  6031     03F1  0008               	return
  6032     03F2                     __end_of_AutoBaud_Detect:
  6033                           
  6034                           	psect	intentry
  6035     0004                     __pintentry:	
  6036 ;; *************** function _INTERRUPT_InterruptManager *****************
  6037 ;; Defined at:
  6038 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6052 ;;      Params:         0       0       0       0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0
  6055 ;;      Totals:         0       0       0       0       0       0       0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 3
  6059 ;; This function calls:
  6060 ;;		NULL
  6061 ;;		_EUSART_Receive_ISR
  6062 ;;		_EUSART_Transmit_ISR
  6063 ;;		_TMR0_ISR
  6064 ;; This function is called by:
  6065 ;;		Interrupt level 1
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069     0004                     _INTERRUPT_InterruptManager:
  6070                           
  6071                           ;incstack = 0
  6072     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6073                           
  6074                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6075     0005  3180               	pagesel	$
  6076     0006                     i1l2211:
  6077                           
  6078                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6079     0006  1E8B               	btfss	11,5	;volatile
  6080     0007  2809               	goto	u167_21
  6081     0008  280A               	goto	u167_20
  6082     0009                     u167_21:
  6083     0009  2812               	goto	i1l466
  6084     000A                     u167_20:
  6085     000A                     i1l2213:
  6086     000A  1D0B               	btfss	11,2	;volatile
  6087     000B  280D               	goto	u168_21
  6088     000C  280E               	goto	u168_20
  6089     000D                     u168_21:
  6090     000D  2812               	goto	i1l466
  6091     000E                     u168_20:
  6092     000E                     i1l2215:
  6093                           
  6094                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  6095     000E  3185  2577  3180   	fcall	_TMR0_ISR
  6096                           
  6097                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6098     0011  2836               	goto	i1l474
  6099     0012                     i1l466:	
  6100                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6101                           
  6102     0012  1F0B               	btfss	11,6	;volatile
  6103     0013  2815               	goto	u169_21
  6104     0014  2816               	goto	u169_20
  6105     0015                     u169_21:
  6106     0015  2836               	goto	i1l474
  6107     0016                     u169_20:
  6108     0016                     i1l2217:
  6109                           
  6110                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  6111     0016  0021               	movlb	1	; select bank1
  6112     0017  1E11               	btfss	17,4	;volatile
  6113     0018  281A               	goto	u170_21
  6114     0019  281B               	goto	u170_20
  6115     001A                     u170_21:
  6116     001A  2826               	goto	i1l469
  6117     001B                     u170_20:
  6118     001B                     i1l2219:
  6119     001B  0020               	movlb	0	; select bank0
  6120     001C  1E11               	btfss	17,4	;volatile
  6121     001D  281F               	goto	u171_21
  6122     001E  2820               	goto	u171_20
  6123     001F                     u171_21:
  6124     001F  2826               	goto	i1l469
  6125     0020                     u171_20:
  6126     0020                     i1l2221:
  6127                           
  6128                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
  6129     0020  0843               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  6130     0021  008A               	movwf	10
  6131     0022  0842               	movf	_EUSART_TxDefaultInterruptHandler,w
  6132     0023  000A               	callw
  6133     0024  3180               	pagesel	$
  6134                           
  6135                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6136     0025  2836               	goto	i1l474
  6137     0026                     i1l469:	
  6138                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  6139                           
  6140     0026  0021               	movlb	1	; select bank1
  6141     0027  1E91               	btfss	17,5	;volatile
  6142     0028  282A               	goto	u172_21
  6143     0029  282B               	goto	u172_20
  6144     002A                     u172_21:
  6145     002A  2836               	goto	i1l473
  6146     002B                     u172_20:
  6147     002B                     i1l2223:
  6148     002B  0020               	movlb	0	; select bank0
  6149     002C  1E91               	btfss	17,5	;volatile
  6150     002D  282F               	goto	u173_21
  6151     002E  2830               	goto	u173_20
  6152     002F                     u173_21:
  6153     002F  2836               	goto	i1l473
  6154     0030                     u173_20:
  6155     0030                     i1l2225:
  6156                           
  6157                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
  6158     0030  0841               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  6159     0031  008A               	movwf	10
  6160     0032  0840               	movf	_EUSART_RxDefaultInterruptHandler,w
  6161     0033  000A               	callw
  6162     0034  3180               	pagesel	$
  6163                           
  6164                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  6165     0035  2836               	goto	i1l474
  6166     0036                     i1l473:	
  6167                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  6168                           
  6169     0036                     i1l474:
  6170     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6171     0037  0009               	retfie
  6172     0038                     __end_of_INTERRUPT_InterruptManager:
  6173                           
  6174                           	psect	text39
  6175     0577                     __ptext39:	
  6176 ;; *************** function _TMR0_ISR *****************
  6177 ;; Defined at:
  6178 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      void 
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0, pclath, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6192 ;;      Params:         0       0       0       0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0
  6195 ;;      Totals:         0       0       0       0       0       0       0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used: 1
  6198 ;; Hardware stack levels required when called: 2
  6199 ;; This function calls:
  6200 ;;		NULL
  6201 ;;		_LIN_timerHandler
  6202 ;;		_TMR0_DefaultInterruptHandler
  6203 ;; This function is called by:
  6204 ;;		_INTERRUPT_InterruptManager
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208     0577                     _TMR0_ISR:	
  6209                           ;psect for function _TMR0_ISR
  6210                           
  6211     0577                     i1l2193:	
  6212                           ;incstack = 0
  6213                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6214                           
  6215                           
  6216                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  6217     0577  110B               	bcf	11,2	;volatile
  6218     0578                     i1l2195:
  6219                           
  6220                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  6221     0578  0020               	movlb	0	; select bank0
  6222     0579  0848               	movf	_timer0ReloadVal,w	;volatile
  6223     057A  0095               	movwf	21	;volatile
  6224     057B                     i1l2197:
  6225                           
  6226                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  6227     057B  0838               	movf	_TMR0_InterruptHandler,w
  6228     057C  0439               	iorwf	_TMR0_InterruptHandler+1,w
  6229     057D  1903               	btfsc	3,2
  6230     057E  2D80               	goto	u166_21
  6231     057F  2D81               	goto	u166_20
  6232     0580                     u166_21:
  6233     0580  2D86               	goto	i1l439
  6234     0581                     u166_20:
  6235     0581                     i1l2199:
  6236                           
  6237                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  6238     0581  0839               	movf	_TMR0_InterruptHandler+1,w
  6239     0582  008A               	movwf	10
  6240     0583  0838               	movf	_TMR0_InterruptHandler,w
  6241     0584  000A               	callw
  6242     0585  3185               	pagesel	$
  6243     0586                     i1l439:
  6244     0586  0008               	return
  6245     0587                     __end_of_TMR0_ISR:
  6246                           
  6247                           	psect	text40
  6248     05AF                     __ptext40:	
  6249 ;; *************** function _LIN_timerHandler *****************
  6250 ;; Defined at:
  6251 ;;		line 297 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;		None
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0, pclath, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6265 ;;      Params:         0       0       0       0       0       0       0       0
  6266 ;;      Locals:         0       0       0       0       0       0       0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0
  6268 ;;      Totals:         0       0       0       0       0       0       0       0
  6269 ;;Total ram usage:        0 bytes
  6270 ;; Hardware stack levels used: 1
  6271 ;; Hardware stack levels required when called: 1
  6272 ;; This function calls:
  6273 ;;		i1_LIN_stopTimer
  6274 ;; This function is called by:
  6275 ;;		_LIN_setTimerHandler
  6276 ;;		_TMR0_ISR
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280     05AF                     _LIN_timerHandler:	
  6281                           ;psect for function _LIN_timerHandler
  6282                           
  6283     05AF                     i1l2021:	
  6284                           ;incstack = 0
  6285                           ; Regs used in _LIN_timerHandler: [wreg+status,2+status,0+pclath+cstack]
  6286                           
  6287                           
  6288                           ;mcc_generated_files/LINDrivers/lin_slave.c: 300:   if (++CountCallBack >= LIN_timeout) 
      +                          {
  6289     05AF  3001               	movlw	1
  6290     05B0  0020               	movlb	0	; select bank0
  6291     05B1  07D2               	addwf	_CountCallBack,f	;volatile
  6292     05B2  086C               	movf	_LIN_timeout,w
  6293     05B3  0252               	subwf	_CountCallBack,w	;volatile
  6294     05B4  1C03               	skipc
  6295     05B5  2DB7               	goto	u145_21
  6296     05B6  2DB8               	goto	u145_20
  6297     05B7                     u145_21:
  6298     05B7  2DBB               	goto	i1l215
  6299     05B8                     u145_20:
  6300     05B8                     i1l2023:
  6301                           
  6302                           ;mcc_generated_files/LINDrivers/lin_slave.c: 302:     LIN_stopTimer();
  6303     05B8  3186  261C  3185   	fcall	i1_LIN_stopTimer
  6304     05BB                     i1l215:
  6305     05BB  0008               	return
  6306     05BC                     __end_of_LIN_timerHandler:
  6307                           
  6308                           	psect	text41
  6309     0631                     __ptext41:	
  6310 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6311 ;; Defined at:
  6312 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;		None
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		None
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6326 ;;      Params:         0       0       0       0       0       0       0       0
  6327 ;;      Locals:         0       0       0       0       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0       0       0       0
  6329 ;;      Totals:         0       0       0       0       0       0       0       0
  6330 ;;Total ram usage:        0 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_TMR0_Initialize
  6336 ;;		_TMR0_ISR
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340     0631                     _TMR0_DefaultInterruptHandler:	
  6341                           ;psect for function _TMR0_DefaultInterruptHandler
  6342                           
  6343     0631                     i1l445:	
  6344                           ;incstack = 0
  6345                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6346                           
  6347     0631  0008               	return
  6348     0632                     __end_of_TMR0_DefaultInterruptHandler:
  6349                           
  6350                           	psect	text42
  6351     061C                     __ptext42:	
  6352 ;; *************** function i1_LIN_stopTimer *****************
  6353 ;; Defined at:
  6354 ;;		line 308 in file "mcc_generated_files/LINDrivers/lin_slave.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		status,2
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6368 ;;      Params:         0       0       0       0       0       0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0
  6371 ;;      Totals:         0       0       0       0       0       0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_LIN_timerHandler
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381     061C                     i1_LIN_stopTimer:	
  6382                           ;psect for function i1_LIN_stopTimer
  6383                           
  6384     061C                     i1l1943:	
  6385                           ;incstack = 0
  6386                           ; Regs used in i1_LIN_stopTimer: [status,2]
  6387                           
  6388                           
  6389                           ;mcc_generated_files/LINDrivers/lin_slave.c: 309:   __nop();
  6390     061C  0000               	nop
  6391     061D                     i1l1945:
  6392                           
  6393                           ;mcc_generated_files/LINDrivers/lin_slave.c: 311:   CountCallBack = 0;
  6394     061D  0020               	movlb	0	; select bank0
  6395     061E  01D2               	clrf	_CountCallBack	;volatile
  6396                           
  6397                           ;mcc_generated_files/LINDrivers/lin_slave.c: 312:   LIN_timerRunning = 0;
  6398     061F  01D3               	clrf	_LIN_timerRunning
  6399     0620                     i1l221:
  6400     0620  0008               	return
  6401     0621                     __end_ofi1_LIN_stopTimer:
  6402                           
  6403                           	psect	text43
  6404     04A9                     __ptext43:	
  6405 ;; *************** function _EUSART_Transmit_ISR *****************
  6406 ;; Defined at:
  6407 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;		None
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      void 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6421 ;;      Params:         0       0       0       0       0       0       0       0
  6422 ;;      Locals:         0       0       0       0       0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0
  6424 ;;      Totals:         0       0       0       0       0       0       0       0
  6425 ;;Total ram usage:        0 bytes
  6426 ;; Hardware stack levels used: 1
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_EUSART_Initialize
  6431 ;;		_INTERRUPT_InterruptManager
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435     04A9                     _EUSART_Transmit_ISR:	
  6436                           ;psect for function _EUSART_Transmit_ISR
  6437                           
  6438     04A9                     i1l2161:	
  6439                           ;incstack = 0
  6440                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6441                           
  6442                           
  6443                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6444     04A9  3008               	movlw	8
  6445     04AA  0020               	movlb	0	; select bank0
  6446     04AB  024D               	subwf	_eusartTxBufferRemaining,w	;volatile
  6447     04AC  1803               	skipnc
  6448     04AD  2CAF               	goto	u161_21
  6449     04AE  2CB0               	goto	u161_20
  6450     04AF                     u161_21:
  6451     04AF  2CC4               	goto	i1l371
  6452     04B0                     u161_20:
  6453     04B0                     i1l2163:
  6454                           
  6455                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6456     04B0  084E               	movf	_eusartTxTail,w
  6457     04B1  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6458     04B2  0086               	movwf	6
  6459     04B3  0187               	clrf	7
  6460     04B4  0801               	movf	1,w
  6461     04B5  0023               	movlb	3	; select bank3
  6462     04B6  009A               	movwf	26	;volatile
  6463     04B7                     i1l2165:
  6464     04B7  3001               	movlw	1
  6465     04B8  0020               	movlb	0	; select bank0
  6466     04B9  07CE               	addwf	_eusartTxTail,f	;volatile
  6467     04BA                     i1l2167:
  6468                           
  6469                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6470     04BA  3008               	movlw	8
  6471     04BB  024E               	subwf	_eusartTxTail,w	;volatile
  6472     04BC  1C03               	skipc
  6473     04BD  2CBF               	goto	u162_21
  6474     04BE  2CC0               	goto	u162_20
  6475     04BF                     u162_21:
  6476     04BF  2CC1               	goto	i1l2171
  6477     04C0                     u162_20:
  6478     04C0                     i1l2169:
  6479                           
  6480                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6481     04C0  01CE               	clrf	_eusartTxTail	;volatile
  6482     04C1                     i1l2171:
  6483                           
  6484                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6485     04C1  3001               	movlw	1
  6486     04C2  07CD               	addwf	_eusartTxBufferRemaining,f	;volatile
  6487                           
  6488                           ;mcc_generated_files/eusart.c: 209:     }
  6489     04C3  2CC6               	goto	i1l374
  6490     04C4                     i1l371:	
  6491                           ;mcc_generated_files/eusart.c: 210:     else
  6492                           
  6493                           
  6494                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  6495     04C4  0021               	movlb	1	; select bank1
  6496     04C5  1211               	bcf	17,4	;volatile
  6497     04C6                     i1l374:
  6498     04C6  0008               	return
  6499     04C7                     __end_of_EUSART_Transmit_ISR:
  6500                           
  6501                           	psect	text44
  6502     035A                     __ptext44:	
  6503 ;; *************** function _EUSART_Receive_ISR *****************
  6504 ;; Defined at:
  6505 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6519 ;;      Params:         0       0       0       0       0       0       0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0
  6522 ;;      Totals:         0       0       0       0       0       0       0       0
  6523 ;;Total ram usage:        0 bytes
  6524 ;; Hardware stack levels used: 1
  6525 ;; Hardware stack levels required when called: 2
  6526 ;; This function calls:
  6527 ;;		NULL
  6528 ;;		_EUSART_DefaultErrorHandler
  6529 ;;		_EUSART_DefaultFramingErrorHandler
  6530 ;;		_EUSART_DefaultOverrunErrorHandler
  6531 ;;		_EUSART_RxDataHandler
  6532 ;; This function is called by:
  6533 ;;		_EUSART_Initialize
  6534 ;;		_INTERRUPT_InterruptManager
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538     035A                     _EUSART_Receive_ISR:	
  6539                           ;psect for function _EUSART_Receive_ISR
  6540                           
  6541     035A                     i1l2173:	
  6542                           ;incstack = 0
  6543                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6544                           
  6545                           
  6546                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  6547     035A  0020               	movlb	0	; select bank0
  6548     035B  084C               	movf	_eusartRxHead,w	;volatile
  6549     035C  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6550     035D  0086               	movwf	6
  6551     035E  0187               	clrf	7
  6552     035F  0181               	clrf	1
  6553     0360                     i1l2175:
  6554                           
  6555                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  6556     0360  0023               	movlb	3	; select bank3
  6557     0361  1D1D               	btfss	29,2	;volatile
  6558     0362  2B64               	goto	u163_21
  6559     0363  2B65               	goto	u163_20
  6560     0364                     u163_21:
  6561     0364  2B70               	goto	i1l2181
  6562     0365                     u163_20:
  6563     0365                     i1l2177:
  6564                           
  6565                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6566     0365  0020               	movlb	0	; select bank0
  6567     0366  084C               	movf	_eusartRxHead,w	;volatile
  6568     0367  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6569     0368  0086               	movwf	6
  6570     0369  0187               	clrf	7
  6571     036A  1481               	bsf	1,1
  6572     036B                     i1l2179:
  6573                           
  6574                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  6575     036B  083F               	movf	_EUSART_FramingErrorHandler+1,w
  6576     036C  008A               	movwf	10
  6577     036D  083E               	movf	_EUSART_FramingErrorHandler,w
  6578     036E  000A               	callw
  6579     036F  3183               	pagesel	$
  6580     0370                     i1l2181:
  6581                           
  6582                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  6583     0370  0023               	movlb	3	; select bank3
  6584     0371  1C9D               	btfss	29,1	;volatile
  6585     0372  2B74               	goto	u164_21
  6586     0373  2B75               	goto	u164_20
  6587     0374                     u164_21:
  6588     0374  2B80               	goto	i1l2187
  6589     0375                     u164_20:
  6590     0375                     i1l2183:
  6591                           
  6592                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6593     0375  0020               	movlb	0	; select bank0
  6594     0376  084C               	movf	_eusartRxHead,w	;volatile
  6595     0377  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6596     0378  0086               	movwf	6
  6597     0379  0187               	clrf	7
  6598     037A  1501               	bsf	1,2
  6599     037B                     i1l2185:
  6600                           
  6601                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  6602     037B  083D               	movf	_EUSART_OverrunErrorHandler+1,w
  6603     037C  008A               	movwf	10
  6604     037D  083C               	movf	_EUSART_OverrunErrorHandler,w
  6605     037E  000A               	callw
  6606     037F  3183               	pagesel	$
  6607     0380                     i1l2187:
  6608                           
  6609                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  6610     0380  0020               	movlb	0	; select bank0
  6611     0381  084C               	movf	_eusartRxHead,w	;volatile
  6612     0382  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6613     0383  0086               	movwf	6
  6614     0384  0187               	clrf	7
  6615     0385  0801               	movf	1,w
  6616     0386  1903               	btfsc	3,2
  6617     0387  2B89               	goto	u165_21
  6618     0388  2B8A               	goto	u165_20
  6619     0389                     u165_21:
  6620     0389  2B90               	goto	i1l2191
  6621     038A                     u165_20:
  6622     038A                     i1l2189:
  6623                           
  6624                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  6625     038A  083B               	movf	_EUSART_ErrorHandler+1,w
  6626     038B  008A               	movwf	10
  6627     038C  083A               	movf	_EUSART_ErrorHandler,w
  6628     038D  000A               	callw
  6629     038E  3183               	pagesel	$
  6630                           
  6631                           ;mcc_generated_files/eusart.c: 233:     } else {
  6632     038F  2B93               	goto	i1l381
  6633     0390                     i1l2191:
  6634                           
  6635                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  6636     0390  3185  2528  3183   	fcall	_EUSART_RxDataHandler
  6637     0393                     i1l381:
  6638     0393  0008               	return
  6639     0394                     __end_of_EUSART_Receive_ISR:
  6640                           
  6641                           	psect	text45
  6642     0625                     __ptext45:	
  6643 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6644 ;; Defined at:
  6645 ;;		line 252 in file "mcc_generated_files/eusart.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;		None
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		None
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6659 ;;      Params:         0       0       0       0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0
  6662 ;;      Totals:         0       0       0       0       0       0       0       0
  6663 ;;Total ram usage:        0 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_EUSART_Initialize
  6669 ;;		_EUSART_Receive_ISR
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673     0625                     _EUSART_DefaultOverrunErrorHandler:	
  6674                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6675                           
  6676     0625                     i1l2057:	
  6677                           ;incstack = 0
  6678                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6679                           
  6680                           
  6681                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  6682     0625  0023               	movlb	3	; select bank3
  6683     0626  121D               	bcf	29,4	;volatile
  6684                           
  6685                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  6686     0627  161D               	bsf	29,4	;volatile
  6687     0628                     i1l391:
  6688     0628  0008               	return
  6689     0629                     __end_of_EUSART_DefaultOverrunErrorHandler:
  6690                           
  6691                           	psect	text46
  6692     0632                     __ptext46:	
  6693 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6694 ;; Defined at:
  6695 ;;		line 250 in file "mcc_generated_files/eusart.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;		None
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		None
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6709 ;;      Params:         0       0       0       0       0       0       0       0
  6710 ;;      Locals:         0       0       0       0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0
  6712 ;;      Totals:         0       0       0       0       0       0       0       0
  6713 ;;Total ram usage:        0 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; This function calls:
  6716 ;;		Nothing
  6717 ;; This function is called by:
  6718 ;;		_EUSART_Initialize
  6719 ;;		_EUSART_Receive_ISR
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723     0632                     _EUSART_DefaultFramingErrorHandler:	
  6724                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6725                           
  6726     0632                     i1l388:	
  6727                           ;incstack = 0
  6728                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6729                           
  6730     0632  0008               	return
  6731     0633                     __end_of_EUSART_DefaultFramingErrorHandler:
  6732                           
  6733                           	psect	text47
  6734     0629                     __ptext47:	
  6735 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6736 ;; Defined at:
  6737 ;;		line 260 in file "mcc_generated_files/eusart.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;		None
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1    wreg      void 
  6744 ;; Registers used:
  6745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6751 ;;      Params:         0       0       0       0       0       0       0       0
  6752 ;;      Locals:         0       0       0       0       0       0       0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0       0
  6754 ;;      Totals:         0       0       0       0       0       0       0       0
  6755 ;;Total ram usage:        0 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; Hardware stack levels required when called: 1
  6758 ;; This function calls:
  6759 ;;		_EUSART_RxDataHandler
  6760 ;; This function is called by:
  6761 ;;		_EUSART_Initialize
  6762 ;;		_EUSART_Receive_ISR
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766     0629                     _EUSART_DefaultErrorHandler:	
  6767                           ;psect for function _EUSART_DefaultErrorHandler
  6768                           
  6769     0629                     i1l2059:	
  6770                           ;incstack = 0
  6771                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6772                           
  6773                           
  6774                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  6775     0629  3185  2528  3186   	fcall	_EUSART_RxDataHandler
  6776     062C                     i1l394:
  6777     062C  0008               	return
  6778     062D                     __end_of_EUSART_DefaultErrorHandler:
  6779                           
  6780                           	psect	text48
  6781     0528                     __ptext48:	
  6782 ;; *************** function _EUSART_RxDataHandler *****************
  6783 ;; Defined at:
  6784 ;;		line 240 in file "mcc_generated_files/eusart.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;		None
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;		None
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6798 ;;      Params:         0       0       0       0       0       0       0       0
  6799 ;;      Locals:         0       0       0       0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0       0
  6801 ;;      Totals:         0       0       0       0       0       0       0       0
  6802 ;;Total ram usage:        0 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_EUSART_Receive_ISR
  6808 ;;		_EUSART_DefaultErrorHandler
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812     0528                     _EUSART_RxDataHandler:	
  6813                           ;psect for function _EUSART_RxDataHandler
  6814                           
  6815     0528                     i1l1933:	
  6816                           ;incstack = 0
  6817                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6818                           
  6819                           
  6820                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  6821     0528  0020               	movlb	0	; select bank0
  6822     0529  084C               	movf	_eusartRxHead,w
  6823     052A  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6824     052B  0086               	movwf	6
  6825     052C  0187               	clrf	7
  6826     052D  0023               	movlb	3	; select bank3
  6827     052E  0819               	movf	25,w	;volatile
  6828     052F  0081               	movwf	1
  6829     0530                     i1l1935:
  6830     0530  3001               	movlw	1
  6831     0531  0020               	movlb	0	; select bank0
  6832     0532  07CC               	addwf	_eusartRxHead,f	;volatile
  6833     0533                     i1l1937:
  6834                           
  6835                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6836     0533  3008               	movlw	8
  6837     0534  024C               	subwf	_eusartRxHead,w	;volatile
  6838     0535  1C03               	skipc
  6839     0536  2D38               	goto	u130_21
  6840     0537  2D39               	goto	u130_20
  6841     0538                     u130_21:
  6842     0538  2D3A               	goto	i1l1941
  6843     0539                     u130_20:
  6844     0539                     i1l1939:
  6845                           
  6846                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  6847     0539  01CC               	clrf	_eusartRxHead	;volatile
  6848     053A                     i1l1941:
  6849                           
  6850                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  6851     053A  3001               	movlw	1
  6852     053B  07CA               	addwf	_eusartRxCount,f	;volatile
  6853     053C                     i1l385:
  6854     053C  0008               	return
  6855     053D                     __end_of_EUSART_RxDataHandler:
  6856     0002                     ___latbits      equ	2
  6857     007E                     btemp           set	126	;btemp
  6858     007E                     int$flags       set	126
  6859     007E                     wtemp0          set	126
  6860                           
  6861                           	psect	config
  6862                           
  6863                           ;Config register CONFIG1 @ 0x8007
  6864                           ;	Oscillator Selection
  6865                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6866                           ;	Watchdog Timer Enable
  6867                           ;	WDTE = OFF, WDT disabled
  6868                           ;	Power-up Timer Enable
  6869                           ;	PWRTE = OFF, PWRT disabled
  6870                           ;	MCLR Pin Function Select
  6871                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6872                           ;	Flash Program Memory Code Protection
  6873                           ;	CP = OFF, Program memory code protection is disabled
  6874                           ;	Data Memory Code Protection
  6875                           ;	CPD = OFF, Data memory code protection is disabled
  6876                           ;	Brown-out Reset Enable
  6877                           ;	BOREN = ON, Brown-out Reset enabled
  6878                           ;	Clock Out Enable
  6879                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6880                           ;	Internal/External Switchover
  6881                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6882                           ;	Fail-Safe Clock Monitor Enable
  6883                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6884     8007                     	org	32775
  6885     8007  3FE4               	dw	16356
  6886                           
  6887                           ;Config register CONFIG2 @ 0x8008
  6888                           ;	Flash Memory Self-Write Protection
  6889                           ;	WRT = OFF, Write protection off
  6890                           ;	Voltage Regulator Capacitor Enable
  6891                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  6892                           ;	PLL Enable
  6893                           ;	PLLEN = ON, 4x PLL enabled
  6894                           ;	Stack Overflow/Underflow Reset Enable
  6895                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6896                           ;	Brown-out Reset Voltage Selection
  6897                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6898                           ;	Low-Voltage Programming Enable
  6899                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6900     8008                     	org	32776
  6901     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    5
    Data        1
    BSS         75
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      77
    BANK1            80      5      13
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    LIN_getChecksum@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    LIN_getFromTable@rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_getFromTable@rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK0[8]), 

    LIN_init@command	const PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), NULL(), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_queuePacket@tempSchedule$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_rxCommand	PTR const struct . size(2) Largest target is 5
		 -> scheduleTable(CODE[5]), NULL(NULL[0]), 

    LIN_rxCommand$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    LIN_sendPacket@data	PTR unsigned char  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@d1	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), LIN_packet$data(BANK0[8]), SW_STATE_Data(BANK1[8]), 

    memset@dest	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    memset@p	PTR unsigned char  size(1) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    S26$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    scheduleTable$data	PTR unsigned char  size(2) Largest target is 8
		 -> SW_STATE_Data(BANK1[8]), 

    sp__memcpy	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), processLIN@tempRxData(BANK0[8]), 

    sp__memset	PTR void  size(2) Largest target is 13
		 -> LIN_packet(BANK0[13]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Slave_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_queuePacket->_LIN_sendPacket
    _LIN_sendPacket->_LIN_getChecksum
    _LIN_checkPID->_LIN_getFromTable
    _LIN_breakCheck->_EUSART_Read

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _LIN_handler->_processLIN

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LIN_handler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2983
                    _AutoBaud_Detect
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     238
                  _EUSART_Initialize
               _LIN_Slave_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Slave_Initialize                                 0     0      0      99
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             5     1      4      99
                                              2 COMMON     5     1      4
                       _LIN_enableRx
                _LIN_setTimerHandler
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      24
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     115
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          5     5      0    2715
                                              0 BANK1      5     5      0
                                NULL *
                        _EUSART_Read
                 _EUSART_is_rx_ready
                     _LIN_breakCheck
                       _LIN_checkPID
                      _LIN_disableRx
                       _LIN_enableRx
                    _LIN_getChecksum
                   _LIN_getFromTable
                    _LIN_queuePacket
                     _LIN_startTimer
                      _LIN_stopTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                           9     9      0     504
                                              0 BANK0      9     9      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        2     1      1     319
                                              9 COMMON     2     1      1
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     1      6     102
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       1     1      0      58
                                              1 COMMON     1     1      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LIN_queuePacket                                      5     5      0     991
                                              0 BANK0      5     5      0
                    _LIN_getChecksum
                     _LIN_sendPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               9     3      6     149
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) _LIN_sendPacket                                       5     2      3     426
                                              9 COMMON     5     2      3
                       _EUSART_Write
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (4) _LIN_getChecksum                                      9     6      3     196
                                              0 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      58
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_checkPID                                         1     1      0     624
                                              7 COMMON     1     1      0
                     _LIN_calcParity
                   _LIN_getFromTable
 ---------------------------------------------------------------------------------
 (2) _LIN_getFromTable                                     7     6      1     192
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (3) _LIN_calcParity                                       3     3      0     345
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LIN_breakCheck                                       0     0      0      24
                        _EUSART_Read
             _EUSART_get_last_status
 ---------------------------------------------------------------------------------
 (3) _EUSART_get_last_status                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AutoBaud_Detect                                      4     4      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                                NULL *
                   _LIN_timerHandler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     0     0      0       0
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AutoBaud_Detect
   _LIN_handler
     NULL(Fake) *
     _EUSART_Read *
     _EUSART_is_rx_ready *
     _LIN_breakCheck *
       _EUSART_Read
       _EUSART_get_last_status
     _LIN_checkPID *
       _LIN_calcParity
       _LIN_getFromTable
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_getChecksum *
     _LIN_getFromTable *
     _LIN_queuePacket *
       _LIN_getChecksum
       _LIN_sendPacket
         _EUSART_Write
         _LIN_getChecksum
       _memcpy
     _LIN_startTimer *
       _TMR0_WriteTimer
     _LIN_stopTimer *
     _memset *
     _processLIN *
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _LIN_Slave_Initialize
       _LIN_init
         _LIN_enableRx
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _LIN_timerHandler *
       i1_LIN_stopTimer
     _TMR0_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      9      77     96.2%
BANK1               80      5      13     16.2%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      99      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jul 15 08:32:18 2025

                       __end_of_LIN_breakCheck 0577                  ?_EUSART_SetRxInterruptHandler 0070  
                        __end_of_LIN_getPacket 041C                          ??_LIN_setTimerHandler 0072  
                        __end_of_LIN_disableRx 061C                                             l21 02DE  
                                           l30 02EB                                             l23 02E3  
                                           l15 05A1                                             l24 02E1  
                                           l41 0301                                             l33 02F2  
                                           l42 02FF                                             l51 0310  
                                           l35 02F7                                             l27 02E8  
                                           l19 02DA                                             l36 02F5  
                                           l45 0306                                             l29 02ED  
                                           l54 0313                                             l47 030B  
                                           l39 02FC                                             l48 0309  
                                           l58 031B                                _timer0ReloadVal 0048  
                              ?_LIN_calcParity 0070                                            l201 0211  
                                          l130 0273                                            l211 05AE  
                                          l123 0527                                            l221 060C  
                                          l231 0576                                            l207 03C2  
                                          l224 0616                                            l208 03C5  
                                          l400 05F6                                            l161 012E  
                                          l145 0086                                            l218 05D8  
                                          l227 061B                                            l403 0602  
                                          l164 0139                                            l340 0359  
                                          l406 05EA                                            l262 04E0  
                                          l175 0488                                            l167 015E  
                                          l503 0563                                            l352 062F  
                                          l432 0611                                            l512 0624  
                                          l169 018B                                            l409 05F0  
                                          l346 05D0                                            l442 05E4  
                                          l506 05C2                                            l426 0550  
                                          l187 02D1                                            l179 041B  
                                          l540 03E6                                            l364 0423  
                                          l541 03F1                                            l533 03C7  
                                          l197 04FA                                            l365 042C  
                                          l509 05C7                                            l534 03F0  
                                          l535 03D1                                            l359 0465  
                                          l536 03CC                                            l368 0441  
                                          l538 03D5                                            l397 05FC  
                                          u800 03D5                                            u801 03D4  
                                          u810 03D9                                            u570 05C7  
                                          u811 03D8                                            u571 05C6  
                                          u820 03F0                                            u900 04A8  
                                          u821 03EF                                            u901 04A7  
                                          u910 03B6                                            u911 03B5  
                                          u920 03C2                                            u921 03C1  
                                          u930 0511                                            u931 0510  
                                          u940 0423                                            u941 0422  
                                          u790 03D0                                            u950 0428  
                                          u791 03CF                                            u951 0427  
                                          u960 043C                                            u961 043B  
                                          u970 03FB                                            u971 03FA  
                                          u980 047B                                            u981 047A  
                                          u990 0448                                            u991 0447  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0070  
                     __end_of_LIN_getFromTable 02D2                                            wreg 0009  
               __end_of_EUSART_get_last_status 0630                          __end_of_scheduleTable 0608  
                                 ?_EUSART_Read 0070                                           l2011 04F9  
                                         l2003 04E2                                           l2005 04ED  
                                         l2031 032E                                           l2009 04EF  
                                         l1161 04A8                                           l2041 034E  
                                         l2033 0331                                           l2025 031C  
                                         l2201 0551                                           l2019 0617  
                                         l2051 0355                                           l2043 0350  
                                         l2035 0333                                           l2027 031E  
                                         l2203 055A                                           l2301 021C  
                                         l2053 0356                                           l2045 0351  
                                         l2037 0335                                           l2029 0325  
                                         l2061 053D                                           l2205 055D  
                                         l1158 049C                                           l2311 0233  
                                         l1167 0511                                           l2055 0357  
                                         l2047 0352                                           l2039 0337  
                                         l1511 05BF                                           l2071 0549  
                                         l2063 0542                                           l2207 0560  
                                         l2313 0245                                           l2305 0227  
                                         l2321 0058                                           l2401 0162  
                                         l2049 0354                                           l2065 0545  
                                         l1513 0621                                           l2315 025C  
                                         l2307 022B                                           l2331 006F  
                                         l2323 005D                                           l1451 04CF  
                                         l2067 0547                                           l2411 058D  
                                         l2317 0269                                           l2309 022D  
                                         l2341 0092                                           l2333 0072  
                                         l2325 0060                                           l1509 05BC  
                                         l1453 04D1                                           l2069 0548  
                                         l2413 058E                                           l2343 009A  
                                         l2335 007A                                           l2327 0068  
                                         l2319 0052                                           l1455 04D3  
                                         l1447 04C7                                           l2415 058F  
                                         l1801 0436                                           l2361 00CE  
                                         l2353 00B5                                           l2345 009E  
                                         l2337 0082                                           l2329 006C  
                                         l1457 04D7                                           l1449 04CC  
                                         l2409 0587                                           l1651 03C6  
                                         l1803 043C                                           l2371 010B  
                                         l2363 00D1                                           l2355 00BE  
                                         l2347 00A6                                           l2339 008A  
                                         l1811 051E                                           l1459 04DC  
                                         l1805 043D                                           l1821 03FB  
                                         l2381 0131                                           l2373 010D  
                                         l2365 00D5                                           l2357 00C3  
                                         l2349 00AB                                           l1813 0521  
                                         l1663 03DA                                           l1911 0207  
                                         l1751 0612                                           l1807 043F  
                                         l1831 0469                                           l2295 0214  
                                         l1823 03FE                                           l2391 0145  
                                         l2383 0136                                           l2375 0110  
                                         l2367 00DD                                           l2359 00CB  
                                         l1815 0524                                           l1665 03E8  
                                         l1841 0442                                           l1913 0210  
                                         l1833 0473                                           l1761 0495  
                                         l2297 0218                                           l1825 041A  
                                         l1817 03F2                                           l2393 0153  
                                         l2385 013F                                           l2377 0118  
                                         l2369 00F4                                           l1745 05DF  
                                         l1753 05D1                                           l1809 0513  
                                         l1667 03EA                                           l1851 045D  
                                         l1843 0448                                           l1771 03AD  
                                         l1763 0395                                           l1835 0475  
                                         l1755 0489                                           l2299 021A  
                                         l1747 0608                                           l1819 03F6  
                                         l2395 0158                                           l2387 0142  
                                         l1931 05FD                                           l1923 05EB  
                                         l1853 045F                                           l1845 0454  
                                         l1909 018D                                           l1861 0275  
                                         l1773 03B6                                           l1765 039C  
                                         l1837 047B                                           l1829 0467  
                                         l1757 048E                                           l1917 060E  
                                         l1749 0609                                           l2397 015B  
                                         l2389 0144                                           l1925 05E5  
                                         l1855 0462                                           l1847 0456  
                                         l1839 0442                                           l1919 062D  
                                         l1871 0289                                           l1863 027A  
                                         l1791 041D                                           l1775 03BA  
                                         l1767 039E                                           l1759 0493  
                                         l1783 04FB                                           l2487 016B  
                                         l1927 05F7                                           l1857 0464  
                                         l1849 045C                                           l2489 02C6  
                                         l1881 02A6                                           l1873 029B  
                                         l1865 027C                                           l1793 041D  
                                         l1769 03A9                                           l1777 03BC  
                                         l1785 04FE                                           l1953 0316  
                                         l1929 05F1                                           l1867 027E  
                                         l1795 0428                                           l1779 03C4  
                                         l1787 0503                                           l1947 0595  
                                         l1885 02AC                                           l1877 029D  
                                         l1797 042D                                           l1789 0505  
                                         l1949 02D2                                           l1991 0564  
                                         l1895 02BE                                           l1879 029F  
                                         l1799 0434                                           l1983 05A3  
                                         l1993 056C                                           l1889 02B5  
                                         l1985 05A6                                           l1979 05C8  
                                         l1995 0573                                           l1987 05AA  
                                         l1989 05AB                                           l1999 0575  
                                         u1000 045C                                           u1001 045B  
                                         u1010 0288                                           u1011 0287  
                                         u1100 01B6                                           u1020 029B  
                                         u1101 01B4                                           u1021 029A  
                                         u1030 02A5                                           u1031 02A4  
                                         u1200 01E4                                           u1120 01BC  
                                         u1040 0194                                           u1201 01E2  
                                         u1121 01BA                                           u1041 0192  
                                         u1210 01EB                                           u1202 01E5  
                                         u1130 01C3                                           u1122 01BD  
                                         u1114 01B7                                           u1050 019B  
                                         u1042 0195                                           u1211 01E9  
                                         u1131 01C1                                           u1051 0199  
                                         u1220 01F2                                           u1212 01EC  
                                         u1140 01CA                                           u1132 01C4  
                                         u1060 01A2                                           u1052 019C  
                                         u1221 01F0                                           u1141 01C8  
                                         u1061 01A0                                           u1310 02DE  
                                         u1311 02DD                                           u1400 05D0  
                                         u1240 01F8                                           u1160 01D0  
                                         u1080 01A8                                           u1320 02E8  
                                         u1241 01F6                                           u1161 01CE  
                                         u1081 01A6                                           u1321 02E7  
                                         u1410 056C                                           u1250 01FF  
                                         u1242 01F9                                           u1234 01F3  
                                         u1170 01D7                                           u1162 01D1  
                                         u1154 01CB                                           u1090 01AF  
                                         u1082 01A9                                           u1074 01A3  
                                         u1330 02F2                                           u1411 056B  
                                         u1251 01FD                                           u1171 01D5  
                                         u1091 01AD                                           u1331 02F1  
                                         u1420 0573                                           u1260 0206  
                                         u1252 0200                                           u1180 01DE  
                                         u1172 01D8                                           u1092 01B0  
                                         u1340 02FC                                           u1421 0572  
                                         u1261 0204                                           u1181 01DC  
                                         u1341 02FB                                           _LATA 010C  
                                         u1430 04ED                                           u1350 0306  
                                         _LATB 010D                                           u1431 04EC  
                                         u1351 0305                                           _LATC 010E  
                                         u1280 020F                                           u1440 04F9  
                                         u1360 0310                                           u1281 020D  
                                         u1441 04F8                                           u1361 030F  
                                         _LATE 0110                                           u1274 0207  
                                         u1194 01DF                                           u1390 05CF  
                                         u1294 0210                                           u1391 05CD  
                                         u1800 0082                                           u1801 0081  
                                         u1810 0092                                           u1811 0091  
                                         u1740 0226                                           u1900 0158  
                                         u1820 009A                                           u1741 0225  
                                         u1901 0157                                           u1821 0099  
                                         u1750 0233                                           u1830 00A6  
                                         u1751 0232                                           u1831 00A5  
                                         u1840 00B4                                           u1760 0058  
                                         u1841 00B3                                           u1761 0057  
                                         u1850 00C3                                           u1770 005D  
                                         u1851 00C2                                           u1771 005C  
                                         u1860 00DD                                           u1780 0068  
                                         u1917 03DF                                           u1861 00DC  
                                         u1781 0067                                           u1870 010B  
                                         u1790 007A                                           u1871 010A  
                                         u1791 0079                                           u1880 0118  
                                         u1881 0117                                           u1890 012D  
                                         u1891 012C                                           u1875 0107  
                                         _PLLR 04D6                                           _TMR0 0015  
                                         _WPUB 020D                                           _WPUE 0210  
                               _LIN_sendPacket 0466                                           _main 0587  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0038  
                                processLIN@cmd 006B                                ?_LIN_breakCheck 0070  
                      __end_of_TMR0_Initialize 0551                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 05C8  
                            LIN_sendPacket@pid 0079                                          ?_main 0070  
                              LIN_init@command 0072                                          i1l221 0620  
                                        i1l215 05BB                                          i1l371 04C4  
                                        i1l381 0393                                          i1l445 0631  
                                        i1l374 04C6                                          i1l391 0628  
                                        i1l439 0586                                          i1l385 053C  
                                        i1l473 0036                                          i1l394 062C  
                                        i1l474 0036                                          i1l466 0012  
                                        i1l388 0632                                          i1l469 0026  
                              _TMR0_WriteTimer 060D                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          _TXREG 019A  
                             __end_of_LIN_init 0528                          __end_of_LIN_stopTimer 060D  
                                        _TXSTA 019E                      ?_TMR0_SetInterruptHandler 0070  
                             __end_of_TMR0_ISR 0587                                 _WDT_Initialize 0621  
                       __end_of_LIN_sendPacket 0489                                          pclath 000A  
                            ??_AutoBaud_Detect 0070                                 _LIN_startTimer 05A2  
                                        status 0003                                          wtemp0 007E  
                             ?_LIN_getChecksum 0070                    LIN_queuePacket@tempSchedule 0066  
                              __initialization 003A                                   ?_LIN_handler 0070  
                                 __end_of_main 0595                                 ??_EUSART_Write 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0072  
                                       ??_main 007E                         __end_of_WDT_Initialize 0625  
                           LIN_sendPacket@data 007A      __end_of_EUSART_DefaultFramingErrorHandler 0633  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0632                     _EUSART_OverrunErrorHandler 003C  
                       __end_of_LIN_startTimer 05AF                                ?_LIN_sendPacket 0079  
                                       _APFCON 011D                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 05D1  
                                       _BORCON 0116                                         i1l2021 05AF  
                                       i1l2023 05B8                                         i1l2211 0006  
                                       i1l2221 0020                                         i1l2213 000A  
                                       i1l2223 002B                                         i1l2215 000E  
                                       i1l2057 0625                                         i1l2161 04A9  
                                       i1l2225 0030                                         i1l2217 0016  
                                       i1l2059 0629                                         i1l2171 04C1  
                                       i1l2163 04B0                                         i1l2219 001B  
                                       i1l2181 0370                                         i1l2173 035A  
                                       i1l2165 04B7                                         i1l2191 0390  
                                       i1l2183 0375                                         i1l2175 0360  
                                       i1l2167 04BA                                         i1l2185 037B  
                                       i1l2177 0365                                         i1l2169 04C0  
                                       i1l2193 0577                                         i1l2187 0380  
                                       i1l2179 036B                                         i1l2195 0578  
                                       i1l2189 038A                                         i1l2197 057B  
                                       i1l2199 0581                                         u130_20 0539  
                                       u130_21 0538                                         i1l1941 053A  
                                       i1l1933 0528                                         i1l1935 0530  
                                       i1l1943 061C                                         i1l1937 0533  
                                       i1l1945 061D                                         i1l1939 0539  
                                       u161_20 04B0                                         u145_20 05B8  
                                       u161_21 04AF                                         u145_21 05B7  
                                       u162_20 04C0                                         u170_20 001B  
                                       u162_21 04BF                                         u170_21 001A  
                                       u163_20 0365                                         u171_20 0020  
                                       u163_21 0364                                         u171_21 001F  
                                       u164_20 0375                                         u172_20 002B  
                                       u164_21 0374                                         u172_21 002A  
                                       u165_20 038A                                         u173_20 0030  
                                       u165_21 0389                                         u173_21 002F  
                                       u166_20 0581                                         u166_21 0580  
                                       u167_20 000A                                         u167_21 0009  
                                       u168_20 000E                                         u168_21 000D  
                                       u169_20 0016                                         u169_21 0015  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                              _LIN_processData 0046                                _LIN_queuePacket 0212  
                      __end_of_TMR0_WriteTimer 0612                            _EUSART_Transmit_ISR 04A9  
                                       _memcpy 0489                               ?_TMR0_Initialize 0070  
                                       _memset 04FB                                ?_WDT_Initialize 0070  
                             _LIN_rxInProgress 0055       TMR0_SetInterruptHandler@InterruptHandler 0070  
                              ?_LIN_startTimer 0070                           ?_EUSART_Transmit_ISR 0070  
                            _SYSTEM_Initialize 0551                        __end_of__initialization 004E  
                           ?_SYSTEM_Initialize 0070                                  ?_LIN_checkPID 0070  
         __end_of_EUSART_SetTxInterruptHandler 05EB                   _EUSART_SetTxInterruptHandler 05E5  
                                    ?_LIN_init 0072                                 __pcstackCOMMON 0070  
                                ?_LIN_enableRx 0070                               ??_LIN_calcParity 0070  
                              LIN_sendPacket@i 007D                                   __pidataBANK0 0630  
                          ??_SYSTEM_Initialize 0077                                      ?_TMR0_ISR 0070  
                       LIN_handler@rxDataIndex 0050                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                              ?_LIN_getFromTable 0070  
                       LIN_handler@LIN_rxState 0051                ??_EUSART_SetOverrunErrorHandler 0072  
                           ??_LIN_getFromTable 0071                      __end_of_SYSTEM_Initialize 0564  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0442  
                             ??_LIN_breakCheck 0071                                 ??_LIN_checkPID 0077  
                  __end_of_LIN_setTimerHandler 05D9                        __end_of_LIN_queuePacket 0274  
                               ??_LIN_enableRx 0070                                     __pmaintext 0587  
                             _LIN_timerHandler 05AF                                     ??_LIN_init 0076  
                          LIN_getChecksum@data 0071                  ?_EUSART_SetTxInterruptHandler 0070  
             _EUSART_TxDefaultInterruptHandler 0042               __end_of_TMR0_SetInterruptHandler 05E5  
                                   ??_TMR0_ISR 0070                                     __pintentry 0004  
                             ?_TMR0_WriteTimer 0070                                        ?_memcpy 0070  
                                      _BAUDCON 019F                                        ?_memset 0070  
                 ??_EUSART_DefaultErrorHandler 0070                          LIN_getChecksum@length 0075  
                             _LIN_timerRunning 0053                                  _eusartRxCount 004A  
                              _AutoBaud_Detect 03C6                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0072                        LIN_getChecksum@checksum 0077  
                 __end_of_LIN_Slave_Initialize 05A2                                  _SW_STATE_Data 00A0  
                                      __ptext1 0551                                        __ptext2 0621  
                                      __ptext3 053D                                        __ptext4 04C7  
                                      __ptext5 05BC                                        __ptext6 0595  
                                      __ptext7 0512                                        __ptext8 05D1  
                                      __ptext9 05DF                          _OSCILLATOR_Initialize 05BC  
                             ??_LIN_sendPacket 007C                       ??_PIN_MANAGER_Initialize 0070  
                                      clrloop0 05DA                      LIN_getFromTable@rxCommand 0075  
                         end_of_initialization 004E          __end_of_EUSART_SetOverrunErrorHandler 05F7  
                _EUSART_SetOverrunErrorHandler 05F1                                        memcpy@d 0077  
                                      memcpy@n 0074                                        memcpy@s 0078  
                                      memset@c 0072                                        memset@n 0074  
                                      memset@p 0076                              _EUSART_Initialize 031C  
                             ?_LIN_queuePacket 0070                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                              ??i1_LIN_stopTimer 0070  
                           _EUSART_is_rx_ready 05C8                                  _LIN_getPacket 03F2  
                      __end_of_AutoBaud_Detect 03F2                                  _LIN_disableRx 0617  
                     ??_EUSART_get_last_status 0070                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                 ??_EUSART_SetTxInterruptHandler 0072  
                            LIN_getPacket@data 0079                       _TMR0_SetInterruptHandler 05DF  
                          ?_EUSART_is_rx_ready 0070                                     _processLIN 02D2  
                         __end_of_LIN_checkPID 04FB                            LIN_init@tableLength 0076  
                             ??_LIN_startTimer 0071                           __end_of_LIN_enableRx 0617  
                                _scheduleTable 0603                      __end_of_EUSART_Initialize 035A  
                         ??_EUSART_is_rx_ready 0070                                      _TXSTAbits 019E  
                                _LIN_rxCommand 0044                                 ?_LIN_getPacket 0079  
                               ?_LIN_disableRx 0070             __end_of_EUSART_DefaultErrorHandler 062D  
                   _EUSART_DefaultErrorHandler 0629                                    _BAUDCONbits 019F  
                                 _EUSART_Write 041C                                 __end_of_memcpy 04A9  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_memset 0512  
                          start_initialization 003A                                  _LIN_stopTimer 0608  
                     __end_of_LIN_timerHandler 05BC                           _LIN_Slave_Initialize 0595  
                                ??_EUSART_Read 0070   EUSART_SetRxInterruptHandler@interruptHandler 0070  
 EUSART_SetTxInterruptHandler@interruptHandler 0070                          LIN_startTimer@timeout 0071  
                             AutoBaud_Detect@i 0072                              LIN_calcParity@CMD 0071  
               ?_EUSART_SetOverrunErrorHandler 0070                              LIN_calcParity@PID 0072  
                   _EUSART_FramingErrorHandler 003E                         _EUSART_SetErrorHandler 05FD  
                             ?_AutoBaud_Detect 0070                                    __pdataBANK0 006C  
                                     ??_memcpy 0076                                       ??_memset 0076  
                         processLIN@tempRxData 0063                                     memset@dest 0070  
                                  ?_processLIN 0070                            LIN_init@processData 0074  
                  __end_of_EUSART_Transmit_ISR 04C7                                 ?_LIN_stopTimer 0070  
                                    ___latbits 0002                                  __pcstackBANK0 0063  
                                __pcstackBANK1 00A8                              ??_LIN_getChecksum 0073  
                        ?_LIN_Slave_Initialize 0070                     __end_of_EUSART_Receive_ISR 0394  
             _EUSART_RxDefaultInterruptHandler 0040                            __end_of_EUSART_Read 0466  
                        _TMR0_InterruptHandler 0038                   __end_of_EUSART_RxDataHandler 053D  
                              ??_LIN_getPacket 007A                         _PIN_MANAGER_Initialize 04C7  
                                ??_LIN_handler 00A8                               LIN_getChecksum@i 0076  
                              ??_LIN_disableRx 0070                           EUSART_Read@readValue 0070  
                           LIN_getChecksum@pid 0070                           LIN_sendPacket@length 007C  
                                 _eusartRxHead 004C                                   _eusartTxHead 004F  
                                 _eusartRxTail 004B                                   _eusartTxTail 004E  
                 ??_INTERRUPT_InterruptManager 0070                        _eusartTxBufferRemaining 004D  
                              LIN_checkPID@pid 0077                                i1_LIN_stopTimer 061C  
                               _eusartRxBuffer 0028                         _EUSART_get_last_status 062D  
                            ??_TMR0_Initialize 0072                                 _eusartTxBuffer 0030  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 010D  
                                    clear_ram0 05D9                                       _PIE1bits 0091  
                            _eusartRxLastError 0049                                   _LIN_checkPID 04E1  
                   ??_TMR0_SetInterruptHandler 0072                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                       _LIN_init 0512  
                                 _LIN_enableRx 0612                                       _TMR0_ISR 0577  
    __end_of_EUSART_DefaultOverrunErrorHandler 0629            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0625  
                             LIN_getPacket@cmd 007A                            __end_of_LIN_handler 018C  
                              ??_LIN_stopTimer 0070                         ??_LIN_Slave_Initialize 0077  
                                  _EUSART_Read 0442                               _LIN_getFromTable 0274  
                                    memcpy@tmp 0076                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 003A                    ?_EUSART_DefaultErrorHandler 0070  
                      __end_ofi1_LIN_stopTimer 0621                           _EUSART_RxDataHandler 0528  
                                     __ptext10 031C                                       __ptext11 05E5  
                                     __ptext20 0608                                       __ptext12 05EB  
                                     __ptext21 05A2                                       __ptext13 05F1  
                                     __ptext30 04E1                                       __ptext22 060D  
                                     __ptext14 05F7                                       __ptext31 0274  
                                     __ptext23 0212                                       __ptext15 05FD  
                                     __ptext40 05AF                                       __ptext32 018C  
                                     __ptext24 0489                                       __ptext16 0052  
                                     __ptext41 0631                                       __ptext33 0564  
                                     __ptext25 0466                                       __ptext17 02D2  
                                     __ptext42 061C                                       __ptext34 062D  
                                     __ptext26 0394                                       __ptext18 03F2  
                                     __ptext43 04A9                                       __ptext35 0442  
                                     __ptext27 041C                                       __ptext19 04FB  
                                     __ptext44 035A                                       __ptext36 05C8  
                                     __ptext28 0612                                       __ptext45 0625  
                                     __ptext37 03C6                                       __ptext29 0617  
                                     __ptext46 0632                                       __ptext47 0629  
                                     __ptext39 0577                                       __ptext48 0528  
                            ?_LIN_timerHandler 0070                        TMR0_WriteTimer@timerVal 0070  
                           ??_LIN_timerHandler 0070                              ??_TMR0_WriteTimer 0070  
                       LIN_getFromTable@length 0074           __end_of_TMR0_DefaultInterruptHandler 0632  
                 _TMR0_DefaultInterruptHandler 0631                        ?_EUSART_SetErrorHandler 0070  
                          _LIN_rxCommandLength 0054  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                  _LIN_handler 0052                                       int$flags 007E  
                              _LIN_getChecksum 0394             __end_of_INTERRUPT_InterruptManager 0038  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 05FD  
                _EUSART_SetFramingErrorHandler 05F7                                   ??_processLIN 007B  
                                  _LIN_timeout 006C                                 _LIN_calcParity 018C  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                                     memcpy@d1 0070                                       memcpy@s1 0072  
                          _LIN_setTimerHandler 05D1                                       intlevel1 0000  
                                _CountCallBack 0052                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0603                          LIN_getFromTable@param 0070  
                           __end_of_processLIN 031C           __end_of_EUSART_SetRxInterruptHandler 05F1  
                 _EUSART_SetRxInterruptHandler 05EB                  ?_TMR0_DefaultInterruptHandler 0070  
                                   _LIN_packet 0056                             _EUSART_Receive_ISR 035A  
                         ?_LIN_setTimerHandler 0070  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                               _LIN_breakCheck 0564                         __end_of_LIN_calcParity 0212  
                                __pstringtext1 0603                             LIN_queuePacket@cmd 0064  
                                   _OPTION_REG 0095                            ?_EUSART_Receive_ISR 0070  
                              _TMR0_Initialize 053D                              ??_LIN_queuePacket 0063  
                             ?i1_LIN_stopTimer 0070                        ?_EUSART_get_last_status 0070  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 04E1  
                          LIN_getFromTable@cmd 0073                               LIN_queuePacket@i 0065  
                         ??_EUSART_Receive_ISR 0070                        __end_of_LIN_getChecksum 03C6  
